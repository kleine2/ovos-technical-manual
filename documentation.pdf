%PDF-1.4
1 0 obj
<< /Type /Font /Subtype /Type1 /BaseFont /Courier >>
endobj
2 0 obj
<< /Length 2562 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(=== README.md ===) Tj
T*
() Tj
T*
(# The OpenVoiceOS Technical Manual) Tj
T*
() Tj
T*
(![]\(https://github.com/OpenVoiceOS/ovos_assets/blob/master/Logo/ovos-logo-512.png?raw=true\)) Tj
T*
() Tj
T*
(the OVOS project documentation is written and maintained by users just like you! ) Tj
T*
() Tj
T*
(Think of these docs both as your starting point and also forever changing and incomplete) Tj
T*
() Tj
T*
(Please [open Issues and Pull Requests]\(https://github.com/OpenVoiceOS/ovos-technical-manual\)!) Tj
T*
() Tj
T*
(User oriented docs are automatically published at https://openvoiceos.github.io/community-docs) Tj
T*
() Tj
T*
(Dev oriented docs \(this repo\) are automatically published at https://openvoiceos.github.io/ovos) Tj
T*
(-technical-manual) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/001-release_channels.md ===) Tj
T*
() Tj
T*
(# OVOS Release Channels & Installation Options) Tj
T*
() Tj
T*
(Open Voice OS \(OVOS\) is a **modular voice assistant platform** that lets you install only the c) Tj
T*
(omponents you need. Whether you're building a lightweight voice interface or a full-featured sm) Tj
T*
(art assistant, OVOS gives you flexibility through modular packages and optional feature sets ca) Tj
T*
(lled **extras**.) Tj
T*
() Tj
T*
(To manage updates and ensure system stability, OVOS uses **release channels** and **constraints) Tj
T*
( files**, allowing users to pin versions based on their desired stability level.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Choosing a Release Channel) Tj
T*
() Tj
T*
(OVOS follows [**semantic versioning**]\(https://semver.org/\) \(SemVer\) with a **rolling release m) Tj
T*
(odel** and supports three release channels ? **stable**, **testing**, and **alpha** ? so you ca) Tj
T*
(n pick the right balance between cutting-edge features and system reliability.) Tj
T*
() Tj
T*
(These channels are managed via the [constraints files]\(https://pip.pypa.io/en/stable/user_guide) Tj
T*
(/#constraints-files\) hosted in the [ovos-releases]\(https://github.com/OpenVoiceOS/ovos-releases) Tj
T*
(\) repository) Tj
T*
() Tj
T*
(### 1. Stable Channel \(Production-Ready\)) Tj
T*
(- ? Bug fixes only) Tj
T*
(- ? No new features or breaking changes) Tj
T*
(- ? Recommended for production or everyday use) Tj
T*
() Tj
T*
(```bash) Tj
T*
(pip install ovos-core[mycroft] -c https://raw.githubusercontent.com/OpenVoiceOS/ovos-releases/r) Tj
T*
(efs/heads/main/constraints-stable.txt) Tj
T*
(```) Tj
T*
() Tj
T*
(### 2. Testing Channel \(Feature Updates\)) Tj
T*
(- ? Bug fixes and new features) Tj
T*
ET
endstream
endobj
3 0 obj
<< /Length 2537 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(- ?? Not as thoroughly tested as stable) Tj
T*
(- ? Best for early adopters or development environments) Tj
T*
() Tj
T*
(```bash) Tj
T*
(pip install ovos-core[mycroft] -c https://raw.githubusercontent.com/OpenVoiceOS/ovos-releases/r) Tj
T*
(efs/heads/main/constraints-testing.txt) Tj
T*
(```) Tj
T*
() Tj
T*
(### 3. Alpha Channel \(Bleeding Edge\)) Tj
T*
(- ? Experimental features) Tj
T*
(- ?? May include breaking changes) Tj
T*
(- ? Not suitable for production use) Tj
T*
() Tj
T*
(```bash) Tj
T*
(pip install ovos-core[mycroft] --pre -c https://raw.githubusercontent.com/OpenVoiceOS/ovos-rele) Tj
T*
(ases/refs/heads/main/constraints-alpha.txt) Tj
T*
(```) Tj
T*
() Tj
T*
(> ? `constraints.txt` files act like version "filters". They don?t install packages directly, b) Tj
T*
(ut ensure only approved versions get installed.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## OVOS From Scratch: Custom Installation) Tj
T*
() Tj
T*
(Rather than using a full distro, you can manually pick which components to install:) Tj
T*
() Tj
T*
(- [`ovos-messagebus`]\(https://github.com/OpenVoiceOS/ovos-messagebus\) ? internal messaging betw) Tj
T*
(een services) Tj
T*
(- [`ovos-core`]\(https://github.com/OpenVoiceOS/ovos-core\) ? skill handling) Tj
T*
(- [`ovos-audio`]\(https://github.com/OpenVoiceOS/ovos-audio\) ? text-to-speech \(TTS\), audio playb) Tj
T*
(ack) Tj
T*
(- [`ovos-dinkum-listener`]\(https://github.com/OpenVoiceOS/ovos-dinkum-listener\) ? wake word, vo) Tj
T*
(ice activation) Tj
T*
(- [`ovos-gui`]\(https://github.com/OpenVoiceOS/ovos-gui\) ? GUI integration) Tj
T*
(- [`ovos-PHAL`]\(https://github.com/OpenVoiceOS/ovos-PHAL\) ? hardware abstraction layer) Tj
T*
() Tj
T*
(This is useful if you?re building something like a **Hivemind node** or **headless device**, wh) Tj
T*
(ere you might not need audio output or a GUI.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## What Are OVOS Extras?) Tj
T*
() Tj
T*
(OVOS uses Python extras \(e.g., `[mycroft]`\) to let you install predefined groups of components ) Tj
T*
(based on your use case.) Tj
T*
() Tj
T*
(| Extra Name           | Purpose                                                               ) Tj
T*
(  |) Tj
T*
(|----------------------|-----------------------------------------------------------------------) Tj
T*
(--|) Tj
T*
(| `mycroft`            | Core services for full voice assistant experience                     ) Tj
T*
( |) Tj
T*
(| `lgpl`               | Adds optional LGPL-licensed tools like Padatious                      ) Tj
T*
ET
endstream
endobj
4 0 obj
<< /Length 2443 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
( |) Tj
T*
(| `plugins`            | Includes various plugin interfaces                                    ) Tj
T*
( |) Tj
T*
(| `skills-essential`   | Must-have skills \(like system control, clock, weather\)                ) Tj
T*
( |) Tj
T*
(| `skills-audio`       | Audio I/O-based skills                                                ) Tj
T*
(  |) Tj
T*
(| `skills-gui`         | GUI-dependent skills                                                  ) Tj
T*
(  |) Tj
T*
(| `skills-internet`    | Skills that require an internet connection                            ) Tj
T*
( |) Tj
T*
(| `skills-media`       | OCP \(OpenVoiceOS Common Play\) media playback skills                   ) Tj
T*
( |) Tj
T*
(| `skills-desktop`     | Desktop environment integrations                                      ) Tj
T*
( |) Tj
T*
() Tj
T*
(### Full Installation Example) Tj
T*
() Tj
T*
(```bash) Tj
T*
(pip install ovos-core[mycroft,lgpl,plugins,skills-essential,skills-audio,skills-gui,skills-inte) Tj
T*
(rnet,skills-media,skills-desktop]) Tj
T*
(```) Tj
T*
() Tj
T*
(### Minimal Installation Example) Tj
T*
() Tj
T*
(```bash) Tj
T*
(pip install ovos-core[mycroft,plugins,skills-essential]) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Technical Notes) Tj
T*
() Tj
T*
(- OVOS originally began as a fork of `mycroft-core`. Since version **0.0.8**, it has been **ful) Tj
T*
(ly modularized**, with each major service in its own repository.) Tj
T*
(- All packages follow [Semantic Versioning \(SemVer\)]\(https://semver.org/\), so you can rely on v) Tj
T*
(ersioning to understand stability and compatibility.) Tj
T*
(- Constraints files are a **work in progress** and won?t be finalized until the first official ) Tj
T*
([codename release]\(https://github.com/OpenVoiceOS/ovos-releases/issues/5\).) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## ?? Tips & Caveats) Tj
T*
() Tj
T*
(- Using `--pre` installs pre-releases across all dependencies, not just OVOS-specific ones ? so) Tj
T*
( use with caution.) Tj
T*
(- You can mix and match extras based on your hardware or use case, e.g., omit GUI skills on a h) Tj
T*
(eadless server.) Tj
T*
(- When using constraints files, make sure all packages are pinned ? it avoids installing incomp) Tj
T*
(atible versions.) Tj
T*
(- After installing you need to launch the individual ovos services, either manually or by creat) Tj
T*
(ing a systemd service) Tj
T*
() Tj
T*
ET
endstream
endobj
5 0 obj
<< /Length 2711 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(---) Tj
T*
() Tj
T*
(## See Also) Tj
T*
() Tj
T*
(- [OVOS Releases repo]\(https://github.com/OpenVoiceOS/ovos-releases\)) Tj
T*
(- [Constraints files explanation \(pip docs\)]\(https://pip.pypa.io/en/stable/user_guide/#constrai) Tj
T*
(nts-files\)) Tj
T*
(- [Semantic Versioning]\(https://semver.org/\)) Tj
T*
(- [OVOS Component Repos]\(https://github.com/OpenVoiceOS\)) Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
(=== docs/002-license.md ===) Tj
T*
() Tj
T*
(# License) Tj
T*
() Tj
T*
(We have a universal donor policy, our code should be able to be used anywhere by anyone, no ifs) Tj
T*
( or conditions attached.) Tj
T*
() Tj
T*
(OVOS is predominately Apache2 or BSD licensed. There are only a few exceptions to this, which a) Tj
T*
(re all licensed under other compatible open source licenses.) Tj
T*
() Tj
T*
(Individual plugins or skills may have their own license, for example mimic3 is AGPL, so we can ) Tj
T*
(not change the license of our plugin.) Tj
T*
() Tj
T*
(We are committed to maintain all core components fully free, any code that we have no control o) Tj
T*
(ver the license will live in an optional plugin and be flagged as such.) Tj
T*
() Tj
T*
(This includes avoiding LGPL code for reasons explained [here]\(https://softwareengineering.stack) Tj
T*
(exchange.com/questions/119436/what-does-gpl-with-classpath-exception-mean-in-practice/326325#32) Tj
T*
(6325\).) Tj
T*
() Tj
T*
(Our license policy has the following properties:) Tj
T*
() Tj
T*
(-  It gives you, the user of the software, complete and unrestrained access to the software, su) Tj
T*
(ch that you may inspect, modify, and redistribute your changes) Tj
T*
(    - Inspection - Anyone may inspect the software for security vulnerabilities) Tj
T*
(    - Modification - Anyone may modify the software to fix issues or add features) Tj
T*
(    - Redistribution - Anyone may redistribute the software on their terms) Tj
T*
(- It is compatible with GPL licenses - Projects licensed as GPL can be distributed with OVOS) Tj
T*
(- It allows for the incorporation of GPL-incompatible free software, such as software that is C) Tj
T*
(DDL licensed) Tj
T*
() Tj
T*
(The license does not restrict the software that may run on OVOS, however -- and thanks to the p) Tj
T*
(lugin architecture, even traditionally tightly-coupled components such as drivers can be distri) Tj
T*
(buted separately, so maintainers are free to choose whatever license they like for their projec) Tj
T*
(ts.) Tj
T*
() Tj
T*
() Tj
T*
(### Notable licensing exceptions) Tj
T*
() Tj
T*
(The following repositories do not respect our universal donor policy, please ensure their licen) Tj
T*
(ses are compatible before you use them) Tj
T*
() Tj
T*
ET
endstream
endobj
6 0 obj
<< /Length 3398 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(| Repository                                                                                  |) Tj
T*
( License   | Reason                                                                            ) Tj
T*
(                         |) Tj
T*
(|---------------------------------------------------------------------------------------------|) Tj
T*
(-----------|-----------------------------------------------------------------------------------) Tj
T*
(-------------------------|) Tj
T*
(| [ovos-intent-plugin-padatious]\(https://github.com/OpenVoiceOS/ovos-intent-plugin-padatious\) |) Tj
T*
( Apache2.0 | [padatious]\(https://github.com/MycroftAI/padatious\) license might not be valid, de) Tj
T*
(pends on libfann2 \(LGPL\) |) Tj
T*
(| [ovos-tts-plugin-mimic3]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-mimic3\)             |) Tj
T*
( AGPL      | depends on [mimic3]\(https://github.com/MycroftAI/mimic3\) \(AGPL\)   |) Tj
T*
(| [ovos-tts-plugin-espeakng]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-espeakng\)         |) Tj
T*
( GPL       | depends on [espeak-ng]\(https://github.com/espeak-ng\) \(GPL\)    |) Tj
T*
(| [ovos-g2p-plugin-espeak]\(https://github.com/OpenVoiceOS/ovos-g2p-plugin-espeak\)             |) Tj
T*
( GPL       | depends on [espeak-phonemizer]\(https://github.com/rhasspy/espeak-phonemizer\) \(GPL\)) Tj
T*
(  |) Tj
T*
(| [ovos-tts-plugin-SAM]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-SAM\)                   |) Tj
T*
( ?         | reverse engineered abandonware              |) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/003-timeline.md ===) Tj
T*
() Tj
T*
(## Family Tree) Tj
T*
() Tj
T*
(![imagem]\(https://github.com/OpenVoiceOS/ovos-technical-manual/assets/33701864/95db65ea-0aff-49) Tj
T*
(f3-bd80-85919a3356e5\)) Tj
T*
() Tj
T*
(- mycroft-core created) Tj
T*
(- neon-core forked from mycroft-core) Tj
T*
(- chatterbox forked from mycroft-core  \(closed source\)) Tj
T*
(- mycroft-lib forked from mycroft-core to become a library, it is only a properly packaged mycr) Tj
T*
(oft-core) Tj
T*
(- chatterbox rewritten to use mycroft-lib internally, no longer a hard fork) Tj
T*
(- neon-core rewritten to use mycroft-lib internally, no longer a hard fork) Tj
T*
(- mycroft-lib renamed to HolmesIV to avoid trademark issues) Tj
T*
(- HolmesV created to use HolmesIV internally, HolmesV gets features and HolmesIV bug fixes only) Tj
T*
(- chatterbox updated to HolmesV) Tj
T*
(- neon-core updated to HolmesV) Tj
T*
(- HolmesIV+HolmesV abandoned, chatterbox focus on closed source product) Tj
T*
(- ovos-core forked from HolmesV) Tj
T*
(- neon-core updated to ovos-core) Tj
T*
(- mycroft-dinkum forked from mycroft-core) Tj
T*
() Tj
T*
(## Events timeline) Tj
T*
() Tj
T*
(- Aug 2015 - [MycroftAI kickstarter]\(https://www.kickstarter.com/projects/aiforeveryone/mycroft) Tj
T*
(-an-open-source-artificial-intelligence-for\) launch) Tj
T*
(- Feb 2016 - MycroftAI [Mimic]\(https://github.com/MycroftAI/mimic1\) TTS released) Tj
T*
(- May 2016 - [mycroft-core]\(https://github.com/MycroftAI/mycroft-core\) repositories made public) Tj
T*
( under GPL) Tj
T*
(- Jun 2016 - @Aix releases [MycroftAI gnome shell]\(https://extensions.gnome.org/extension/1197/) Tj
T*
(mycroft-assistant/\) extension) Tj
T*
(- Jun 2016 - @Aix becomes a contributor on the desktop-integration team) Tj
T*
(- Aug 2016 - Steve Penrod becomes MycroftAI CTO) Tj
T*
ET
endstream
endobj
7 0 obj
<< /Length 4168 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(- ??? 2016 - NeonGecko begins working with Mycroft AI) Tj
T*
(- Jan 2017 - @Aix release [MycrofAI plasmoid]\(https://invent.kde.org/utilities/mycroft-plasmoid) Tj
T*
(\) for KDE Plasma desktop) Tj
T*
(- Mar 2017 - @Aix incubates Mycroft plasmoid project under KDE) Tj
T*
(- Apr 2017 - @JarbasAI forks `mycroft-core` as `jarbas-core`) Tj
T*
(- May 2017 - @JarbasAI becomes a `mycroft-core` contributor) Tj
T*
(- Sep 2017 - MycroftAI Mark 1 released / mycroft kickstarter campaign fullfilled) Tj
T*
(- Sep 2017 - @Aix joins Blue Systems to work on MycroftAI and Plasma integration projects) Tj
T*
(- Sep 2017 - `jarbas-core` tacotron TTS integration added) Tj
T*
(- Aug 2017 - MycroftAI starts supporting KDE plasmoid project and installers) Tj
T*
(- Oct 2017 - `mycroft-core` relicensed as Apache 2.0) Tj
T*
(- Nov 2017 - @Aix becomes a `mycroft-core` contributor) Tj
T*
(- Dec 2017 - `jarbas-core` abandoned) Tj
T*
(- ??? 2017 - Neon AI forks `mycroft-core` as `neon-core` to remove dependency on MycroftAI serv) Tj
T*
(ers and work on other features) Tj
T*
(- Jan 2018 - initial release of [personal-backend]\(https://github.com/OpenVoiceOS/ovos-personal) Tj
T*
(-backend/tree/a457b03adc771783ec8714dfdabccdacb2482188\), reverse engineered MycroftAI backend b) Tj
T*
(y @JarbasAI, licensed as Apache 2.0) Tj
T*
(- Jan 2018 - MycroftAI [mark 2 kickstarter]\(https://www.kickstarter.com/projects/aiforeveryone/) Tj
T*
(mycroft-mark-ii-the-open-voice-assistant\) launch) Tj
T*
(- Jul 2018 - personal-backend added to MycroftAI Roadmap) Tj
T*
(- Aug 2018 - MycroftAI Mimic2 TTS based on tacotron released) Tj
T*
(- Sep 2018 - [Mycroft-GUI]\(https://github.com/MycroftAI/mycroft-gui\) was created by collaborati) Tj
T*
(on between MycroftAI, Blue Systems based on KDE frameworks, maintained by @Aix) Tj
T*
(- Oct 2018 - @j1nx creates ["MycroftOS"]\(https://community.openconversational.ai/t/openvoiceos-) Tj
T*
(a-bare-minimal-production-type-of-os-based-on-buildroot/4708\), the first version of what will e) Tj
T*
(ventually become the OpenVoiceOS smart speaker) Tj
T*
(- Jan 2019 - @JarbasAI [personal-backend]\(https://github.com/MycroftAI/personal-backend/tree/31) Tj
T*
(ee96a8189d96f8102276bf4b9073811ee9a9b2\) implementation adopted by MycroftAI) Tj
T*
(- Mar 2019 - MycroftAI mark 2 completely redesigned and based on different hardware) Tj
T*
(- Apr 2019 - Steve Penrod and @JarbasAI create [lingua-franca]\(https://github.com/MycroftAI/lin) Tj
T*
(gua-franca/tree/130c77026e22d9afb1d4d3a383a743483ea007d8\) under MycroftAI with @JarbasAI as mai) Tj
T*
(ntainer) Tj
T*
(- ??? 2019 - @JarbasAI partners with NeonAI to maintain `neon-core`) Tj
T*
(- Jul 2019 - steve penrod leaves MycroftAI) Tj
T*
(- Jul 2019 - [Chatterbox kickstarter]\(https://www.kickstarter.com/projects/hellochatterbox/chat) Tj
T*
(terbox-the-smart-speaker-that-kids-build-and-p\) launched by @JarbasAI) Tj
T*
(- Sep 2019 - [Mycroft on Plasma Automobile Demo]\(https://conf.kde.org/en/akademy2019/public/eve) Tj
T*
(nts/141.html\) at Akademy 2019 by @aix) Tj
T*
(- Oct 2019 - Official MycroftAI backend open sourced, licensed as AGPL) Tj
T*
(- Dec 2019 - @Chance joins `lingua-franca` as a maintainer) Tj
T*
(- Dec 2019 - Chatterbox released \(closed source\) / kickstarter campaign fullfilled) Tj
T*
(- Dec 2019 - MycroftAI starts to work on Kivy based UI) Tj
T*
(- ??? 2020 - MycroftAI starts neglecting community contributions) Tj
T*
(- Mar 2020 - MycroftAI abandons [personal-backend]\(https://github.com/MycroftAI/personal-backen) Tj
T*
(d\)) Tj
T*
(- Mar 2020 - Michael Lewis becomes MycroftAI CEO) Tj
T*
(- May 2020 - @JarbasAI and @AIX partner up to create a [VOIP skill]\(https://github.com/JarbasSk) Tj
T*
(ills/skill-voip\)) Tj
T*
(- Sep 2020 - Community takes stand against reimplementation of GUI using Kivy) Tj
T*
(- Oct 2020 - Kivy has been dropped in support for QT Mycroft-GUI) Tj
T*
(- Oct 2020 - @JarbasAI, @AIX and @j1nx form OpenVoiceOS community project around `mycroft-core`) Tj
T*
(- Oct 2020 - [ovos-utils]\(https://github.com/OpenVoiceOS/ovos-utils\) transferred from @Jarbasai) Tj
T*
( to OVOS and renamed from `jarbas-utils`) Tj
T*
ET
endstream
endobj
8 0 obj
<< /Length 3913 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(- ??? 2020 - Chatterbox forks `mycroft-core` as `mycroft-lib` \(open source\)) Tj
T*
(- ??? 2020 - `mycroft-lib` reorganizes `mycroft` imports cleanly separating each service) Tj
T*
(- ??? 2020 - Chatterbox \(closed source\) recreated on top of `mycroft-lib`) Tj
T*
(- ??? 2020 - `neon-core` recreated on top of `mycroft-lib`) Tj
T*
(- Oct 2020 - MycroftOS renamed to OpenVoiceOS - Mycroft Edition due to trademark issues) Tj
T*
(- ??? 2020 - @JarbasAI leaves `lingua-franca`) Tj
T*
(- ??? 2020 - @Chance joins OpenVoiceOS) Tj
T*
(- Nov 2020 - @Jarbas gives a talk about [translating mycroft]\(https://collectivat.cat/blog/2020) Tj
T*
(-11-06-jornades-de-tecnologies-lliures-de-la-parla/\) for [collectivat]\(https://collectivat.cat\)) Tj
T*
( Jornades de tecnologies lingstiques lliures en catal) Tj
T*
(- Dec 2020 - [ovos-ww-plugin-pocketsphinx]\(https://github.com/OpenVoiceOS/ovos-ww-plugin-pocket) Tj
T*
(sphinx\) released) Tj
T*
(- Dec 2020 - [ovos-ww-plugin-snowboy]\(https://github.com/OpenVoiceOS/ovos-ww-plugin-snowboy\) re) Tj
T*
(leased) Tj
T*
(- Dec 2020 - [ovos-ww-plugin-precise]\(https://github.com/OpenVoiceOS/ovos-ww-plugin-precise\) re) Tj
T*
(leased) Tj
T*
(- Dec 2020 - [ovos-stt-plugin-vosk]\(https://github.com/OpenVoiceOS/ovos-stt-plugin-vosk\) releas) Tj
T*
(ed) Tj
T*
(- Dec 2020 - [ovos-stt-plugin-chromium]\(https://github.com/OpenVoiceOS/ovos-stt-plugin-chromium) Tj
T*
(\) released) Tj
T*
(- Jan 2021 - [ovos-plugin-manager]\(https://github.com/OpenVoiceOS/ovos-plugin-manager\) released) Tj
T*
(- Jan 2021 - [personal-backend]\(https://github.com/OpenVoiceOS/ovos-personal-backend\) adopted b) Tj
T*
(y OpenVoiceOS, original repo unarchived and ownership transferred) Tj
T*
(- Jan 2021 - [Mycroft embedded shell]\(https://github.com/notmart/mycroft-embedded-shell\) adopte) Tj
T*
(d by OpenVoiceOS and renamed to [ovos-shell]\(https://github.com/OpenVoiceOS/ovos-shell\)) Tj
T*
(- Jan 2021 - [skill-ovos-setup]\(https://github.com/OpenVoiceOS/skill-ovos-setup\) forked from My) Tj
T*
(croft to replace pairing) Tj
T*
(- Jan 2021 - [ovos-skill-manager]\(https://github.com/OpenVoiceOS/ovos_skill_manager\) released t) Tj
T*
(o support more skill Marketplaces) Tj
T*
(- Feb 2021 - [skill-ovos-stop]\(https://github.com/OpenVoiceOS/skill-ovos-stop\) forked from Mycr) Tj
T*
(oft) Tj
T*
(- Mar 2021 - [skill-ovos-common-play]\(https://github.com/OpenVoiceOS/skill-ovos-common-play\) fo) Tj
T*
(rked from Mycroft) Tj
T*
(- Mar 2021 - MycroftAI mark 2 dev kits start shipping) Tj
T*
(- Apr 2021 - OpenVoiceOS adopts `mycroft-lib` instead of `mycroft-core`) Tj
T*
(- ??? 202? - `mycroft-lib` renamed to [HolmesIV]\(https://github.com/HelloChatterbox/HolmesIV\) t) Tj
T*
(o avoid trademark issues) Tj
T*
(- Apr 2021 - [ovos-workshop]\(https://github.com/OpenVoiceOS/ovos-workshop\) released, bringing O) Tj
T*
(VOS features to individual skills) Tj
T*
(- May 2021 - chatterbox forks `lingua-franca` as `lingua-nostra`) Tj
T*
(- May 2021 . OpenVoiceOS deprecates `mycroft-lib` and adopts `HolmesIV`) Tj
T*
(- Jun 2021 - [ovos-tts-plugin-espeakNG]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-espeakNG) Tj
T*
(\) released) Tj
T*
(- Jun 2021 - [ovos-tts-plugin-mimic]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-mimic\) rele) Tj
T*
(ased) Tj
T*
(- Jun 2021 - [ovos-tts-plugin-mimic2]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-mimic2\) re) Tj
T*
(leased) Tj
T*
(- Jun 2021 - [ovos-tts-plugin-pico]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-pico\) releas) Tj
T*
(ed) Tj
T*
(- Aug 2021 - [ovos-tts-plugin-google-tx]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-google-) Tj
T*
(tx\) released) Tj
T*
(- Aug 2021 - [ovos-ww-plugin-vosk]\(https://github.com/OpenVoiceOS/ovos-ww-plugin-vosk\) released) Tj
T*
(- Aug 2021 - [precise-lite]\(https://github.com/OpenVoiceOS/precise-lite\) forked from Mycroft, a) Tj
T*
(dding tflite support) Tj
T*
ET
endstream
endobj
9 0 obj
<< /Length 3701 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(- Aug 2021 - [ovos-ww-plugin-precise-lite]\(https://github.com/OpenVoiceOS/ovos-ww-plugin-precis) Tj
T*
(e-lite\) released) Tj
T*
(- Aug 2021 - [ovos-ww-plugin-nyumaya]\(https://github.com/OVOSHatchery/ovos-ww-plugin-nyumaya\) r) Tj
T*
(eleased) Tj
T*
(- Aug 2021 - [precise-lite-models]\(https://github.com/OpenVoiceOS/precise-lite-models\) start be) Tj
T*
(ing shared) Tj
T*
(- Aug 2021 - [skill-ovos-volume]\(https://github.com/OpenVoiceOS/skill-ovos-volume\) released) Tj
T*
(- Sep 2021 - [VocalFusionDriver]\(https://github.com/OpenVoiceOS/VocalFusionDriver\) released by ) Tj
T*
(OVOS to support the mk2) Tj
T*
(- Sep 2021 - [ovos-tts-plugin-SAM]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-SAM\) released) Tj
T*
(- Sep 2021 - backend made optional in `HolmesIV`) Tj
T*
(- Sep 2021 - msm made optional in `HolmesIV`) Tj
T*
(- Oct 2021 - "instant_listen" introduced in `HolmesIV`) Tj
T*
(- Oct 2021 - `HolmesIV` abandoned by chatterbox) Tj
T*
(- Oct 2021 - `lingua-nostra` abandoned by chatterbox) Tj
T*
(- Oct 2021 - OpenVoiceOS forks `HolmesIV` as `ovos-core`) Tj
T*
(- Oct 2021 - `ovos-core` becomes XDG compliant) Tj
T*
(- Oct 2021 - `neon-core` deprecates `HolmesIV` and adopts `ovos-core`) Tj
T*
(- Oct 2021 - [skill-ovos-common-play]\(https://github.com/OpenVoiceOS/skill-ovos-common-play\) de) Tj
T*
(precated in favor of [OCP]\(https://github.com/OpenVoiceOS/ovos-ocp-audio-plugin\)) Tj
T*
(- ??? 2021 - @Chance leaves `lingua-franca`) Tj
T*
(- Nov 2021 - [ovos-plugin-manager]\(https://github.com/OpenVoiceOS/ovos-plugin-manager\) released) Tj
T*
(- Nov 2021 - [skill-ovos-timer]\(https://github.com/OpenVoiceOS/skill-ovos-timer\) forked from My) Tj
T*
(croft) Tj
T*
(- Nov 2021 - [skill-ovos-homescreen]\(https://github.com/OpenVoiceOS/skill-ovos-homescreen\) fork) Tj
T*
(ed from Mycroft) Tj
T*
(- Nov 2021 - @JarbasAI leaves chatterbox) Tj
T*
(- Nov 2021 - `ovos-core` version **0.0.1** released) Tj
T*
(- Nov 2021 - [ovos-utils]\(https://github.com/OpenVoiceOS/ovos-utils\) adopted in `ovos-core`) Tj
T*
(- Nov 2021 - [ovos-plugin-manager]\(https://github.com/OpenVoiceOS/ovos-plugin-manager\) adopted ) Tj
T*
(in `ovos-core`) Tj
T*
(- Nov 2021 - multiple wake words support added) Tj
T*
(- Nov 2021 - installable skills \(setup.py\) support added) Tj
T*
(- Nov 2021 - [ovos-PHAL]\(https://github.com/OpenVoiceOS/ovos-PHAL\) released \(mycroft compatible) Tj
T*
(\)) Tj
T*
(- Nov 2021 - [skill-ovos-hello-world]\(https://github.com/OpenVoiceOS/skill-ovos-hello-world\) fo) Tj
T*
(rked from Mycroft) Tj
T*
(- Nov 2021 - [skill-ovos-naptime]\(https://github.com/OpenVoiceOS/skill-ovos-naptime\) forked fro) Tj
T*
(m Mycroft) Tj
T*
(- ??? - @NeonDaniel joins OpenVoiceOS) Tj
T*
(- ??? 2021 - NeonAI adopts [ovos-shell]\(https://github.com/OpenVoiceOS/ovos-shell\)) Tj
T*
(- Dec 2021 - [ovos-PHAL-plugin-mk1]\(https://github.com/OpenVoiceOS/ovos-PHAL-plugin-mk1\) releas) Tj
T*
(ed) Tj
T*
(- Dec 2021 - [skill-ovos-fallback-unknown]\(https://github.com/OpenVoiceOS/skill-ovos-fallback-u) Tj
T*
(nknown\) forked from Mycroft) Tj
T*
(- Dec 2021 - [skill-ovos-weather]\(https://github.com/OpenVoiceOS/skill-ovos-weather\) forked fro) Tj
T*
(m Mycroft) Tj
T*
(- Dec 2021 - [skill-ovos-common-query]\(https://github.com/OpenVoiceOS/skill-ovos-common-query\) ) Tj
T*
(forked from Mycroft) Tj
T*
(- Dec 2021 - [skill-ovos-application-launcher]\(https://github.com/OpenVoiceOS/skill-ovos-applic) Tj
T*
(ation-launcher\) released) Tj
T*
(- Jan 2022 - OpenVoiceOS forks [lingua-franca]\(https://github.com/OpenVoiceOS/ovos-lingua-franc) Tj
T*
(a\)) Tj
T*
(- ??? 2022 - OpenVoiceOS starts development in the open via [matrix chat]\(https://matrix.to/#/!) Tj
T*
ET
endstream
endobj
10 0 obj
<< /Length 3667 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(XFpdtmgyCoPDxOMPpH:matrix.org?via=matrix.org\)) Tj
T*
(- Feb 2022 - [OCP]\(https://github.com/OpenVoiceOS/ovos-ocp-audio-plugin\) released as an audio p) Tj
T*
(lugin \(mycroft compatible\)) Tj
T*
(- Feb 2022 - PHAL replaces `mycroft.client.enclosure` in `ovos-core`) Tj
T*
(- Feb 2022 - [skill-ovos-date-time]\(https://github.com/OpenVoiceOS/skill-ovos-date-time\) forked) Tj
T*
( from Mycroft) Tj
T*
(- Mar 2022 - Fallback STT support added) Tj
T*
(- Mar 2022 - VAD plugins support added) Tj
T*
(- Mar 2022 - [ovos-vad-plugin-webrtcvad]\(https://github.com/OpenVoiceOS/ovos-vad-plugin-webrtcv) Tj
T*
(ad\) released) Tj
T*
(- Mar 2022 - [ovos-vad-plugin-silero]\(https://github.com/OpenVoiceOS/ovos-vad-plugin-silero\) re) Tj
T*
(leased) Tj
T*
(- Mar 2022 - [OCP]\(https://github.com/OpenVoiceOS/ovos-ocp-audio-plugin/\) adopted in `ovos-core) Tj
T*
(` as default media handler) Tj
T*
(- Mar 2022 - [ovos-PHAL-plugin-mk2]\(https://github.com/OpenVoiceOS/ovos-PHAL-plugin-mk2\) releas) Tj
T*
(ed) Tj
T*
(- Mar 2022 - [ovos-PHAL-plugin-respeaker-2mic]\(https://github.com/OpenVoiceOS/ovos-PHAL-plugin-) Tj
T*
(respeaker-2mic\) released) Tj
T*
(- Mar 2022 - [ovos-PHAL-plugin-respeaker-4mic]\(https://github.com/OpenVoiceOS/ovos-PHAL-plugin-) Tj
T*
(respeaker-4mic\) released) Tj
T*
(- ??? 2022 - OpenVoiceOS starts releasing buildroot images for rpi4 and Mark 2) Tj
T*
(- ??? 2022 - OpenVoiceOS starts releasing manjaro images for rpi4 and Mark 2) Tj
T*
(- Apr 2022 - [ovos-stt-http-server]\(https://github.com/OpenVoiceOS/ovos-stt-http-server\) releas) Tj
T*
(ed) Tj
T*
(- Apr 2022 - [ovos-stt-plugin-server]\(https://github.com/OpenVoiceOS/ovos-stt-plugin-server\) re) Tj
T*
(leased) Tj
T*
(- May 2022 - [ovos-tts-plugin-beepspeak]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-beepspe) Tj
T*
(ak\) forked from chatterbox) Tj
T*
(- May 2022 - [ovos-tts-plugin-marytts]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-marytts\) ) Tj
T*
(released) Tj
T*
(- May 2022 - [ovos-tts-plugin-polly]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-polly\) fork) Tj
T*
(ed from chatterbox) Tj
T*
(- May 2022 - [ovos-translate-server]\(https://github.com/OpenVoiceOS/ovos-translate-server\) rele) Tj
T*
(ased) Tj
T*
(- May 2022 - `ovos-core` version **0.0.3** released) Tj
T*
(- May 2022 - MycroftAI founders resign) Tj
T*
(- Jun 2022 - [ovos-config]\(https://github.com/OpenVoiceOS/ovos-config\) adopted in `ovos-core`) Tj
T*
(- Jun 2022 - [skill-ovos-alarm]\(https://github.com/OpenVoiceOS/skill-ovos-alarm\) forked from My) Tj
T*
(croft) Tj
T*
(- Jun 2022 - [skill-ovos-qml-camera]\(https://github.com/OpenVoiceOS/skill-ovos-qml-camera\) fork) Tj
T*
(ed from Mycroft) Tj
T*
(- Jun 2022 - Plasma Bigscreen [drops mycroft-core in favor of ovos-core]\(https://gitlab.manjaro) Tj
T*
(.org/packages/kde-unstable/bigscreen/mycroft-bigscreen/-/commit/4fd27e3ea165c2b1d39ee354a9faaa4) Tj
T*
(0fad1435d\) version **0.0.4** \(alpha\)) Tj
T*
(- Jul 2022 - MycroftAI starts work on [mycroft-dinkum]\(https://github.com/MycroftAI/mycroft-din) Tj
T*
(kum\) behind the scenes, a replacement/rewrite of mycroft-core) Tj
T*
(- Jul 2022 - [ovos-tts-plugin-mimic3]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-mimic3\) fo) Tj
T*
(rked from Mycroft) Tj
T*
(- Jul 2022 - [skill-homescreen-lite]\(https://github.com/OpenVoiceOS/skill-homescreen-lite\) rele) Tj
T*
(ased) Tj
T*
(- Aug 2022 - [padacioso]\(https://github.com/OpenVoiceOS/padacioso\) transfered from @JarbasAi to) Tj
T*
( OVOS) Tj
T*
(- Aug 2022 - adopt `padacioso` as a optional `padatious` alternative to avoid libfann \(LGPL\)) Tj
T*
(- Aug 2022 - `ovos-core` version **0.0.4** released) Tj
T*
ET
endstream
endobj
11 0 obj
<< /Length 3730 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(- Aug 2022 - experimental support for "continuous_listening" and "hybrid_listening" added) Tj
T*
(- Sep 2022 - MycroftAI [Mimic3]\(https://github.com/MycroftAI/mimic3\) TTS released, AGPL license) Tj
T*
(d) Tj
T*
(- Sep 2022 . MycroftAI Mark 2 starts shipping) Tj
T*
(- Sep 2022 - [skill-ovos-news]\(https://github.com/OpenVoiceOS/skill-ovos-news\) transferred from) Tj
T*
( @JarbasAl to OVOS) Tj
T*
(- Oct 2022 - [ovos-backend-manager]\(https://github.com/OpenVoiceOS/ovos-backend-manager\) UI  re) Tj
T*
(leased) Tj
T*
(- Oct 2022 - [ovos-stt-plugin-whispercpp]\(https://github.com/OpenVoiceOS/ovos-stt-plugin-whispe) Tj
T*
(rcpp\) released) Tj
T*
(- Oct 2022 - new `ask_yesno` parser added) Tj
T*
(- Oct 2022 - [ovos-backend-client]\(https://github.com/OpenVoiceOS/ovos-backend-client\) adopted ) Tj
T*
(by `ovos-core`, selectable backend support added \(offline, personal, selene\)) Tj
T*
(- Oct 2022 - [ovos-tts-plugin-mimic3-server]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-mim) Tj
T*
(ic3-server\) released) Tj
T*
(- Oct 2022 - [mycroft.blue-systems.com]\(http://mycroft.blue-systems.com\) mimic 3 public server ) Tj
T*
(added) Tj
T*
(- Oct 2022 - [mimic3.ziggyai.online]\(https://mimic3.ziggyai.online\) mimic 3 public server added) Tj
T*
(- Oct 2022 - @aix talks about [OVOS in KDE Akademy]\(https://www.youtube.com/watch?v=hCwdtZu7WqA) Tj
T*
(\)) Tj
T*
(- Oct 2022 - [skill-ovos-soundcloud]\(https://github.com/OpenVoiceOS/skill-ovos-soundcloud\) tran) Tj
T*
(sferred from @JarbasAl to OVOS) Tj
T*
(- Oct 2022 - [skill-ovos-youtube]\(https://github.com/OpenVoiceOS/skill-ovos-youtube\) transferre) Tj
T*
(d from @JarbasAl to OVOS) Tj
T*
(- ??? 2022 - [mycroft-dinkum]\(https://github.com/MycroftAI/mycroft-dinkum\) source code made pub) Tj
T*
(lic, Apache2 licensed) Tj
T*
(- ??? 2022 - Extremely negative feedback from developer community, several key members annouce ) Tj
T*
(no intention to support mycroft-dinkum) Tj
T*
(- ??? 2022 - NeonAI starts release NeonOS images for the Mark 2) Tj
T*
(- Nov 2022 - `ovos-core` version **0.0.5** released) Tj
T*
(- Nov 2022 - MycroftAI staff lay off, only a skeleton crew remaining) Tj
T*
(- Nov 2022 - [ovos-bus-client]\(https://github.com/OpenVoiceOS/ovos-bus-client\) forked from Mycr) Tj
T*
(oft) Tj
T*
(- Nov 2022 - [tts.smartgic.io/mimic3]\(https://tts.smartgic.io/mimic3\) public Mimic3 server adde) Tj
T*
(d) Tj
T*
(- Dec 2022 - [Home Assistant PHAL]\(https://github.com/OpenVoiceOS/ovos-PHAL-plugin-homeassistan) Tj
T*
(t\) plugin initial release by @AIX , exposes HA devices to the messagebus) Tj
T*
(- Dec 2022 - [skill-ovos-youtube-music]\(https://github.com/OpenVoiceOS/skill-ovos-youtube-music) Tj
T*
(\) transferred from @JarbasAl to OVOS) Tj
T*
(- Dec 2022 - [skill-ovos-bandcamp]\(https://github.com/OpenVoiceOS/skill-ovos-bandcamp\) transfer) Tj
T*
(red from @JarbasAl to OVOS) Tj
T*
(- Jan 2023 - `ovos-core` version **0.0.6** released) Tj
T*
(- Jan 2023 - negative user feedback from the community for Mark 2, lots of bugs and missing fea) Tj
T*
(tures) Tj
T*
(- Jan 2023 - "fallback" wake word support added to `ovos-plugin-manager`) Tj
T*
(- Jan 2023 - [skill-ovos-local-media]\(https://github.com/OpenVoiceOS/skill-ovos-local-media\) re) Tj
T*
(leased) Tj
T*
(- Jan 2023 - [ChatGPT skill]\(https://github.com/OpenVoiceOS/skill-ovos-fallback-chatgpt/\) relea) Tj
T*
(sed) Tj
T*
(- Feb 2023 - `ovos-config` cli tool by community member @sgee released) Tj
T*
(- Feb 2023 - [ovos-solver-plugin-aiml]\(https://github.com/OpenVoiceOS/ovos-solver-plugin-aiml\) ) Tj
T*
(released) Tj
T*
(- Feb 2023 - [ovos-solver-plugin-rivescript]\(https://github.com/OpenVoiceOS/ovos-solver-plugin-) Tj
T*
(rivescript\) released) Tj
T*
ET
endstream
endobj
12 0 obj
<< /Length 4113 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(- Feb 2023 - [skill-ovos-somafm]\(https://github.com/OpenVoiceOS/skill-ovos-somafm\) transferred ) Tj
T*
(from @JarbasAl to OVOS) Tj
T*
(- Feb 2023 - MycroftAI partners up with NeonAI to maintain mycroft-core\(?\)) Tj
T*
(- Mar 2023 - Mimic3 TTS public servers become default OVOS voice \(alan pope\)) Tj
T*
(- Mar 2023 - `ovos-core` version **0.0.7** released) Tj
T*
(- Mar 2023 - [Fundraiser to form OpenVoiceOS]\(https://www.gofundme.com/f/openvoiceos\) V.z.w. \(D) Tj
T*
(utch: "Vereninging zonder winstoogmerk"\) completed in a couple days) Tj
T*
(- Mar 2023 - First stretch goal of [fundraiser]\(https://www.gofundme.com/f/openvoiceos\) reached) Tj
T*
( and second stretch goal announced) Tj
T*
(- Mar 2023 - [raspbian-ovos]\(https://github.com/OpenVoiceOS/raspbian-ovos\) images start being r) Tj
T*
(eleased, maintained by community member @builderjer) Tj
T*
(- Mar 2023 - [community docs]\(https://openvoiceos.github.io/community-docs/\) start being mainta) Tj
T*
(ined by community members) Tj
T*
(- Mar 2023 - [ovos-ww-plugin-openWakeWord]\(https://github.com/OpenVoiceOS/ovos-ww-plugin-openWa) Tj
T*
(keWord\) released, maintained by author @dscripka) Tj
T*
(- Mar 2023 - [skill-ovos-icanhazdadjokes]\(https://github.com/OpenVoiceOS/skill-ovos-icanhazdadj) Tj
T*
(okes\) transferred from @JarbasAl to OVOS) Tj
T*
(- Mar 2023 - [ovos-skill-alerts]\(https://github.com/OpenVoiceOS/ovos-skill-alerts\) forked from ) Tj
T*
(Neon, maintained by community member @sgee) Tj
T*
(- Apr 2023 - `ovos-core` splits `ovos-audio`, `ovos-listener`, `ovos-gui` and `ovos-bus` into t) Tj
T*
(heir own packages) Tj
T*
(- Apr 2023 - [@Aix leaves]\(https://community.mycroft.ai/t/aix-signing-off/13583\) OpenVoiceOS) Tj
T*
(- Apr 2023 - OpenVoiceOS stops releasing manjaro based images) Tj
T*
(- Apr 2023 - [ovos-stt-plugin-fasterwhisper]\(https://github.com/OpenVoiceOS/ovos-stt-plugin-fas) Tj
T*
(terwhisper\) released) Tj
T*
(- Apr 2023 - [ovos-tts-plugin-piper]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-piper\) rele) Tj
T*
(ased) Tj
T*
(- Apr 2023 - [precise-lite-trainer]\(https://github.com/OpenVoiceOS/precise-lite-trainer\) releas) Tj
T*
(ed) Tj
T*
(- Apr 2023 - [ovos-vad-plugin-precise]\(https://github.com/OpenVoiceOS/ovos-vad-plugin-precise\) ) Tj
T*
(released) Tj
T*
(- Apr 2023 - [ovos-dinkum-listener]\(https://github.com/OpenVoiceOS/ovos-dinkum-listener\) releas) Tj
T*
(ed) Tj
T*
(- Apr 2023 - [ovos-translate-plugin-deepl]\(https://github.com/OpenVoiceOS/ovos-translate-plugin) Tj
T*
(-deepl\) released, maintained by community member @sgee) Tj
T*
(- Apr 2023 - [mycroft-classic-listener]\(https://github.com/OpenVoiceOS/mycroft-classic-listener) Tj
T*
(\) released, to preserve original mark 1 listener) Tj
T*
(- Apr 2023 - [skill-ovos-tunein]\(https://github.com/OpenVoiceOS/skill-ovos-tunein\)  transferred) Tj
T*
( from @JarbasAl to OVOS, maintained by community member @sgee) Tj
T*
(- Apr 2023 - [jurebes]\(https://github.com/OpenVoiceOS/jurebes\) intent parser released) Tj
T*
(- May 2023 - `mycroft` import deprecated in favor of `ovos_core` module for skills service) Tj
T*
(- May 2023 - [stt.openvoiceos.org]\(https://stt.openvoiceos.org\) moves to whisper \(small, cpu on) Tj
T*
(ly\)) Tj
T*
(- May 2023 - [ovos-docker]\(https://github.com/openvoiceos/ovos-docker\) released, maintained by ) Tj
T*
(community member @goldyfruit) Tj
T*
(- May 2023 - Open Voice OS TTS/STT [status page]\(http://openvoiceos.github.io/status/\) released) Tj
T*
(, maintained by community member @goldyfruit) Tj
T*
(- May 2023 - First successful run of OpenVoiceOS on Mac OS using containers with [ovos-docker]\() Tj
T*
(https://github.com/openvoiceos/ovos-docker\)) Tj
T*
(- May 2023 - [ovos-docker-stt]\(https://github.com/openvoiceos/ovos-docker-stt\) STT containers r) Tj
T*
(eleased, maintained by community member @goldyfruit) Tj
T*
(- May 2023 - [ovos-microphone-plugin-sounddevice]\(https://github.com/openvoiceos/ovos-microphon) Tj
T*
(e-plugin-sounddevice\) released, which provides native Mac OS suuport, maintained by community m) Tj
T*
(ember @goldyfruit) Tj
T*
ET
endstream
endobj
13 0 obj
<< /Length 4207 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(- May 2023 - [ovos-persona]\(https://github.com/OpenVoiceOS/ovos-persona\) alpha release) Tj
T*
(- May 2023 - [ovos-audio-transformer-plugin-speechbrain-langdetect]\(https://github.com/OpenVoic) Tj
T*
(eOS/ovos-audio-transformer-plugin-speechbrain-langdetect\) released) Tj
T*
(- May 2023 - [ovos-skill-easter-eggs]\(https://github.com/OpenVoiceOS/ovos-skill-easter-eggs\) tr) Tj
T*
(ansferred from @JarbasAl to OVOS, maintained by community member @mikejgray) Tj
T*
(- May 2023 - [skill-ovos-dismissal]\(https://github.com/OpenVoiceOS/skill-ovos-dismissal\) transf) Tj
T*
(erred from @ChanceNCounter to OVOS) Tj
T*
(- May 2023 - [skill-ovos-dictation]\(https://github.com/OpenVoiceOS/skill-ovos-dictation\) transf) Tj
T*
(erred from @JarbasAl to OVOS) Tj
T*
(- Jun 2023 - Home Assistant plugin starts being maintained by community member @mikejgray) Tj
T*
(- Jun 2023 - [quebra_frases]\(https://github.com/OpenVoiceOS/quebra_frases\) transferred from @Ja) Tj
T*
(rbasAl to OVOS) Tj
T*
(- Jun 2023 - [ovos-translate-plugin-nllb]\(https://github.com/OpenVoiceOS/ovos-translate-plugin-) Tj
T*
(nllb\) released) Tj
T*
(- Jun 2023 - [fasterwhisper.ziggyai.online]\(https://fasterwhisper.ziggyai.online/stt\) public ST) Tj
T*
(T server added \(large, GPU\)) Tj
T*
(- Jun 2023 - [Home Assistant Notify]\(https://blog.graywind.org/posts/ovos-homeassistant-notify-) Tj
T*
(integration/\) integration released by community member @mikejgray) Tj
T*
(- Jun 2023 - First \(and second!\) successful run of OpenVoiceOS on Windows, using WSL2 and [ovos) Tj
T*
(-docker]\(https://github.com/openvoiceos/ovos-docker\)) Tj
T*
(- Jun 2023 - [ovos-docker-tts]\(https://github.com/OpenVoiceOS/ovos-docker-tts\) TTS containers r) Tj
T*
(eleased, maintained by community member @goldyfruit) Tj
T*
(- Jun 2023 - [ovos-tts-plugin-azure]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-azure\) rele) Tj
T*
(ased) Tj
T*
(- Jun 2023 - [ovos-utterance-corrections-plugin]\(https://github.com/OpenVoiceOS/ovos-utterance-) Tj
T*
(corrections-plugin\) released) Tj
T*
(- Jul 2023 - [mycroft-gui-qt6]\(https://github.com/OpenVoiceOS/mycroft-gui-qt6\) forked from mycr) Tj
T*
(oft-gui at last commit supporting QT6 before license change to GPL \(reverted shortly after\)) Tj
T*
(- Jul 2023 - [mycroft-gui-qt5]\(https://github.com/OpenVoiceOS/mycroft-gui-qt5\) forked from mycr) Tj
T*
(oft-gui at last commit supporting QT5) Tj
T*
(- Jul 2023 - [pipertts.ziggyai.online]\(https://pipertts.ziggyai.online\) public TTS server added) Tj
T*
(- Jul 2023 - [tts.smartgic.io/piper]\(https://tts.smartgic.io/piper\) public TTS server added) Tj
T*
(- Jul 2023 - piper TTS public servers become default OVOS voice \(alan pope\)) Tj
T*
(- Jul 2023 - [skill-ovos-spotify]\(https://github.com/OpenVoiceOS/skill-ovos-spotify\) port of th) Tj
T*
(e mycroft-spotify skill by community member and original author @forslund) Tj
T*
(- Aug 2023 - [ovos-translate-server-plugin]\(https://github.com/OpenVoiceOS/ovos-translate-serve) Tj
T*
(r-plugin\) released) Tj
T*
(- Aug 2023 - [ovos-docker-tx]\(https://github.com/OpenVoiceOS/ovos-docker-tx\) translation contai) Tj
T*
(ners released, maintained by community member @goldyfruit) Tj
T*
(- Aug 2023 - [nllb.openvoiceos.org]\(https://nllb.openvoiceos.org\) public translation server add) Tj
T*
(ed) Tj
T*
(- Aug 2023 - [translator.smartgic.io/nllb]\(https://translator.smartgic.io/nllb\) public translat) Tj
T*
(ion server added) Tj
T*
(- Aug 2023 - adopt NLLB public servers as default translation plugin) Tj
T*
(- Aug 2023 - [skill-ovos-wolfie]\(https://github.com/OpenVoiceOS/skill-ovos-wolfie\) transferred ) Tj
T*
(from @JarbasAl to OVOS) Tj
T*
(- Aug 2023 - [skill-ovos-ddg]\(https://github.com/OpenVoiceOS/skill-ovos-ddg\) transferred from @) Tj
T*
(JarbasAl to OVOS) Tj
T*
(- Aug 2023 - [skill-ovos-wikipedia]\(https://github.com/OpenVoiceOS/skill-ovos-wikipedia\) transf) Tj
T*
(erred from @JarbasAl to OVOS) Tj
T*
(- Aug 2023 - [ovos-stt-azure-plugin]\(https://github.com/OpenVoiceOS/ovos-stt-azure-plugin\) rele) Tj
T*
(ased) Tj
T*
(- Sep 2023 - [skill-ovos-parrot]\(https://github.com/OpenVoiceOS/skill-ovos-parrot\) transferred ) Tj
T*
(from @JarbasAl to OVOS) Tj
T*
ET
endstream
endobj
14 0 obj
<< /Length 4019 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(- Sep 2023 - [stt.smartgic.io/fasterwhisper]\(https://stt.smartgic.io/fasterwhisper\) public STT ) Tj
T*
(server \(large, GPU\)) Tj
T*
(- Sep 2023 - GUI fully functional with [ovos-docker]\(https://github.com/openvoiceos/ovos-docker) Tj
T*
(\) containers) Tj
T*
(- Sep 2023 - [persona-server]\(https://github.com/OpenVoiceOS/ovos-persona-server\) alpha version) Tj
T*
( released) Tj
T*
(- Sep 2023 - [ovos-audio-transformer-plugin-ggwave]\(https://github.com/OpenVoiceOS/ovos-audio-t) Tj
T*
(ransformer-plugin-ggwave\) released) Tj
T*
(- Oct 2023 - [ovosnllb.ziggyai.online]\(https://ovosnllb.ziggyai.online\)  public translation ser) Tj
T*
(ver added) Tj
T*
(- Oct 2023 - [ovos-tts-plugin-mimic3-server]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-mim) Tj
T*
(ic3-server\) deprecated) Tj
T*
(- Oct 2023 - [ovos-PHAL-sensors]\(https://github.com/OpenVoiceOS/ovos-PHAL-sensors\) released, ex) Tj
T*
(posing OVOS sensors in Home Assistant) Tj
T*
(- Oct 2023 - [ovos-bidirectional-translation-plugin]\(https://github.com/OpenVoiceOS/ovos-bidire) Tj
T*
(ctional-translation-plugin\) released) Tj
T*
(- Nov 2023 - Plasma Bigscreen [moves to QT6 and explicitly drops support for OVOS]\(https://inve) Tj
T*
(nt.kde.org/plasma/plasma-bigscreen/-/commit/05441d4b687950b6235ef466cbb9c777631618d8\)) Tj
T*
(- Dec 2023 - [ovos-installer]\(https://github.com/OpenVoiceOS/ovos-installer\) first release! cod) Tj
T*
(ename `Duke Nukem`, maintained by community member @goldyfruit) Tj
T*
(- Dec 2023 - `ovos-logs` cli tool by community member @sgee added to `ovos-utils`) Tj
T*
(- Dec 2023 - [ovos-docs-viewer]\(https://github.com/OpenVoiceOS/ovos-docs-viewer\) cli tool relea) Tj
T*
(sed) Tj
T*
(- Dec 2023 - [skill-ovos-spelling]\(https://github.com/OpenVoiceOS/skill-ovos-spelling\) forked f) Tj
T*
(rom Mycroft) Tj
T*
(- Dec 2023 - [skill-ovos-ip]\(https://github.com/OpenVoiceOS/skill-ovos-ip\) forked from Mycroft) Tj
T*
(- Dec 2023 - [skill-ovos-wallpapers]\(https://github.com/OpenVoiceOS/skill-ovos-wallpapers\) tran) Tj
T*
(sferred to OVOS) Tj
T*
(- Dec 2023 - [ovos-i2csound]\(https://github.com/OpenVoiceOS/ovos-i2csound\) released by communit) Tj
T*
(y member @builderjer) Tj
T*
(- ??? 202? - [ovos-tts-plugin-mimic2]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-mimic2\) de) Tj
T*
(precated) Tj
T*
(- Jan 2024 - [skill-ovos-boot-finished]\(https://github.com/OpenVoiceOS/skill-ovos-boot-finished) Tj
T*
(\) forked from Neon) Tj
T*
(- Jan 2024 - [skill-ovos-audio-recording]\(https://github.com/OpenVoiceOS/skill-ovos-audio-recor) Tj
T*
(ding\) forked from Neon) Tj
T*
(- Jan 2024 - [ovos-utterance-plugin-cancel]\(https://github.com/OpenVoiceOS/ovos-utterance-plugi) Tj
T*
(n-cancel\) forked from Neon, deprecates dismissal skill) Tj
T*
(- Jan 2024 - [ovos-mark1-utils]\(https://github.com/OpenVoiceOS/ovos-mark1-utils\) released) Tj
T*
(- Jan 2024 - Mycroft forums move to [Open Conversational AI]\(https://community.openconversation) Tj
T*
(al.ai/\)) Tj
T*
(- Jan 2024 - [ovos-vad-plugin-noise]\(https://github.com/OpenVoiceOS/ovos-vad-plugin-noise\) rele) Tj
T*
(ased to support older platforms) Tj
T*
(- Feb 2024 - [ovos-tts-plugin-edge-tts]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-edge-tts) Tj
T*
(\) released) Tj
T*
(- Feb 2024 - Selene servers and Mycroft AI website [go down]\(https://community.openconversation) Tj
T*
(al.ai/t/mycroft-servers-down-any-quick-and-dirty-trick/\)) Tj
T*
(- Feb 2024 - [skill-ovos-randomness]\(https://github.com/OpenVoiceOS/skill-ovos-randomness\) rele) Tj
T*
(ased, maintained by community member @mikejgray) Tj
T*
(- Feb 2024 - [OVOSHatchery]\(https://github.com/OVOSHatchery\) created to incubate new projects) Tj
T*
(- Feb 2024 - @Chance leaves OpenVoiceOS) Tj
T*
(- Feb 2024 - [skill-ovos-wordnet]\(https://github.com/OpenVoiceOS/skill-ovos-wordnet\) released) Tj
T*
(- Mar 2024 - Community Mycroft [skills updated to OVOS]\(https://github.com/orgs/OVOSHatchery/re) Tj
T*
(positories?type=fork&q=skill\) under OVOSHatchery) Tj
T*
ET
endstream
endobj
15 0 obj
<< /Length 2575 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(- Mar 2024 - [OVOS Skill Store]\(https://openvoiceos.github.io/OVOS-skills-store\) released!) Tj
T*
(- Mar 2024 - [Hatchery Skill Store]\(https://ovoshatchery.github.io/OVOS-Hatchery-skills\) releas) Tj
T*
(ed!) Tj
T*
(- Mar 2024 - First successful run of OpenVoiceOS natively on Mac OS with Apple Silicon) Tj
T*
(- Mar 2024 - [ovos-installer]\(https://github.com/OpenVoiceOS/ovos-installer\) second release, co) Tj
T*
(dename `Doom` supports Mark II device, maintained by community member @goldyfruit) Tj
T*
(- Apr 2024 - [Mark 2 demo]\(https://community.openconversational.ai/t/open-voice-os-running-on-a) Tj
T*
(-mark-ii-with-its-local-ai-running-mistral/14572\) running Open Voice OS connected to a local A.) Tj
T*
(I.) Tj
T*
(- Apr 2024 - First successful run of [HiveMind Satellite]\(https://github.com/JarbasHiveMind/Hiv) Tj
T*
(eMind-voice-sat\) on Mark 1 device) Tj
T*
(- Jun 2024 - [First successful run of OpenVoiceOS natively on Windows]\(https://github.com/mikej) Tj
T*
(gray/ovos-windows\): https://drive.google.com/file/d/171801mbhbpG79BvlOlUCxVyMPcDGgnbM/view?usp=) Tj
T*
(sharing) Tj
T*
(- Near Future - `ovos-core` version **0.0.8** released) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/100-bus_service.md ===) Tj
T*
() Tj
T*
(# Bus Service) Tj
T*
() Tj
T*
(The **Message Bus** is the internal communication layer used by OVOS to allow independent compo) Tj
T*
(nents to interact using structured messages. It acts as a central nervous system, coordinating ) Tj
T*
(everything from speech recognition to skill execution.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Overview) Tj
T*
() Tj
T*
(In the OVOS ecosystem, the messagebus is implemented as a **WebSocket** interface. Messages fol) Tj
T*
(low a structured format containing:) Tj
T*
() Tj
T*
(- A `type`: identifying the intent or action) Tj
T*
(- An optional `data` payload \(JSON\)) Tj
T*
(- An optional `context` dictionary for session or routing metadata) Tj
T*
() Tj
T*
(Some messages trigger actions; others act as notifications or state broadcasts. Both core OVOS ) Tj
T*
(components and external systems \(e.g., [HiveMind]\(https://jarbashivemind.github.io/HiveMind-com) Tj
T*
(munity-docs\)\) can interact with the bus.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Configuration) Tj
T*
() Tj
T*
(The messagebus is configured in `mycroft.conf` under the `websocket` section:) Tj
T*
() Tj
T*
(```json) Tj
T*
("websocket": {) Tj
T*
(    "host": "127.0.0.1",) Tj
T*
(    "port": 8181,) Tj
T*
(    "route": "/core",) Tj
T*
(    "shared_connection": true) Tj
T*
(}) Tj
T*
(```) Tj
T*
ET
endstream
endobj
16 0 obj
<< /Length 2084 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(> It is **strongly recommended** to keep the `host` set to `127.0.0.1` to prevent unauthorized ) Tj
T*
(remote access.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Security) Tj
T*
() Tj
T*
(By default, all skills share a single bus connection. This can be exploited by malicious or poo) Tj
T*
(rly designed skills to interfere with others.) Tj
T*
() Tj
T*
(- To improve isolation, set `"shared_connection": false`. This ensures each skill uses a separa) Tj
T*
(te WebSocket connection.) Tj
T*
(- For a demonstration of potential vulnerabilities, see [BusBrickerSkill]\(https://github.com/Ev) Tj
T*
(ilJarbas/BusBrickerSkill\).) Tj
T*
() Tj
T*
(Security concerns are further documented in [Nhoya/MycroftAI-RCE]\(https://github.com/Nhoya/Mycr) Tj
T*
(oftAI-RCE\).) Tj
T*
() Tj
T*
(> ?? Never expose the messagebus to the public internet. It provides full control over the OVOS) Tj
T*
( instance and the host system.) Tj
T*
() Tj
T*
(> ? For remote interaction, use [HiveMind]\(https://openvoiceos.github.io/community-docs/friends) Tj
T*
(/#hivemind\), which offers secure proxy access to the bus.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Message Structure) Tj
T*
() Tj
T*
(Each message sent on the bus consists of:) Tj
T*
() Tj
T*
(```json) Tj
T*
({) Tj
T*
(    "type": "message.type",) Tj
T*
(    "data": { /* arbitrary JSON payload */ },) Tj
T*
(    "context": { /* optional metadata */ }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(- `type`: Identifies the message \(e.g., `"recognizer_loop:utterance"`\)) Tj
T*
(- `data`: Carries command-specific information) Tj
T*
(- `context`: Session and routing information, used internally) Tj
T*
() Tj
T*
(For a complete index of known OVOS messages, refer to the [Message Spec documentation]\(https://) Tj
T*
(openvoiceos.github.io/message_spec/\).) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Sessions) Tj
T*
() Tj
T*
(Messages can carry a `"session"` key inside their `context` to preserve request-specific state ) Tj
T*
(and user preferences. Sessions help enable:) Tj
T*
() Tj
T*
(- Multi-user support) Tj
T*
ET
endstream
endobj
17 0 obj
<< /Length 2148 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(- Conversational context) Tj
T*
(- Remote device handling) Tj
T*
() Tj
T*
(Example session fields include:) Tj
T*
() Tj
T*
(- Language and location) Tj
T*
(- TTS/STT preferences) Tj
T*
(- Active skills and follow-up intents) Tj
T*
(- Pipeline settings) Tj
T*
(- Site or device ID) Tj
T*
() Tj
T*
(Sessions are typically auto-managed by `ovos-core` for local interactions using the default ses) Tj
T*
(sion ID \(`"default"`\). External clients \(e.g., HiveMind voice satellites\) are expected to manag) Tj
T*
(e their own sessions.) Tj
T*
() Tj
T*
(See the [Session-Aware Skills]\(https://openvoiceos.github.io/ovos-technical-manual/session_skil) Tj
T*
(ls/\) documentation for implementation guidelines.) Tj
T*
() Tj
T*
(> ?? Skills that are not session-aware may behave unexpectedly when used with external voice cl) Tj
T*
(ients.) Tj
T*
() Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Message Targeting and Routing) Tj
T*
() Tj
T*
(OVOS uses `context["source"]` and `context["destination"]` to enable smart message routing acro) Tj
T*
(ss components and external devices.) Tj
T*
() Tj
T*
(The `Message` object includes utility methods:) Tj
T*
() Tj
T*
(- `.forward\(\)`: Sends the message onward while preserving the current context) Tj
T*
(- `.reply\(\)`: Sends a response back to the original source \(swapping source/destination\)) Tj
T*
() Tj
T*
(Example:) Tj
T*
() Tj
T*
(```python) Tj
T*
(bus.emit\(Message\('recognizer_loop:utterance', data, ) Tj
T*
(    context={) Tj
T*
(        'destination': ['audio', 'kde'],) Tj
T*
(        'source': 'remote_service') Tj
T*
(    }\)\)) Tj
T*
(```) Tj
T*
() Tj
T*
(OVOS itself does not implement any actual routing, everything connected to the ovos messagebus ) Tj
T*
(receives every message, however this metadata enables 3rd party applications to fully manage th) Tj
T*
(ese messages and decide if and where to send them) Tj
T*
() Tj
T*
(> ? [HiveMind]\(https://jarbashivemind.github.io/HiveMind-community-docs/\) uses these fields ext) Tj
T*
(ensively to direct replies to the correct satellite.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Internal Routing Overview) Tj
T*
ET
endstream
endobj
18 0 obj
<< /Length 2526 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(![OVOS Message Flow Diagram]\(https://github.com/OpenVoiceOS/ovos-technical-manual/assets/337018) Tj
T*
(64/df9aa669-ce7f-430e-b4db-f57200e75332\)) Tj
T*
() Tj
T*
(- The Intent Service replies directly to utterance messages.) Tj
T*
(- Skill and intent interactions use `.forward\(\)` to retain context.) Tj
T*
(- Skills sending their own events should manually manage routing.) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/101-speech_service.md ===) Tj
T*
() Tj
T*
(# Listener Service) Tj
T*
() Tj
T*
(The listener service is responsible for handling audio input, it understands speech and convert) Tj
T*
(s it into `utterances` to) Tj
T*
(be handled by `ovos-core`) Tj
T*
() Tj
T*
(Different implementations of the listener service have been available during the years) Tj
T*
() Tj
T*
(- [mycroft-classic-listener]\(https://github.com/OpenVoiceOS/mycroft-classic-listener\) the origi) Tj
T*
(nal listener from mycroft) Tj
T*
(  mark1 extracted into a standalone component - **archived**) Tj
T*
(- [ovos-listener]\(https://github.com/OpenVoiceOS/ovos-listener\) - an updated version of the myc) Tj
T*
(roft listener with VAD) Tj
T*
(  plugins and multiple hotwords support - **deprecated** in `ovos-core` version **0.0.8**) Tj
T*
(- [ovos-dinkum-listener]\(https://github.com/OpenVoiceOS/ovos-dinkum-listener\) - a listener rewr) Tj
T*
(ite based) Tj
T*
(  on [mycroft-dinkum]\(https://github.com/MycroftAI/mycroft-dinkum\) - **NEW** in `ovos-core `ver) Tj
T*
(sion **0.0.8**) Tj
T*
() Tj
T*
(## Listener) Tj
T*
() Tj
T*
(You can modify microphone settings and enable additional features under the listener section su) Tj
T*
(ch as wake word /) Tj
T*
(utterance recording / uploading) Tj
T*
() Tj
T*
(```javascript) Tj
T*
("listener": {) Tj
T*
(  // NOTE, multiple hotwords are supported, these fields define the main wake_word,) Tj
T*
(  // this is equivalent to setting "active": true in the "hotwords" section) Tj
T*
(  "wake_word": "hey_mycroft",) Tj
T*
(  "stand_up_word": "wake_up",) Tj
T*
() Tj
T*
(  "microphone": {...},) Tj
T*
() Tj
T*
(  "VAD": {...},) Tj
T*
() Tj
T*
(  // Seconds of speech before voice command has begun) Tj
T*
(  "speech_begin": 0.1,) Tj
T*
(  // Seconds of silence before a voice command has finished) Tj
T*
(  "silence_end": 0.5,) Tj
T*
(  // Settings used by microphone to set recording timeout with and without speech detected) Tj
T*
(  "recording_timeout": 10.0,) Tj
T*
(  // Settings used by microphone to set recording timeout without speech detected.) Tj
T*
ET
endstream
endobj
19 0 obj
<< /Length 2060 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(  "recording_timeout_with_silence": 3.0,) Tj
T*
() Tj
T*
(  // Setting to remove all silence/noise from start and end of recorded speech \(only non-stream) Tj
T*
(ing\)) Tj
T*
(  "remove_silence": true) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(## Microphone) Tj
T*
() Tj
T*
(**NEW** in `ovos-core` version **0.0.8**) Tj
T*
() Tj
T*
(Microphone plugins are responsible for feeding audio to the listener, different Operating Syste) Tj
T*
(ms may require different) Tj
T*
(plugins or otherwise have performance benefits) Tj
T*
() Tj
T*
(```javascript) Tj
T*
("listener": {) Tj
T*
(  "microphone": {) Tj
T*
(    "module": "ovos-microphone-plugin-alsa") Tj
T*
(  }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
(## Hotwords) Tj
T*
() Tj
T*
(By default the listener is waiting for a hotword to do something in response) Tj
T*
() Tj
T*
(the most common usage of a hotword is as the assistant's name, instead of continuously transcri) Tj
T*
(bing audio the listener) Tj
T*
(waits for a wake word, and then listens to the user speaking) Tj
T*
() Tj
T*
(OVOS allows you to load any number of hot words in parallel and trigger different actions when ) Tj
T*
(they are detected) Tj
T*
() Tj
T*
(each hotword can do one or more of the following:) Tj
T*
() Tj
T*
(- trigger listening, also called a **wake_word**) Tj
T*
(- play a sound) Tj
T*
(- emit a bus event) Tj
T*
(- take ovos-core out of sleep mode, also called a **wakeup_word** or **standup_word**) Tj
T*
(- take ovos-core out of recording mode, also called a **stop_word**) Tj
T*
() Tj
T*
(To add a new hotword add its configuration under "hotwords" section.) Tj
T*
() Tj
T*
(By default, all hotwords are disabled unless you set `"active": true`.) Tj
T*
() Tj
T*
(Under the `"listener"` setting a main wake word and stand up word are defined, those will be au) Tj
T*
(tomatically enabled) Tj
T*
(unless you set `"active": false`.) Tj
T*
() Tj
T*
(Users are expected to **only change** `listener.wake_word` if using a single wake word, setting) Tj
T*
( `"active": true` is only) Tj
T*
ET
endstream
endobj
20 0 obj
<< /Length 2070 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(intended for **extra** hotwords) Tj
T*
() Tj
T*
(```javascript) Tj
T*
("listener": {) Tj
T*
(    // Default wake_word and stand_up_word will be automatically set to active) Tj
T*
(    // unless explicitly disabled under "hotwords" section) Tj
T*
(    "wake_word": "hey mycroft",) Tj
T*
(    "stand_up_word": "wake up") Tj
T*
(},) Tj
T*
(// Hotword configurations) Tj
T*
("hotwords": {) Tj
T*
(    "hey_mycroft": {) Tj
T*
(        "module": "ovos-ww-plugin-precise-lite",) Tj
T*
(        "model": "https://github.com/OpenVoiceOS/precise-lite-models/raw/master/wakewords/en/he) Tj
T*
(y_mycroft.tflite",) Tj
T*
(        "expected_duration": 3,) Tj
T*
(        "trigger_level": 3,) Tj
T*
(        "sensitivity": 0.5,) Tj
T*
(        "listen": true) Tj
T*
(    },) Tj
T*
(    // default wakeup word to take ovos out of SLEEPING mode,) Tj
T*
(    "wake_up": {) Tj
T*
(        "module": "ovos-ww-plugin-pocketsphinx",) Tj
T*
(        "phonemes": "W EY K . AH P",) Tj
T*
(        "threshold": 1e-20,) Tj
T*
(        "lang": "en-us",) Tj
T*
(        "wakeup": true,) Tj
T*
(        "fallback_ww": "wake_up_vosk") Tj
T*
(    }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(### Sound Classifiers) Tj
T*
() Tj
T*
(hotwords can be used as generic sound classifiers that emit bus events for other systems to det) Tj
T*
(ect) Tj
T*
() Tj
T*
(Let's consider a model trained to recognize coughing, and a companion plugin to track how often) Tj
T*
( it happens, this can be used as an indicator of disease) Tj
T*
() Tj
T*
(```javascript) Tj
T*
("hotwords": {) Tj
T*
(    "cough": {) Tj
T*
(        "module": "ovos-ww-plugin-precise",) Tj
T*
(        "version": "0.3",) Tj
T*
(        "model": "https://github.com/MycroftAI/precise-data/blob/models-dev/cough.tar.gz",) Tj
T*
(        "expected_duration": 3,) Tj
T*
(        "trigger_level": 3,) Tj
T*
(        "sensitivity": 0.5,) Tj
T*
(        "listen": false,) Tj
T*
(        "active": true,) Tj
T*
(        // on detection emit this msg_type) Tj
T*
(        "bus_event": "cough.detected") Tj
T*
(    }) Tj
T*
ET
endstream
endobj
21 0 obj
<< /Length 1895 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(### Multilingualism) Tj
T*
() Tj
T*
(In multilingual homes a wake word can be configured for each language, by giving the assistant ) Tj
T*
(a different name in each we can assign a language to be used by STT) Tj
T*
() Tj
T*
(```javascript) Tj
T*
("listener": {) Tj
T*
(    "wake_word": "hey mycroft") Tj
T*
(},) Tj
T*
("hotwords": {) Tj
T*
(  // default wake word, in global language) Tj
T*
(  "hey_mycroft": {...},   ) Tj
T*
(  // extra wake word with lang assigned) Tj
T*
(  "android": {) Tj
T*
(      "module": "...",) Tj
T*
(      "model": "...",) Tj
T*
(      // set to active as extra wake word) Tj
T*
(      "active": true,) Tj
T*
(      "listen": true,) Tj
T*
(      // assign a language) Tj
T*
(      "stt_lang": "pt-pt") Tj
T*
(  }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(### Fallback Wake Words) Tj
T*
() Tj
T*
(**NEW** in `ovos-core` version **0.0.8**) Tj
T*
() Tj
T*
(hotword definitions can also include a `"fallback_ww"`, this indicates an alternative hotword c) Tj
T*
(onfig to load in case the) Tj
T*
(original failed to load for any reason) Tj
T*
() Tj
T*
(```javascript) Tj
T*
("listener": {) Tj
T*
(    // Default wake_word and stand_up_word will be automatically set to active) Tj
T*
(    // unless explicitly disabled under "hotwords" section) Tj
T*
(    "wake_word": "hey mycroft",) Tj
T*
(    "stand_up_word": "wake up") Tj
T*
(},) Tj
T*
(// Hotword configurations) Tj
T*
("hotwords": {) Tj
T*
(    "hey_mycroft": {) Tj
T*
(        "module": "ovos-ww-plugin-precise-lite",) Tj
T*
(        "model": "https://github.com/OpenVoiceOS/precise-lite-models/raw/master/wakewords/en/he) Tj
T*
(y_mycroft.tflite",) Tj
T*
(        "expected_duration": 3,) Tj
T*
(        "trigger_level": 3,) Tj
T*
(        "sensitivity": 0.5,) Tj
T*
(        "listen": true,) Tj
T*
(        "fallback_ww": "hey_mycroft_precise") Tj
T*
ET
endstream
endobj
22 0 obj
<< /Length 2208 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(    },) Tj
T*
(    // in case precise-lite is not installed, attempt to use classic precise) Tj
T*
(    "hey_mycroft_precise": {) Tj
T*
(        "module": "ovos-ww-plugin-precise",) Tj
T*
(        "version": "0.3",) Tj
T*
(        "model": "https://github.com/MycroftAI/precise-data/raw/models-dev/hey-mycroft.tar.gz",) Tj
T*
(        "expected_duration": 3,) Tj
T*
(        "trigger_level": 3,) Tj
T*
(        "sensitivity": 0.5,) Tj
T*
(        "listen": true,) Tj
T*
(        "fallback_ww": "hey_mycroft_vosk") Tj
T*
(    },) Tj
T*
(    // in case classic precise is not installed, attempt to use vosk) Tj
T*
(    "hey_mycroft_vosk": {) Tj
T*
(        "module": "ovos-ww-plugin-vosk",) Tj
T*
(        "samples": ["hey mycroft", "hey microsoft", "hey mike roft", "hey minecraft"],) Tj
T*
(        "rule": "fuzzy",) Tj
T*
(        "listen": true,) Tj
T*
(        "fallback_ww": "hey_mycroft_pocketsphinx") Tj
T*
(    },) Tj
T*
(    // in case vosk is not installed, attempt to use pocketsphinx) Tj
T*
(    "hey_mycroft_pocketsphinx": {) Tj
T*
(        "module": "ovos-ww-plugin-pocketsphinx",) Tj
T*
(        "phonemes": "HH EY . M AY K R AO F T",) Tj
T*
(        "threshold": 1e-90,) Tj
T*
(        "lang": "en-us",) Tj
T*
(        "listen": true) Tj
T*
(    },) Tj
T*
(    // default wakeup word to take ovos out of SLEEPING mode,) Tj
T*
(    "wake_up": {) Tj
T*
(        "module": "ovos-ww-plugin-pocketsphinx",) Tj
T*
(        "phonemes": "W EY K . AH P",) Tj
T*
(        "threshold": 1e-20,) Tj
T*
(        "lang": "en-us",) Tj
T*
(        "wakeup": true,) Tj
T*
(        "fallback_ww": "wake_up_vosk") Tj
T*
(    },) Tj
T*
(    // in case pocketsphinx plugin is not installed, attempt to use vosk) Tj
T*
(    "wake_up_vosk": {) Tj
T*
(        "module": "ovos-ww-plugin-vosk",) Tj
T*
(        "rule": "fuzzy",) Tj
T*
(        "samples": ["wake up"],) Tj
T*
(        "lang": "en-us",) Tj
T*
(        // makes this a wakeup word for usage in SLEEPING mode) Tj
T*
(        "wakeup": true) Tj
T*
(    }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
(## VAD) Tj
T*
() Tj
T*
(Voice Activity Detection plugins have several functions under the listener service) Tj
T*
() Tj
T*
ET
endstream
endobj
23 0 obj
<< /Length 2111 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(- detect when user finished speaking) Tj
T*
(- remove silence before sending audio to `STT` - **NEW** in `ovos-core` version **0.0.8**) Tj
T*
(- detect when user is speaking during `continuous mode` \(read below\)) Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
(```javascript) Tj
T*
("listener": {  ) Tj
T*
(  // Setting to remove all silence/noise from start and end of recorded speech \(only non-stream) Tj
T*
(ing\)) Tj
T*
(  "remove_silence": true,) Tj
T*
() Tj
T*
(  "VAD": {) Tj
T*
(     // recommended plugin: "ovos-vad-plugin-silero") Tj
T*
(     "module": "ovos-vad-plugin-silero",) Tj
T*
(     "ovos-vad-plugin-silero": {"threshold": 0.2},) Tj
T*
(     "ovos-vad-plugin-webrtcvad": {"vad_mode": 3}) Tj
T*
(  }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(## STT) Tj
T*
() Tj
T*
(Two STT plugins may be loaded at once, if the primary plugin fails for some reason the second p) Tj
T*
(lugin will be used.) Tj
T*
() Tj
T*
(This allows you to have a lower accuracy offline model as fallback to account for internet outa) Tj
T*
(ges, this ensures your) Tj
T*
(device never becomes fully unusable) Tj
T*
() Tj
T*
(```javascript) Tj
T*
("stt": {) Tj
T*
(    "module": "ovos-stt-plugin-server",) Tj
T*
(    "fallback_module": "ovos-stt-plugin-vosk",) Tj
T*
(    "ovos-stt-plugin-server": {"url": "https://stt.openvoiceos.com/stt"}) Tj
T*
(},) Tj
T*
(```) Tj
T*
() Tj
T*
(## Audio Transformers) Tj
T*
() Tj
T*
(**NEW** in `ovos-core` version **0.0.8**, originally developed for [Neon]\(https://github.com/Ne) Tj
T*
(onGeckoCom/neon-transformers\)) Tj
T*
() Tj
T*
(Similarly to utterance transformers in `ovos-core`, the listener exposes audio and message.`con) Tj
T*
(text` to a set of plugins) Tj
T*
(that can transform it before STT stage) Tj
T*
() Tj
T*
(Audio transformer plugins can either transform the audio binary data itself \(eg, denoise\) or th) Tj
T*
(e `context` \(eg, speaker) Tj
T*
(recognition\)) Tj
T*
() Tj
T*
(The audio is sent sequentially to all transformer plugins, ordered by priority \(developer defin) Tj
T*
(ed\), until finally it is) Tj
T*
(sent to the STT stage) Tj
T*
ET
endstream
endobj
24 0 obj
<< /Length 1952 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(![imagem]\(https://github.com/OpenVoiceOS/ovos-technical-manual/assets/33701864/ae428a90-fc7e-4c) Tj
T*
(a7-81d5-fa1d9bbfb885\)) Tj
T*
() Tj
T*
() Tj
T*
(## Modes of Operation) Tj
T*
() Tj
T*
(There are 3 modes to run dinkum, wakeword, hybrid, or continuous \(VAD only\)) Tj
T*
() Tj
T*
(Additionally, there are 2 temporary modes that can be triggered via bus events / companion skil) Tj
T*
(ls) Tj
T*
() Tj
T*
(### Wake Word mode) Tj
T*
() Tj
T*
(![imagem]\(https://github.com/OpenVoiceOS/ovos-dinkum-listener/assets/33701864/c55388dc-a7fb-485) Tj
T*
(7-9c35-f4a4223c4145\)) Tj
T*
() Tj
T*
(### Sleep mode) Tj
T*
() Tj
T*
(Can be used via [Naptime skill]\(https://github.com/OpenVoiceOS/skill-ovos-naptime\)) Tj
T*
() Tj
T*
(![imagem]\(https://github.com/OpenVoiceOS/ovos-dinkum-listener/assets/33701864/24835210-2116-408) Tj
T*
(0-8c2b-fc18eecd923a\)) Tj
T*
() Tj
T*
(Be sure to enable a wakeup word to get out of sleep!) Tj
T*
() Tj
T*
(```javascript) Tj
T*
("listener": {) Tj
T*
(    "stand_up_word": "wake up") Tj
T*
(},) Tj
T*
("hotwords": {) Tj
T*
(    "wake up": {) Tj
T*
(        "module": "ovos-ww-plugin-pocketsphinx",) Tj
T*
(        "phonemes": "W EY K . AH P",) Tj
T*
(        "threshold": 1e-20,) Tj
T*
(        "lang": "en-us",) Tj
T*
(        "wakeup": true) Tj
T*
(    }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(### Continuous mode) Tj
T*
() Tj
T*
(**EXPERIMENTAL** - **NEW** in `ovos-core` version **0.0.8**) Tj
T*
() Tj
T*
(![imagem]\(https://github.com/OpenVoiceOS/ovos-dinkum-listener/assets/33701864/c8820161-9cb8-433) Tj
T*
(f-9380-6d07965c7fa5\)) Tj
T*
() Tj
T*
(```javascript) Tj
T*
("listener": {) Tj
T*
(  // continuous listen is an experimental setting, it removes the need for) Tj
T*
(  // wake words and uses VAD only, a streaming STT is strongly recommended) Tj
T*
(  // NOTE: depending on hardware this may cause mycroft to hear its own TTS responses as questi) Tj
T*
(ons) Tj
T*
ET
endstream
endobj
25 0 obj
<< /Length 2086 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(  "continuous_listen": false) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(### Hybrid mode) Tj
T*
() Tj
T*
(**EXPERIMENTAL** - **NEW** in `ovos-core` version **0.0.8**) Tj
T*
() Tj
T*
(![imagem]\(https://github.com/OpenVoiceOS/ovos-dinkum-listener/assets/33701864/b9012663-4f00-47a) Tj
T*
(9-bac4-8b08392da12c\)) Tj
T*
() Tj
T*
(```javascript) Tj
T*
("listener": {) Tj
T*
(  // hybrid listen is an experimental setting,) Tj
T*
(  // it will not require a wake word for X seconds after a user interaction) Tj
T*
(  // this means you dont need to say "hey mycroft" for follow up questions) Tj
T*
(  "hybrid_listen": false,) Tj
T*
(  // number of seconds to wait for an interaction before requiring wake word again) Tj
T*
(  "listen_timeout": 45) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(### Recording mode) Tj
T*
() Tj
T*
(**EXPERIMENTAL** - **NEW** in `ovos-core` version **0.0.8**) Tj
T*
() Tj
T*
(Can be used via [Recording skill]\(https://github.com/OpenVoiceOS/skill-ovos-audio-recording\)) Tj
T*
() Tj
T*
(![imagem]\(https://github.com/OpenVoiceOS/ovos-dinkum-listener/assets/33701864/0337b499-3175-403) Tj
T*
(1-a83f-eda352d2197f\)) Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
(=== docs/102-core.md ===) Tj
T*
() Tj
T*
(# ovos-core) Tj
T*
() Tj
T*
([OpenVoiceOS]\(https://openvoiceos.org\) is an open source platform for smart speakers and other ) Tj
T*
(voice-centric devices.) Tj
T*
() Tj
T*
(OpenVoiceOS is fully modular. Furthermore, common components have been repackaged as plugins. T) Tj
T*
(hat means it isn't just a) Tj
T*
(great assistant on its own, but also a pretty small library!) Tj
T*
() Tj
T*
(`ovos-core` contains "the brains" of OpenVoiceOS, all the NLP components and skills are managed) Tj
T*
( here) Tj
T*
() Tj
T*
(## Skills Service) Tj
T*
() Tj
T*
(The skills service is responsible for loading skills and intent parsers) Tj
T*
() Tj
T*
(All user queries are handled by the skills service, you can think of it as OVOS's brain) Tj
T*
() Tj
T*
(All Mycroft Skills should work normally with `ovos-core` until version **0.1.0**, after that mo) Tj
T*
ET
endstream
endobj
26 0 obj
<< /Length 2164 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(dernization is required!) Tj
T*
() Tj
T*
(Under OpenVoiceOS skills are regular python packages, any installed skills will be loaded autom) Tj
T*
(atically by `ovos-core`) Tj
T*
() Tj
T*
(Since `ovos-core` **0.0.8** it is also possible to launch a skill standalone via `ovos-workshop) Tj
T*
(`, this enables individual skill containers in [ovos-docker]\(https://openvoiceos.github.io/ovos) Tj
T*
(-docker\)) Tj
T*
() Tj
T*
(This can be also be helpful during skill development for quick testing before the skill is pack) Tj
T*
(aged) Tj
T*
() Tj
T*
(```bash) Tj
T*
(ovos-skill-launcher {skill_id} [path/to/my/skill_id]) Tj
T*
(```) Tj
T*
() Tj
T*
(## Configuration) Tj
T*
() Tj
T*
(```javascript) Tj
T*
("skills": {) Tj
T*
() Tj
T*
(    // blacklisted skills to not load) Tj
T*
(    // NB: This is the skill_id, usually the basename\(\) of the directory where the skill lives,) Tj
T*
( so if) Tj
T*
(     // the skill you want to blacklist is in /usr/share/mycroft/skills/mycroft-alarm.mycroftai) Tj
T*
(/) Tj
T*
(    // then you should write `["mycroft-alarm.mycroftai"]` below.) Tj
T*
(    "blacklisted_skills": [],) Tj
T*
() Tj
T*
(    // fallback skill configuration \(see below\)) Tj
T*
(    "fallbacks": {...},) Tj
T*
() Tj
T*
(    // converse stage configuration \(see below\)) Tj
T*
(    "converse": {...}) Tj
T*
() Tj
T*
(},) Tj
T*
(```) Tj
T*
() Tj
T*
(## Utterance Transformers) Tj
T*
() Tj
T*
(**NEW** in `ovos-core` version **0.0.8**, originally developed for [Neon]\(https://github.com/Ne) Tj
T*
(onGeckoCom/neon-transformers\)) Tj
T*
() Tj
T*
(when `ovos-core` receives a natural language query/ `utterance` from a user it is sent to a "pr) Tj
T*
(eprocessing stage") Tj
T*
() Tj
T*
(The `utterance` transformers framework consists of any number of plugins ordered by priority \(d) Tj
T*
(eveloper defined\), the `utterance` and) Tj
T*
(message.`context` are sent sequentially to all transformer plugins, and can be mutated by any o) Tj
T*
(f those plugins) Tj
T*
() Tj
T*
(![imagem]\(https://github.com/OpenVoiceOS/ovos-technical-manual/assets/33701864/75b67a91-dd8d-48) Tj
T*
(cd-a146-91988bbbf374\)) Tj
T*
() Tj
T*
ET
endstream
endobj
27 0 obj
<< /Length 2128 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(to enable a utterance transformer simply add it to `mycroft.conf` after installing it) Tj
T*
() Tj
T*
(```javascript) Tj
T*
(// To enable a utterance transformer plugin just add it's name with any relevant config) Tj
T*
(// these plugins can mutate the utterance between STT and the Intent stage) Tj
T*
(// they may also modify message.context with metadata) Tj
T*
(// plugins only load if they are installed and enabled in this section) Tj
T*
("utterance_transformers": {) Tj
T*
() Tj
T*
( "ovos-utterance-normalizer": {},) Tj
T*
() Tj
T*
( // cancel utterances mid command) Tj
T*
( "ovos-utterance-plugin-cancel": {},) Tj
T*
() Tj
T*
( // define utterance fixes via fuzzy match ~/.local/share/mycroft/corrections.json) Tj
T*
( // define unconditional replacements at word level ~/.local/share/mycroft/word_corrections.jso) Tj
T*
(n) Tj
T*
( "ovos-utterance-corrections-plugin": {},) Tj
T*
() Tj
T*
( // translation plugin) Tj
T*
( "ovos-utterance-translation-plugin": {) Tj
T*
(   "bidirectional": true,) Tj
T*
(   "verify_lang": false,) Tj
T*
(   "ignore_invalid": true,) Tj
T*
(   "translate_secondary_langs": false) Tj
T*
( }) Tj
T*
(},) Tj
T*
(```) Tj
T*
() Tj
T*
(## Metadata Transformers) Tj
T*
() Tj
T*
(**NEW** in `ovos-core` version **0.0.8**) Tj
T*
() Tj
T*
(Similar to utterance transformers, these plugins only transform the `message.context`) Tj
T*
() Tj
T*
(```javascript) Tj
T*
(// To enable a metadata transformer plugin just add it's name with any relevant config) Tj
T*
(// these plugins can mutate the message.context between STT and the Intent stage) Tj
T*
("metadata_transformers": {},) Tj
T*
(```) Tj
T*
() Tj
T*
(## Intent Pipelines) Tj
T*
() Tj
T*
(**NEW** in `ovos-core` version **0.0.8**) Tj
T*
() Tj
T*
(after the `utterance` has been transformed it is sent to various OVOS components by priority or) Tj
T*
(der until one can handle) Tj
T*
(the query) Tj
T*
() Tj
T*
(Pipelines include intent parsers, converse framework, common query framework and fallback skill) Tj
T*
( framework) Tj
T*
() Tj
T*
(```javascript) Tj
T*
(  // Intent Pipeline / plugins config) Tj
T*
ET
endstream
endobj
28 0 obj
<< /Length 1937 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(  "intents" : {) Tj
T*
(    // the pipeline is a ordered set of frameworks to send an utterance too) Tj
T*
(    // if one of the frameworks fails the next one is used, until an answer is found) Tj
T*
(    // NOTE: if padatious is not installed, it will be replaced with padacioso \(much slower\)) Tj
T*
(    // in the future these will become plugins, and new pipeline stages can be added by end use) Tj
T*
(rs) Tj
T*
(    "pipeline": [) Tj
T*
(        "ocp_high",) Tj
T*
(        "stop_high",) Tj
T*
(        "converse",) Tj
T*
(        "padatious_high",) Tj
T*
(        "adapt_high",) Tj
T*
(        "fallback_high",) Tj
T*
(        "stop_medium",) Tj
T*
(        "adapt_medium",) Tj
T*
(        "ovos-persona-pipeline-plugin-high",) Tj
T*
(        "adapt_low",) Tj
T*
(        "common_qa",) Tj
T*
(        "fallback_medium",) Tj
T*
(        "ovos-persona-pipeline-plugin-low",) Tj
T*
(        "fallback_low") Tj
T*
(    ]) Tj
T*
(  },) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/103-audio_service.md ===) Tj
T*
() Tj
T*
(# Audio Service) Tj
T*
() Tj
T*
(The audio service is responsible for handling TTS and simple sounds playback) Tj
T*
() Tj
T*
() Tj
T*
(## TTS) Tj
T*
() Tj
T*
(Two TTS plugins may be loaded at once, if the primary plugin fails for some reason the second p) Tj
T*
(lugin will be used.) Tj
T*
() Tj
T*
(This allows you to have a lower quality offline voice as fallback to account for internet outag) Tj
T*
(es, this ensures your) Tj
T*
(device can always give you feedback) Tj
T*
() Tj
T*
(```javascript) Tj
T*
("tts": {) Tj
T*
(    "pulse_duck": false,) Tj
T*
() Tj
T*
(    // plugins to load) Tj
T*
(    "module": "ovos-tts-plugin-server",) Tj
T*
(    "fallback_module": "ovos-tts-plugin-mimic",) Tj
T*
() Tj
T*
(    // individual plugin configs) Tj
T*
(    "ovos-tts-plugin-server": {) Tj
T*
(        "host": "https://tts.smartgic.io/piper",) Tj
T*
(        "v2": true,) Tj
T*
ET
endstream
endobj
29 0 obj
<< /Length 2260 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(        "verify_ssl": true,) Tj
T*
(        "tts_timeout": 5,) Tj
T*
(    }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
(## Skill Methods) Tj
T*
() Tj
T*
(skills can use `self.play_audio`, `self.acknowledge`, `self.speak` and `self.speak_dialog` meth) Tj
T*
(ods to interact with `ovos-audio`) Tj
T*
() Tj
T*
(```python) Tj
T*
(def play_audio\(self, filename: str, instant: bool = False\):) Tj
T*
(    """) Tj
T*
(    Queue and audio file for playback) Tj
T*
(    @param filename: File to play) Tj
T*
(    @param instant: if True audio will be played instantly ) Tj
T*
(                    instead of queued with TTS) Tj
T*
(    """) Tj
T*
(```) Tj
T*
(```python) Tj
T*
(def acknowledge\(self\):) Tj
T*
(    """) Tj
T*
(    Acknowledge a successful request.) Tj
T*
() Tj
T*
(    This method plays a sound to acknowledge a request that does not) Tj
T*
(    require a verbal response. This is intended to provide simple feedback) Tj
T*
(    to the user that their request was handled successfully.) Tj
T*
(    """) Tj
T*
(```) Tj
T*
(```python) Tj
T*
(def speak\(self, utterance: str, expect_response: bool = False, wait: Union[bool, int] = False\):) Tj
T*
(    """Speak a sentence.) Tj
T*
() Tj
T*
(    Args:) Tj
T*
(        utterance \(str\):        sentence mycroft should speak) Tj
T*
(        expect_response \(bool\): set to True if Mycroft should listen) Tj
T*
(                                for a response immediately after) Tj
T*
(                                speaking the utterance.) Tj
T*
(        wait \(Union[bool, int]\): set to True to block while the text) Tj
T*
(                                 is being spoken for 15 seconds. Alternatively, set) Tj
T*
(                                 to an integer to specify a timeout in seconds.) Tj
T*
(    """) Tj
T*
(```) Tj
T*
(```python) Tj
T*
(def speak_dialog\(self, key: str, data: Optional[dict] = None,) Tj
T*
(                 expect_response: bool = False, wait: Union[bool, int] = False\):) Tj
T*
(    """) Tj
T*
(    Speak a random sentence from a dialog file.) Tj
T*
() Tj
T*
(    Args:) Tj
T*
(        key \(str\): dialog file key \(e.g. "hello" to speak from the file) Tj
T*
(                                    "locale/en-us/hello.dialog"\)) Tj
T*
ET
endstream
endobj
30 0 obj
<< /Length 2612 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(        data \(dict\): information used to populate sentence) Tj
T*
(        expect_response \(bool\): set to True if Mycroft should listen) Tj
T*
(                                for a response immediately after) Tj
T*
(                                speaking the utterance.) Tj
T*
(        wait \(Union[bool, int]\): set to True to block while the text) Tj
T*
(                                 is being spoken for 15 seconds. Alternatively, set) Tj
T*
(                                 to an integer to specify a timeout in seconds.) Tj
T*
(    """) Tj
T*
(```) Tj
T*
(to play sounds via bus messages emit `"mycroft.audio.play_sound"` or `"mycroft.audio.queue"` wi) Tj
T*
(th data `{"uri": "path/sound.mp3"}`) Tj
T*
() Tj
T*
(## PlaybackThread) Tj
T*
() Tj
T*
(`ovos-audio` implements a queue for sounds, any OVOS component can queue a sound for playback.) Tj
T*
() Tj
T*
(Usually only TTS speech is queue for playback, but sounds effects may also be queued for richer) Tj
T*
( experiences, for example in a story telling skill) Tj
T*
() Tj
T*
(The PlaybackThread ensures sounds don't play over each other but instead sequentially, listenin) Tj
T*
(g might be triggered after TTS finishes playing if requested in the `"speak"` message) Tj
T*
() Tj
T*
(shorts sounds can be played outside the PlaybackThread, usually when instant feedback is requir) Tj
T*
(ed, such as in the listening sound or on error sounds) Tj
T*
() Tj
T*
(You can configure default sounds and the playback commands under `mycroft.conf`) Tj
T*
() Tj
T*
(```javascript) Tj
T*
(  // File locations of sounds to play for default events) Tj
T*
(  "sounds": {) Tj
T*
(    "start_listening": "snd/start_listening.wav",) Tj
T*
(    "end_listening": "snd/end_listening.wav",) Tj
T*
(    "acknowledge": "snd/acknowledge.mp3",) Tj
T*
(    "error": "snd/error.mp3") Tj
T*
(  },) Tj
T*
() Tj
T*
(  // Mechanism used to play WAV audio files) Tj
T*
(  // by default ovos-utils will try to detect best player) Tj
T*
(  "play_wav_cmdline": "paplay %1 --stream-name=mycroft-voice",) Tj
T*
() Tj
T*
(  // Mechanism used to play MP3 audio files) Tj
T*
(  // by default ovos-utils will try to detect best player) Tj
T*
(  "play_mp3_cmdline": "mpg123 %1",) Tj
T*
() Tj
T*
(  // Mechanism used to play OGG audio files) Tj
T*
(  // by default ovos-utils will try to detect best player) Tj
T*
(  "play_ogg_cmdline": "ogg123 -q %1",) Tj
T*
() Tj
T*
(```) Tj
T*
() Tj
T*
(> NOTE: by default the playback commands are not set and OVOS will try to determine the best wa) Tj
T*
(y to play a sound automatically) Tj
T*
() Tj
T*
() Tj
T*
ET
endstream
endobj
31 0 obj
<< /Length 2159 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(## Transformer Plugins) Tj
T*
() Tj
T*
(**NEW** in `ovos-core` version **0.0.8**) Tj
T*
() Tj
T*
(Similarly to audio transformers in `ovos-dinkum-listener`, the utterance and audio data generat) Tj
T*
(ed by TTS are exposed to a set) Tj
T*
(of plugins that can transform them before playback) Tj
T*
() Tj
T*
(![imagem]\(https://github.com/OpenVoiceOS/ovos-technical-manual/assets/33701864/8269074a-8632-43) Tj
T*
(b1-a2fc-89e829598669\)) Tj
T*
() Tj
T*
(### Dialog Transformers) Tj
T*
() Tj
T*
(Similarly to utterance transformers in core,  `ovos-audio` exposes `utterance` and message.`con) Tj
T*
(text` to a set) Tj
T*
(of plugins that can transform it before TTS stage) Tj
T*
() Tj
T*
(The `utterance` to be spoken is sent sequentially to all transformer plugins, ordered by priori) Tj
T*
(ty \(developer defined\),) Tj
T*
(until finally it is sent to the TTS stage) Tj
T*
() Tj
T*
(To enable a transformer add it to `mycroft.conf`) Tj
T*
() Tj
T*
(```javascript) Tj
T*
(// To enable a dialog transformer plugin just add it's name with any relevant config) Tj
T*
(// these plugins can mutate utterances before TTS) Tj
T*
("dialog_transformers": {) Tj
T*
(    "ovos-dialog-translation-plugin": {},) Tj
T*
(    "ovos-dialog-transformer-openai-plugin": {) Tj
T*
(        "rewrite_prompt": "rewrite the text as if you were explaining it to a 5 year old") Tj
T*
(    }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(### TTS Transformers) Tj
T*
() Tj
T*
(The audio to be spoken is sent sequentially to all transformer plugins, ordered by priority \(de) Tj
T*
(veloper defined\),) Tj
T*
(until finally it played back to the user) Tj
T*
() Tj
T*
(> **NOTE**: Does not work with StreamingTTS) Tj
T*
() Tj
T*
(To enable a transformer add it to `mycroft.conf`) Tj
T*
() Tj
T*
(```javascript) Tj
T*
(// To enable a tts transformer plugin just add it's name with any relevant config) Tj
T*
(// these plugins can mutate audio after TTS) Tj
T*
("tts_transformers": {) Tj
T*
(    "ovos-tts-transformer-sox-plugin": {) Tj
T*
(        "default_effects": {) Tj
T*
(            "speed": {"factor": 1.1}) Tj
T*
(        }) Tj
T*
(    }) Tj
T*
(}) Tj
T*
ET
endstream
endobj
32 0 obj
<< /Length 2316 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(```) Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
(=== docs/104-gui_service.md ===) Tj
T*
() Tj
T*
(# GUI Service) Tj
T*
() Tj
T*
(OVOS devices with displays provide skill developers the opportunity to create skills that can b) Tj
T*
(e empowered by both voice) Tj
T*
(and screen interaction.) Tj
T*
() Tj
T*
(`ovos-gui`, aka, The GUI Service, is responsible for keeping track of what should be rendered, ) Tj
T*
(but does not perform the) Tj
T*
(rendering itself) Tj
T*
() Tj
T*
(The GUI service provides a websocket for gui clients to connect to, it is responsible for imple) Tj
T*
(menting the gui protocol) Tj
T*
(under `ovos-core`.) Tj
T*
() Tj
T*
(You can find indepth documentation of [the GUI protocol]\(https://openvoiceos.github.io/ovos-tec) Tj
T*
(hnical-manual/gui_protocol\) in the dedicated GUI section of these docs) Tj
T*
() Tj
T*
() Tj
T*
(## Architecture) Tj
T*
() Tj
T*
(The GUI state is defined by `namespaces`, usually corresponding to a `skill_id`, each with any ) Tj
T*
(number) Tj
T*
(of `pages`. ) Tj
T*
() Tj
T*
(users are expected to be able to "swipe left" and "swipe right" to switch between `pages` withi) Tj
T*
(n a `namespace`) Tj
T*
() Tj
T*
(OpenVoiceOS components interact with the GUI by defining session data and active pages, gui-cli) Tj
T*
(ents may also send back `events` to indicate interactions.) Tj
T*
() Tj
T*
(![imagem]\(https://github.com/OpenVoiceOS/ovos-technical-manual/assets/33701864/69c653dc-9bad-4a) Tj
T*
(3a-bd43-efefb938f650\)) Tj
T*
() Tj
T*
(`pages` are ordered and, usually, only 1 `page` is rendered at a time. ) Tj
T*
() Tj
T*
(If the screen size allows it platform specific gui client applications are free to render all `) Tj
T*
(pages` into view.) Tj
T*
() Tj
T*
(The GUI clients may be implemented in any programming language, the default page templates prov) Tj
T*
(ided to skills via [GUIInterface]\(https://openvoiceos.github.io/ovos-technical-manual/skill_gui) Tj
T*
(\) should be implemented and provided by all alternative clients.) Tj
T*
() Tj
T*
(> **QML tip**: - set `fillWidth: true` under `Mycroft.Delegate` to have a page always using the) Tj
T*
( full screen) Tj
T*
() Tj
T*
(## Active Namespaces) Tj
T*
() Tj
T*
(In the context of a smartspeaker, when the GUI is idle a `homescreen` may be displayed, eg. an ) Tj
T*
ET
endstream
endobj
33 0 obj
<< /Length 2882 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(animated face or clock) Tj
T*
() Tj
T*
(![imagem]\(https://github.com/OpenVoiceOS/ovos-technical-manual/assets/33701864/25a2725a-271b-46) Tj
T*
(9d-822a-148b4fdfa30e\)) Tj
T*
() Tj
T*
(Whenever a `page` is displayed by a skill, `ovos-gui` tracks it and sets it's `namespace` to ac) Tj
T*
(tive, then tells the gui clients to render it.) Tj
T*
() Tj
T*
(The active `namespace` and how long a page stays up are managed by `ovos-gui`, usually via plat) Tj
T*
(form specific plugins. ) Tj
T*
() Tj
T*
(`ovos-gui` will decide when a `namespace` is no longer active, and then the next `namespace` wi) Tj
T*
(ll be rendered, ) Tj
T*
() Tj
T*
(Skills using the [GUIInterface]\(https://openvoiceos.github.io/ovos-technical-manual/skill_gui/\)) Tj
T*
( can indicate how long they want a page to remain active) Tj
T*
() Tj
T*
(Example: ) Tj
T*
() Tj
T*
(- OVOS is idle - homescreen is the active `namespace`) Tj
T*
() Tj
T*
(- you ask OVOS to play music and the music page shows up - music player page is the active `nam) Tj
T*
(espace`) Tj
T*
() Tj
T*
(- you ask OVOS a question and wolfram alpha page shows up - wolfram page is the active `namespa) Tj
T*
(ce`) Tj
T*
() Tj
T*
(- wolfram alpha times out - music player page is the active `namespace`) Tj
T*
() Tj
T*
(- music ends and page times out - homescreen is the active `namespace`) Tj
T*
() Tj
T*
(> **NOTE**: GUI does not yet support Session, in the future namespaces will be tracked per Sess) Tj
T*
(ion allowing remote clients to each have their own GUI state) Tj
T*
() Tj
T*
(## GUI Plugins) Tj
T*
() Tj
T*
(**NEW** in `ovos-core` version **0.0.8**) Tj
T*
() Tj
T*
(The active namespace is tracked by `ovos-gui` and manages) Tj
T*
(the [homescreen skill]\(https://github.com/OpenVoiceOS/skill-ovos-homescreen\), desktop implement) Tj
T*
(ations like Plasma) Tj
T*
(Bigscreen do not have a homescreen, instead they manage each skill in their own window) Tj
T*
() Tj
T*
(A single GUI plugin can be loaded in `ovos-gui` to handle bus events and provide companion pyth) Tj
T*
(on code to GUI clients,) Tj
T*
(this is usually done by your OS and specific to a use case.) Tj
T*
() Tj
T*
(| plugin                                                                                       ) Tj
T*
(     | description                                                                             ) Tj
T*
(                                                          | notes                              ) Tj
T*
(                                                                                               ) Tj
T*
(                                                                                    |) Tj
T*
(|----------------------------------------------------------------------------------------------) Tj
T*
(-----|-----------------------------------------------------------------------------------------) Tj
T*
ET
endstream
endobj
34 0 obj
<< /Length 2802 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(----------------------------------------------------------|------------------------------------) Tj
T*
(-----------------------------------------------------------------------------------------------) Tj
T*
(------------------------------------------------------------------------------------|) Tj
T*
(| [ovos-gui-plugin-shell-companion]\(https://github.com/OpenVoiceOS/ovos-gui-plugin-shell-compan) Tj
T*
(ion\) | extra functionality for ovos-shell                                                      ) Tj
T*
(                                                          | [message specs]\(https://openvoiceos) Tj
T*
(.github.io/message_spec/shell\)                                                                 ) Tj
T*
(                                                                                    |) Tj
T*
(| [ovos-gui-plugin-bigscreen]\(https://github.com/OVOSHatchery/ovos-gui-plugin-bigscreen\)       ) Tj
T*
(     | window management for [Plasma Bigscreen]\(https://invent.kde.org/plasma/plasma-bigscreen\)) Tj
T*
( [Voice Apps]\(https://plasma-bigscreen.org/docs/develop/\) | **UNMAINTED** <br> [message specs]\() Tj
T*
(https://openvoiceos.github.io/message_spec/gui_bigscreen/\) <br> backup fork in life support [ov) Tj
T*
(os-plasma-bigscreen-qt5]\(https://github.com/OVOSHatchery/ovos-plasma-bigscreen-qt5\) |) Tj
T*
(| [ovos-gui-plugin-plasmoid]\(https://github.com/OVOSHatchery/ovos-gui-plugin-plasmoid\)         ) Tj
T*
(     | [Plasma integration of different Mycroft AI services]\(https://invent.kde.org/utilities/m) Tj
T*
(ycroft-plasmoid\)                                          | **UNMAINTED** <br> never migrated t) Tj
T*
(o OVOS                                                                                         ) Tj
T*
(                                                                                    |) Tj
T*
() Tj
T*
() Tj
T*
(## Configuration) Tj
T*
() Tj
T*
(The gui service has a few sections in `mycroft.conf`) Tj
T*
() Tj
T*
(```javascript) Tj
T*
("gui": {) Tj
T*
(    "idle_display_skill": "skill-ovos-homescreen.openvoiceos",) Tj
T*
(    "extension": "generic",) Tj
T*
(    "generic": {) Tj
T*
(        "homescreen_supported": false) Tj
T*
(    }) Tj
T*
(},) Tj
T*
() Tj
T*
("gui_websocket": {) Tj
T*
(    "host": "0.0.0.0",) Tj
T*
(    "base_port": 18181,) Tj
T*
(    "route": "/gui",) Tj
T*
(    "ssl": false) Tj
T*
(},) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/110-config.md ===) Tj
T*
() Tj
T*
(## Configuration Management) Tj
T*
() Tj
T*
(### Summary) Tj
T*
(The OVOS configuration loader merges settings from multiple sources?default, system, remote, an) Tj
T*
(d user?so you can customize only what you need without touching shipped files.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(### Usage Guide) Tj
T*
() Tj
T*
ET
endstream
endobj
35 0 obj
<< /Length 1956 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(1. **Locate or create your user config**) Tj
T*
() Tj
T*
(```bash) Tj
T*
(mkdir -p ~/.config/mycroft) Tj
T*
(nano ~/.config/mycroft/mycroft.conf) Tj
T*
(```  ) Tj
T*
() Tj
T*
(Add only the keys you want to override; everything else falls back to defaults.) Tj
T*
() Tj
T*
(2. **Override via environment variables \(optional\)**) Tj
T*
() Tj
T*
(```bash) Tj
T*
(export OVOS_CONFIG_BASE_FOLDER="myfolder") Tj
T*
(export OVOS_CONFIG_FILENAME="myconfig.yaml") Tj
T*
(```  ) Tj
T*
() Tj
T*
(This changes paths such as:) Tj
T*
() Tj
T*
(- `~/.config/mycroft/mycroft.conf` ? `~/.config/myfolder/mycroft.conf`) Tj
T*
(- `~/.config/mycroft/mycroft.conf` ? `~/.config/mycroft/myconfig.yaml`) Tj
T*
() Tj
T*
(3. **Use special flags \(in system config\)**) Tj
T*
() Tj
T*
(```json) Tj
T*
({) Tj
T*
( "disable_user_config": true,) Tj
T*
( "disable_remote_config": true) Tj
T*
(}) Tj
T*
(```  ) Tj
T*
() Tj
T*
(Place these in `/etc/mycroft/mycroft.conf` \(or your default package file\) to turn off loading o) Tj
T*
(f remote or user settings.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(### Technical Explanation) Tj
T*
() Tj
T*
(**Load Order & Overrides**  ) Tj
T*
() Tj
T*
(OVOS loads **all** existing files in this sequence, with later files overriding earlier ones:) Tj
T*
() Tj
T*
(- **Default** \(`ovos-config` package\)) Tj
T*
(- **System** \(`/etc/mycroft/mycroft.conf`\)) Tj
T*
(- **Remote** \(`~/.config/<base>/web_cache.json`\)) Tj
T*
(- **User** \(`~/.config/<base>/<filename>`\)  ) Tj
T*
() Tj
T*
(> ? Keys repeated in multiple files are overridden by the last?loaded file containing them.) Tj
T*
() Tj
T*
(**File Locations & Formats**) Tj
T*
() Tj
T*
(- **Base folder**: Controlled by `OVOS_CONFIG_BASE_FOLDER` \(defaults to `mycroft`\).) Tj
T*
(- **Filename**: Controlled by `OVOS_CONFIG_FILENAME` \(defaults to `mycroft.conf`\).) Tj
T*
(- **Formats**: JSON \(`.json` or `.conf`\) or YAML \(`.yml` or `.yaml`\).) Tj
T*
() Tj
T*
ET
endstream
endobj
36 0 obj
<< /Length 1862 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(**Protected Keys**  ) Tj
T*
() Tj
T*
(Prevent certain settings from being overridden by remote or user configs.) Tj
T*
() Tj
T*
(```json) Tj
T*
({) Tj
T*
( "protected_keys": {) Tj
T*
(   "user": [) Tj
T*
(     "gui_websocket.host",) Tj
T*
(     "websocket.host") Tj
T*
(   ]) Tj
T*
( }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(> ? this example block users from exposing the messagebus accidentally) Tj
T*
() Tj
T*
(**Disabling Layers**) Tj
T*
() Tj
T*
(- **disable_user_config**: If `true`, XDG user configs are ignored.) Tj
T*
(- **disable_remote_config**: If `true`, downloaded remote configs \(`web_cache.json`\) are ignore) Tj
T*
(d.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
() Tj
T*
(### Tips & Caveats) Tj
T*
() Tj
T*
(- **Always use your user file** \(`~/.config/.../mycroft.conf`\) to override defaults?never edit ) Tj
T*
(system or package?shipped files.) Tj
T*
(- Ensure your JSON is valid; mixed file extensions may lead to load errors.) Tj
T*
(- Remember that setting `disable_user_config` or `disable_remote_config` will silently skip tho) Tj
T*
(se layers?use with caution.) Tj
T*
(- Admin PHAL is a special service that runs as root, this means it can **only access `/etc/mycr) Tj
T*
(oft/mycroft.conf`**) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(### References) Tj
T*
() Tj
T*
(- [OVOS Config Loader \(GitHub\)]\(https://github.com/OpenVoiceOS/ovos-config\)) Tj
T*
(- [XDG Base Directory Specification]\(https://specifications.freedesktop.org/basedir-spec/basedi) Tj
T*
(r-spec-latest.html\)) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/150-advanced_solvers.md ===) Tj
T*
() Tj
T*
(# Specialized Solver Plugins) Tj
T*
() Tj
T*
(Solver plugins also exist for specialized tasks, like regular question solvers these also benef) Tj
T*
(it from automatic bidirectional translation for language support) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
ET
endstream
endobj
37 0 obj
<< /Length 2284 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(## ReRankers / MultipleChoiceQuestionSolvers) Tj
T*
() Tj
T*
(A specialized kind of solver plugin that chooses the best answer out of several options) Tj
T*
() Tj
T*
(![Untitled-2025-04-15-2340\(1\)]\(https://github.com/user-attachments/assets/61c5034b-e54f-434a-8c) Tj
T*
(bf-e967154af983\)) Tj
T*
() Tj
T*
(These specialized solvers are used internally by [ovos-common-query-pipeline-plugin]\(https://gi) Tj
T*
(thub.com/OpenVoiceOS/ovos-common-query-pipeline-plugin\), some skills and even by other question) Tj
T*
( solver plugins!) Tj
T*
() Tj
T*
(Example configuration of [ovos-flashrank-reranker-plugin]\(https://github.com/TigreGotico/ovos-f) Tj
T*
(lashrank-reranker-plugin\) for usage with `ovos-common-query-pipeline-plugin`) Tj
T*
() Tj
T*
(```json) Tj
T*
("intents": {) Tj
T*
(    "common_query": {) Tj
T*
(        "min_self_confidence": 0.5,) Tj
T*
(        "min_reranker_score": 0.5,) Tj
T*
(        "reranker": "ovos-flashrank-reranker-plugin",) Tj
T*
(        "ovos-flashrank-reranker-plugin": {) Tj
T*
(          "model": "ms-marco-TinyBERT-L-2-v2") Tj
T*
(        }) Tj
T*
(    }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Evidence Solver) Tj
T*
() Tj
T*
(Evidence solvers accept not only a question but also a companion piece of text containing the a) Tj
T*
(nswer.) Tj
T*
() Tj
T*
(Some question solver plugins like `ovos-solver-wikipedia-plugin` use evidence solvers internall) Tj
T*
(y, they are often helpful to generate a question out of a search result) Tj
T*
() Tj
T*
(![Untitled-2025-04-15-2340\(9\)]\(https://github.com/user-attachments/assets/0c02a323-2098-4e4d-a5) Tj
T*
(77-0721e8326380\)) Tj
T*
() Tj
T*
(![Untitled-2025-04-15-2340\(10\)]\(https://github.com/user-attachments/assets/d789d3ce-b425-405c-8) Tj
T*
(ae1-3ff495817507\)) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Summarizer) Tj
T*
() Tj
T*
(Some question solver plugin use summarizers internally, they are often helpful to shorten long ) Tj
T*
(text from web search results) Tj
T*
() Tj
T*
(![Untitled-2025-04-15-2340\(11\)]\(https://github.com/user-attachments/assets/1ae97ca9-e33e-4448-a) Tj
T*
(bec-311f99074bbd\)) Tj
T*
() Tj
T*
(![Untitled-2025-04-15-2340\(12\)]\(https://github.com/user-attachments/assets/416e0eb9-0da9-4515-9) Tj
T*
ET
endstream
endobj
38 0 obj
<< /Length 2518 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(c69-7667fb878ba5\)) Tj
T*
() Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Collaborative Agents via MoS \(Mixture of Solvers\)) Tj
T*
() Tj
T*
(One of the most powerful features of the OVOS solver architecture is its ability to **orchestra) Tj
T*
(te multiple agents collaboratively** through specialized **Mixture of Solvers \(MoS\)** plugins.) Tj
T*
() Tj
T*
(![image]\(https://gist.github.com/user-attachments/assets/a1ef9307-0680-4fb0-9616-0ecd8332ae73\)) Tj
T*
() Tj
T*
(These [MoS solvers]\(https://github.com/TigreGotico/ovos-MoS\) implement strategies that combine ) Tj
T*
(the strengths of various LLMs, rerankers, rule-based solvers, or even remote agents \(like HiveM) Tj
T*
(ind nodes\), allowing dynamic delegation and refinement of answers.) Tj
T*
() Tj
T*
(> ? **Flexible Plugin Design**: MoS strategies are implemented as standard solver plugins. This) Tj
T*
( means they can be composed, nested, or swapped just like any other solver?allowing advanced co) Tj
T*
(llaborative behavior with minimal integration effort.) Tj
T*
() Tj
T*
(### How It Works) Tj
T*
() Tj
T*
(Instead of relying on a single model or backend, a MoS solver delegates the query to several sp) Tj
T*
(ecialized solvers \(workers\) and uses strategies like voting, reranking, or even further generat) Tj
T*
(ion to decide the best final response.) Tj
T*
() Tj
T*
(Examples include:) Tj
T*
() Tj
T*
(- **The King**: Uses a central "king" \(reranker or LLM\) to select or generate the best answer b) Tj
T*
(ased on multiple solver outputs.) Tj
T*
() Tj
T*
(![Untitled-2025-04-15-2340\(25\)]\(https://github.com/user-attachments/assets/733bb874-2ee1-4e98-a) Tj
T*
(7c3-ab084edfe4d9\)) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(- **Democracy**: Implements a voting system among reranker solvers to choose the most agreed-up) Tj
T*
(on response.) Tj
T*
() Tj
T*
(![Untitled-2025-04-15-2340\(23\)]\(https://github.com/user-attachments/assets/088939db-08df-4a03-b) Tj
T*
(194-e0e6a823ef51\)) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(- **Duopoly**: A pair of collaborating LLMs generate and discuss answers before passing them to) Tj
T*
( a final decider \("the president" solver\).) Tj
T*
() Tj
T*
(![Untitled-2025-04-15-2340\(24\)]\(https://github.com/user-attachments/assets/cf5a2d82-b768-42c4-9) Tj
T*
(d44-068d5c2d2d42\)) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(Each strategy enables different dynamics between solvers?be it a single judge, a voting panel, ) Tj
T*
(or a back-and-forth discussion between agents.) Tj
T*
ET
endstream
endobj
39 0 obj
<< /Length 2789 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
() Tj
T*
(> ? **Recursive Composition**: Any MoS strategy can recursively use another MoS as a sub-solver) Tj
T*
(, allowing for arbitrarily deep collaboration trees.) Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
(=== docs/150-personas.md ===) Tj
T*
() Tj
T*
(# AI Agents in OpenVoiceOS) Tj
T*
() Tj
T*
(OpenVoiceOS \(OVOS\) introduces a flexible and modular system for integrating AI agents into voic) Tj
T*
(e-first environments. This is made possible through a layered architecture built around **solve) Tj
T*
(rs**, **personas**, and **persona routing** components. This section explains how these parts w) Tj
T*
(ork together to enable intelligent conversations with customizable behavior.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Solver Plugins \(Low-Level AI\)) Tj
T*
() Tj
T*
(At the core of the AI agent system are [**solver plugins**]\(https://openvoiceos.github.io/ovos-) Tj
T*
(technical-manual//360-solver_plugins/\). These are simple black-box components responsible for h) Tj
T*
(andling a single task: receiving a text input \(typically a question\) and returning a text outpu) Tj
T*
(t \(typically an answer\).) Tj
T*
() Tj
T*
(![Untitled-2025-04-15-2340]\(https://github.com/user-attachments/assets/8a58417d-409e-4b87-94d0-) Tj
T*
(0f2234064981\)) Tj
T*
() Tj
T*
() Tj
T*
(### Key Features:) Tj
T*
(- **Input/Output**: Plain text in, plain text out.) Tj
T*
(- **Functionality**: Usually question-answering, though more specialized solvers exist \(e.g., s) Tj
T*
(ummarization, multiple choice\).) Tj
T*
(- **Language Adaptation**: Solvers are automatically wrapped with a translation layer if they d) Tj
T*
(on't support the user's language. For instance, the Wolfram Alpha solver is English-only but ca) Tj
T*
(n work with Portuguese through automatic bidirectional translation.) Tj
T*
(- **Fallback Behavior**: If a solver cannot produce a result \(returns `None`\), higher-level sys) Tj
T*
(tems will attempt fallback options.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Personas \(Agent Definition Layer\)) Tj
T*
() Tj
T*
(A **persona** represents a higher-level abstraction over solver plugins. It behaves like an AI ) Tj
T*
(agent with a defined personality and behavior, built by combining one or more solvers in a spec) Tj
T*
(ific order) Tj
T*
() Tj
T*
(### Key Features:) Tj
T*
(- **Composition**: Each persona consists of a name, a list of solver plugins, and optional conf) Tj
T*
(iguration for each.) Tj
T*
(- **Chained Execution**: When a user question is received, the persona tries solvers one by one) Tj
T*
(. If the first solver fails \(returns `None`\), the next one is tried until a response is generat) Tj
T*
(ed.) Tj
T*
(- **Customizable Behavior**: Different personas can emulate different personalities or knowledg) Tj
T*
ET
endstream
endobj
40 0 obj
<< /Length 2184 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(e domains by varying their solver stack.) Tj
T*
() Tj
T*
(![Untitled-2025-04-15-2340\(7\)]\(https://github.com/user-attachments/assets/453a906f-6d38-4878-ae) Tj
T*
(7b-49b24270339f\)) Tj
T*
() Tj
T*
(![Untitled-2025-04-15-2340\(8\)]\(https://github.com/user-attachments/assets/731835a3-44b1-463d-9f) Tj
T*
(c6-085ca2658abc\)) Tj
T*
() Tj
T*
() Tj
T*
(```) Tj
T*
({) Tj
T*
(  "name": "OldSchoolBot",) Tj
T*
(  "solvers": [) Tj
T*
(    "ovos-solver-wikipedia-plugin",) Tj
T*
(    "ovos-solver-ddg-plugin",) Tj
T*
(    "ovos-solver-plugin-wolfram-alpha",) Tj
T*
(    "ovos-solver-wordnet-plugin",) Tj
T*
(    "ovos-solver-rivescript-plugin",) Tj
T*
(    "ovos-solver-failure-plugin") Tj
T*
(  ],) Tj
T*
(  "ovos-solver-plugin-wolfram-alpha": {"appid": "Y7353-XXX"}) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
(> ? personas don't need to use LLMs, you don't need a beefy GPU to use ovos-persona, any solver) Tj
T*
( plugin can be used to define a persona) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Persona Pipeline \(Runtime Routing in OVOS-Core\)) Tj
T*
() Tj
T*
(Within `ovos-core`, the **[persona-pipeline]\(https://github.com/OpenVoiceOS/ovos-persona\)** plu) Tj
T*
(gin handles all runtime logic for managing user interaction with AI agents.) Tj
T*
() Tj
T*
(### Key Features:) Tj
T*
(- **Persona Registry**: Supports multiple personas, defined by the user or discovered via insta) Tj
T*
(lled plugins.) Tj
T*
(- **Session Control**: The user can say `"I want to talk with {persona_name}"` to route their d) Tj
T*
(ialog to a specific persona.) Tj
T*
(- **Session End**: The user can disable the current persona at any time to return to normal ass) Tj
T*
(istant behavior.) Tj
T*
(- **Fallback Handling**: If OpenVoiceOS can't answer, the system can ask the default persona in) Tj
T*
(stead of speaking an error.) Tj
T*
(- **Extensible**: Potential for future enhancements via messagebus to adjust system behavior ba) Tj
T*
(sed on persona \(e.g., dynamic prompt rewriting\).) Tj
T*
() Tj
T*
(in your `mycroft.conf`) Tj
T*
() Tj
T*
(```json) Tj
T*
({) Tj
T*
(  "intents": {) Tj
T*
(      "persona": {) Tj
T*
(        "handle_fallback":  true,) Tj
T*
ET
endstream
endobj
41 0 obj
<< /Length 1943 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(        "default_persona": "Remote Llama") Tj
T*
(      },) Tj
T*
(      "pipeline": [) Tj
T*
(          "stop_high",) Tj
T*
(          "converse",) Tj
T*
(          "ocp_high",) Tj
T*
(          "padatious_high",) Tj
T*
(          "adapt_high",) Tj
T*
(          "ovos-persona-pipeline-plugin-high",) Tj
T*
(          "ocp_medium",) Tj
T*
(          "...",) Tj
T*
(          "fallback_medium",) Tj
T*
(          "ovos-persona-pipeline-plugin-low",) Tj
T*
(          "fallback_low") Tj
T*
(    ]) Tj
T*
(  }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## OVOS as a Solver Plugin) Tj
T*
() Tj
T*
(An advanced trick: **`ovos-core` itself can act as a solver plugin**. This allows you to expose) Tj
T*
( OVOS itself as an agent to other applications in localhost) Tj
T*
() Tj
T*
(![Untitled-2025-04-15-2340\(3\)]\(https://github.com/user-attachments/assets/8022ff8a-5847-4bd7-93) Tj
T*
(eb-316830ae7849\)) Tj
T*
() Tj
T*
() Tj
T*
(- ? Good for chaining OVOS instances in docker.) Tj
T*
(- ? Use skills in a collaborative AI / MoS \(mixture-of-solvers\) setup.) Tj
T*
(- ? `ovos-bus-solver-plugin` makes **no sense inside a local persona** \(infinite loop!\), but is) Tj
T*
( **great for standalone usage**.) Tj
T*
(- ? Expose OVOS behind HTTP api via `ovos-persona-server` without exposing the messagebus direc) Tj
T*
(tly ) Tj
T*
() Tj
T*
(```json) Tj
T*
({) Tj
T*
(  "name": "Open Voice OS",) Tj
T*
(  "solvers": [) Tj
T*
(    "ovos-solver-bus-plugin",) Tj
T*
(    "ovos-solver-failure-plugin") Tj
T*
(  ],) Tj
T*
(  "ovos-solver-bus-plugin": {) Tj
T*
(    "autoconnect": true,) Tj
T*
(    "host": "127.0.0.1",) Tj
T*
(    "port": 8181) Tj
T*
(  }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(> ? if you are looking to access OVOS remotely or expose it as a service see [hivemind agents d) Tj
T*
(ocumentation]\(https://openvoiceos.github.io/ovos-technical-manual/152-hivemind-agents/\) for a m) Tj
T*
ET
endstream
endobj
42 0 obj
<< /Length 2665 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(ore secure alternative) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Summary Table) Tj
T*
() Tj
T*
(| Component            | Role                                                         |) Tj
T*
(|----------------------|--------------------------------------------------------------|) Tj
T*
(| **Solver Plugin**    | Stateless text-to-text inference \(e.g., Q&A, summarization\). |) Tj
T*
(| **Persona**          | Named agent composed of ordered solver plugins.              |) Tj
T*
(| **Persona Server**   | Expose personas to other Ollama/OpenAI compatible projects.  |) Tj
T*
(| **Persona Pipeline** | Handles persona activation and routing inside OVOS core.     |) Tj
T*
() Tj
T*
() Tj
T*
(By decoupling solvers, personas, and persona management, OVOS allows for powerful, customizable) Tj
T*
( AI experiences, adaptable to both voice and text interactions across platforms.) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/151-llm-transformers.md ===) Tj
T*
() Tj
T*
(# Generative AI Transformer Plugins) Tj
T*
() Tj
T*
(**Transformer plugins** operate independently of personas and provide fine-grained control over) Tj
T*
( OVOS?s internal processing pipeline. They are not part of the persona framework but can synerg) Tj
T*
(ize with it.) Tj
T*
() Tj
T*
(### Key Details:) Tj
T*
(- **Scope**: Transformers apply within the OVOS core pipeline?not inside personas \(though solve) Tj
T*
(r plugins can use them internally if desired\).) Tj
T*
(- **Independence**: Transformers and personas are separate systems. However, future enhancement) Tj
T*
(s may allow dynamic interaction between the two \(e.g., a persona adjusting transformer settings) Tj
T*
(\).) Tj
T*
() Tj
T*
(### Key Integration Points:) Tj
T*
(- **[Utterance Transformers]\(https://openvoiceos.github.io/ovos-technical-manual//102-core/#utt) Tj
T*
(erance-transformers\)**: Operate between **STT \(Speech-to-Text\)** and **NLP \(Natural Language Pr) Tj
T*
(ocessing\)**.) Tj
T*
(- **[Dialog Transformers]\(https://openvoiceos.github.io/ovos-technical-manual//103-audio_servic) Tj
T*
(e/#dialog-transformers\)**: Operate between **NLP** and **TTS \(Text-to-Speech\)**.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Examples of Transformer Plugins Using AI Agents) Tj
T*
() Tj
T*
() Tj
T*
(#### ? OVOS Transcription Validator) Tj
T*
() Tj
T*
(This plugin validates the output of STT engines using a language model to filter out incorrect ) Tj
T*
(or incoherent transcriptions *before* they are passed to NLP.) Tj
T*
() Tj
T*
(**How It Works:**) Tj
T*
() Tj
T*
(1. Receives an STT transcript and its language code.) Tj
T*
(2. Sends both to an LLM prompt \(local or via Ollama\).) Tj
T*
ET
endstream
endobj
43 0 obj
<< /Length 2021 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(3. Gets a `True` or `False` response based on utterance validity.) Tj
T*
() Tj
T*
(**Configuration Snippet \(mycroft.conf\):**) Tj
T*
(```json) Tj
T*
("utterance_transformers": {) Tj
T*
(  "ovos-transcription-validator-plugin": {) Tj
T*
(    "model": "gemma3:1b",) Tj
T*
(    "ollama_url": "http://192.168.1.200:11434",) Tj
T*
(    "prompt_template": "/path/to/template.txt",) Tj
T*
(    "error_sound": true,) Tj
T*
(    "mode": "reprompt") Tj
T*
(  }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(**Use Case**: Prevent skills from being triggered by invalid STT output like `"Potato stop gree) Tj
T*
(n light now yes."`) Tj
T*
() Tj
T*
(---) Tj
T*
(#### ?? Dialog Transformer) Tj
T*
() Tj
T*
() Tj
T*
(This plugin rewrites assistant responses based on a persona-style prompt, enabling tone or comp) Tj
T*
(lexity adjustments.) Tj
T*
() Tj
T*
(**Example Prompt Use Cases:**) Tj
T*
() Tj
T*
(- `"Rewrite the text as if you were explaining it to a 5-year-old"`) Tj
T*
(- `"Explain it like you're teaching a child"`) Tj
T*
(- `"Make it sound like an angry old man"`) Tj
T*
(- `"Add more 'dude'ness to it"`) Tj
T*
() Tj
T*
(**Configuration Snippet \(mycroft.conf\):**) Tj
T*
(```json) Tj
T*
("dialog_transformers": {) Tj
T*
(  "ovos-dialog-transformer-openai-plugin": {) Tj
T*
(    "rewrite_prompt": "rewrite the text as if you were explaining it to a 5-year-old") Tj
T*
(  }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(This plugin often leverages LLMs through solver plugins but operates *after* the main dialog lo) Tj
T*
(gic, adjusting the final output.) Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
(=== docs/152-hivemind-agents.md ===) Tj
T*
() Tj
T*
(# Remote Agents with OpenVoiceOS) Tj
T*
() Tj
T*
(While OpenVoiceOS is designed primarily for **local-first usage**, more advanced deployments?li) Tj
T*
(ke hosting agents in the cloud, connecting multiple voice satellites, or enabling multi-user ac) Tj
T*
(cess through a web frontend?are made possible via the **HiveMind** companion project.) Tj
T*
() Tj
T*
ET
endstream
endobj
44 0 obj
<< /Length 2488 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(---) Tj
T*
() Tj
T*
(## HiveMind Server) Tj
T*
() Tj
T*
(**HiveMind** is a distributed voice assistant framework that allows you to expose **AI Agents**) Tj
T*
( \(either full ovos-core installs or just individual personas\) over a secure protocol.) Tj
T*
() Tj
T*
(> ? Unlike the lightweight `persona-server`, HiveMind is designed for trusted, networked setups) Tj
T*
(.) Tj
T*
() Tj
T*
(**Key Features**:) Tj
T*
() Tj
T*
(- **Secure Access**: Communicates over the **HiveMind protocol**, which supports authentication) Tj
T*
(, encryption and granular permissions ? safe for exposing OVOS to remote clients or satellites.) Tj
T*
(- **Agent Plugins**: Agent plugins integrate the **HiveMind protocol** with various frameworks,) Tj
T*
( including OpenVoiceOS. Keep your existing infrastructure even when you totally replaces the br) Tj
T*
(ains!) Tj
T*
(- **Multi-User Ready**: Great for use in **cloud hosting**, **web portals**, or **enterprise en) Tj
T*
(vironments** where access control is critical.) Tj
T*
(- **Composable**: Let **local personas delegate** questions to a smarter **remote OVOS instance) Tj
T*
(**.) Tj
T*
() Tj
T*
(![]\(img/satellites.png\)) Tj
T*
() Tj
T*
(**Typical Use-cases**:) Tj
T*
() Tj
T*
(- ? Running OpenVoiceOS on a powerful server or in the cloud.) Tj
T*
(- ?? Connecting lightweight devices \(satellites\).) Tj
T*
(- ? Remote access to OpenVoiceOS.) Tj
T*
(- ????? Serving multiple users or applications concurrently.) Tj
T*
() Tj
T*
(Check out the [HiveMind documentation]\(https://jarbashivemind.github.io/HiveMind-community-docs) Tj
T*
(/\) for more info) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## HiveMind Personas) Tj
T*
() Tj
T*
(The `hivemind-persona-agent-plugin` project allows you to **expose a single persona**?not the f) Tj
T*
(ull OVOS stack?through hivemind) Tj
T*
() Tj
T*
(This enables you to deploy AI agents for external use without needing a full OVOS assistant.) Tj
T*
() Tj
T*
(![Untitled-2025-04-15-2340\(15\)]\(https://github.com/user-attachments/assets/f71d24c2-8a12-472b-9) Tj
T*
(a44-3034fe6595e3\)) Tj
T*
() Tj
T*
() Tj
T*
(### Why Use It?) Tj
T*
(- Minimal attack surface \(persona only, no full assistant features\).) Tj
T*
(- Can be queried remotely using the HiveMind protocol.) Tj
T*
() Tj
T*
(> ? This is **not** the same as `persona-server`. `hivemind-persona-agent-plugin` uses a **secu) Tj
T*
(re protocol** \(HiveMind\), while `ovos-persona-server` uses insecure HTTP.) Tj
T*
() Tj
T*
ET
endstream
endobj
45 0 obj
<< /Length 1854 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(### Server Configuration) Tj
T*
() Tj
T*
(in your hivemind config file `~/.config/hivemind-core/server.json`) Tj
T*
() Tj
T*
(```json) Tj
T*
({) Tj
T*
(  "agent_protocol": {) Tj
T*
(    "module": "hivemind-persona-agent-plugin",) Tj
T*
(    "hivemind-persona-agent-plugin": {) Tj
T*
(      "persona": {) Tj
T*
(      "name": "Llama",) Tj
T*
(      "solvers": [) Tj
T*
(        "ovos-solver-openai-plugin") Tj
T*
(      ],) Tj
T*
(      "ovos-solver-openai-plugin": {) Tj
T*
(        "api_url": "https://llama.smartgic.io/v1",) Tj
T*
(        "key": "sk-xxxx",) Tj
T*
(        "persona": "helpful, creative, clever, and very friendly.") Tj
T*
(      }) Tj
T*
(    }) Tj
T*
(    }) Tj
T*
(  }) Tj
T*
(}) Tj
T*
(```) Tj
T*
(---) Tj
T*
() Tj
T*
(## HiveMind as a Solver Plugin) Tj
T*
() Tj
T*
(Want your local assistant to ask a remote one when it's stuck? You can!) Tj
T*
() Tj
T*
(The hivemind-bus-client can function as a solver plugin, allowing you to:) Tj
T*
() Tj
T*
(- ? Delegate processing to a more powerful/secure server for specific tasks.) Tj
T*
(- ? Handle outages: Handle intermitent local agent failures from other solver plugins in your p) Tj
T*
(ersona definition) Tj
T*
(- ? Use remote hivemind agents in a collaborative AI / MoS \(mixture-of-solvers\) setup.) Tj
T*
() Tj
T*
(![Untitled-2025-04-15-2340\(14\)]\(https://github.com/user-attachments/assets/3222e4f3-ba75-4e95-9) Tj
T*
(775-7a39c8e06381\)) Tj
T*
() Tj
T*
(> ? *?When in doubt, ask a smarter OVOS.?*) Tj
T*
() Tj
T*
() Tj
T*
(For usage with persona, use `"ovos-solver-hivemind-plugin"` for the solver id) Tj
T*
() Tj
T*
(```json) Tj
T*
({) Tj
T*
(  "name": "HiveMind Agent",) Tj
T*
(  "solvers": [) Tj
T*
(    "ovos-solver-hivemind-plugin") Tj
T*
(  ],) Tj
T*
(  "ovos-solver-hivemind-plugin": {"autoconnect": true}) Tj
T*
(}) Tj
T*
(```) Tj
T*
ET
endstream
endobj
46 0 obj
<< /Length 2936 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(You can also use it in your own python projects) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_hivemind_solver import HiveMindSolver) Tj
T*
() Tj
T*
(bot = HiveMindSolver\(\)) Tj
T*
(bot.connect\(\)  # connection info from identity file) Tj
T*
(print\(bot.spoken_answer\("what is the speed of light?"\)\)) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Chaining Components for Flexible Deployments) Tj
T*
() Tj
T*
(HiveMind and persona-server can be combined to bridge secure and insecure environments, dependi) Tj
T*
(ng on your needs:) Tj
T*
() Tj
T*
(- expose existing OpenAI/Ollama servers to hivemind satellites **securely**) Tj
T*
(    - connect hivemind satellites directly to existing LLM apps \(eg. ollama\)) Tj
T*
(- expose a remote `hivemind-core` to local **insecure** ollama/openai endpoints) Tj
T*
(    - eg. to integrate hivemind into HomeAssistant) Tj
T*
(-  expose a localhost `ovos-core`/`persona.json` to local **insecure** ollama/openai endpoints) Tj
T*
(    - half-way compromise, does not expose the full messagebus and does not require hivemind) Tj
T*
(    - easier to setup and configure) Tj
T*
() Tj
T*
() Tj
T*
(| Use Case                          | Tool                   | Secure? | API Type              ) Tj
T*
(| Notes                                                | ) Tj
T*
(|----------------------------------|------------------------|---------|------------------------) Tj
T*
(|------------------------------------------------------|) Tj
T*
(| Local interface + Persona | `ovos-persona-server` + `persona.json`    | ?      | OpenAI-compa) Tj
T*
(tible      | Great for quick setups, not public exposure`,HTTP, no auth |) Tj
T*
(| Local interface + OpenVoiceOS | `ovos-persona-server` + `ovos-solver-bus-plugin`      | ?    ) Tj
T*
(  | OpenAI-compatible    | OpenVoiceOS bus must be exposed to `ovos-persona-server`,HTTP, no au) Tj
T*
(th |) Tj
T*
(| Local interface + HiveMind Agent | `ovos-persona-server` + `ovos-solver-hivemind-plugin`     ) Tj
T*
( | ?      | OpenAI-compatible      | Same as above, but for any remote hivemind agent,HTTP, no ) Tj
T*
(auth |) Tj
T*
(| Secure remote OpenVoiceOS agent  | `hivemind-core` + `hivemind-ovos-agent-plugin` + `ovos-cor) Tj
T*
(e`    | ?      | HiveMind protocol      | Auth, encryption, granular permissions, HTTP or Webso) Tj
T*
(ckets                   |) Tj
T*
(| Secure remote Persona agent      | `hivemind-core` + `hivemind-persona-agent-plugin` + `perso) Tj
T*
(na.json`    | ?      | HiveMind protocol      | Auth, encryption, granular permissions, HTTP or) Tj
T*
( Websockets                       |) Tj
T*
() Tj
T*
() Tj
T*
(The first 3 examples allow us to integrate our Agents with HomeAssistant via the Ollama Integra) Tj
T*
(tion) Tj
T*
() Tj
T*
(The last 2 examples allow us to integrate with HiveMind ecosystem and all the existing satellit) Tj
T*
(e implementations) Tj
T*
() Tj
T*
ET
endstream
endobj
47 0 obj
<< /Length 2231 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(---) Tj
T*
() Tj
T*
(## ?? Related \(Insecure\) Alternatives) Tj
T*
() Tj
T*
(While useful for experimentation, some other persona access methods are **not secure** for remo) Tj
T*
(te use:) Tj
T*
() Tj
T*
(? `ovos-persona-server`:) Tj
T*
() Tj
T*
(- ? Compatible with **OpenAI/Ollama APIs**.) Tj
T*
(- ? **HTTP only**, not encrypted or authenticated.) Tj
T*
(- ? Useful to expose personas to **HomeAssistant**, **OpenWebUI**, and similar local network to) Tj
T*
(ols.) Tj
T*
() Tj
T*
(? HomeAssistant + `ovos-persona-server`:) Tj
T*
() Tj
T*
(- ?? Can route HomeAssistant **wyoming satellites** to an OVOS persona.) Tj
T*
(- ? Uses **Wyoming protocol**, which lacks hivemind's security features.) Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
(=== docs/153-persona_pipeline.md ===) Tj
T*
() Tj
T*
(# Persona Pipeline) Tj
T*
() Tj
T*
(The **`ovos-persona-pipeline-plugin`** provides a dynamic way to integrate persona-based conver) Tj
T*
(sational behavior into the OVOS pipeline system. It allows you to route user utterances to AI p) Tj
T*
(ersonas instead of skill matchers, depending on context and configuration.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Overview) Tj
T*
() Tj
T*
(The `persona-pipeline` is a plugin for the OVOS pipeline architecture. It dynamically delegates) Tj
T*
( user utterances to a configured **Persona**, which attempts to resolve the intent using a sequ) Tj
T*
(ence of **Solver Plugins** \(e.g., LLMs, search tools, knowledge bases\).) Tj
T*
() Tj
T*
(You can configure it to:) Tj
T*
() Tj
T*
(- ? Intercept all utterances and give full control to the persona.) Tj
T*
(- ? Fall back to the persona only if skills don't match.) Tj
T*
(- ?? Operate based on confidence tiers \(high/medium/low\).) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Plugin Structure) Tj
T*
() Tj
T*
(The plugin is composed of two components:) Tj
T*
() Tj
T*
(| Plugin Name                            | Usage                            |) Tj
T*
(|----------------------------------------|----------------------------------|) Tj
T*
(| `ovos-persona-pipeline-plugin-high`    | For active persona interactions  |) Tj
T*
(| `ovos-persona-pipeline-plugin-low`     | Fallback persona handling        |) Tj
T*
() Tj
T*
ET
endstream
endobj
48 0 obj
<< /Length 1759 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(You must **insert these plugin IDs** in your `mycroft.conf` under the `intents.pipeline` key to) Tj
T*
( activate persona handling at the appropriate tier.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Configuration) Tj
T*
() Tj
T*
(```json) Tj
T*
({) Tj
T*
(  "intents": {) Tj
T*
(    "persona": {) Tj
T*
(      "handle_fallback": true,) Tj
T*
(      "default_persona": "Remote Llama",) Tj
T*
(      "short-term-memory": true) Tj
T*
(    },) Tj
T*
(    "pipeline": [) Tj
T*
(      // Depending on strategy, insert plugin here) Tj
T*
(    ]) Tj
T*
(  }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(### `persona` section options:) Tj
T*
() Tj
T*
(| Key                  | Description                                                           ) Tj
T*
(      |) Tj
T*
(|----------------------|-----------------------------------------------------------------------) Tj
T*
(------|) Tj
T*
(| `handle_fallback`    | Enables fallback routing when no persona is active                    ) Tj
T*
(      |) Tj
T*
(| `default_persona`    | Sets a persona to use by default \(e.g., after boot or reset\)          ) Tj
T*
(      |) Tj
T*
(| `short-term-memory`  | Maintains conversation state within a session \(boolean\)               ) Tj
T*
(      |) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Pipeline Strategies) Tj
T*
() Tj
T*
(### 1. **Full Control \(Persona-First\)**) Tj
T*
() Tj
T*
(In this mode, **personas override** all skills. The persona handles every utterance unless expl) Tj
T*
(icitly deactivated.) Tj
T*
() Tj
T*
(```jsonc) Tj
T*
("pipeline": [) Tj
T*
(  "ovos-persona-pipeline-plugin-high",) Tj
T*
(  "stop_high",) Tj
T*
(  "converse",) Tj
T*
(  "padatious_high",) Tj
T*
(  "adapt_high",) Tj
T*
(  ...) Tj
T*
(]) Tj
T*
(```) Tj
T*
ET
endstream
endobj
49 0 obj
<< /Length 1751 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(- ? Best for immersive chatbot experiences) Tj
T*
(- ?? Skills like music, alarms, and weather will not trigger unless persona is disabled) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(### 2. **Hybrid Mode \(Skills First\)**) Tj
T*
() Tj
T*
(Only unmatched or low-confidence utterances are routed to the persona.) Tj
T*
() Tj
T*
(```jsonc) Tj
T*
("pipeline": [) Tj
T*
(  "stop_high",) Tj
T*
(  "converse",) Tj
T*
(  "padatious_high",) Tj
T*
(  "adapt_high",) Tj
T*
(  "ovos-persona-pipeline-plugin-high",) Tj
T*
(  "fallback_medium",) Tj
T*
(  ...) Tj
T*
(]) Tj
T*
(```) Tj
T*
() Tj
T*
(- ? Preserves traditional voice assistant behavior) Tj
T*
(- ? Persona fills in where skills fall short) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(### 3. **Fallback Mode Only**) Tj
T*
() Tj
T*
(Even when no persona is active, this mode allows the pipeline to fall back to a **default perso) Tj
T*
(na** for unmatched utterances.) Tj
T*
() Tj
T*
(```jsonc) Tj
T*
("pipeline": [) Tj
T*
(  ...) Tj
T*
(  "fallback_medium",) Tj
T*
(  "ovos-persona-pipeline-plugin-low",) Tj
T*
(  "fallback_low") Tj
T*
(]) Tj
T*
(```) Tj
T*
() Tj
T*
(- ? Replaces `skill-ovos-fallback-chatgpt`) Tj
T*
(- ? Fallbacks to a default persona response for a consistent assistant feel) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Persona Resolution Flow) Tj
T*
() Tj
T*
(1. **Utterance Received**) Tj
T*
(2. Pipeline matchers are checked in order.) Tj
T*
(3. If `persona-pipeline` is reached:) Tj
T*
(    - If a persona is **active**, send utterance to that persona.) Tj
T*
(    - If no persona is active and `handle_fallback` is enabled, use the **default_persona**.) Tj
T*
(4. The persona delegates to its configured **solvers** until one returns a response.) Tj
T*
ET
endstream
endobj
50 0 obj
<< /Length 1654 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(5. The pipeline returns the matched response back to the user.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Persona Configuration) Tj
T*
() Tj
T*
(Personas are defined in:) Tj
T*
() Tj
T*
(```) Tj
T*
(~/.config/ovos_persona/*.json) Tj
T*
(```) Tj
T*
() Tj
T*
(### Example:) Tj
T*
() Tj
T*
(```json) Tj
T*
({) Tj
T*
(  "name": "Remote Llama",) Tj
T*
(  "solvers": [) Tj
T*
(    "ovos-solver-openai-plugin",) Tj
T*
(    "ovos-solver-failure-plugin") Tj
T*
(  ],) Tj
T*
(  "ovos-solver-openai-plugin": {) Tj
T*
(    "api_url": "https://llama.smartgic.io/v1",) Tj
T*
(    "key": "sk-xxx",) Tj
T*
(    "persona": "friendly and concise assistant") Tj
T*
(  }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(Each persona defines a `solvers` list.) Tj
T*
() Tj
T*
(- Solvers are attempted **in order**.) Tj
T*
(- The first solver to return a valid result ends the search.) Tj
T*
(- Include a `"ovos-solver-failure-plugin"` as a final fallback for graceful error handling.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Persona Intents) Tj
T*
() Tj
T*
(`"ovos-persona-pipeline-plugin-high"` supports a set of core voice intents to manage persona in) Tj
T*
(teractions seamlessly. ) Tj
T*
() Tj
T*
(These intents provide **out-of-the-box functionality** for controlling the Persona Service, ens) Tj
T*
(uring smooth integration with the conversational pipeline and enhancing user experience.) Tj
T*
() Tj
T*
(### **List Personas**) Tj
T*
() Tj
T*
(**Example Utterances**:) Tj
T*
() Tj
T*
(- "What personas are available?") Tj
T*
(- "Can you list the personas?") Tj
T*
(- "What personas can I use?") Tj
T*
() Tj
T*
(### **Check Active Persona**) Tj
T*
ET
endstream
endobj
51 0 obj
<< /Length 1550 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(**Example Utterances**:) Tj
T*
() Tj
T*
(- "Who am I talking to right now?") Tj
T*
(- "Is there an active persona?") Tj
T*
(- "Which persona is in use?") Tj
T*
() Tj
T*
(### **Activate a Persona**) Tj
T*
() Tj
T*
(**Example Utterances**:) Tj
T*
() Tj
T*
(- "Connect me to {persona}") Tj
T*
(- "Enable {persona}") Tj
T*
(- "Awaken the {persona} assistant") Tj
T*
(- "Start a conversation with {persona}") Tj
T*
(- "Let me chat with {persona}") Tj
T*
() Tj
T*
() Tj
T*
(### **Single-Shot Persona Questions**) Tj
T*
() Tj
T*
(Enables users to query a persona directly without entering an interactive session.) Tj
T*
() Tj
T*
(**Example Utterances**:) Tj
T*
() Tj
T*
(- "Ask {persona} what they think about {utterance}") Tj
T*
(- "What does {persona} say about {utterance}?") Tj
T*
(- "Query {persona} for insights on {utterance}") Tj
T*
(- "Ask {persona} for their perspective on {utterance}") Tj
T*
() Tj
T*
() Tj
T*
(### **Stop Conversation**) Tj
T*
() Tj
T*
(**Example Utterances**:) Tj
T*
() Tj
T*
(- "Stop the interaction") Tj
T*
(- "Terminate persona") Tj
T*
(- "Deactivate the chatbot") Tj
T*
(- "Go dormant") Tj
T*
(- "Enough talking") Tj
T*
(- "Shut up") Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
(=== docs/199-WIP_ovos_media.md ===) Tj
T*
() Tj
T*
(# ovos-media  ) Tj
T*
() Tj
T*
() Tj
T*
(> **EXPERIMENTAL** - **NEW** `ovos-core` version **0.0.8**) Tj
T*
() Tj
T*
(ovos-media is a work in progress, it does not yet ship with OVOS by default, but it can be manu) Tj
T*
(ally enabled) Tj
T*
ET
endstream
endobj
52 0 obj
<< /Length 1896 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(In order to use ovos-media you need to enable the OCP pipeline in ovos-core and to disable the ) Tj
T*
(old audio service ) Tj
T*
() Tj
T*
(disabling old audio service) Tj
T*
(```json) Tj
T*
({) Tj
T*
(  "enable_old_audioservice": false) Tj
T*
(}) Tj
T*
(```) Tj
T*
(Enabling OCP pipeline) Tj
T*
() Tj
T*
(```javascript) Tj
T*
({) Tj
T*
(  // Intent Pipeline / plugins config) Tj
T*
(  "intents" : {) Tj
T*
(    // the pipeline is a ordered set of frameworks to send an utterance too) Tj
T*
(    // if one of the frameworks fails the next one is used, until an answer is found) Tj
T*
(    "pipeline": [) Tj
T*
(        "converse",) Tj
T*
(        "ocp_high",) Tj
T*
(        "...",) Tj
T*
(        "common_qa",) Tj
T*
(        "ocp_medium",) Tj
T*
(        "...",) Tj
T*
(        "ocp_fallback",) Tj
T*
(        "fallback_low") Tj
T*
(    ]) Tj
T*
(  }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
(## OCP) Tj
T*
() Tj
T*
(![]\(https://github.com/OpenVoiceOS/ovos_assets/blob/master/Logo/ocp.png?raw=true\)) Tj
T*
() Tj
T*
([OCP]\(https://github.com/OpenVoiceOS/ovos-ocp-audio-plugin\) stands for OpenVoiceOS Common Play,) Tj
T*
( it is a full-fledged) Tj
T*
(media player service that can handle audio and video) Tj
T*
() Tj
T*
(> **DEPRECATION WARNING** OCP is in the process of migrating from a audio plugin to ovos-media ) Tj
T*
(service, ) Tj
T*
(this documentation is not valid for `ovos-core` version **0.0.7**) Tj
T*
() Tj
T*
(OCP provides a pipeline component specialized in matching media queries.) Tj
T*
() Tj
T*
(The pipeline classifies the media type \(movie, music, podcast...\) and queries OCP skills for re) Tj
T*
(sults, you can read more about the [OCP Pipeline docs]\(\)) Tj
T*
() Tj
T*
() Tj
T*
(## Architecture) Tj
T*
() Tj
T*
(![imagem]\(https://github.com/NeonJarbas/ovos-media/assets/59943014/7dc1d635-4340-43db-a38d-294c) Tj
T*
ET
endstream
endobj
53 0 obj
<< /Length 2046 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(fedab70f\)) Tj
T*
() Tj
T*
() Tj
T*
(## Media Intents) Tj
T*
() Tj
T*
(Before regular intent stage, taking into account current OCP state  \(media ready to play / play) Tj
T*
(ing\)) Tj
T*
() Tj
T*
(- `"play {query}"`) Tj
T*
(- `"previous"`  \(media needs to be loaded\)) Tj
T*
(- `"next"`  \(media needs to be loaded\)) Tj
T*
(- `"pause"`  \(media needs to be loaded\)) Tj
T*
(- `"play"` / `"resume"` \(media needs to be loaded\)) Tj
T*
(- `"stop"` \(media needs to be loaded\)) Tj
T*
(- `"I like that song"`  \(music needs to be playing\)) Tj
T*
() Tj
T*
(## MPRIS integration) Tj
T*
() Tj
T*
(OCP Integrates with MPRIS allows OCP to control external players) Tj
T*
() Tj
T*
(![imagem]\(https://github.com/NeonJarbas/ovos-media/assets/33701864/856c0228-8fc5-4ee6-a19d-4290) Tj
T*
(f2e07258\)) Tj
T*
() Tj
T*
(### Sync with external players) Tj
T*
() Tj
T*
(Via MPRIS OCP can control and display data from external players, ) Tj
T*
(if using KDEConnect this includes playback in connected devices) Tj
T*
() Tj
T*
(See a demo here) Tj
T*
() Tj
T*
([![demo video]\(https://img.youtube.com/vi/1KMFV0UVYEM/default.jpg\)]\(https://www.youtube.com/wat) Tj
T*
(ch?v=1KMFV0UVYEM\)) Tj
T*
() Tj
T*
(This also includes voice intents, allowing you for example to voice control spotify) Tj
T*
() Tj
T*
(### Manage multiple players) Tj
T*
() Tj
T*
(If OCP is set to manage external players it will ensure only one of them is playing media at on) Tj
T*
(ce, ) Tj
T*
(if using KDEConnect this includes playback in connected devices) Tj
T*
() Tj
T*
(See a demo here \(**warning**: contains black metal\)) Tj
T*
() Tj
T*
([![demo video]\(https://img.youtube.com/vi/YzC7oFYCcRE/default.jpg\)]\(https://www.youtube.com/wat) Tj
T*
(ch?v=YzC7oFYCcRE\)) Tj
T*
() Tj
T*
() Tj
T*
(## Skills Menu) Tj
T*
() Tj
T*
(Some skills provide featured_media, you can access these from the OCP menu) Tj
T*
() Tj
T*
(![]\(https://github.com/OpenVoiceOS/ovos_assets/raw/master/Images/ocp/ocp_skills.gif\)) Tj
T*
() Tj
T*
(## Homescreen widget) Tj
T*
ET
endstream
endobj
54 0 obj
<< /Length 2132 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(The homescreen skill that comes pre-installed with OpenVoiceOS also comes with a widget for the) Tj
T*
( OCP framework.) Tj
T*
() Tj
T*
(![]\(https://raw.githubusercontent.com/OpenVoiceOS/ovos_assets/master/Images/homescreen-mediawid) Tj
T*
(get.gif\)) Tj
T*
() Tj
T*
(## File Browser integration) Tj
T*
() Tj
T*
(selected files will be played in OCP) Tj
T*
() Tj
T*
(![]\(https://github.com/OpenVoiceOS/ovos_assets/raw/master/Images/ocp/ocp_file_browser.gif\)) Tj
T*
() Tj
T*
(folders are considered playlists) Tj
T*
() Tj
T*
(![]\(https://github.com/OpenVoiceOS/ovos_assets/raw/master/Images/ocp/folder_playlist.gif\)) Tj
T*
() Tj
T*
() Tj
T*
(## Favorite Songs) Tj
T*
() Tj
T*
(You can like a song that is currently playing via GUI and intent "I like that song") Tj
T*
() Tj
T*
(![like]\(https://github.com/OpenVoiceOS/ovos-media/assets/33701864/27aee29a-ca3b-4c73-992e-9fd5e) Tj
T*
(f513f4d\)) Tj
T*
() Tj
T*
(Liked songs can be played via intent "play my favorite songs" or GUI) Tj
T*
() Tj
T*
(![favs]\(https://github.com/OpenVoiceOS/ovos-media/assets/33701864/cdf7a682-c417-43f7-a4ae-589b0) Tj
T*
(7de55cf\)) Tj
T*
() Tj
T*
() Tj
T*
(## Configuration) Tj
T*
() Tj
T*
(under mycroft.conf) Tj
T*
() Tj
T*
(```javascript) Tj
T*
({) Tj
T*
(  // Configure ovos-media service) Tj
T*
(  // similarly to wakewords, configure any number of playback handlers) Tj
T*
(  // playback handlers might be local applications or even remote devices) Tj
T*
(  "media": {) Tj
T*
() Tj
T*
(    // order of preference to try playback handlers) Tj
T*
(    // if unavailable or unable to handle a uri, the next in list is used) Tj
T*
(    // NB: users may request specific handlers in the utterance) Tj
T*
() Tj
T*
(    // keys are the strings defined in "audio_players") Tj
T*
(    "preferred_audio_services": ["gui", "vlc", "mplayer", "cli"],) Tj
T*
() Tj
T*
(    // keys are the strings defined in "web_players") Tj
T*
(    "preferred_web_services": ["gui", "browser"],) Tj
T*
() Tj
T*
(    // keys are the strings defined in "video_players") Tj
T*
(    "preferred_video_services": ["gui", "vlc"],) Tj
T*
ET
endstream
endobj
55 0 obj
<< /Length 2486 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(    // PlaybackType.AUDIO handlers) Tj
T*
(    "audio_players": {) Tj
T*
(        // vlc player uses a headless vlc instance to handle uris) Tj
T*
(        "vlc": {) Tj
T*
(            // the plugin name) Tj
T*
(            "module": "ovos-media-audio-plugin-vlc",) Tj
T*
() Tj
T*
(            // friendly names a user may use to refer to this playback handler) Tj
T*
(            // those will be parsed by OCP and used to initiate) Tj
T*
(            // playback in the request playback handler) Tj
T*
(            "aliases": ["VLC"],) Tj
T*
() Tj
T*
(            // deactivate a plugin by setting to false) Tj
T*
(            "active": true) Tj
T*
(        },) Tj
T*
(        // command line player uses configurable shell commands with file uris as arguments) Tj
T*
(        "cli": {) Tj
T*
(            // the plugin name) Tj
T*
(            "module": "ovos-media-audio-plugin-cli",) Tj
T*
() Tj
T*
(            // friendly names a user may use to refer to this playback handler) Tj
T*
(            // those will be parsed by OCP and used to initiate) Tj
T*
(            // playback in the request playback handler) Tj
T*
(            "aliases": ["Command Line"],) Tj
T*
() Tj
T*
(            // deactivate a plugin by setting to false) Tj
T*
(            "active": true) Tj
T*
(        },) Tj
T*
(        // gui uses mycroft-gui natively to handle uris) Tj
T*
(        "gui": {) Tj
T*
(            // the plugin name) Tj
T*
(            "module": "ovos-media-audio-plugin-gui",) Tj
T*
() Tj
T*
(            // friendly names a user may use to refer to this playback handler) Tj
T*
(            // those will be parsed by OCP and used to initiate) Tj
T*
(            // playback in the request playback handler) Tj
T*
(            "aliases": ["GUI", "Graphical User Interface"],) Tj
T*
() Tj
T*
(            // deactivate a plugin by setting to false) Tj
T*
(            "active": true) Tj
T*
(        }) Tj
T*
(    },) Tj
T*
() Tj
T*
(    // PlaybackType.VIDEO handlers) Tj
T*
(    "video_players": {) Tj
T*
(        // vlc player uses a headless vlc instance to handle uris) Tj
T*
(        "vlc": {) Tj
T*
(            // the plugin name) Tj
T*
(            "module": "ovos-media-video-plugin-vlc",) Tj
T*
() Tj
T*
(            // friendly names a user may use to refer to this playback handler) Tj
T*
(            // those will be parsed by OCP and used to initiate) Tj
T*
(            // playback in the request playback handler) Tj
T*
ET
endstream
endobj
56 0 obj
<< /Length 2224 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(            "aliases": ["VLC"],) Tj
T*
() Tj
T*
(            // deactivate a plugin by setting to false) Tj
T*
(            "active": true) Tj
T*
(        },) Tj
T*
(        // gui uses mycroft-gui natively to handle uris) Tj
T*
(        "gui": {) Tj
T*
(            // the plugin name) Tj
T*
(            "module": "ovos-media-video-plugin-gui",) Tj
T*
() Tj
T*
(            // friendly names a user may use to refer to this playback handler) Tj
T*
(            // those will be parsed by OCP and used to initiate) Tj
T*
(            // playback in the request playback handler) Tj
T*
(            "aliases": ["GUI", "Graphical User Interface"],) Tj
T*
() Tj
T*
(            // deactivate a plugin by setting to false) Tj
T*
(            "active": true) Tj
T*
(        }) Tj
T*
(    },) Tj
T*
() Tj
T*
(    // PlaybackType.WEBVIEW handlers) Tj
T*
(    "web_players": {) Tj
T*
(        // open url in the native browser) Tj
T*
(        "browser": {) Tj
T*
(            // the plugin name) Tj
T*
(            "module": "ovos-media-web-plugin-browser",) Tj
T*
() Tj
T*
(            // friendly names a user may use to refer to this playback handler) Tj
T*
(            // those will be parsed by OCP and used to initiate) Tj
T*
(            // playback in the request playback handler) Tj
T*
(            "aliases": ["Browser", "Local Browser", "Default Browser"],) Tj
T*
() Tj
T*
(            // deactivate a plugin by setting to false) Tj
T*
(            "active": true) Tj
T*
(        },) Tj
T*
(        // gui uses mycroft-gui natively to handle uris) Tj
T*
(        "gui": {) Tj
T*
(            // the plugin name) Tj
T*
(            "module": "ovos-media-web-plugin-gui",) Tj
T*
() Tj
T*
(            // friendly names a user may use to refer to this playback handler) Tj
T*
(            // those will be parsed by OCP and used to initiate) Tj
T*
(            // playback in the request playback handler) Tj
T*
(            "aliases": ["GUI", "Graphical User Interface"],) Tj
T*
() Tj
T*
(            // deactivate a plugin by setting to false) Tj
T*
(            "active": true) Tj
T*
(        }) Tj
T*
(    }) Tj
T*
(  }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(## Troubleshooting) Tj
T*
ET
endstream
endobj
57 0 obj
<< /Length 2688 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(Having trouble getting OCP to run properly and be exposed as an MPRIS media player? Check the f) Tj
T*
(ollowing:) Tj
T*
() Tj
T*
(- The `DBUS_SESSION_BUS_ADDRESS` environment variable is what OCP uses to try to connect to [`d) Tj
T*
(bus`]\(https://www.freedesktop.org/wiki/Software/dbus/\). On an OVOS system it will look somethin) Tj
T*
(g like `unix:path=/run/user/1000/bus`. To get the right user ID, run `id -u`.) Tj
T*
(  - If `DBUS_SESSION_BUS_ADDRESS` is not set, the next place OCP checks is the `DISPLAY` enviro) Tj
T*
(nment variable. If this is set and looks similar to the value above, then you can probably excl) Tj
T*
(ude `DBUS_SESSION_BUS_ADDRESS`, but if neither are set then use `DBUS_SESSION_BUS_ADDRESS`.) Tj
T*
(- Make sure your OCP settings in your config file like something like the following, taking not) Tj
T*
(e of the `dbus_type` value:) Tj
T*
(```json) Tj
T*
("media": {) Tj
T*
(  "dbus_type": "session") Tj
T*
(}) Tj
T*
(```) Tj
T*
(  - If your `dbus_type` is set to `system` then OCP will still work, but since it requires root) Tj
T*
( privileges to read from the system dbus, external systems or programs without root privileges ) Tj
T*
(cannot read the MPRIS data there.) Tj
T*
() Tj
T*
(You can confirm if the OCP player is registered with dbus using the following command: `dbus-se) Tj
T*
(nd --session --dest=org.freedesktop.DBus --type=method_call --print-reply /org/freedesktop/DBus) Tj
T*
( org.freedesktop.DBus.ListNames`) Tj
T*
() Tj
T*
(The output should look something like the following, if it is working:) Tj
T*
() Tj
T*
(```bash) Tj
T*
(method return time=1691467760.293397 sender=org.freedesktop.DBus -> destination=:1.10 serial=3 ) Tj
T*
(reply_serial=2) Tj
T*
(   array [) Tj
T*
(      string "org.freedesktop.DBus") Tj
T*
(      string "org.freedesktop.systemd1") Tj
T*
(      string ":1.10") Tj
T*
(      string "org.mpris.MediaPlayer2.OCP") Tj
T*
(      string ":1.9") Tj
T*
(      string ":1.1") Tj
T*
(   ]) Tj
T*
(```) Tj
T*
() Tj
T*
(The important part is the `org.mpris.MediaPlayer2.OCP` value.) Tj
T*
() Tj
T*
(If the above steps do not work, please reach out to the OVOS team on Matrix for assistance.) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/200-stt_server.md ===) Tj
T*
() Tj
T*
(# OpenVoiceOS STT HTTP Server) Tj
T*
() Tj
T*
(**Lightweight HTTP microservice for any OVOS speech?to?text plugin, with optional Gradio UI.**) Tj
T*
() Tj
T*
(The OpenVoiceOS STT HTTP Server wraps your chosen OVOS STT plugin inside a FastAPI service \(com) Tj
T*
(plete with automatic language detection\), making it easy to deploy on your local machine, in Do) Tj
T*
(cker, or behind a load balancer.) Tj
T*
ET
endstream
endobj
58 0 obj
<< /Length 1440 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Usage Guide) Tj
T*
() Tj
T*
(**Install the server** ) Tj
T*
() Tj
T*
(```bash) Tj
T*
(pip install ovos-stt-http-server) Tj
T*
(```) Tj
T*
() Tj
T*
(**Configure your STT plugin**  ) Tj
T*
() Tj
T*
(In your `mycroft.conf` \(or equivalent\) under the `stt` section:  ) Tj
T*
(```json) Tj
T*
({) Tj
T*
( "stt": {) Tj
T*
(   "module": "ovos-stt-plugin-xxx",) Tj
T*
(   "ovos-stt-plugin-xxx": {) Tj
T*
(     "model": "xxx") Tj
T*
(   }) Tj
T*
( }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(**Launch the server**  ) Tj
T*
() Tj
T*
(```bash) Tj
T*
(ovos-stt-server \\) Tj
T*
( --engine ovos-stt-plugin-xxx \\) Tj
T*
( --host 0.0.0.0 \\) Tj
T*
( --port 9666) Tj
T*
(```) Tj
T*
() Tj
T*
(**Verify it?s running**  ) Tj
T*
() Tj
T*
(Visit [http://localhost:9666/status]\(http://localhost:9666/status\) in your browser or run:  ) Tj
T*
() Tj
T*
(```bash) Tj
T*
(curl http://localhost:9666/status) Tj
T*
(```) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Command?Line Options) Tj
T*
() Tj
T*
(```bash) Tj
T*
($ ovos-stt-server --help) Tj
T*
(usage: ovos-stt-server [-h] --engine ENGINE [--lang-engine LANG_ENGINE] [--port PORT] [--host H) Tj
T*
(OST] [--lang LANG] [--multi] [--gradio] [--cache] [--title TITLE]) Tj
T*
(                       [--description DESCRIPTION] [--info INFO] [--badge BADGE]) Tj
T*
() Tj
T*
(options:) Tj
T*
(  -h, --help            show this help message and exit) Tj
T*
ET
endstream
endobj
59 0 obj
<< /Length 2481 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(  --engine ENGINE       stt plugin to be used) Tj
T*
(  --lang-engine LANG_ENGINE) Tj
T*
(                        audio language detection plugin to be used) Tj
T*
(  --port PORT           port number) Tj
T*
(  --host HOST           host) Tj
T*
(  --lang LANG           default language supported by plugin) Tj
T*
(  --multi               Load a plugin instance per language \(force lang support\)) Tj
T*
(  --gradio              Enable Gradio Web UI) Tj
T*
(  --cache               Cache models for Gradio demo) Tj
T*
(  --title TITLE         Title for webUI) Tj
T*
(  --description DESCRIPTION) Tj
T*
(                        Text description to print in UI) Tj
T*
(  --info INFO           Text to display at end of UI) Tj
T*
(  --badge BADGE         URL of visitor badge) Tj
T*
() Tj
T*
(```) Tj
T*
(---) Tj
T*
() Tj
T*
(## Technical Explanation) Tj
T*
() Tj
T*
(- **FastAPI core**  ) Tj
T*
(  The server spins up a FastAPI app exposing REST endpoints.) Tj
T*
(- **Plugin wrapping**  ) Tj
T*
(  Any OVOS STT plugin \(Deepgram, Whisper, etc.\) is loaded dynamically via entry points.) Tj
T*
(- **Language detection**  ) Tj
T*
(  If you enable `--lang-engine`, incoming audio is passed through the detector, falling back to) Tj
T*
( `--lang` or plugin defaults.) Tj
T*
(- **Scalability**  ) Tj
T*
(  Stateless design lets you run multiple instances behind a load balancer or in Kubernetes.) Tj
T*
(- **Optional Gradio UI**  ) Tj
T*
(  Launches a simple web demo for testing without writing any front?end code.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## HTTP API Endpoints) Tj
T*
() Tj
T*
(| Endpoint       | Method | Description                                                |) Tj
T*
(| -------------- | ------ | ---------------------------------------------------------- |) Tj
T*
(| `/status`      | GET    | Returns plugin names, versions, and Gradio status.        |) Tj
T*
(| `/stt`         | POST   | Transcribe audio ? plain?text transcript.                 |) Tj
T*
(| `/lang_detect` | POST   | Detect language ? JSON `{ "lang": "en", "conf": 0.83 }`.  |) Tj
T*
(| `/docs`        | GET    | Interactive FastAPI OpenAPI docs.                         |) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Companion Plugin) Tj
T*
() Tj
T*
(To point a OpenVoiceOS \(or compatible project\) to a STT server you can use the companion plugin) Tj
T*
() Tj
T*
(**Install**  ) Tj
T*
(```bash) Tj
T*
(pip install ovos-stt-plugin-server) Tj
T*
(```) Tj
T*
() Tj
T*
ET
endstream
endobj
60 0 obj
<< /Length 1691 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(**Configure**  ) Tj
T*
(```json) Tj
T*
(  "stt": {) Tj
T*
(    "module": "ovos-stt-plugin-server",) Tj
T*
(    "ovos-stt-plugin-server": {) Tj
T*
(      "urls": ["https://0.0.0.0:8080/stt"],) Tj
T*
(      "verify_ssl": true) Tj
T*
(    },) Tj
T*
( }) Tj
T*
(```) Tj
T*
() Tj
T*
(for audio language detection) Tj
T*
() Tj
T*
(```json) Tj
T*
(  "listener": {) Tj
T*
(    "audio_transformers": {) Tj
T*
(        "ovos-audio-lang-server-plugin": {) Tj
T*
(          "urls": ["https://0.0.0.0:8080/lang_detect"],) Tj
T*
(          "verify_ssl": true) Tj
T*
(        }) Tj
T*
(    }) Tj
T*
(  }) Tj
T*
(```) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Docker Deployment) Tj
T*
() Tj
T*
(**Create a Dockerfile**) Tj
T*
(```dockerfile) Tj
T*
(FROM python:3.7-slim) Tj
T*
(RUN pip install ovos-stt-http-server==0.0.1) Tj
T*
(RUN pip install {YOUR_STT_PLUGIN}) Tj
T*
(ENTRYPOINT ["ovos-stt-http-server", "--engine", "{YOUR_STT_PLUGIN}"]) Tj
T*
(```) Tj
T*
() Tj
T*
(**Build & Run**) Tj
T*
(```bash) Tj
T*
(docker build -t my-ovos-stt .) Tj
T*
(docker run -p 8080:9666 my-ovos-stt) Tj
T*
(```) Tj
T*
() Tj
T*
(Pre-built containers are also available via the [ovos-docker-stt]\(https://github.com/OpenVoiceO) Tj
T*
(S/ovos-docker-stt\) repository.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Tips & Caveats) Tj
T*
() Tj
T*
(- **Audio Formats**: Ensure client sends PCM?compatible formats \(`.wav`, `.mp3` recommended\).) Tj
T*
(- **Securing Endpoints**: Consider putting a reverse proxy \(NGINX, Traefik\) in front for SSL or) Tj
T*
( API keys.) Tj
T*
(- **Plugin Dependencies**: Some STT engines require heavy native libraries?bake them into your ) Tj
T*
(Docker image.) Tj
T*
ET
endstream
endobj
61 0 obj
<< /Length 1620 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Links & References) Tj
T*
() Tj
T*
(- OVOS STT HTTP Server GitHub: https://github.com/OpenVoiceOS/ovos-stt-http-server) Tj
T*
(- Companion Plugin: https://github.com/OpenVoiceOS/ovos-stt-server-plugin) Tj
T*
(- Docker Images: https://github.com/OpenVoiceOS/ovos-docker-stt) Tj
T*
(- OVOS Plugin Manager: https://github.com/OpenVoiceOS/ovos-plugin-manager) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/201-tts_server.md ===) Tj
T*
() Tj
T*
(# OpenVoiceOS TTS Server) Tj
T*
() Tj
T*
(**Lightweight HTTP microservice for any OVOS text?to?speech plugin, with optional caching.**) Tj
T*
() Tj
T*
(Wrap your favorite OVOS TTS engine in a FastAPI service?ready to deploy locally, in Docker, or ) Tj
T*
(behind a load balancer.) Tj
T*
() Tj
T*
(The OpenVoiceOS TTS HTTP Server exposes any OVOS TTS plugin over a simple HTTP API. Send text, ) Tj
T*
(receive audio?no extra) Tj
T*
(glue code required.) Tj
T*
() Tj
T*
(---) Tj
T*
(## Usage Guide) Tj
T*
() Tj
T*
(**Install the server**) Tj
T*
() Tj
T*
(```bash) Tj
T*
(pip install ovos-tts-server) Tj
T*
(```) Tj
T*
() Tj
T*
(**Configure your TTS plugin**) Tj
T*
() Tj
T*
(In your `mycroft.conf` \(or equivalent\) under the `tts` section:) Tj
T*
(```json) Tj
T*
({) Tj
T*
( "tts": {) Tj
T*
(   "module": "ovos-tts-plugin-xxx",) Tj
T*
(   "ovos-tts-plugin-xxx": {) Tj
T*
(     "voice": "xxx") Tj
T*
(   }) Tj
T*
( }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(**Launch the server**  ) Tj
T*
() Tj
T*
(```bash) Tj
T*
(ovos-stt-server \\) Tj
T*
( --engine ovos-tts-plugin-xxx \\) Tj
T*
( --host 0.0.0.0 \\) Tj
T*
( --port 9666) Tj
T*
ET
endstream
endobj
62 0 obj
<< /Length 1980 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(```) Tj
T*
() Tj
T*
(**Verify it?s running**  ) Tj
T*
() Tj
T*
(Visit http://localhost:9666/status in your browser or run:) Tj
T*
() Tj
T*
(```bash) Tj
T*
(curl http://localhost:9666/status) Tj
T*
(```) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Command?Line Options) Tj
T*
() Tj
T*
(```bash) Tj
T*
($ ovos-tts-server --help) Tj
T*
(usage: ovos-tts-server [-h] [--engine ENGINE] [--port PORT] [--host HOST] [--cache] [--lang LAN) Tj
T*
(G] [--gradio] [--title TITLE] [--description DESCRIPTION]) Tj
T*
(                       [--info INFO] [--badge BADGE]) Tj
T*
() Tj
T*
(options:) Tj
T*
(  -h, --help            show this help message and exit) Tj
T*
(  --engine ENGINE       tts plugin to be used) Tj
T*
(  --port PORT           port number) Tj
T*
(  --host HOST           host) Tj
T*
(  --cache               save every synth to disk) Tj
T*
(  --lang LANG           default language supported by plugin) Tj
T*
(  --gradio              Enable Gradio Web UI) Tj
T*
(  --title TITLE         Title for webUI) Tj
T*
(  --description DESCRIPTION) Tj
T*
(                        Text description to print in UI) Tj
T*
(  --info INFO           Text to display at end of UI) Tj
T*
(  --badge BADGE         URL of visitor badge) Tj
T*
() Tj
T*
(```) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Technical Explanation) Tj
T*
() Tj
T*
(- **FastAPI Core**  ) Tj
T*
(  Spins up a FastAPI application exposing RESTful endpoints for synthesis and status checks.) Tj
T*
(- **Plugin Loading**  ) Tj
T*
(  Dynamically loads any OVOS TTS plugin via Python entry points?no code changes needed when add) Tj
T*
(ing new voices.) Tj
T*
(- **Caching**  ) Tj
T*
(  When `--cache` is enabled, every synthesis request is stored as a WAV file for debugging or r) Tj
T*
(euse.) Tj
T*
(- **Scalability**  ) Tj
T*
(  Stateless by design?run multiple instances behind NGINX, Traefik, or Kubernetes with round?ro) Tj
T*
(bin or load?based) Tj
T*
(  routing.) Tj
T*
() Tj
T*
(---) Tj
T*
ET
endstream
endobj
63 0 obj
<< /Length 1944 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(## HTTP API Endpoints) Tj
T*
() Tj
T*
(| Endpoint                  | Method | Description                                       |) Tj
T*
(|---------------------------|--------|---------------------------------------------------|) Tj
T*
(| `/status`                 | GET    | Returns loaded plugin names and versions.         |) Tj
T*
(| `/synthesize/{utterance}` | GET    | URL?encoded text ? WAV audio bytes.               |) Tj
T*
(| `/v2/synthesize`          | GET    | JSON `{utterance: string, voice?: string}` ? WAV. |) Tj
T*
(| `/docs`                   | GET    | Interactive OpenAPI \(Swagger\) docs.               |) Tj
T*
() Tj
T*
(> any query parameters passed to `/v2/synthesize` will be forwarded to the individual plugins `) Tj
T*
(get_tts` method if they are defined as kwargs there. ) Tj
T*
(> ? This allows `"voice"` and `"lang"` to be defined at runtime and not by plugin config at loa) Tj
T*
(d time \(for plugins that support it\)) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Companion Plugin) Tj
T*
() Tj
T*
(Point your OVOS instance at this TTS server:) Tj
T*
() Tj
T*
(```bash) Tj
T*
(pip install ovos-tts-server-plugin) Tj
T*
(```) Tj
T*
() Tj
T*
(**Configuration** `mycroft.conf`:) Tj
T*
() Tj
T*
(```json) Tj
T*
({) Tj
T*
(  "tts": {) Tj
T*
(    "module": "ovos-tts-plugin-server",) Tj
T*
(    "ovos-tts-plugin-server": {) Tj
T*
(        "host": "http://localhost:9667",) Tj
T*
(        "voice": "xxx",) Tj
T*
(        "verify_ssl": false,) Tj
T*
(        "tts_timeout": 5) Tj
T*
(     }) Tj
T*
( } ) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Docker Deployment) Tj
T*
() Tj
T*
(**Create a Dockerfile**) Tj
T*
(```dockerfile) Tj
T*
(FROM python:3.7-slim) Tj
T*
(RUN pip install ovos-tts-server) Tj
T*
(RUN pip install {YOUR_TTS_PLUGIN}) Tj
T*
(ENTRYPOINT ["ovos-tts-server", "--engine", "{YOUR_TTS_PLUGIN}"]) Tj
T*
(```) Tj
T*
() Tj
T*
(**Build & Run**) Tj
T*
ET
endstream
endobj
64 0 obj
<< /Length 2001 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(```bash) Tj
T*
(docker build -t my-ovos-tts .) Tj
T*
(docker run -p 8080:9666 my-ovos-tts) Tj
T*
(```) Tj
T*
() Tj
T*
(Pre-built containers are also available via the [ovos-docker-tts]\(https://github.com/OpenVoiceO) Tj
T*
(S/ovos-docker-tts\)) Tj
T*
(repository.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Tips & Caveats) Tj
T*
() Tj
T*
(- **Audio Formats**: By default, outputs WAV \(PCM\). If you need MP3 or OGG, wrap with an extern) Tj
T*
(al converter or check) Tj
T*
(  plugin support.) Tj
T*
(- **Disk Usage**: Caching every file can grow large; monitor `./cache/` or disable with `--no-c) Tj
T*
(ache`.) Tj
T*
(- **Security**: Consider adding API keys or putting a reverse proxy \(NGINX, Traefik\) in front f) Tj
T*
(or SSL termination and) Tj
T*
(  rate limiting.) Tj
T*
(- **Plugin Dependencies**: Some voices require native libraries \(e.g., TensorFlow\). Bake them i) Tj
T*
(nto your Docker image to) Tj
T*
(  avoid runtime surprises.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Links & References) Tj
T*
() Tj
T*
(- **TTS Server GitHub**: https://github.com/OpenVoiceOS/ovos-tts-server) Tj
T*
(- **Companion Plugin**: https://github.com/OpenVoiceOS/ovos-tts-server-plugin) Tj
T*
(- **Docker Images**: https://github.com/OpenVoiceOS/ovos-docker-tts) Tj
T*
(- **OVOS Plugin Manager**: https://github.com/OpenVoiceOS/ovos-plugin-manager) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/202-persona_server.md ===) Tj
T*
() Tj
T*
(# OVOS Persona Server) Tj
T*
() Tj
T*
() Tj
T*
(The OVOS Persona Server makes any defined persona available through an API compatible with Open) Tj
T*
(AI and Ollama, allowing you to use OVOS personas as drop-in replacements for traditional large ) Tj
T*
(language models \(LLMs\) in other tools and platforms.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Usage Guide) Tj
T*
() Tj
T*
(To start the Persona Server with a specific persona file:) Tj
T*
() Tj
T*
(```bash) Tj
T*
($ ovos-persona-server --persona my_persona.json) Tj
T*
(```) Tj
T*
() Tj
T*
ET
endstream
endobj
65 0 obj
<< /Length 2204 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(This will launch a local server \(default: `http://localhost:8337`\) that exposes the persona via) Tj
T*
( OpenAI and Ollama-compatible endpoints.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Technical Explanation) Tj
T*
() Tj
T*
(A **persona** in OVOS is a predefined character or assistant configuration that can respond to ) Tj
T*
(user inputs, leveraging OVOS?s conversational tools. The **Persona Server** acts as a gateway t) Tj
T*
(hat translates external API requests \(like those from OpenAI or Ollama clients\) into interactio) Tj
T*
(ns with this persona.) Tj
T*
() Tj
T*
(This enables seamless integration with a variety of existing tools that expect LLM-like behavio) Tj
T*
(r, including frameworks, bots, or smart home assistants.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## OpenAI-Compatible API Example) Tj
T*
() Tj
T*
(You can use the `openai` Python SDK to interact with the Persona Server:) Tj
T*
() Tj
T*
(```python) Tj
T*
(import openai) Tj
T*
() Tj
T*
(openai.api_key = ""  # No API key required for local use) Tj
T*
(openai.api_base = "http://localhost:8337") Tj
T*
() Tj
T*
(response = openai.ChatCompletion.create\() Tj
T*
(    model="",  # Optional: some personas may define specific models) Tj
T*
(    messages=[{"role": "user", "content": "tell me a joke"}],) Tj
T*
(    stream=False,) Tj
T*
(\)) Tj
T*
() Tj
T*
(if isinstance\(response, dict\):) Tj
T*
(    # Non-streaming response) Tj
T*
(    print\(response.choices[0].message.content\)) Tj
T*
(else:) Tj
T*
(    # Streaming response) Tj
T*
(    for token in response:) Tj
T*
(        content = token["choices"][0]["delta"].get\("content"\)) Tj
T*
(        if content:) Tj
T*
(            print\(content, end="", flush=True\)) Tj
T*
(```) Tj
T*
() Tj
T*
(? **Note:** Some persona solvers are **not LLMs** and do **not** maintain chat history. Only th) Tj
T*
(e last message in the `messages` list is processed in some cases.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Ollama-Compatible API) Tj
T*
() Tj
T*
(The server is also fully compatible with tools expecting an Ollama API.) Tj
T*
() Tj
T*
(For example, the [Home Assistant Ollama integration]\(https://www.home-assistant.io/integrations) Tj
T*
ET
endstream
endobj
66 0 obj
<< /Length 2071 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(/ollama/\) can connect directly to an OVOS Persona Server, treating it as a local LLM backend.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Tips) Tj
T*
() Tj
T*
(- Make sure your persona file \(`.json`\) includes all the configuration details required by the ) Tj
T*
(solver or conversational backend.) Tj
T*
(- If using in a production setting, consider securing your endpoint and defining rate limits.) Tj
T*
(- Since personas can be highly customized, capabilities may vary depending on the persona used.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Related Links) Tj
T*
() Tj
T*
(- [OVOS Personas]\(https://openvoiceos.github.io/ovos-technical-manual/150-personas/\)) Tj
T*
(- [OpenAI Python SDK]\(https://github.com/openai/openai-python\)) Tj
T*
(- [Home Assistant Ollama Integration]\(https://www.home-assistant.io/integrations/ollama/\)) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/203-translate_server.md ===) Tj
T*
() Tj
T*
(# OpenVoiceOS Translate Server) Tj
T*
() Tj
T*
(**Expose OVOS language detection and translation plugins over HTTP.**) Tj
T*
() Tj
T*
(The OVOS Translate Server allows any OpenVoiceOS-compatible translation or language detection p) Tj
T*
(lugin to run as a lightweight web service. This makes it easy to integrate translation features) Tj
T*
( into any application or device using simple HTTP requests.) Tj
T*
() Tj
T*
(Great for local or cloud deployments, and ideal for use with the OVOS companion plugin to provi) Tj
T*
(de translation capabilities to your voice assistant.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Usage Guide) Tj
T*
() Tj
T*
(### Install the Server) Tj
T*
() Tj
T*
(```bash) Tj
T*
(pip install ovos-translate-server) Tj
T*
(```) Tj
T*
() Tj
T*
(### Run the Server) Tj
T*
() Tj
T*
(```bash) Tj
T*
(ovos-translate-server \\) Tj
T*
(  --tx-engine ovos-translate-plugin-nllb \\) Tj
T*
(  --detect-engine ovos-lang-detector-classics-plugin) Tj
T*
(```) Tj
T*
() Tj
T*
(### Make Requests) Tj
T*
() Tj
T*
(Once the server is running \(default on `http://0.0.0.0:9686`\), you can access endpoints like:) Tj
T*
ET
endstream
endobj
67 0 obj
<< /Length 1690 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(- Auto-detect source language:) Tj
T*
(  ```) Tj
T*
(  GET /translate/en/o meu nome  Casimiro) Tj
T*
(  ? "My name is Casimiro") Tj
T*
(  ```) Tj
T*
() Tj
T*
(- Specify source and target language:) Tj
T*
(  ```) Tj
T*
(  GET /translate/pt/en/o meu nome  Casimiro) Tj
T*
(  ? "My name is Casimiro") Tj
T*
(  ```) Tj
T*
() Tj
T*
(- Language detection:) Tj
T*
(  ```) Tj
T*
(  GET /detect/o meu nome  Casimiro) Tj
T*
(  ? "pt") Tj
T*
(  ```) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Command-Line Options) Tj
T*
() Tj
T*
(```bash) Tj
T*
($ ovos-translate-server --help) Tj
T*
(usage: ovos-translate-server [-h] [--tx-engine TX_ENGINE] [--detect-engine DETECT_ENGINE] [--po) Tj
T*
(rt PORT] [--host HOST]) Tj
T*
() Tj
T*
(options:) Tj
T*
(  -h, --help            show this help message and exit) Tj
T*
(  --tx-engine TX_ENGINE) Tj
T*
(                        translate plugin to be used) Tj
T*
(  --detect-engine DETECT_ENGINE) Tj
T*
(                        lang detection plugin to be used) Tj
T*
(  --port PORT           port number) Tj
T*
(  --host HOST           host) Tj
T*
() Tj
T*
(```) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Technical Overview) Tj
T*
() Tj
T*
(- **Plugin-based**: Uses the OVOS Plugin Manager to dynamically load any compatible plugin by n) Tj
T*
(ame.) Tj
T*
(- **RESTful API**: Simple HTTP endpoints allow you to send and receive translations from any ap) Tj
T*
(p.) Tj
T*
(- **Language Detection Support**: Works with any OVOS lang-detection plugin.) Tj
T*
(- **Easy Deployment**: Perfect for running locally, inside Docker, or on a small server.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Docker Deployment) Tj
T*
() Tj
T*
ET
endstream
endobj
68 0 obj
<< /Length 1566 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(### Use Prebuilt Images) Tj
T*
() Tj
T*
(Check out [ovos-docker-tx]\(https://github.com/OpenVoiceOS/ovos-docker-tx\) for prebuilt containe) Tj
T*
(rs.) Tj
T*
() Tj
T*
(### Build Your Own) Tj
T*
() Tj
T*
(Create a `Dockerfile`:) Tj
T*
() Tj
T*
(```dockerfile) Tj
T*
(FROM python:3.7) Tj
T*
() Tj
T*
(RUN pip install ovos-utils==0.0.15) Tj
T*
(RUN pip install ovos-plugin-manager==0.0.4) Tj
T*
(RUN pip install ovos-translate-server==0.0.1) Tj
T*
() Tj
T*
(# Install your plugins) Tj
T*
(RUN pip install {PLUGIN_HERE}) Tj
T*
() Tj
T*
(ENTRYPOINT ovos-translate-server --tx-engine {PLUGIN_HERE} --detect-engine {PLUGIN_HERE}) Tj
T*
(```) Tj
T*
() Tj
T*
(Build the image:) Tj
T*
() Tj
T*
(```bash) Tj
T*
(docker build . -t my_ovos_translate_plugin) Tj
T*
(```) Tj
T*
() Tj
T*
(Run the container:) Tj
T*
() Tj
T*
(```bash) Tj
T*
(docker run -p 8080:9686 my_ovos_translate_plugin) Tj
T*
(```) Tj
T*
() Tj
T*
(Each plugin can provide its own Dockerfile using `ovos-translate-server` as the entrypoint.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Companion Plugin Integration) Tj
T*
() Tj
T*
(To use this server with an OVOS voice assistant instance, install:) Tj
T*
() Tj
T*
(```bash) Tj
T*
(pip install ovos-translate-server-plugin) Tj
T*
(```) Tj
T*
() Tj
T*
(Then configure your `mycroft.conf`:) Tj
T*
() Tj
T*
(```json) Tj
T*
({) Tj
T*
(  "language": {) Tj
T*
(    "detection_module": "ovos-lang-detector-plugin-server",) Tj
T*
(    "translation_module": "ovos-translate-plugin-server",) Tj
T*
(    "ovos-translate-plugin-server": {) Tj
T*
ET
endstream
endobj
69 0 obj
<< /Length 2031 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(      "host": "http://localhost:9686",) Tj
T*
(      "verify_ssl": false) Tj
T*
(    },) Tj
T*
(    "ovos-lang-detector-plugin-server": {) Tj
T*
(      "host": "http://localhost:9686",) Tj
T*
(      "verify_ssl": false) Tj
T*
(    }) Tj
T*
(  }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Tips & Caveats) Tj
T*
() Tj
T*
(- Some translation plugins auto-detect language; others require you to specify `source_lang`.) Tj
T*
(- Network errors or unresponsive servers will trigger fallback plugins, if configured.) Tj
T*
(- For production, consider placing the service behind a reverse proxy with HTTPS enabled.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Related Projects) Tj
T*
() Tj
T*
(- **Translate Server Plugin**:  ) Tj
T*
(  [ovos-translate-server-plugin]\(https://github.com/OpenVoiceOS/ovos-translate-server-plugin\)) Tj
T*
() Tj
T*
(- **Translate Server Source**:  ) Tj
T*
(  [ovos-translate-server]\(https://github.com/OpenVoiceOS/ovos-translate-server\)) Tj
T*
() Tj
T*
(- **Docker Templates**:  ) Tj
T*
(  [ovos-docker-tx]\(https://github.com/OpenVoiceOS/ovos-docker-tx\)) Tj
T*
() Tj
T*
(- **Plugin Manager**:  ) Tj
T*
(  [ovos-plugin-manager]\(https://github.com/OpenVoiceOS/ovos-plugin-manager\)) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(With the OVOS Translate Server, adding multi-language support to your voice assistant is just a) Tj
T*
(n HTTP request away.) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/300-plugin-manager.md ===) Tj
T*
() Tj
T*
(# OVOS Plugin Manager \(OPM\)) Tj
T*
() Tj
T*
(![image]\(https://github.com/OpenVoiceOS/ovos-plugin-manager/assets/33701864/8c939267-42fc-4377-) Tj
T*
(bcdb-f7df65e73252\)) Tj
T*
() Tj
T*
(## Summary) Tj
T*
() Tj
T*
(The OVOS Plugin Manager \(OPM\) is a base package designed to provide arbitrary plugins to the OV) Tj
T*
(OS ecosystem. It standardizes the interface for plugins, allowing them to be easily portable an) Tj
T*
(d configurable, whether integrated into OVOS projects or used in standalone applications.) Tj
T*
() Tj
T*
ET
endstream
endobj
70 0 obj
<< /Length 2261 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(---) Tj
T*
() Tj
T*
(## Usage Guide) Tj
T*
() Tj
T*
(To install a plugin using OPM, you can typically follow this process:) Tj
T*
() Tj
T*
(- **Install the plugin using pip:**) Tj
T*
(```bash) Tj
T*
(pip install ovos-plugin-name) Tj
T*
(```) Tj
T*
(- **Edit your configuration file \(e.g., `mycroft.conf`\) to enable and configure the plugin.**) Tj
T*
(- **Restart your OVOS service to apply the changes.**) Tj
T*
() Tj
T*
(> ? In some setups like `ovos-docker`, make sure you install plugins in the correct environment) Tj
T*
(.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Technical Explanation) Tj
T*
() Tj
T*
(OPM allows developers to create plugins that are decoupled from OVOS core functionality. By usi) Tj
T*
(ng OPM's standard interface, plugins can be easily integrated into a variety of OVOS services o) Tj
T*
(r other projects.) Tj
T*
() Tj
T*
(Each plugin can be classified according to its functionality, with its own entry point defined ) Tj
T*
(in `setup.py`. This approach ensures that plugins are portable and independent, allowing them t) Tj
T*
(o be reused in other projects.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Plugin Types) Tj
T*
() Tj
T*
(OPM recognizes several plugin types, each serving a specific purpose within the OVOS ecosystem.) Tj
T*
( These types help categorize plugins for easier integration and configuration:) Tj
T*
() Tj
T*
(```python) Tj
T*
(class PluginTypes\(str, Enum\):) Tj
T*
(    PHAL = "ovos.plugin.phal") Tj
T*
(    ADMIN = "ovos.plugin.phal.admin") Tj
T*
(    SKILL = "ovos.plugin.skill") Tj
T*
(    VAD = "ovos.plugin.VAD") Tj
T*
(    PHONEME = "ovos.plugin.g2p") Tj
T*
(    AUDIO = 'mycroft.plugin.audioservice') Tj
T*
(    STT = 'mycroft.plugin.stt') Tj
T*
(    TTS = 'mycroft.plugin.tts') Tj
T*
(    WAKEWORD = 'mycroft.plugin.wake_word') Tj
T*
(    TRANSLATE = "neon.plugin.lang.translate") Tj
T*
(    LANG_DETECT = "neon.plugin.lang.detect") Tj
T*
(    UTTERANCE_TRANSFORMER = "neon.plugin.text") Tj
T*
(    METADATA_TRANSFORMER = "neon.plugin.metadata") Tj
T*
(    AUDIO_TRANSFORMER = "neon.plugin.audio") Tj
T*
(    QUESTION_SOLVER = "neon.plugin.solver") Tj
T*
(    COREFERENCE_SOLVER = "intentbox.coreference") Tj
T*
(    KEYWORD_EXTRACTION = "intentbox.keywords") Tj
T*
ET
endstream
endobj
71 0 obj
<< /Length 2259 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(    UTTERANCE_SEGMENTATION = "intentbox.segmentation") Tj
T*
(    TOKENIZATION = "intentbox.tokenization") Tj
T*
(    POSTAG = "intentbox.postag") Tj
T*
(```) Tj
T*
() Tj
T*
(Each plugin type has its own category, with the most common being `skill`, `stt` \(speech-to-tex) Tj
T*
(t\), `tts` \(text-to-speech\), and `wake_word`.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Plugin Packaging) Tj
T*
() Tj
T*
(When creating a plugin, you need to define an entry point for the plugin type and class in your) Tj
T*
( `setup.py`. Here?s a typical `setup.py` structure for packaging a plugin:) Tj
T*
() Tj
T*
(```python) Tj
T*
(from setuptools import setup) Tj
T*
() Tj
T*
(PLUGIN_TYPE = "mycroft.plugin.stt"  # Adjust based on the plugin type) Tj
T*
(PLUGIN_NAME = "ovos-stt-plugin-name") Tj
T*
(PLUGIN_PKG = PLUGIN_NAME.replace\("-", "_"\)) Tj
T*
(PLUGIN_CLAZZ = "MyPlugin") Tj
T*
(PLUGIN_CONFIGS = "MyPluginConfig") Tj
T*
() Tj
T*
(PLUGIN_ENTRY_POINT = f'{PLUGIN_NAME} = {PLUGIN_PKG}:{PLUGIN_CLAZZ}') Tj
T*
(CONFIG_ENTRY_POINT = f'{PLUGIN_NAME}.config = {PLUGIN_PKG}:{PLUGIN_CONFIGS}') Tj
T*
() Tj
T*
(setup\() Tj
T*
(    name=PLUGIN_NAME,) Tj
T*
(    version='0.1.0',) Tj
T*
(    packages=[PLUGIN_PKG],) Tj
T*
(    install_requires=["speechrecognition>=3.8.1", "ovos-plugin-manager>=0.0.1"],) Tj
T*
(    keywords='mycroft ovos plugin',) Tj
T*
(    entry_points={PLUGIN_TYPE: PLUGIN_ENTRY_POINT, f'{PLUGIN_TYPE}.config': CONFIG_ENTRY_POINT}) Tj
T*
(\)) Tj
T*
(```) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## ?? Voice Satellites) Tj
T*
() Tj
T*
(HiveMind setups allow you to configure which plugins run server-side or satellite-side. Here ar) Tj
T*
(e two examples:) Tj
T*
() Tj
T*
(- **Skills Server**: In this setup, the HiveMind server runs only core services and skills, whi) Tj
T*
(le the satellites handle their own STT/TTS.) Tj
T*
() Tj
T*
(  ![Server Profile]\(https://github.com/OpenVoiceOS/ovos-technical-manual/assets/33701864/55694b) Tj
T*
(82-69c9-4288-9a89-1d9716eb3c57\)) Tj
T*
() Tj
T*
(- **Audio Server**: Here, the HiveMind server runs a full OVOS core, handling STT/TTS for the s) Tj
T*
(atellites.) Tj
T*
() Tj
T*
(  ![Listener Profile]\(https://github.com/OpenVoiceOS/ovos-technical-manual/assets/33701864/1455) Tj
T*
ET
endstream
endobj
72 0 obj
<< /Length 2179 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(a488-af0f-44b4-a5e6-0418a7cd1f96\)) Tj
T*
() Tj
T*
(These profiles help balance the workload between the server and satellites, improving performan) Tj
T*
(ce based on the setup.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Projects Using OPM) Tj
T*
() Tj
T*
(Several OVOS projects and tools support OPM plugins, either as dependencies or directly within ) Tj
T*
(their ecosystem:) Tj
T*
() Tj
T*
(- [ovos-core]\(https://github.com/OpenVoiceOS/ovos-core\)) Tj
T*
(- [ovos-tts-server]\(https://github.com/OpenVoiceOS/ovos-tts-server\)) Tj
T*
(- [ovos-stt-http-server]\(https://github.com/OpenVoiceOS/ovos-stt-http-server\)) Tj
T*
(- [ovos-translate-server]\(https://github.com/OpenVoiceOS/ovos-translate-server\)) Tj
T*
(- [neon-core]\(https://github.com/NeonGeckoCom/NeonCore\)) Tj
T*
(- [HiveMind voice satellite]\(https://github.com/JarbasHiveMind/HiveMind-voice-sat\)) Tj
T*
() Tj
T*
(Additionally, some plugins like AudioService, WakeWord, TTS, and STT are backwards compatible w) Tj
T*
(ith Mycroft-Core, ensuring broad compatibility.) Tj
T*
() Tj
T*
(--- ) Tj
T*
() Tj
T*
(## Related Links) Tj
T*
() Tj
T*
(- [OVOS Plugin Manager Repository]\(https://github.com/OpenVoiceOS/OVOS-plugin-manager\)) Tj
T*
(- [OVOS Installer]\(https://github.com/OpenVoiceOS/ovos-installer\)) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/310-mic_plugins.md ===) Tj
T*
() Tj
T*
(# Microphone Plugins in OVOS) Tj
T*
() Tj
T*
(Microphone plugins in Open Voice OS \(OVOS\) are responsible for capturing audio input and feedin) Tj
T*
(g it to the listener. Introduced in `ovos-core` version **0.0.8**, these plugins allow for flex) Tj
T*
(ible integration with different audio backends and platforms.) Tj
T*
() Tj
T*
(## Usage Guide) Tj
T*
() Tj
T*
(To use a microphone plugin in OVOS:) Tj
T*
() Tj
T*
(- Install the desired plugin with `pip`:) Tj
T*
(```bash) Tj
T*
(pip install ovos-microphone-plugin-<name>) Tj
T*
(```) Tj
T*
() Tj
T*
(- Update your `mycroft.conf` \(or `ovos.conf`\) to specify the plugin:) Tj
T*
(```json) Tj
T*
({) Tj
T*
( "listener": {) Tj
T*
(   "microphone": {) Tj
T*
(     "module": "ovos-microphone-plugin-alsa"  // or another plugin) Tj
T*
(   }) Tj
T*
ET
endstream
endobj
73 0 obj
<< /Length 3057 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
( }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(- Restart OVOS to apply the new microphone plugin configuration.) Tj
T*
() Tj
T*
(## Supported Microphone Plugins) Tj
T*
() Tj
T*
(| Plugin | Description | OS Compatibility |) Tj
T*
(|--------|-------------|------------------|) Tj
T*
(| [ovos-microphone-plugin-alsa]\(https://github.com/OpenVoiceOS/ovos-microphone-plugin-alsa\) | B) Tj
T*
(ased on [pyalsaaudio]\(http://larsimmisch.github.io/pyalsaaudio\). Offers low-latency and high pe) Tj
T*
(rformance on ALSA-compatible devices. | Linux |) Tj
T*
(| [ovos-microphone-plugin-pyaudio]\(https://github.com/OpenVoiceOS/ovos-microphone-plugin-pyaudi) Tj
T*
(o\) | Uses [PyAudio]\(https://people.csail.mit.edu/hubert/pyaudio/\). Good general-purpose plugin ) Tj
T*
(for Linux. | Linux |) Tj
T*
(| [ovos-microphone-plugin-sounddevice]\(https://github.com/OpenVoiceOS/ovos-microphone-plugin-so) Tj
T*
(unddevice\) | Built on [python-sounddevice]\(https://github.com/spatialaudio/python-sounddevice\).) Tj
T*
( Offers cross-platform support. | Linux, macOS, Windows |) Tj
T*
(| [ovos-microphone-plugin-files]\(https://github.com/OpenVoiceOS/ovos-microphone-plugin-files\) |) Tj
T*
( Uses audio files as input instead of a live microphone?ideal for testing and debugging. | Linu) Tj
T*
(x, macOS, Windows |) Tj
T*
(| [ovos-microphone-plugin-arecord]\(https://github.com/OVOSHatchery/ovos-microphone-plugin-areco) Tj
T*
(rd\) | Wraps `arecord` using subprocess calls. Simple and effective on systems with ALSA. | Linu) Tj
T*
(x |) Tj
T*
(| [ovos-microphone-plugin-socket]\(https://github.com/OVOSHatchery/ovos-microphone-plugin-socket) Tj
T*
(\) | Receives audio over a socket connection. Useful for remote microphone setups. | Linux, macO) Tj
T*
(S, Windows |) Tj
T*
() Tj
T*
(## Technical Explanation) Tj
T*
() Tj
T*
(OVOS uses a plugin architecture to decouple the audio input system from the rest of the voice s) Tj
T*
(tack. Microphone plugins implement a common interface, making it easy to swap between different) Tj
T*
( audio sources or backends without changing application code.) Tj
T*
() Tj
T*
(Each plugin provides a stream of audio data that OVOS uses to detect wake words and perform spe) Tj
T*
(ech-to-text \(STT\) processing. The `microphone` module is configured in the main listener settin) Tj
T*
(gs, and the selected plugin is loaded dynamically at runtime.) Tj
T*
() Tj
T*
(## Tips & Caveats) Tj
T*
() Tj
T*
(- **Performance**: For best results on Linux, the ALSA plugin typically provides the lowest lat) Tj
T*
(ency.) Tj
T*
(- **Cross-platform development**: Use the `sounddevice` or `files` plugin when developing on no) Tj
T*
(n-Linux systems.) Tj
T*
(- **Testing**: The `files` plugin is ideal for automated testing environments where live input ) Tj
T*
(isn?t available.) Tj
T*
(- **Remote audio**: The `socket` plugin is a proof-of-concept for networked microphones and is ) Tj
T*
(not recommended for production use without customization.) Tj
T*
() Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(**Coming Soon**) Tj
T*
ET
endstream
endobj
74 0 obj
<< /Length 2215 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(- Standalone usage examples) Tj
T*
(- How to create your own microphone plugin \(plugin template\)) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/311-vad_plugins.md ===) Tj
T*
() Tj
T*
(# VAD Plugins in OVOS) Tj
T*
() Tj
T*
(## Overview) Tj
T*
() Tj
T*
(Voice Activity Detection \(VAD\) helps determine when a user has *finished* speaking. In OVOS, VA) Tj
T*
(D plugins are used **after** the wake word is detected to decide when to stop recording and sen) Tj
T*
(d the audio to speech-to-text \(STT\) engines. This reduces latency and avoids sending unnecessar) Tj
T*
(y silence.) Tj
T*
() Tj
T*
(While wake word detection typically starts the recording, VAD ensures it ends cleanly ? optimiz) Tj
T*
(ing performance and responsiveness.) Tj
T*
() Tj
T*
(## Usage Guide) Tj
T*
() Tj
T*
(- Install the desired VAD plugin:) Tj
T*
(```bash) Tj
T*
(pip install ovos-vad-plugin-<name>) Tj
T*
(```) Tj
T*
() Tj
T*
(- Set your preferred plugin in the OVOS configuration file \(`mycroft.conf`\):) Tj
T*
(```javascript) Tj
T*
({) Tj
T*
( "listener": {) Tj
T*
(   "VAD": {) Tj
T*
(     "module": "ovos-vad-plugin-silero") Tj
T*
(   },) Tj
T*
(  // Setting to remove all silence/noise from start and end of recorded speech before STT) Tj
T*
(  "remove_silence": true) Tj
T*
( }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(- Restart the OVOS service to apply changes.) Tj
T*
() Tj
T*
(> ? By default, VAD is only used **after** wake word activation. See below for optional continu) Tj
T*
(ous mode.) Tj
T*
() Tj
T*
(## Available VAD Plugins) Tj
T*
() Tj
T*
(| Plugin | Description |) Tj
T*
(|--------|-------------|) Tj
T*
(| [ovos-vad-plugin-silero]\(https://github.com/OpenVoiceOS/ovos-vad-plugin-silero\) | Uses [Siler) Tj
T*
(o VAD]\(https://github.com/snakers4/silero-vad\), a neural network?based VAD offering excellent r) Tj
T*
(eal-time accuracy. **Recommended.** |) Tj
T*
(| [ovos-vad-plugin-webrtcvad]\(https://github.com/OpenVoiceOS/ovos-vad-plugin-webrtcvad\) | Wraps) Tj
T*
( Google?s [WebRTC VAD]\(https://webrtc.org/\), lightweight and fast, suited for short audio frame) Tj
T*
(s. |) Tj
T*
(| [ovos-vad-plugin-noise]\(https://github.com/OpenVoiceOS/ovos-vad-plugin-noise\) | Simple thresh) Tj
T*
ET
endstream
endobj
75 0 obj
<< /Length 2612 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(old-based VAD using volume levels. Useful for constrained devices, but less accurate. |) Tj
T*
(| [ovos-vad-plugin-precise]\(https://github.com/OpenVoiceOS/ovos-vad-plugin-precise\) | Uses a cu) Tj
T*
(stom-trained model with [Mycroft Precise]\(https://github.com/MycroftAI/mycroft-precise\). Can be) Tj
T*
( tailored for your environment. |) Tj
T*
() Tj
T*
(## Technical Explanation) Tj
T*
() Tj
T*
(In OVOS, VAD operates **after** the wake word engine triggers recording. Its main purpose is to) Tj
T*
( detect **the end of the user's speech**. Without VAD, the system would use a fixed timeout \(e.) Tj
T*
(g., 3 seconds of silence\), which can lead to premature cutoffs or excessive silence that slows ) Tj
T*
(down transcription.) Tj
T*
() Tj
T*
(VAD plugins continuously monitor the audio during recording and tell the listener when the user) Tj
T*
( has stopped talking. Once silence is detected for a defined threshold, OVOS stops recording an) Tj
T*
(d forwards the result to the STT engine.) Tj
T*
() Tj
T*
(This flow looks like:) Tj
T*
() Tj
T*
(```text) Tj
T*
([ Wake Word Detected ] ? [ Start Recording ] ? [ VAD detects end of speech ] ? [ Stop Recording) Tj
T*
( ] ? [ Send to STT ]) Tj
T*
(```) Tj
T*
() Tj
T*
(### Experimental Continuous Mode) Tj
T*
() Tj
T*
(OVOS also supports an **experimental continuous listening mode** in `ovos-dinkum-listener`, whe) Tj
T*
(re wake word detection is bypassed entirely. In this mode, the listener uses **VAD alone** to d) Tj
T*
(ecide when someone is speaking and triggers STT automatically.) Tj
T*
() Tj
T*
(To enable this behavior:) Tj
T*
(```json) Tj
T*
({) Tj
T*
(  "listener": {) Tj
T*
(    "continuous_listen": false,) Tj
T*
(    "VAD": {) Tj
T*
(      "module": "ovos-vad-plugin-silero") Tj
T*
(    }) Tj
T*
(  }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(> ?? This mode is **experimental**, it is not the default and is **unstable or prone to false t) Tj
T*
(riggers**. Use with caution. This may also cause OVOS to hear its own TTS responses as question) Tj
T*
(s) Tj
T*
() Tj
T*
(> ? [ovos-transcription-validator]\(https://openvoiceos.github.io/ovos-technical-manual/151-llm-) Tj
T*
(transformers/#ovos-transcription-validator\) is extremely recommend as a companion plugin for th) Tj
T*
(is mode) Tj
T*
() Tj
T*
(## Tips & Caveats) Tj
T*
() Tj
T*
(- **Silero** is the most accurate and works well across platforms.) Tj
T*
(- **Noise-based** VAD can be too sensitive in environments with background sound.) Tj
T*
(- VAD plugins may expose tunable settings like silence thresholds or sensitivity ? refer to eac) Tj
T*
ET
endstream
endobj
76 0 obj
<< /Length 2212 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(h plugin's documentation.) Tj
T*
(- Disabling the wake word and relying only on VAD is **experimental** and not recommended for p) Tj
T*
(roduction use \(yet\).) Tj
T*
() Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(**Coming Soon**) Tj
T*
(- Standalone usage examples) Tj
T*
(- How to build a custom VAD plugin) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/312-wake_word_plugins.md ===) Tj
T*
() Tj
T*
(# Wake Word Plugins) Tj
T*
() Tj
T*
(Wake Word plugins allow Open Voice OS to detect specific words or sounds, typically the assista) Tj
T*
(nt?s name \(e.g., "Hey Mycroft"\), but can be customized for various use cases. These plugins ena) Tj
T*
(ble the system to listen for and react to activation commands or phrases.) Tj
T*
() Tj
T*
(## Available Plugins) Tj
T*
() Tj
T*
(OVOS supports different wake word detection plugins, each with its own strengths and use cases) Tj
T*
() Tj
T*
(The default OVOS plugins are:) Tj
T*
() Tj
T*
(- **[ovos-ww-plugin-precise-lite]\(https://github.com/OpenVoiceOS/ovos-ww-plugin-precise-lite\)**) Tj
T*
(: A model-based plugin that uses a trained machine learning model to detect wake words.) Tj
T*
(- **[ovos-ww-plugin-vosk]\(https://github.com/OpenVoiceOS/ovos-ww-plugin-vosk\)**: A text-based p) Tj
T*
(lugin leveraging Vosk, which allows you to define a wake word without requiring a trained model) Tj
T*
(. This is useful during the initial stages of data collection.) Tj
T*
() Tj
T*
(Each plugin has its pros and cons, with Vosk offering a faster setup for simple wakeword recogn) Tj
T*
(ition without model training.) Tj
T*
() Tj
T*
(## Wakeword Configuration) Tj
T*
() Tj
T*
(The `hotwords` section in your `mycroft.conf` allows you to configure the wakeword detection pa) Tj
T*
(rameters for each plugin. For instance:) Tj
T*
() Tj
T*
(```json) Tj
T*
("hotwords": {) Tj
T*
(  "hey_mycroft": {) Tj
T*
(    "module": "ovos-ww-plugin-precise-lite",) Tj
T*
(    "model": "https://github.com/OpenVoiceOS/precise-lite-models/raw/master/wakewords/en/hey_my) Tj
T*
(croft.tflite",) Tj
T*
(    "expected_duration": 3,) Tj
T*
(    "trigger_level": 3,) Tj
T*
(    "sensitivity": 0.5,) Tj
T*
(    "listen": true) Tj
T*
(  }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
ET
endstream
endobj
77 0 obj
<< /Length 2412 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(> ? see the full docs for the [listener service]\(https://openvoiceos.github.io/ovos-technical-m) Tj
T*
(anual/101-speech_service/#hotwords\)) Tj
T*
() Tj
T*
() Tj
T*
(## Tips and Caveats) Tj
T*
() Tj
T*
(- **Vosk Plugin**: The Vosk plugin is useful when you need a simple setup that doesn?t require ) Tj
T*
(training a wake word model. It?s great for quickly gathering data during the development stage.) Tj
T*
(- **Precision and Sensitivity**: Adjust the `sensitivity` and `trigger_level` settings carefull) Tj
T*
(y. Too high a sensitivity can lead to false positives, while too low may miss detection.) Tj
T*
() Tj
T*
(## Plugin Development) Tj
T*
() Tj
T*
(### Key Methods) Tj
T*
() Tj
T*
(When developing a custom wake word plugin, the following methods are essential:) Tj
T*
() Tj
T*
(- **`found_wake_word\(frame_data\)`**: This method must be defined. It checks whether a wake word) Tj
T*
( is found in the provided audio data.) Tj
T*
() Tj
T*
(- **`update\(chunk\)`**: An optional method for processing live audio chunks and making streaming) Tj
T*
( predictions.) Tj
T*
() Tj
T*
(- **`stop\(\)`**: An optional method to shut down the plugin, like unloading data or halting exte) Tj
T*
(rnal processes.) Tj
T*
() Tj
T*
(> ?? `found_wake_word\(frame_data\)` should ignore `frame_data`, this has been deprecated and is ) Tj
T*
(only provided for backwards-compatibility. Plugins are now expected to handle real time audio v) Tj
T*
(ia `update` method) Tj
T*
() Tj
T*
(### Registering Your Plugin) Tj
T*
() Tj
T*
(To integrate your custom plugin, add it to OVOS via the following entry point:) Tj
T*
() Tj
T*
(```python) Tj
T*
(setup\([...], entry_points={'mycroft.plugin.wake_word': 'example_wake_word_plugin = my_example_w) Tj
T*
(w:MyWakeWordEngine'}\)) Tj
T*
(```) Tj
T*
() Tj
T*
(### Example Plugin) Tj
T*
() Tj
T*
(Here?s a simple implementation of a wake word plugin:) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_plugin_manager.templates.hotwords import HotWordEngine) Tj
T*
(from threading import Event) Tj
T*
() Tj
T*
(class MyWWPlugin\(HotWordEngine\):) Tj
T*
(    def __init__\(self, key_phrase="hey mycroft", config=None, lang="en-us"\):) Tj
T*
(        super\(\).__init__\(key_phrase, config, lang\)) Tj
T*
(        self.detection = Event\(\)) Tj
T*
(        self.engine = MyWW\(key_phrase\)) Tj
T*
() Tj
T*
(    def found_wake_word\(self, frame_data\):) Tj
T*
ET
endstream
endobj
78 0 obj
<< /Length 2109 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(        # NOTE: frame_data should be ignored, it is deprecated) Tj
T*
(        # inference happens via the self.update_method) Tj
T*
(        detected = self.detection.is_set\(\)) Tj
T*
(        if detected:) Tj
T*
(            self.detection.clear\(\)) Tj
T*
(        return detected) Tj
T*
() Tj
T*
(    def update\(self, chunk\):) Tj
T*
(        if self.engine.found_it\(chunk\):) Tj
T*
(            self.detection.set\(\)) Tj
T*
() Tj
T*
(    def stop\(self\):) Tj
T*
(        self.engine.bye\(\)) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/313-stt_plugins.md ===) Tj
T*
() Tj
T*
(# STT Plugins) Tj
T*
() Tj
T*
(STT plugins are responsible for converting spoken audio into text) Tj
T*
() Tj
T*
(## `STT`) Tj
T*
() Tj
T*
(The base STT, this handles the audio in "batch mode" taking a complete audio file, and returnin) Tj
T*
(g the complete transcription.) Tj
T*
() Tj
T*
(Each STT plugin class needs to define the `execute\(\)` method taking two arguments:) Tj
T*
() Tj
T*
(* `audio` \\\([AudioData]\(https://github.com/Uberi/speech_recognition/blob/master/reference/libra) Tj
T*
(ry-reference.rst#audiodataframe_data-bytes-sample_rate-int-sample_width-int---audiodata\) object) Tj
T*
(\\\) - the audio data to be transcribed.  ) Tj
T*
(* `lang` \\\(str\\\) - _optional_ - the BCP-47 language code) Tj
T*
() Tj
T*
(The bare minimum STT class will look something like) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_plugin_manager.templates.stt import STT) Tj
T*
() Tj
T*
(class MySTT\(STT\):) Tj
T*
(    def execute\(audio, language=None\):) Tj
T*
(        # Handle audio data and return transcribed text) Tj
T*
(        [...]) Tj
T*
(        return text) Tj
T*
(```) Tj
T*
() Tj
T*
(## `StreamingSTT`) Tj
T*
() Tj
T*
(A more advanced STT class for streaming data to the STT. This will receive chunks of audio data) Tj
T*
( as they become available and they are streamed to an STT engine.) Tj
T*
() Tj
T*
(The plugin author needs to implement the `create_streaming_thread\(\)` method creating a thread f) Tj
T*
(or handling data sent through `self.queue`. ) Tj
T*
() Tj
T*
ET
endstream
endobj
79 0 obj
<< /Length 4124 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(The thread this method creates should be based on the [StreamThread class]\(\). `handle_audio_dat) Tj
T*
(a\(\)` method also needs to be implemented.) Tj
T*
() Tj
T*
(## Entry point) Tj
T*
() Tj
T*
(To make the class detectable as an STT plugin, the package needs to provide an entry point unde) Tj
T*
(r the `mycroft.plugin.stt` namespace.) Tj
T*
() Tj
T*
(```python) Tj
T*
(setup\([...],) Tj
T*
(      entry_points = {'mycroft.plugin.stt': 'example_stt = my_stt:mySTT'}) Tj
T*
(      \)) Tj
T*
(```) Tj
T*
() Tj
T*
(Where `example_stt` is is the STT module name for the plugin, my\\_stt is the Python module and ) Tj
T*
(mySTT is the class in the module to return.) Tj
T*
() Tj
T*
() Tj
T*
(## List of STT plugins) Tj
T*
() Tj
T*
(| Plugin                                                                                       ) Tj
T*
(                                                                                               ) Tj
T*
(                                 | Offline | Streaming | Type              | ) Tj
T*
(|----------------------------------------------------------------------------------------------) Tj
T*
(-----------------------------------------------------------------------------------------------) Tj
T*
(---------------------------------|---------|-----------|-------------------|) Tj
T*
(| [ovos-stt-plugin-fasterwhisper]\(https://github.com/OpenVoiceOS/ovos-stt-plugin-fasterwhisper\)) Tj
T*
(                                                                                               ) Tj
T*
(                                 | ??      | ?         | FOSS              |) Tj
T*
(| [ovos-stt-plugin-whispercpp]\(https://github.com/OpenVoiceOS/ovos-stt-plugin-whispercpp\)      ) Tj
T*
(                                                                                               ) Tj
T*
(                                 | ??      | ?         | FOSS              |) Tj
T*
(| [ovos-stt-plugin-vosk]\(https://github.com/OpenVoiceOS/ovos-stt-plugin-vosk\)                  ) Tj
T*
(                                                                                               ) Tj
T*
(                                 | ??      | ?         | FOSS              |) Tj
T*
(| [ovos-stt-plugin-chromium]\(https://github.com/OpenVoiceOS/ovos-stt-plugin-chromium\)          ) Tj
T*
(                                                                                               ) Tj
T*
(                                 | ?       | ?         | API \(free\)        |) Tj
T*
(| [ovos-stt-plugin-http-server]\(https://github.com/OpenVoiceOS/ovos-stt-plugin-http-server\)    ) Tj
T*
(                                                                                               ) Tj
T*
(                                 | ?       | ?         | API \(self hosted\) |) Tj
T*
(| [ovos-stt-plugin-pocketsphinx]\(https://github.com/OpenVoiceOS/ovos-stt-plugin-pocketsphinx\)  ) Tj
T*
(                                                                                               ) Tj
T*
(                                 | ??      | ?         | FOSS              |) Tj
T*
(| [ovos-stt-azure-plugin]\(https://github.com/OpenVoiceOS/ovos-stt-azure-plugin\)                ) Tj
T*
(                                                                                               ) Tj
T*
(                                 | ?       | ?         | API \(key\)         |) Tj
T*
(| ![imagem]\(https://github.com/OpenVoiceOS/ovos-media/assets/33701864/90f31b0a-dd56-457d-a3cf-7) Tj
T*
(fc08b460038\) [neon-stt-plugin-google_cloud_streaming]\(https://github.com/NeonGeckoCom/neon-stt-) Tj
T*
(plugin-google_cloud_streaming\)   | ?       | ?         | API \(key\)         |) Tj
T*
(| ![imagem]\(https://github.com/OpenVoiceOS/ovos-media/assets/33701864/90f31b0a-dd56-457d-a3cf-7) Tj
T*
(fc08b460038\) [neon-stt-plugin-nemo]\(https://github.com/NeonGeckoCom/neon-stt-plugin-nemo\)      ) Tj
T*
(                                 | ??      | ??        | FOSS              | ) Tj
T*
(| ![imagem]\(https://github.com/OpenVoiceOS/ovos-media/assets/33701864/90f31b0a-dd56-457d-a3cf-7) Tj
T*
ET
endstream
endobj
80 0 obj
<< /Length 1997 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(fc08b460038\) [neon-stt-plugin-nemo-remote]\(https://github.com/NeonGeckoCom/neon-stt-plugin-nemo) Tj
T*
(-remote\)                         | ??      | ?         | API \(self hosted\) | ) Tj
T*
() Tj
T*
(## Standalone Usage) Tj
T*
() Tj
T*
(STT plugins can be used in your owm projects as follows) Tj
T*
() Tj
T*
(```python) Tj
T*
(from speech_recognition import Recognizer, AudioFile) Tj
T*
() Tj
T*
(plug = STTPlug\(\)) Tj
T*
() Tj
T*
(# verify lang is supported) Tj
T*
(lang = "en-us") Tj
T*
(assert lang in plug.available_languages) Tj
T*
() Tj
T*
(# read file) Tj
T*
(with AudioFile\("test.wav"\) as source:) Tj
T*
(    audio = Recognizer\(\).record\(source\)) Tj
T*
() Tj
T*
(# transcribe AudioData object) Tj
T*
(transcript = plug.execute\(audio, lang\)) Tj
T*
(```) Tj
T*
() Tj
T*
(## Plugin Template) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_plugin_manager.templates.stt import STT) Tj
T*
() Tj
T*
() Tj
T*
(# base plugin class) Tj
T*
(class MySTTPlugin\(STT\):) Tj
T*
(    def __init__\(self, *args, **kwargs\):) Tj
T*
(        super\(\).__init__\(*args, **kwargs\)) Tj
T*
(        # read config settings for your plugin) Tj
T*
(        lm = self.config.get\("language-model"\)) Tj
T*
(        hmm = self.config.get\("acoustic-model"\)) Tj
T*
() Tj
T*
(    def execute\(self, audio, language=None\):) Tj
T*
(        # TODO - convert audio into text and return string) Tj
T*
(        transcript = "You said this") Tj
T*
(        return transcript) Tj
T*
() Tj
T*
(    @property) Tj
T*
(    def available_languages\(self\):) Tj
T*
(        """Return languages supported by this STT implementation in this state) Tj
T*
(        This property should be overridden by the derived class to advertise) Tj
T*
(        what languages that engine supports.) Tj
T*
(        Returns:) Tj
T*
(            set: supported languages) Tj
T*
(        """) Tj
T*
(        # TODO - what langs can this STT handle?) Tj
T*
(        return {"en-us", "es-es"}) Tj
T*
() Tj
T*
ET
endstream
endobj
81 0 obj
<< /Length 2369 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(# sample valid configurations per language) Tj
T*
(# "display_name" and "offline" provide metadata for UI) Tj
T*
(# "priority" is used to calculate position in selection dropdown ) Tj
T*
(#       0 - top, 100-bottom) Tj
T*
(# all other keys represent an example valid config for the plugin ) Tj
T*
(MySTTConfig = {) Tj
T*
(    lang: [{"lang": lang,) Tj
T*
(            "display_name": f"MySTT \({lang}",) Tj
T*
(            "priority": 70,) Tj
T*
(            "offline": True}]) Tj
T*
(    for lang in ["en-us", "es-es"]) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/320-tts_plugins.md ===) Tj
T*
() Tj
T*
(# TTS Plugins) Tj
T*
() Tj
T*
(TTS plugins are responsible for converting text into audio for playback) Tj
T*
() Tj
T*
(## TTS) Tj
T*
() Tj
T*
(All Mycroft TTS plugins need to define a class based on the TTS base class from ovos_plugin_man) Tj
T*
(ager) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_plugin_manager.templates.tts import TTS) Tj
T*
() Tj
T*
(class myTTS\(TTS\):) Tj
T*
(    def __init__\(self, lang, config\):) Tj
T*
(        super\(\).__init__\(lang, config, validator, audio_ext='wav',) Tj
T*
(                         phonetic_spelling=False, ssml_tags=None\)) Tj
T*
(        # Any specific init code goes here) Tj
T*
(```) Tj
T*
() Tj
T*
(The `super\(\)` call does some setup adding specific options to how Mycroft will preprocess the s) Tj
T*
(entence.) Tj
T*
() Tj
T*
(* `audio_ext`: filetype of output, possible options 'wav' and 'mp3'.) Tj
T*
(* `phonetec_spelling`, True if Mycroft should preprocess some difficult to pronounce words \\\(eg) Tj
T*
( spotify\\\) or provide the raw text to the TTS.) Tj
T*
(* `ssml_tags`: list of valid SSML tags for the TTS if any, otherwise None.) Tj
T*
(* `validator`: a special class that verifies that the TTS is working in the current configurati) Tj
T*
(on.) Tj
T*
() Tj
T*
(The `get_tts\(\)` method will be called by Mycroft to generate audio and \\\(optionally\\\) phonemes.) Tj
T*
( This is the main method that the plugin creator needs to implement. It is called with:) Tj
T*
() Tj
T*
(* `sentence` \\\(str\\\): a piece of text to turn into audio.) Tj
T*
(* `wav_file` \\\(str\\\): where the plugin should store the generated audio data.) Tj
T*
() Tj
T*
(This method should generate audio data and return a Tuple `\(wav_file, visemes\)`:) Tj
T*
ET
endstream
endobj
82 0 obj
<< /Length 2516 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(* `wav_file` \\\(str\\\): path to written data \\\(generally the input argument\\\)) Tj
T*
(* `phonemes` \\\(list\\\): phoneme list for synthesized audio) Tj
T*
() Tj
T*
() Tj
T*
(## TTS Validator) Tj
T*
() Tj
T*
(To check if the TTS can be used, a validator class is needed. This should inherit from `mycroft) Tj
T*
(.tts.TTSValidaor`. ) Tj
T*
() Tj
T*
(It will be called with the TTS class as argument and will store it in `self.tts`.) Tj
T*
() Tj
T*
(The following is the bare minimum implementation:) Tj
T*
() Tj
T*
(```python) Tj
T*
(class MyValidator\(TTSValidator\):) Tj
T*
(    def get_tts_class\(self\):) Tj
T*
(        # Should return a reference to the TTS class it's inteded to validate.) Tj
T*
() Tj
T*
(    def validate_lang\(self\):) Tj
T*
(        # Raise exception if `self.tts.lang` is not supported.) Tj
T*
() Tj
T*
(    def validate_connection\(self\):) Tj
T*
(        # Check that the software needed for the TTS is reachable,) Tj
T*
(        # be it a local executable, python module or remote server and) Tj
T*
(        # if not available raise an exception.) Tj
T*
(```) Tj
T*
() Tj
T*
(> NOTE: TTSValidator is optional) Tj
T*
() Tj
T*
(## Entry point) Tj
T*
() Tj
T*
(To make the class detectable as an TTS plugin, the package needs to provide an entry point unde) Tj
T*
(r the `mycroft.plugin.tts` namespace.) Tj
T*
() Tj
T*
(```python) Tj
T*
(setup\([...],) Tj
T*
(      entry_points = {'mycroft.plugin.tts': 'example_tts = my_tts:myTTS'}) Tj
T*
(      \)) Tj
T*
(```) Tj
T*
() Tj
T*
(Where `example_tts` is is the TTS module name for the plugin, `my_tts` is the Python module and) Tj
T*
( `myTTS` is the class in the module to return.) Tj
T*
() Tj
T*
(## List of TTS plugins) Tj
T*
() Tj
T*
(| Plugin                                                                                       ) Tj
T*
(                                                                                               ) Tj
T*
(             | Streaming | Offline | Type              |) Tj
T*
(|----------------------------------------------------------------------------------------------) Tj
T*
(-----------------------------------------------------------------------------------------------) Tj
T*
(-------------|-----------|---------|-------------------|) Tj
T*
(| [ovos-tts-plugin-mimic]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-mimic\)                ) Tj
T*
(                                                                                               ) Tj
T*
ET
endstream
endobj
83 0 obj
<< /Length 5008 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(             | ?         | ??      | FOSS              |) Tj
T*
(| [ovos-tts-plugin-mimic3]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-mimic3\)              ) Tj
T*
(                                                                                               ) Tj
T*
(             | ?         | ??      | FOSS              |) Tj
T*
(| [ovos-tts-plugin-piper]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-piper\)                ) Tj
T*
(                                                                                               ) Tj
T*
(             | ?         | ??      | FOSS              |) Tj
T*
(| [ovos-tts-plugin-marytts]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-marytts\)            ) Tj
T*
(                                                                                               ) Tj
T*
(             | ?         | ?       | API \(self hosted\) |) Tj
T*
(| [ovos-tts-server-plugin]\(https://github.com/OpenVoiceOS/ovos-tts-server-plugin\)              ) Tj
T*
(                                                                                               ) Tj
T*
(             | ?         | ?       | API \(self hosted\) |) Tj
T*
(| [ovos-tts-plugin-pico]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-pico\)                  ) Tj
T*
(                                                                                               ) Tj
T*
(             | ?         | ??      | FOSS              |) Tj
T*
(| [ovos-tts-plugin-edge-tts]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-edge-tts\)          ) Tj
T*
(                                                                                               ) Tj
T*
(             | ??        | ?       | API \(free\)        |) Tj
T*
(| [ovos-tts-plugin-polly]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-polly\)                ) Tj
T*
(                                                                                               ) Tj
T*
(             | ?         | ?       | API \(key\)         |) Tj
T*
(| [ovos-tts-plugin-voicerss]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-voicerss\)          ) Tj
T*
(                                                                                               ) Tj
T*
(             | ?         | ?       | API \(key\)         |) Tj
T*
(| [ovos-tts-plugin-google-TX]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-google-TX\)        ) Tj
T*
(                                                                                               ) Tj
T*
(             | ?         | ?       | API \(free\)        |) Tj
T*
(| [ovos-tts-plugin-responsivevoice]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-responsivevo) Tj
T*
(ice\)                                                                                           ) Tj
T*
(             | ?         | ?       | API \(free\)        |) Tj
T*
(| [ovos-tts-plugin-espeakNG]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-espeakNG\)          ) Tj
T*
(                                                                                               ) Tj
T*
(             | ?         | ??      | FOSS              |) Tj
T*
(| [ovos-tts-plugin-cotovia]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-cotovia\)            ) Tj
T*
(                                                                                               ) Tj
T*
(             | ?         | ??      | FOSS              |) Tj
T*
(| [ovos-tts-plugin-SAM]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-SAM\)                    ) Tj
T*
(                                                                                               ) Tj
T*
(             | ?         | ??      | Abandonware       |) Tj
T*
(| [ovos-tts-plugin-beepspeak]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-beepspeak\)        ) Tj
T*
(                                                                                               ) Tj
T*
(             | ?         | ??      | Fun               |) Tj
T*
(| ![imagem]\(https://github.com/OpenVoiceOS/ovos-media/assets/33701864/90f31b0a-dd56-457d-a3cf-7) Tj
T*
(fc08b460038\) [neon-tts-plugin-larynx_server]\(https://github.com/NeonGeckoCom/neon-tts-plugin-la) Tj
T*
(rynx_server\) | ?         | ?       | API \(self hosted\) |) Tj
T*
(| ![imagem]\(https://github.com/OpenVoiceOS/ovos-media/assets/33701864/90f31b0a-dd56-457d-a3cf-7) Tj
T*
(fc08b460038\) [neon-tts-plugin-coqui]\(https://github.com/NeonGeckoCom/neon-tts-plugin-coqui\)    ) Tj
T*
(             | ?         | ??       | FOSS              |) Tj
T*
(| ![imagem]\(https://github.com/OpenVoiceOS/ovos-media/assets/33701864/90f31b0a-dd56-457d-a3cf-7) Tj
T*
(fc08b460038\) [neon-tts-plugin-coqui-remote]\(https://github.com/NeonGeckoCom/neon-tts-plugin-coq) Tj
T*
(ui-remote\)   | ?         | ?       | API \(self hosted\) |) Tj
T*
(| ![imagem]\(https://github.com/OpenVoiceOS/ovos-media/assets/33701864/90f31b0a-dd56-457d-a3cf-7) Tj
T*
(fc08b460038\) [neon-tts-plugin-glados]\(https://github.com/NeonGeckoCom/neon-tts-plugin-glados\)  ) Tj
T*
ET
endstream
endobj
84 0 obj
<< /Length 2141 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(             | ?         | ??      | FOSS              |) Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
(## Standalone Usage) Tj
T*
() Tj
T*
(TODO) Tj
T*
() Tj
T*
(## Plugin Template) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_plugin_manager.templates.tts import TTS) Tj
T*
() Tj
T*
() Tj
T*
(# base plugin class) Tj
T*
(class MyTTSPlugin\(TTS\):) Tj
T*
(    def __init__\(self, *args, **kwargs\):) Tj
T*
(        # in here you should specify if your plugin return wav or mp3 files) Tj
T*
(        # you should also specify any valid ssml tags) Tj
T*
(        ssml_tags = ["speak", "s", "w", "voice", "prosody",) Tj
T*
(                     "say-as", "break", "sub", "phoneme"]) Tj
T*
(        super\(\).__init__\(*args, **kwargs, audio_ext="wav", ssml_tags=ssml_tags\)) Tj
T*
(        # read config settings for your plugin if any) Tj
T*
(        self.pitch = self.config.get\("pitch", 0.5\)) Tj
T*
() Tj
T*
(    def get_tts\(self, sentence, wav_file\):) Tj
T*
(        # TODO - create TTS audio @ wav_file \(path\)) Tj
T*
(        return wav_file, None) Tj
T*
() Tj
T*
(    @property) Tj
T*
(    def available_languages\(self\):) Tj
T*
(        """Return languages supported by this TTS implementation in this state) Tj
T*
(        This property should be overridden by the derived class to advertise) Tj
T*
(        what languages that engine supports.) Tj
T*
(        Returns:) Tj
T*
(            set: supported languages) Tj
T*
(        """) Tj
T*
(        # TODO - what langs can this TTS handle?) Tj
T*
(        return {"en-us", "es-es"}) Tj
T*
() Tj
T*
() Tj
T*
(# sample valid configurations per language) Tj
T*
(# "display_name" and "offline" provide metadata for UI) Tj
T*
(# "priority" is used to calculate position in selection dropdown ) Tj
T*
(#       0 - top, 100-bottom) Tj
T*
(# all other keys represent an example valid config for the plugin ) Tj
T*
(MyTTSConfig = {) Tj
T*
(    lang: [{"lang": lang,) Tj
T*
(            "display_name": f"MyTTS \({lang}",) Tj
T*
(            "priority": 70,) Tj
T*
(            "offline": True}]) Tj
T*
(    for lang in ["en-us", "es-es"]) Tj
T*
(}) Tj
T*
(```) Tj
T*
ET
endstream
endobj
85 0 obj
<< /Length 2165 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
() Tj
T*
(=== docs/321-g2p_plugins.md ===) Tj
T*
() Tj
T*
(# Grapheme to Phoneme Plugins) Tj
T*
() Tj
T*
(Grapheme to Phoneme is the process of converting text into a set of "sound units" called phonem) Tj
T*
(es) Tj
T*
() Tj
T*
(In `ovos-audio` these plugins are used to auto generate mouth movements / visemes in the TTS st) Tj
T*
(age.) Tj
T*
() Tj
T*
(They can also be used to help configuring wake words or to facilitate training of TTS systems) Tj
T*
() Tj
T*
(These plugins can provide phonemes either in ARPA or IPA alphabets, an automatic conversion wil) Tj
T*
(l happen behind the) Tj
T*
(scenes when needed) Tj
T*
() Tj
T*
(## Visemes) Tj
T*
() Tj
T*
(Visemes are representations of the shape of a human mouth when speaking.) Tj
T*
() Tj
T*
(![visemes]\(http://www.web3.lu/wp-content/uploads/2014/09/visemes.jpg\)) Tj
T*
() Tj
T*
(Mouth movements are generated via a mapping of ARPA to VISEMES, TTS plugins may provide this na) Tj
T*
(tively, or a G2P plugin) Tj
T*
(may be used to estimate it directly from text) Tj
T*
() Tj
T*
(Visemes are predefined mouth positions, timing per phonemes is crucial for a natural mouth move) Tj
T*
(ment) Tj
T*
() Tj
T*
(The Mycroft Mark 1 uses this to make his "lips" match his speech.) Tj
T*
() Tj
T*
(OpenVoiceOS uses six basic visemes.) Tj
T*
() Tj
T*
(| viseme | mouth position   |) Tj
T*
(|--------|------------------|) Tj
T*
(| 0      | wide open        |) Tj
T*
(| 1      | pursed           |) Tj
T*
(| 2      | open             |) Tj
T*
(| 3      | narrow lips      |) Tj
T*
(| 4      | closed lips      |) Tj
T*
(| 5      | parted lips      |) Tj
T*
(| 6      | barely open lips |) Tj
T*
() Tj
T*
(Mapping based) Tj
T*
(on [Jeffers phoneme to viseme map, seen in table 1]\(http://citeseerx.ist.psu.edu/viewdoc/downlo) Tj
T*
(ad?doi=10.1.1.221.6377&rep=rep1&type=pdf\),) Tj
T*
(partially based on the "12 mouth shapes visuals seen [here]\(https://wolfpaulus.com/journal/soft) Tj
T*
(ware/lipsynchronization/\)) Tj
T*
() Tj
T*
(## List of G2P plugins) Tj
T*
() Tj
T*
(| Plugin                                                                                       ) Tj
T*
ET
endstream
endobj
86 0 obj
<< /Length 3044 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(                                                                                               ) Tj
T*
(            | Type | Duration |) Tj
T*
(|----------------------------------------------------------------------------------------------) Tj
T*
(-----------------------------------------------------------------------------------------------) Tj
T*
(------------|------|----------|) Tj
T*
(| [ovos-g2p-plugin-mimic]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-mimic/blob/dev/ovos_tt) Tj
T*
(s_plugin_mimic/__init__.py#L24\)                                                                ) Tj
T*
(            | ARPA | ??       |) Tj
T*
(| [ovos-g2p-plugin-heuristic-arpa]\(https://github.com/OpenVoiceOS/ovos-classifiers/blob/dev/ovo) Tj
T*
(s_classifiers/opm/heuristics.py#L164\)                                                          ) Tj
T*
(            | ARPA | ?        |) Tj
T*
(| [ovos-g2p-plugin-espeak]\(https://github.com/OVOSHatchery/ovos-g2p-plugin-espeak\)             ) Tj
T*
(                                                                                               ) Tj
T*
(            | IPA  | ?        |) Tj
T*
(| ![imagem]\(https://github.com/OpenVoiceOS/ovos-media/assets/33701864/90f31b0a-dd56-457d-a3cf-7) Tj
T*
(fc08b460038\) [neon-g2p-cmudict-plugin]\(https://github.com/NeonGeckoCom/g2p-cmudict-plugin\)     ) Tj
T*
(            | ARPA | ?        |) Tj
T*
(| ![imagem]\(https://github.com/OpenVoiceOS/ovos-media/assets/33701864/90f31b0a-dd56-457d-a3cf-7) Tj
T*
(fc08b460038\) [neon-g2p-phoneme-guesser-plugin]\(https://github.com/NeonGeckoCom/g2p-phoneme-gues) Tj
T*
(ser-plugin\) | ARPA | ?        |) Tj
T*
(| ![imagem]\(https://github.com/OpenVoiceOS/ovos-media/assets/33701864/90f31b0a-dd56-457d-a3cf-7) Tj
T*
(fc08b460038\) [neon-g2p-gruut-plugin]\(https://github.com/NeonGeckoCom/g2p-gruut-plugin\)         ) Tj
T*
(            | IPA  | ?        |) Tj
T*
() Tj
T*
(## Standalone Usage) Tj
T*
() Tj
T*
(All G2P plugins can be used as follows) Tj
T*
() Tj
T*
(```python) Tj
T*
() Tj
T*
(utterance = "hello world") Tj
T*
(word = "hello") Tj
T*
(lang = "en-us") Tj
T*
() Tj
T*
(plug = G2pPlugin\(\)) Tj
T*
() Tj
T*
(# convert a word into a list of phonemes) Tj
T*
(phones = plug.get_ipa\(word, lang\)) Tj
T*
(assert phones == ['h', '?', 'l', 'o?']) Tj
T*
() Tj
T*
(phones = plug.get_arpa\(word, lang\)) Tj
T*
(assert phones == ['HH', 'AH', 'L', 'OW']) Tj
T*
() Tj
T*
(# convert a utterance into a list of phonemes) Tj
T*
(phones = plug.utterance2arpa\(utterance, lang\)) Tj
T*
(assert phones == ['HH', 'AH', 'L', 'OW', '.', 'W', 'ER', 'L', 'D']) Tj
T*
() Tj
T*
(phones = plug.utterance2ipa\(utterance, lang\)) Tj
T*
(assert phones == ['h', '?', 'l', 'o?', '.', 'w', '?', 'l', 'd']) Tj
T*
() Tj
T*
(# convert a utterance into a list of viseme, duration pairs) Tj
T*
(visemes = plug.utterance2visemes\(utterance, lang\)) Tj
T*
(assert visemes == [\('0', 0.0775\), \('0', 0.155\), \('3', 0.2325\), \('2', 0.31\), \('2', 0.434\), \('2',) Tj
T*
( 0.558\), \('3', 0.682\),) Tj
T*
ET
endstream
endobj
87 0 obj
<< /Length 2227 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(                   \('3', 0.806\)]) Tj
T*
(```) Tj
T*
() Tj
T*
(## Plugin Template) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_plugin_manager.templates.g2p import Grapheme2PhonemePlugin) Tj
T*
(from ovos_utils.lang.visimes import VISIMES) Tj
T*
() Tj
T*
() Tj
T*
(# base plugin class) Tj
T*
(class MyARPAG2PPlugin\(Grapheme2PhonemePlugin\):) Tj
T*
(    def __init__\(self, config=None\):) Tj
T*
(        self.config = config or {}) Tj
T*
() Tj
T*
(    def get_arpa\(self, word, lang, ignore_oov=False\):) Tj
T*
(        phones = []  # TODO implement) Tj
T*
(        return phones) Tj
T*
() Tj
T*
(    def get_durations\(self, utterance, lang="en", default_dur=0.4\):) Tj
T*
(        words = utterance.split\(\)) Tj
T*
(        phones = [self.get_arpa\(w, lang\) for w in utterance.split\(\)]) Tj
T*
(        dur = default_dur  # TODO this is plugin specific) Tj
T*
(        return [\(pho, dur\) for pho in phones]) Tj
T*
() Tj
T*
(    def utterance2visemes\(self, utterance, lang="en", default_dur=0.4\):) Tj
T*
(        phonemes = self.get_durations\(utterance, lang, default_dur\)) Tj
T*
(        return [\(VISIMES.get\(pho[0].lower\(\), '4'\), float\(pho[1]\)\)) Tj
T*
(                for pho in phonemes]) Tj
T*
() Tj
T*
(```) Tj
T*
() Tj
T*
(If your plugin uses IPA instead of ARPA simply replace `get_arpa` with `get_ipa`) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_plugin_manager.templates.g2p import Grapheme2PhonemePlugin) Tj
T*
(from ovos_utils.lang.visimes import VISIMES) Tj
T*
() Tj
T*
() Tj
T*
(# base plugin class) Tj
T*
(class MyIPAG2PPlugin\(Grapheme2PhonemePlugin\):) Tj
T*
(    def __init__\(self, config=None\):) Tj
T*
(        self.config = config or {}) Tj
T*
() Tj
T*
(    def get_ipa\(self, word, lang, ignore_oov=False\):) Tj
T*
(        phones = []  # TODO implement) Tj
T*
(        return phones) Tj
T*
() Tj
T*
(    def get_durations\(self, utterance, lang="en", default_dur=0.4\):) Tj
T*
(        # auto converted to arpa if ipa is implemented) Tj
T*
(        phones = [self.get_arpa\(w, lang\) for w in utterance.split\(\)]) Tj
T*
(        dur = default_dur  # TODO this is plugin specific) Tj
T*
(        return [\(pho, dur\) for pho in phones]) Tj
T*
() Tj
T*
ET
endstream
endobj
88 0 obj
<< /Length 3064 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(    def utterance2visemes\(self, utterance, lang="en", default_dur=0.4\):) Tj
T*
(        phonemes = self.get_durations\(utterance, lang, default_dur\)) Tj
T*
(        return [\(VISIMES.get\(pho[0].lower\(\), '4'\), float\(pho[1]\)\)) Tj
T*
(                for pho in phonemes]) Tj
T*
() Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
(=== docs/330-transformer_plugins.md ===) Tj
T*
() Tj
T*
(# Transformer Plugins) Tj
T*
() Tj
T*
(Transformer plugins in Open Voice OS \(OVOS\) provide a flexible way to modify and enhance variou) Tj
T*
(s types of data during processing. These plugins can transform audio data, text, metadata, and ) Tj
T*
(even dialog content.) Tj
T*
() Tj
T*
(## Audio Transformers) Tj
T*
() Tj
T*
(Audio transformers are designed to process and modify audio data. They can be used to detect la) Tj
T*
(nguages from audio input or even decode data embedded within the audio.) Tj
T*
() Tj
T*
(### Available Plugins) Tj
T*
() Tj
T*
(| Plugin                                                                                       ) Tj
T*
(                                               | Description                                   ) Tj
T*
(                                                  |) Tj
T*
(|----------------------------------------------------------------------------------------------) Tj
T*
(-----------------------------------------------|-----------------------------------------------) Tj
T*
(--------------------------------------------------|) Tj
T*
(| [ovos-audio-transformer-plugin-fasterwhisper]\(https://github.com/OpenVoiceOS/ovos-stt-plugin-) Tj
T*
(fasterwhisper\)                                 | Detects language from audio to inform Speech-t) Tj
T*
(o-Text \(STT\) processing.                          |) Tj
T*
(| [ovos-audio-transformer-plugin-speechbrain-langdetect]\(https://github.com/OpenVoiceOS/ovos-au) Tj
T*
(dio-transformer-plugin-speechbrain-langdetect\) | Detects language from audio to inform STT.    ) Tj
T*
(                                                 |) Tj
T*
(| [ovos-audio-transformer-plugin-ggwave]\(https://github.com/OpenVoiceOS/ovos-audio-transformer-) Tj
T*
(plugin-ggwave\)                                 | Decodes [data over audio]\(https://github.com/g) Tj
T*
(gerganov/ggwave\) and emits bus events in response. |) Tj
T*
() Tj
T*
(These plugins help automate language detection and data interpretation, which are especially us) Tj
T*
(eful for multilingual environments or when integrating specialized data streams into your voice) Tj
T*
( assistant.) Tj
T*
() Tj
T*
(## Utterance Transformers) Tj
T*
() Tj
T*
(Utterance transformers modify the textual representation of speech, improving the quality of tr) Tj
T*
(anscriptions and allowing for more advanced processing.) Tj
T*
() Tj
T*
(### Available Plugins) Tj
T*
() Tj
T*
(| Plugin                            | Description                           | Source           ) Tj
T*
(                                                                                               ) Tj
T*
(          |) Tj
T*
ET
endstream
endobj
89 0 obj
<< /Length 3370 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(|-----------------------------------|---------------------------------------|------------------) Tj
T*
(-----------------------------------------------------------------------------------------------) Tj
T*
(----------|) Tj
T*
(| ovos-utterance-normalizer         | Normalizes text before it reaches the pipeline stage. | [) Tj
T*
(OpenVoiceOS/ovos-utterance-normalizer]\(https://github.com/OpenVoiceOS/ovos-utterance-normalizer) Tj
T*
(\)                         |) Tj
T*
(| ovos-utterance-plugin-cancel      | Cancels an utterance mid-transcription. | [OpenVoiceOS/ov) Tj
T*
(os-utterance-plugin-cancel]\(https://github.com/OpenVoiceOS/ovos-utterance-plugin-cancel\)       ) Tj
T*
(            |) Tj
T*
(| ovos-utterance-corrections-plugin | Manually corrects bad transcriptions.  | [OpenVoiceOS/ovo) Tj
T*
(s-utterance-corrections-plugin]\(https://github.com/OpenVoiceOS/ovos-utterance-corrections-plugi) Tj
T*
(n\)         |) Tj
T*
(| ovos-utterance-translation-plugin | Automatically translates unsupported languages. | [OpenVo) Tj
T*
(iceOS/ovos-bidirectional-translation-plugin]\(https://github.com/OpenVoiceOS/ovos-bidirectional-) Tj
T*
(translation-plugin\) |) Tj
T*
() Tj
T*
(These plugins enhance the quality of speech recognition and allow real-time intervention for ha) Tj
T*
(ndling special cases, such as language translation or manual corrections.) Tj
T*
() Tj
T*
(## Metadata Transformers) Tj
T*
() Tj
T*
(Metadata transformers handle the transformation of metadata associated with audio or utterances) Tj
T*
(. They help in structuring or enriching metadata for further use.) Tj
T*
() Tj
T*
(### Available Plugins) Tj
T*
() Tj
T*
(*Currently, no specific plugins are listed for metadata transformers.*) Tj
T*
() Tj
T*
(## Dialog Transformers) Tj
T*
() Tj
T*
(Dialog transformers modify conversational content, allowing you to rewrite speech or translate ) Tj
T*
(it into a different language before execution. These plugins are particularly useful for improv) Tj
T*
(ing the interactivity and flexibility of voice-based dialogues.) Tj
T*
() Tj
T*
(### Available Plugins) Tj
T*
() Tj
T*
(| Plugin                                | Description                                    | Sour) Tj
T*
(ce                                                                                             ) Tj
T*
(                       |) Tj
T*
(|---------------------------------------|------------------------------------------------|-----) Tj
T*
(-----------------------------------------------------------------------------------------------) Tj
T*
(-----------------------|) Tj
T*
(| ovos-dialog-transformer-openai-plugin | Rewrites speech with a large language model \(LLM\) bef) Tj
T*
(ore executing Text-to-Speech \(TTS\). | [OpenVoiceOS/ovos-solver-plugin-openai-persona]\(https://g) Tj
T*
(ithub.com/OpenVoiceOS/ovos-solver-plugin-openai-persona\)         |) Tj
T*
(| ovos-dialog-translation-plugin        | Translates speech back into the user's language. | [O) Tj
T*
(penVoiceOS/ovos-bidirectional-translation-plugin]\(https://github.com/OpenVoiceOS/ovos-bidirecti) Tj
T*
(onal-translation-plugin\) |) Tj
T*
() Tj
T*
(Dialog transformers enable more dynamic interactions, such as generating personalized responses) Tj
T*
( or translating dialogues into multiple languages.) Tj
T*
() Tj
T*
(## TTS Transformers) Tj
T*
() Tj
T*
ET
endstream
endobj
90 0 obj
<< /Length 2534 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(TTS \(Text-to-Speech\) transformers allow you to apply various effects or modifications to the sp) Tj
T*
(eech output generated by the assistant, such as sound effects or audio filtering.) Tj
T*
() Tj
T*
(### Available Plugins) Tj
T*
() Tj
T*
(| Plugin                          | Description                   | Source                     ) Tj
T*
(                                                                                   |) Tj
T*
(|---------------------------------|-------------------------------|----------------------------) Tj
T*
(-----------------------------------------------------------------------------------|) Tj
T*
(| ovos-tts-transformer-sox-plugin | Applies sound effects via `sox` \(Sound eXchange\). | [OpenVo) Tj
T*
(iceOS/ovos-tts-transformer-sox-plugin]\(https://github.com/OpenVoiceOS/ovos-tts-transformer-sox-) Tj
T*
(plugin\) |) Tj
T*
() Tj
T*
(These plugins are helpful for modifying the final audio output, such as adding special effects,) Tj
T*
( changing pitch, or applying filters.) Tj
T*
() Tj
T*
(## Standalone Usage) Tj
T*
() Tj
T*
(*Details on standalone usage are coming soon.*) Tj
T*
() Tj
T*
(## Plugin Templates) Tj
T*
() Tj
T*
(*Details on plugin templates are coming soon.*) Tj
T*
() Tj
T*
(## Conclusion) Tj
T*
() Tj
T*
(Transformer plugins in OVOS offer versatile tools for transforming data at various stages of pr) Tj
T*
(ocessing. Whether you're working with audio, text, metadata, or dialog, these plugins allow for) Tj
T*
( a high degree of customization and enhancement. OVOS's flexible plugin system empowers develop) Tj
T*
(ers to create powerful, tailored experiences for users. Stay tuned for more updates and templat) Tj
T*
(es to help you create your own custom plugins.) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/340-PHAL.md ===) Tj
T*
() Tj
T*
(# PHAL ? Platform/Hardware Abstraction Layer) Tj
T*
() Tj
T*
(The Platform/Hardware Abstraction Layer \(PHAL\) in OpenVoiceOS \(OVOS\) provides a flexible, plugi) Tj
T*
(n-based system for integrating hardware-specific and platform-level functionality. ) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Usage Guide) Tj
T*
() Tj
T*
(PHAL plugins are loaded at runtime based on system compatibility and user configuration. You ca) Tj
T*
(n:) Tj
T*
() Tj
T*
(- Install multiple PHAL plugins for system and hardware support.) Tj
T*
(- Rely on automatic hardware detection to load relevant plugins safely.) Tj
T*
(- Use AdminPHAL when elevated privileges are required.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
() Tj
T*
ET
endstream
endobj
91 0 obj
<< /Length 2304 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(## Technical Explanation) Tj
T*
() Tj
T*
(### PHAL Plugins) Tj
T*
() Tj
T*
(PHAL plugins dynamically extend your voice assistant's functionality by listening to events and) Tj
T*
( integrating with system or hardware components. Examples include:) Tj
T*
() Tj
T*
(- **System control**: Restart, shutdown, or factory reset via `ovos-PHAL-plugin-system`.) Tj
T*
(- **Audio management**: Volume control with `ovos-PHAL-plugin-alsa`.) Tj
T*
(- **Hardware support**: Mark 1 and Mark 2 integrations using hardware detection.) Tj
T*
() Tj
T*
(Plugins are validated before loading. For example, the `ovos-PHAL-plugin-mk2` checks for the pr) Tj
T*
(esence of the SJ201 HAT before activating.) Tj
T*
() Tj
T*
(### AdminPHAL) Tj
T*
() Tj
T*
(AdminPHAL is a specialized version of PHAL that loads plugins with root privileges. This allows) Tj
T*
( for deeper OS integration?ideal for tasks like system configuration or device control. However) Tj
T*
(, all admin plugins must be:) Tj
T*
() Tj
T*
(- Marked as admin in their entry point.) Tj
T*
(- Explicitly enabled in the config \(`"enabled": true`\).) Tj
T*
(- Carefully audited, as they can modify system state.) Tj
T*
() Tj
T*
(AdminPHAL and PHAL will not load each other's plugins.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(### Developing a PHAL Plugin) Tj
T*
() Tj
T*
(PHAL plugins usually consist of a validator \(to determine compatibility\) and an event listener.) Tj
T*
( Here's a minimal example:) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_bus_client import Message) Tj
T*
(from ovos_plugin_manager.phal import PHALPlugin) Tj
T*
() Tj
T*
(class MyPHALPluginValidator:) Tj
T*
(    @staticmethod) Tj
T*
(    def validate\(config=None\):) Tj
T*
(        # Return False to prevent loading \(e.g., missing hardware\)) Tj
T*
(        return True) Tj
T*
() Tj
T*
(class MyPHALPlugin\(PHALPlugin\):) Tj
T*
(    validator = MyPHALPluginValidator) Tj
T*
() Tj
T*
(    def __init__\(self, bus=None, config=None\):) Tj
T*
(        super\(\).__init__\(bus=bus, name="ovos-PHAL-plugin-NAME", config=config\)) Tj
T*
(        self.bus.on\("my.event", self.handle_event\)) Tj
T*
() Tj
T*
(    def handle_event\(self, message\):) Tj
T*
(        self.bus.emit\(Message\("my.event.response"\)\)) Tj
T*
() Tj
T*
(    def shutdown\(self\):) Tj
T*
ET
endstream
endobj
92 0 obj
<< /Length 3351 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(        self.bus.remove\("my.event", self.handle_event\)) Tj
T*
(        super\(\).shutdown\(\)) Tj
T*
(```) Tj
T*
() Tj
T*
(More details on plugin packaging are available in the [OVOS Plugin Manager documentation]\(https) Tj
T*
(://openvoiceos.github.io/ovos-technical-manual/300-plugin-manager\).) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Choosing Between a PHAL Plugin and a Skill) Tj
T*
() Tj
T*
(Not sure whether to build a skill or a PHAL plugin? Here's a quick guideline:) Tj
T*
() Tj
T*
(- Use **PHAL** for low-level system or hardware integration.) Tj
T*
(- Use **skills** for voice interactions and user-facing features.) Tj
T*
(- In some cases, both might be appropriate?a PHAL plugin for backend support and a skill as a f) Tj
T*
(rontend interface.) Tj
T*
() Tj
T*
(![Should you use a skill or a PHAL plugin?]\(img/phal_or_skill.png\)) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Available Plugins) Tj
T*
() Tj
T*
(| Plugin                                                                                       ) Tj
T*
(             | Description                            |) Tj
T*
(|----------------------------------------------------------------------------------------------) Tj
T*
(-------------|----------------------------------------|) Tj
T*
(| [ovos-PHAL-plugin-alsa]\(https://github.com/OpenVoiceOS/ovos-PHAL-plugin-alsa\)                ) Tj
T*
(             | Volume control                         |) Tj
T*
(| [ovos-PHAL-plugin-system]\(https://github.com/OpenVoiceOS/ovos-PHAL-plugin-system\)            ) Tj
T*
(             | Reboot, shutdown, and factory reset    |) Tj
T*
(| [ovos-PHAL-plugin-mk1]\(https://github.com/OpenVoiceOS/ovos-PHAL-plugin-mk1\)                  ) Tj
T*
(             | Mycroft Mark 1 hardware integration    |) Tj
T*
(| [ovos-PHAL-plugin-respeaker-2mic]\(https://github.com/OpenVoiceOS/ovos-PHAL-plugin-respeaker-2) Tj
T*
(mic\)         | Respeaker 2-mic HAT support            |) Tj
T*
(| [ovos-PHAL-plugin-respeaker-4mic]\(https://github.com/OpenVoiceOS/ovos-PHAL-plugin-respeaker-4) Tj
T*
(mic\)         | Respeaker 4-mic HAT support            |) Tj
T*
(| [ovos-PHAL-plugin-wifi-setup]\(https://github.com/OpenVoiceOS/ovos-PHAL-plugin-wifi-setup\)    ) Tj
T*
(             | Central Wi-Fi setup                    |) Tj
T*
(| [ovos-PHAL-plugin-gui-network-client]\(https://github.com/OpenVoiceOS/ovos-PHAL-plugin-gui-net) Tj
T*
(work-client\) | GUI-based Wi-Fi setup                  |) Tj
T*
(| [ovos-PHAL-plugin-balena-wifi]\(https://github.com/OpenVoiceOS/ovos-PHAL-plugin-balena-wifi\)  ) Tj
T*
(             | Wi-Fi hotspot setup                    |) Tj
T*
(| [ovos-PHAL-plugin-network-manager]\(https://github.com/OpenVoiceOS/ovos-PHAL-plugin-network-ma) Tj
T*
(nager\)       | Network Manager integration            |) Tj
T*
(| [ovos-PHAL-plugin-ipgeo]\(https://github.com/OpenVoiceOS/ovos-PHAL-plugin-ipgeo\)              ) Tj
T*
(             | Geolocation using IP address           |) Tj
T*
(| [ovos-PHAL-plugin-gpsd]\(https://github.com/OpenVoiceOS/ovos-PHAL-plugin-gpsd\)                ) Tj
T*
(             | Geolocation using GPS                  |) Tj
T*
(| [neon-phal-plugin-linear_led]\(https://github.com/NeonGeckoCom/neon-phal-plugin-linear_led\)   ) Tj
T*
(             | LED control for Mycroft Mark 2         |) Tj
T*
() Tj
T*
(---) Tj
T*
ET
endstream
endobj
93 0 obj
<< /Length 3316 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(## Tips & Caveats) Tj
T*
() Tj
T*
(- **Safe Defaults**: Most plugins are hardware-aware and won't load if the required device isn?) Tj
T*
(t detected.) Tj
T*
(- **Admin Responsibility**: AdminPHAL plugins have full system access. Only use trusted sources) Tj
T*
( and review their code.) Tj
T*
(- **Extensibility**: PHAL is designed to grow with your system. Don't hesitate to build your ow) Tj
T*
(n plugins for unique hardware.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Related Documentation) Tj
T*
() Tj
T*
(- [OVOS Plugin Manager \(OPM\) Docs ? Packaging Plugins]\(https://openvoiceos.github.io/ovos-techn) Tj
T*
(ical-manual/300-plugin-manager\)) Tj
T*
(- [PHAL Plugins on GitHub]\(https://github.com/OpenVoiceOS?q=ovos-PHAL&type=all\)) Tj
T*
() Tj
T*
(---  ) Tj
T*
(By decoupling system and hardware features from core logic, PHAL makes OVOS more modular, secur) Tj
T*
(e, and adaptable to any platform?from Raspberry Pi setups to full-featured smart assistants.) Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
(=== docs/350-translation_plugins.md ===) Tj
T*
() Tj
T*
(# Language Detection and Translation Plugins) Tj
T*
() Tj
T*
(Language detection and translation plugins in Open Voice OS \(OVOS\) enable the system to identif) Tj
T*
(y the language of text and translate it between different languages. These plugins are particul) Tj
T*
(arly useful in the context of [Universal Skills]\(https://openvoiceos.github.io/ovos-technical-m) Tj
T*
(anual/universal_skills\) and can be integrated with external tools like [solvers]\(https://openvo) Tj
T*
(iceos.github.io/ovos-technical-manual/solvers/\).) Tj
T*
() Tj
T*
(## Available Language Plugins) Tj
T*
() Tj
T*
(OVOS supports a variety of language detection and translation plugins, each with different capa) Tj
T*
(bilities, such as language detection, text translation, offline functionality, and support for ) Tj
T*
(external APIs.) Tj
T*
() Tj
T*
(| Plugin                                                                                       ) Tj
T*
(                                                                                               ) Tj
T*
(                      | Detect | Translate | Offline | Type              |) Tj
T*
(|----------------------------------------------------------------------------------------------) Tj
T*
(-----------------------------------------------------------------------------------------------) Tj
T*
(----------------------|--------|-----------|---------|-------------------|) Tj
T*
(| [ovos-translate-plugin-server]\(https://github.com/OpenVoiceOS/ovos-translate-server-plugin\)  ) Tj
T*
(                                                                                               ) Tj
T*
(                      | ??     | ??        | ?       | API \(self hosted\) |) Tj
T*
(| [ovos-translate-plugin-nllb]\(https://github.com/OpenVoiceOS/ovos-translate-plugin-nllb\)      ) Tj
T*
(                                                                                               ) Tj
T*
(                      | ?     | ??        | ??      | FOSS              |) Tj
T*
(| [ovos-lang-detector-fasttext-plugin]\(https://github.com/OpenVoiceOS/ovos-lang-detector-fastte) Tj
T*
(xt-plugin\)                                                                                     ) Tj
T*
ET
endstream
endobj
94 0 obj
<< /Length 4240 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(                      | ??     | ?        | ??      | FOSS              |) Tj
T*
(| [ovos-lang-detect-ngram-lm]\(https://github.com/OpenVoiceOS/ovos-classifiers\)                 ) Tj
T*
(                                                                                               ) Tj
T*
(                      | ??     | ?        | ??      | FOSS              |) Tj
T*
(| [ovos-lang-detector-plugin-lingua-podre]\(https://github.com/OpenVoiceOS/lingua-podre\)        ) Tj
T*
(                                                                                               ) Tj
T*
(                      | ??     | ?        | ??      | FOSS              |) Tj
T*
(| [ovos-lang-detector-plugin-voter]\(https://github.com/OpenVoiceOS/ovos-lang-detector-classics-) Tj
T*
(plugin\)                                                                                        ) Tj
T*
(                      | ??     | ?        | ??      | FOSS              |) Tj
T*
(| [ovos-lang-detector-plugin-cld2]\(https://github.com/OpenVoiceOS/ovos-lang-detector-classics-p) Tj
T*
(lugin\)                                                                                         ) Tj
T*
(                      | ??     | ?        | ??      | FOSS              |) Tj
T*
(| [ovos-lang-detector-plugin-cld3]\(https://github.com/OpenVoiceOS/ovos-lang-detector-classics-p) Tj
T*
(lugin\)                                                                                         ) Tj
T*
(                      | ??     | ?        | ??      | FOSS              |) Tj
T*
(| [ovos-lang-detector-plugin-fastlang]\(https://github.com/OpenVoiceOS/ovos-lang-detector-classi) Tj
T*
(cs-plugin\)                                                                                     ) Tj
T*
(                      | ??     | ?        | ??      | FOSS              |) Tj
T*
(| [ovos-lang-detector-plugin-langdetect]\(https://github.com/OpenVoiceOS/ovos-lang-detector-clas) Tj
T*
(sics-plugin\)                                                                                   ) Tj
T*
(                      | ??     | ?        | ??      | FOSS              |) Tj
T*
(| [ovos-google-translate-plugin]\(https://github.com/OpenVoiceOS/ovos-google-translate-plugin\)  ) Tj
T*
(                                                                                               ) Tj
T*
(                      | ??     | ??        | ?       | API \(free\)        |) Tj
T*
(| [neon-lang-plugin-libretranslate]\(https://github.com/NeonGeckoCom/neon-lang-plugin-libretrans) Tj
T*
(late\)     | ??     | ??        | ?       | API \(self hosted\) |) Tj
T*
(| [neon-lang-plugin-amazon_translate]\(https://github.com/NeonGeckoCom/neon-lang-plugin-amazon_t) Tj
T*
(ranslate\) | ??     | ??        | ?       | API \(key\)         |) Tj
T*
() Tj
T*
(### Key Features of Language Plugins:) Tj
T*
() Tj
T*
(- **Language Detection**: Plugins like `ovos-lang-detector-fasttext-plugin` automatically detec) Tj
T*
(t the language of the input text, which is crucial for multi-language support in voice assistan) Tj
T*
(ts.) Tj
T*
(- **Translation**: Plugins like `ovos-translate-plugin-nllb` and `ovos-google-translate-plugin`) Tj
T*
( can translate text from one language to another, enabling multilingual capabilities for OVOS.) Tj
T*
(- **Offline Support**: Some plugins, such as `ovos-lang-detector-fasttext-plugin`, offer offlin) Tj
T*
(e functionality, which is essential in environments where an internet connection may not be ava) Tj
T*
(ilable.) Tj
T*
(- **API-based Plugins**: Plugins like `ovos-translate-plugin-server` and `neon-lang-plugin-libr) Tj
T*
(etranslate` use external APIs and can be self-hosted or accessed with an API key for translatio) Tj
T*
(n services.) Tj
T*
() Tj
T*
(## Standalone Usage) Tj
T*
() Tj
T*
(*TODO: Add standalone usage instructions for each plugin once ready.*) Tj
T*
() Tj
T*
(## Plugin Template) Tj
T*
() Tj
T*
(*TODO: Provide a template for developing custom language detection and translation plugins.*) Tj
T*
() Tj
T*
(By using these plugins, developers can easily integrate language detection and translation feat) Tj
T*
(ures into OVOS-based voice assistants, making it more versatile and capable of handling multipl) Tj
T*
ET
endstream
endobj
95 0 obj
<< /Length 3354 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(e languages.) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/360-solver_plugins.md ===) Tj
T*
() Tj
T*
(# Solver Plugins) Tj
T*
() Tj
T*
(Solver plugins solve natural language queries, they define a unified api around specific kinds ) Tj
T*
(of questions and provide) Tj
T*
(auto translation capabilities for language support) Tj
T*
() Tj
T*
(A plugin can define the language it works in, eg, wolfram alpha only accepts english input at t) Tj
T*
(he time of this writing) Tj
T*
() Tj
T*
(Bidirectional [translation]\(https://openvoiceos.github.io/ovos-technical-manual/lang_plugins\) w) Tj
T*
(ill be handled behind the scenes for other languages) Tj
T*
() Tj
T*
(Solvers are used by individual skills and by the [Persona Framework]\(https://github.com/OpenVoi) Tj
T*
(ceOS/ovos-persona\)) Tj
T*
() Tj
T*
(## Question Solvers) Tj
T*
() Tj
T*
(**NEW** in `ovos-core` version **0.0.8**) Tj
T*
() Tj
T*
(Given a free form natural language question, return an answer) Tj
T*
() Tj
T*
(Originally implemented for [Neon]\(https://github.com/Neongeckocom/neon_solvers\)) Tj
T*
() Tj
T*
(non-exhaustive reference table of question solver plugins) Tj
T*
() Tj
T*
(| plugin                                                                                       ) Tj
T*
(                         | description                                      | native language |) Tj
T*
(|----------------------------------------------------------------------------------------------) Tj
T*
(-------------------------|--------------------------------------------------|-----------------|) Tj
T*
(| [ovos-solver-plugin-ddg]\(https://github.com/OpenVoiceOS/skill-ovos-ddg\)                      ) Tj
T*
(                         | extract keywords from query and search duck duck | english         |) Tj
T*
(| [ovos-solver-plugin-wikipedia]\(https://github.com/OpenVoiceOS/skill-ovos-wikipedia\)          ) Tj
T*
(                         | extract keywords from query and search wikipedia | english         |) Tj
T*
(| [ovos-solver-plugin-wolfram-alpha]\(https://github.com/OpenVoiceOS/skill-ovos-wolfie\)         ) Tj
T*
(                         | wolfram alpha spoken answers api                 | english         |) Tj
T*
(| [ovos-question-solver-wordnet]\(https://github.com/OpenVoiceOS/ovos-classifiers/blob/dev/ovos_) Tj
T*
(classifiers/opm/nltk.py\) | answer "what is" questions via wordnet           | english         |) Tj
T*
(| [ovos-solver-plugin-aiml]\(https://github.com/OpenVoiceOS/ovos-solver-plugin-aiml\)            ) Tj
T*
(                         | AIML chatbot                                     | english         |) Tj
T*
(| [ovos-solver-plugin-rivescript]\(https://github.com/OpenVoiceOS/ovos-solver-plugin-rivescript\)) Tj
T*
(                         | rivescript chatbot                               | english         |) Tj
T*
(| [ovos-solver-pandorabots-plugin]\(https://github.com/OVOSHatchery/ovos-solver-pandorabots-plug) Tj
T*
(in\)                      | old school chatbots hosted around the web        | english         |) Tj
T*
(| [ovos-solver-plugin-openai-persona]\(https://github.com/OpenVoiceOS/ovos-solver-plugin-openai-) Tj
T*
(persona\)                 | OpenAI API compatible LLMs                       | english         |) Tj
T*
() Tj
T*
(**Example Usage - DuckDuckGo plugin**) Tj
T*
() Tj
T*
(single answer) Tj
T*
ET
endstream
endobj
96 0 obj
<< /Length 2520 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(```python) Tj
T*
(from skill_ovos_ddg import DuckDuckGoSolver) Tj
T*
() Tj
T*
(d = DuckDuckGoSolver\(\)) Tj
T*
() Tj
T*
(query = "who is Isaac Newton") Tj
T*
() Tj
T*
(# full answer) Tj
T*
(ans = d.spoken_answer\(query\)) Tj
T*
(print\(ans\)) Tj
T*
(# Sir Isaac Newton was an English mathematician, physicist, astronomer, alchemist, theologian, ) Tj
T*
(and author widely recognised as one of the greatest mathematicians and physicists of all time a) Tj
T*
(nd among the most influential scientists. He was a key figure in the philosophical revolution k) Tj
T*
(nown as the Enlightenment. His book Philosophi Naturalis Principia Mathematica, first publishe) Tj
T*
(d in 1687, established classical mechanics. Newton also made seminal contributions to optics, a) Tj
T*
(nd shares credit with German mathematician Gottfried Wilhelm Leibniz for developing infinitesim) Tj
T*
(al calculus. In the Principia, Newton formulated the laws of motion and universal gravitation t) Tj
T*
(hat formed the dominant scientific viewpoint until it was superseded by the theory of relativit) Tj
T*
(y.) Tj
T*
(```) Tj
T*
() Tj
T*
(chunked answer, for conversational dialogs, ie "tell me more") Tj
T*
() Tj
T*
(```python) Tj
T*
(from skill_ovos_ddg import DuckDuckGoSolver) Tj
T*
() Tj
T*
(d = DuckDuckGoSolver\(\)) Tj
T*
() Tj
T*
(query = "who is Isaac Newton") Tj
T*
() Tj
T*
(# chunked answer) Tj
T*
(for sentence in d.long_answer\(query\):) Tj
T*
(    print\(sentence["title"]\)) Tj
T*
(    print\(sentence["summary"]\)) Tj
T*
(    print\(sentence.get\("img"\)\)) Tj
T*
() Tj
T*
(    # who is Isaac Newton) Tj
T*
(    # Sir Isaac Newton was an English mathematician, physicist, astronomer, alchemist, theologi) Tj
T*
(an, and author widely recognised as one of the greatest mathematicians and physicists of all ti) Tj
T*
(me and among the most influential scientists.) Tj
T*
(    # https://duckduckgo.com/i/ea7be744.jpg) Tj
T*
() Tj
T*
(    # who is Isaac Newton) Tj
T*
(    # He was a key figure in the philosophical revolution known as the Enlightenment.) Tj
T*
(    # https://duckduckgo.com/i/ea7be744.jpg) Tj
T*
() Tj
T*
(    # who is Isaac Newton) Tj
T*
(    # His book Philosophi Naturalis Principia Mathematica, first published in 1687, establishe) Tj
T*
(d classical mechanics.) Tj
T*
(    # https://duckduckgo.com/i/ea7be744.jpg) Tj
T*
() Tj
T*
(    # who is Isaac Newton) Tj
T*
(    # Newton also made seminal contributions to optics, and shares credit with German mathemati) Tj
T*
ET
endstream
endobj
97 0 obj
<< /Length 2702 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(cian Gottfried Wilhelm Leibniz for developing infinitesimal calculus.) Tj
T*
(    # https://duckduckgo.com/i/ea7be744.jpg) Tj
T*
() Tj
T*
(    # who is Isaac Newton) Tj
T*
(    # In the Principia, Newton formulated the laws of motion and universal gravitation that for) Tj
T*
(med the dominant scientific viewpoint until it was superseded by the theory of relativity.) Tj
T*
(    # https://duckduckgo.com/i/ea7be744.jpg) Tj
T*
(```  ) Tj
T*
() Tj
T*
(Auto translation, pass user language in context) Tj
T*
() Tj
T*
(```python) Tj
T*
(from skill_ovos_ddg import DuckDuckGoSolver) Tj
T*
() Tj
T*
(d = DuckDuckGoSolver\(\)) Tj
T*
() Tj
T*
(# bidirectional auto translate by passing lang context) Tj
T*
(sentence = d.spoken_answer\("Quem  Isaac Newton", context={"lang": "pt"}\)) Tj
T*
(print\(sentence\)) Tj
T*
(# Sir Isaac Newton foi um matemtico ingls, fsico, astrnomo, alquimista, telogo e autor amp) Tj
T*
(lamente reconhecido como um dos maiores matemticos e fsicos de todos os tempos e entre os cie) Tj
T*
(ntistas mais influentes. Ele era uma figura chave na revoluo filosfica conhecida como o Ilum) Tj
T*
(inismo. Seu livro Philosophi Naturalis Principia Mathematica, publicado pela primeira vez em 1) Tj
T*
(687, estabeleceu a mecnica clssica. Newton tambm fez contribuies seminais para a ptica, e) Tj
T*
( compartilha crdito com o matemtico alemo Gottfried Wilhelm Leibniz para desenvolver clculo) Tj
T*
( infinitesimal. No Principia, Newton formulou as leis do movimento e da gravitao universal qu) Tj
T*
(e formaram o ponto de vista cientfico dominante at ser superado pela teoria da relatividade) Tj
T*
(```) Tj
T*
() Tj
T*
(Plugins are expected to implement the `get_xxx` methods and leave the user facing equivalents a) Tj
T*
(lone) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_plugin_manager.templates.solvers import QuestionSolver) Tj
T*
() Tj
T*
() Tj
T*
(class MySolver\(QuestionSolver\):) Tj
T*
(    enable_tx = False  # if True enables bidirectional translation) Tj
T*
(    priority = 100) Tj
T*
() Tj
T*
(    def __init__\(self, config=None\):) Tj
T*
(        config = config or {}) Tj
T*
(        # set the "internal" language, defined by dev, not user) Tj
T*
(        # this plugin internally only accepts and outputs english) Tj
T*
(        config["lang"] = "en") Tj
T*
(        super\(\).__init__\(config\)) Tj
T*
() Tj
T*
(    # expected solver methods to be implemented) Tj
T*
(    def get_data\(self, query, context\):) Tj
T*
(        """) Tj
T*
(        query assured to be in self.default_lang) Tj
T*
(        return a dict response) Tj
T*
(        """) Tj
T*
(        return {"error": "404 answer not found"}) Tj
T*
ET
endstream
endobj
98 0 obj
<< /Length 2592 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(    def get_image\(self, query, context=None\):) Tj
T*
(        """) Tj
T*
(        query assured to be in self.default_lang) Tj
T*
(        return path/url to a single image to acompany spoken_answer) Tj
T*
(        """) Tj
T*
(        return "http://stock.image.jpg") Tj
T*
() Tj
T*
(    def get_spoken_answer\(self, query, context=None\):) Tj
T*
(        """) Tj
T*
(        query assured to be in self.default_lang) Tj
T*
(        return a single sentence text response) Tj
T*
(        """) Tj
T*
(        return "The full answer is XXX") Tj
T*
() Tj
T*
(    def get_expanded_answer\(self, query, context=None\):) Tj
T*
(        """) Tj
T*
(        query assured to be in self.default_lang) Tj
T*
(        return a list of ordered steps to expand the answer, eg, "tell me more") Tj
T*
() Tj
T*
(        {) Tj
T*
(            "title": "optional",) Tj
T*
(            "summary": "speak this",) Tj
T*
(            "img": "optional/path/or/url) Tj
T*
(        }) Tj
T*
(        :return:) Tj
T*
(        """) Tj
T*
(        steps = [) Tj
T*
(            {"title": "the question", "summary": "we forgot the question", "image": "404.jpg"},) Tj
T*
(            {"title": "the answer", "summary": "but the answer is 42", "image": "42.jpg"}) Tj
T*
(        ]) Tj
T*
(        return steps) Tj
T*
() Tj
T*
(```) Tj
T*
() Tj
T*
(## Multiple Choice Solvers) Tj
T*
() Tj
T*
(**NEW** in `ovos-core` version **0.0.8**) Tj
T*
() Tj
T*
(given a question and multiple answers, select the best answer) Tj
T*
() Tj
T*
(non-exhaustive reference table of multiple choice solver plugins) Tj
T*
() Tj
T*
(| plugin                                                                                       ) Tj
T*
(                          | description                                                        ) Tj
T*
(                                                                           | native language |) Tj
T*
(|----------------------------------------------------------------------------------------------) Tj
T*
(--------------------------|--------------------------------------------------------------------) Tj
T*
(---------------------------------------------------------------------------|-----------------|) Tj
T*
(| [ovos-choice-solver-bm25]\(https://github.com/OpenVoiceOS/ovos-classifiers/blob/dev/ovos_class) Tj
T*
(ifiers/opm/heuristics.py\) | using [Okapi BM25]\(https://en.wikipedia.org/wiki/Okapi_BM25\)  ranki) Tj
T*
(ng function to estimate the relevance of documents to a given search query |                 |) Tj
T*
() Tj
T*
(Implementation) Tj
T*
ET
endstream
endobj
99 0 obj
<< /Length 2580 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(```python) Tj
T*
(class MultipleChoiceSolver\(AbstractSolver\):) Tj
T*
(    """ select best answer from question + multiple choice) Tj
T*
(    handling automatic translation back and forth as needed""") Tj
T*
() Tj
T*
(    # plugin methods to override) Tj
T*
(    @abc.abstractmethod) Tj
T*
(    def select_answer\(self, query: str, options: List[str],) Tj
T*
(                      context: Optional[dict] = None\) -> str:) Tj
T*
(        """) Tj
T*
(        query and options assured to be in self.default_lang) Tj
T*
(        return best answer from options list) Tj
T*
(        """) Tj
T*
(        raise NotImplementedError) Tj
T*
() Tj
T*
(```) Tj
T*
() Tj
T*
(## Evidence Solver) Tj
T*
() Tj
T*
(**NEW** in `ovos-core` version **0.0.8**) Tj
T*
() Tj
T*
(given a document and a question about it, select the best passage that answers the question) Tj
T*
() Tj
T*
(non-exhaustive reference table of evidence solver plugins) Tj
T*
() Tj
T*
(| plugin                                                                                       ) Tj
T*
(                            | description                                                      ) Tj
T*
(                                                                             | native language ) Tj
T*
(|) Tj
T*
(|----------------------------------------------------------------------------------------------) Tj
T*
(----------------------------|------------------------------------------------------------------) Tj
T*
(-----------------------------------------------------------------------------|-----------------) Tj
T*
(|) Tj
T*
(| [ovos-evidence-solver-bm25]\(https://github.com/OpenVoiceOS/ovos-classifiers/blob/dev/ovos_cla) Tj
T*
(ssifiers/opm/heuristics.py\) | using [Okapi BM25]\(https://en.wikipedia.org/wiki/Okapi_BM25\)  ran) Tj
T*
(king function to estimate the relevance of documents to a given search query |                 ) Tj
T*
(|) Tj
T*
() Tj
T*
(Implementation) Tj
T*
() Tj
T*
(```python) Tj
T*
(class EvidenceSolver\(AbstractSolver\):) Tj
T*
(    """perform NLP reading comprehension task,) Tj
T*
(    handling automatic translation back and forth as needed""") Tj
T*
() Tj
T*
(    # plugin methods to override) Tj
T*
(    @abc.abstractmethod) Tj
T*
(    def get_best_passage\(self, evidence: str, question: str,) Tj
T*
(                         context: Optional[dict] = None\) -> str:) Tj
T*
(        """) Tj
T*
(        evidence and question assured to be in self.default_lang) Tj
T*
(         returns summary of provided document) Tj
T*
(        """) Tj
T*
ET
endstream
endobj
100 0 obj
<< /Length 2241 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(        raise NotImplementedError) Tj
T*
(```) Tj
T*
() Tj
T*
(## Entailment Solver) Tj
T*
() Tj
T*
(**NEW** in `ovos-core` version **0.0.8**) Tj
T*
() Tj
T*
(Given a hypothesis and a premise, return True if the premise entails the hypothesis, False othe) Tj
T*
(rwise) Tj
T*
() Tj
T*
(```python) Tj
T*
() Tj
T*
(class EntailmentSolver\(AbstractSolver\):) Tj
T*
(    """ select best answer from question + multiple choice) Tj
T*
(    handling automatic translation back and forth as needed""") Tj
T*
() Tj
T*
(    # plugin methods to override) Tj
T*
(    @abc.abstractmethod) Tj
T*
(    def check_entailment\(self, premise: str, hypothesis: str,) Tj
T*
(                         context: Optional[dict] = None\) -> bool:) Tj
T*
(        """) Tj
T*
(        premise and hyopithesis assured to be in self.default_lang) Tj
T*
(        return Bool, True if premise entails the hypothesis False otherwise) Tj
T*
(        """) Tj
T*
(        raise NotImplementedError) Tj
T*
(```) Tj
T*
() Tj
T*
(## Summarization Solver) Tj
T*
() Tj
T*
(**NEW** in `ovos-core` version **0.0.8**) Tj
T*
() Tj
T*
(Given a document, return it's summary) Tj
T*
() Tj
T*
(non-exhaustive reference table of multiple choice solver plugins) Tj
T*
() Tj
T*
(| plugin                                                                                       ) Tj
T*
(                                  | description                                      | native l) Tj
T*
(anguage |) Tj
T*
(|----------------------------------------------------------------------------------------------) Tj
T*
(----------------------------------|--------------------------------------------------|---------) Tj
T*
(--------|) Tj
T*
(| [ovos-summarizer-solver-wordfreq]\(https://github.com/OpenVoiceOS/ovos-classifiers/blob/dev/ov) Tj
T*
(os_classifiers/opm/heuristics.py\) | using word frequencies select the top utterances |         ) Tj
T*
(        |) Tj
T*
() Tj
T*
(Implementation) Tj
T*
() Tj
T*
(```python) Tj
T*
(class TldrSolver\(AbstractSolver\):) Tj
T*
(    """perform NLP summarization task,) Tj
T*
(    handling automatic translation back and forth as needed""") Tj
T*
() Tj
T*
(    # plugin methods to override) Tj
T*
(    @abc.abstractmethod) Tj
T*
ET
endstream
endobj
101 0 obj
<< /Length 2373 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(    def get_tldr\(self, document: str,) Tj
T*
(                 context: Optional[dict] = None\) -> str:) Tj
T*
(        """) Tj
T*
(        document assured to be in self.default_lang) Tj
T*
(         returns summary of provided document) Tj
T*
(        """) Tj
T*
(        raise NotImplementedError) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
(=== docs/361-nlp_plugins.md ===) Tj
T*
() Tj
T*
(# NLP plugins) Tj
T*
() Tj
T*
(Several NLP tasks are exposed as plugins, this allows to configure how to solve these tasks cen) Tj
T*
(trally) Tj
T*
() Tj
T*
(**NEW** in `ovos-core` version **0.0.8**) Tj
T*
() Tj
T*
(## Keyword Extraction) Tj
T*
() Tj
T*
(Extract keywords from utterances) Tj
T*
() Tj
T*
(| Plugin                                                                              | Descrip) Tj
T*
(tion                     |) Tj
T*
(|-------------------------------------------------------------------------------------|--------) Tj
T*
(-------------------------|) Tj
T*
(| [ovos-keyword-extractor-heuristic]\(https://github.com/OpenVoiceOS/ovos-classifiers\) |        ) Tj
T*
(                         |) Tj
T*
(| [ovos-keyword-extractor-rake]\(https://github.com/OpenVoiceOS/ovos-classifiers\)      | nltk da) Tj
T*
(ta dependent \(stopwords\) |) Tj
T*
() Tj
T*
(## Tokenization) Tj
T*
() Tj
T*
(Split utterances into tokens) Tj
T*
() Tj
T*
(| Plugin                                                                                      |) Tj
T*
( Description               |) Tj
T*
(|---------------------------------------------------------------------------------------------|) Tj
T*
(---------------------------|) Tj
T*
(| [ovos-tokenization-plugin-quebrafrases]\(https://github.com/OpenVoiceOS/ovos-plugin-manager\) |) Tj
T*
( heuristic based tokenizer |) Tj
T*
() Tj
T*
(## Sentence Segmentation) Tj
T*
() Tj
T*
(Split utterances into sub-commands) Tj
T*
() Tj
T*
(| Plugin                                                                                      |) Tj
T*
( Description                           |) Tj
T*
(|---------------------------------------------------------------------------------------------|) Tj
T*
(---------------------------------------|) Tj
T*
(| [ovos-segmentation-plugin-quebrafrases]\(https://github.com/OpenVoiceOS/ovos-plugin-manager\) |) Tj
T*
( heuristic based sentence segmentation |) Tj
T*
ET
endstream
endobj
102 0 obj
<< /Length 3200 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(## Coreference Resolution) Tj
T*
() Tj
T*
(Replace coreferences \(pronouns\) with their entities) Tj
T*
() Tj
T*
(| Plugin                                                                           | Descriptio) Tj
T*
(n                          |) Tj
T*
(|----------------------------------------------------------------------------------|-----------) Tj
T*
(---------------------------|) Tj
T*
(| [ovos-coref-solver-heuristic]\(https://github.com/OpenVoiceOS/ovos-classifiers\)   | heuristic ) Tj
T*
(based coref solver         |) Tj
T*
(| [ovos-classifiers-coref-solver]\(https://github.com/OpenVoiceOS/ovos-classifiers\) | models tra) Tj
T*
(ined with ovos-classifiers |) Tj
T*
() Tj
T*
(## Postag) Tj
T*
() Tj
T*
(| Plugin                                                                               | Descri) Tj
T*
(ption                          |) Tj
T*
(|--------------------------------------------------------------------------------------|-------) Tj
T*
(-------------------------------|) Tj
T*
(| [ovos-postag-plugin-nltk]\(https://github.com/OpenVoiceOS/ovos-plugin-manager\)        | using ) Tj
T*
(nltk default postag            |) Tj
T*
(| [ovos-classifiers-postag-plugin]\(https://github.com/OpenVoiceOS/ovos-plugin-manager\) | models) Tj
T*
( trained with ovos-classifiers |) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/370-ocp_plugins.md ===) Tj
T*
() Tj
T*
(# OVOS Common Playback - Stream Extractor Plugins) Tj
T*
() Tj
T*
(OVOS Common Playback \(OCP\) Stream Extractor Plugins are designed to handle the extraction of pl) Tj
T*
(ayable streams and their associated metadata just before playback. This delegation allows skill) Tj
T*
(s to focus on their core functionality without having to worry about stream extraction, thus pr) Tj
T*
(eventing additional latency during search or other operations. The relevant plugin is automatic) Tj
T*
(ally invoked based on the **Stream Extractor Identifier \(SEI\)** or a matching URL pattern.) Tj
T*
() Tj
T*
(A SEI typically precedes the URI, which is used to access the stream. If the required plugin is) Tj
T*
( missing, the corresponding request will be ignored.) Tj
T*
() Tj
T*
(## Available Plugins) Tj
T*
() Tj
T*
(Here are the key stream extractor plugins available in OVOS:) Tj
T*
() Tj
T*
(| Plugin | Description | Stream Extractor IDs \(SEIs\) | URL Pattern |) Tj
T*
(|--------|-------------|-----------------------------|-------------|) Tj
T*
(| **[ovos-ocp-rss-plugin]\(https://github.com/OpenVoiceOS/ovos-ocp-rss-plugin\)** | Handles RSS f) Tj
T*
(eed URLs | `rss//` | N/A |) Tj
T*
(| **[ovos-ocp-bandcamp-plugin]\(https://github.com/OpenVoiceOS/ovos-ocp-bandcamp-plugin\)** | Han) Tj
T*
(dles Bandcamp URLs | `bandcamp//` | `"bandcamp." in url` |) Tj
T*
(| **[ovos-ocp-youtube-plugin]\(https://github.com/OpenVoiceOS/ovos-ocp-youtube-plugin\)** | Handl) Tj
T*
(es YouTube URLs | `youtube//`, `ydl//`, `youtube.channel.live//` | `"youtube.com/" in url` or `) Tj
T*
("youtu.be/" in url` |) Tj
T*
(| **[ovos-ocp-m3u-plugin]\(https://github.com/OpenVoiceOS/ovos-ocp-m3u-plugin\)** | Handles `.pls) Tj
T*
(` and `.m3u` file formats | `m3u//`, `pls//` | `".pls" in uri or ".m3u" in uri` |) Tj
T*
ET
endstream
endobj
103 0 obj
<< /Length 2565 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(| **[ovos-ocp-news-plugin]\(https://github.com/OpenVoiceOS/ovos-ocp-news-plugin\)** | Handles ded) Tj
T*
(icated news websites | `news//` | `any\([uri.startswith\(url\) for url in URL_MAPPINGS]\)` |) Tj
T*
() Tj
T*
(Each plugin is designed to extract and process streams from specific types of content sources, ) Tj
T*
(ensuring seamless integration of services like YouTube, Bandcamp, RSS feeds, and more without i) Tj
T*
(ntroducing delays in skill interactions.) Tj
T*
() Tj
T*
(## Standalone Usage) Tj
T*
() Tj
T*
(*TODO: Instructions for using the plugins in a standalone setup*) Tj
T*
() Tj
T*
(## Plugin Template) Tj
T*
() Tj
T*
(*TODO: Template for creating a new stream extractor plugin*) Tj
T*
() Tj
T*
(### Summary) Tj
T*
() Tj
T*
(These plugins delegate the task of stream extraction to just before playback, relieving skills ) Tj
T*
(from the burden of handling it themselves and preventing latency during search or other tasks. ) Tj
T*
(They ensure OVOS can integrate various streaming services efficiently by using SEIs to identify) Tj
T*
( the stream and process the corresponding URI automatically.) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/371-media_plugins.md ===) Tj
T*
() Tj
T*
(# Media Playback Plugins) Tj
T*
() Tj
T*
(OVOS Media Plugins handle media playback, enabling OVOS to interact with popular streaming serv) Tj
T*
(ices and media players for audio, video, and remote control.) Tj
T*
() Tj
T*
(## Available Plugins) Tj
T*
() Tj
T*
(Here are the key media plugins available in OVOS:) Tj
T*
() Tj
T*
(| Plugin | Audio | Video | Web | Remote | Notes |) Tj
T*
(|--------|-------|-------|-----|--------|-------|) Tj
T*
(| **[ovos-media-plugin-chromecast]\(https://github.com/OpenVoiceOS/ovos-media-plugin-chromecast\)) Tj
T*
(** | ?? | ?? | ? | ?? | Extra: [cast_control]\(https://github.com/alexdelorenzo/cast_control\) fo) Tj
T*
(r MPRIS interface |) Tj
T*
(| **[ovos-media-plugin-spotify]\(https://github.com/OpenVoiceOS/ovos-media-plugin-spotify\)** | ?) Tj
T*
(? | ? | ? | ?? | Requires premium account<br>Extra: [spotifyd]\(https://github.com/Spotifyd/spot) Tj
T*
(ifyd\) for native Spotify player |) Tj
T*
() Tj
T*
(Each plugin is designed for specific media platforms and devices, allowing OVOS to interact wit) Tj
T*
(h popular streaming services and media players.) Tj
T*
() Tj
T*
() Tj
T*
(> ?? `ovos-media` is a work in progress and has not yet been released, plugins support both `ov) Tj
T*
(os-audio` and `ovos-media`) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## ovos-media-plugin-spotify) Tj
T*
() Tj
T*
ET
endstream
endobj
104 0 obj
<< /Length 2236 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(The **ovos-media-plugin-spotify** allows OVOS to initiate playback on Spotify, enabling integra) Tj
T*
(tion with OVOS systems.) Tj
T*
() Tj
T*
(> ?? The [companion skill]\(https://github.com/OpenVoiceOS/skill-ovos-spotify\) is needed for voi) Tj
T*
(ce search integration.) Tj
T*
() Tj
T*
(### Installation) Tj
T*
() Tj
T*
(To install the plugin, use the following command:) Tj
T*
() Tj
T*
(```bash) Tj
T*
(pip install ovos-media-plugin-spotify) Tj
T*
(```) Tj
T*
(> ? If you want to make the OVOS device itself a Spotify player, we recommend using [spotifyd]\() Tj
T*
(https://github.com/Spotifyd/spotifyd\).) Tj
T*
() Tj
T*
(### OAuth Setup) Tj
T*
() Tj
T*
(Currently, OAuth needs to be performed manually. After installing the plugin, run the following) Tj
T*
( command:) Tj
T*
() Tj
T*
(```bash) Tj
T*
($ ovos-spotify-oauth) Tj
T*
(```) Tj
T*
() Tj
T*
(This will prompt you to enter your Spotify developer credentials after you have created an appl) Tj
T*
(ication on [Spotify Developer Dashboard]\(https://developer.spotify.com\). Follow the instruction) Tj
T*
(s and enter the provided information.) Tj
T*
() Tj
T*
(Example output:) Tj
T*
() Tj
T*
(```bash) Tj
T*
($ ovos-spotify-oauth) Tj
T*
(This script creates the token information needed for running spotify) Tj
T*
(        with a set of personal developer credentials.) Tj
T*
() Tj
T*
(        It requires the user to go to developer.spotify.com and set up a) Tj
T*
(        developer account, create an "Application" and make sure to whitelist) Tj
T*
(        "https://localhost:8888".) Tj
T*
() Tj
T*
(        After you have done that enter the information when prompted and follow) Tj
T*
(        the instructions given.) Tj
T*
() Tj
T*
(YOUR CLIENT ID: xxxxx) Tj
T*
(YOUR CLIENT SECRET: xxxxx) Tj
T*
(Go to the following URL: https://accounts.spotify.com/authorize?client_id=xxx&response_type=cod) Tj
T*
(e&redirect_uri=https%3A%2F%2Flocalhost%3A8888&scope=user-library-read+streaming+playlist-read-p) Tj
T*
(rivate+user-top-read+user-read-playback-state) Tj
T*
(Enter the URL you were redirected to: https://localhost:8888/?code=.....) Tj
T*
(ocp_spotify oauth token saved) Tj
T*
(```) Tj
T*
() Tj
T*
(### Configuration) Tj
T*
() Tj
T*
ET
endstream
endobj
105 0 obj
<< /Length 2291 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(After OAuth setup, edit your `mycroft.conf` to expose your Spotify players. ) Tj
T*
() Tj
T*
(Use the provided `ovos-spotify-autoconfigure` script to automatically configure all Spotify dev) Tj
T*
(ices under your `mycroft.conf`:) Tj
T*
() Tj
T*
(```bash) Tj
T*
($ ovos-spotify-autoconfigure) Tj
T*
(This script will auto configure ALL spotify devices under your mycroft.conf) Tj
T*
() Tj
T*
(        SPOTIFY PREMIUM is required!) Tj
T*
() Tj
T*
(        If you have not yet authenticated your spotify account, run 'ovos-spotify-oauth' first!) Tj
T*
() Tj
T*
(Found device: OpenVoiceOS-TV) Tj
T*
() Tj
T*
(mycroft.conf updated!) Tj
T*
() Tj
T*
(# Legacy Audio Service:) Tj
T*
({'backends': {'spotify-OpenVoiceOS-TV': {'active': True,) Tj
T*
(                                         'identifier': 'OpenVoiceOS-TV',) Tj
T*
(                                         'type': 'ovos_spotify'}}}) Tj
T*
() Tj
T*
(# ovos-media Service:) Tj
T*
({'audio_players': {'spotify-OpenVoiceOS-TV': {'active': True,) Tj
T*
(                                              'aliases': ['OpenVoiceOS-TV'],) Tj
T*
(                                              'identifier': 'OpenVoiceOS-TV',) Tj
T*
(                                              'module': 'ovos-media-audio-plugin-spotify'}}}) Tj
T*
(```) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## ovos-media-plugin-chromecast) Tj
T*
() Tj
T*
(The **ovos-media-plugin-chromecast** allows OVOS to initiate playback on Chromecast devices, en) Tj
T*
(abling integration with OVOS systems.) Tj
T*
() Tj
T*
(### Installation) Tj
T*
() Tj
T*
(To install the plugin, use the following command:) Tj
T*
() Tj
T*
(```bash) Tj
T*
(pip install ovos-media-plugin-chromecast) Tj
T*
(```) Tj
T*
() Tj
T*
(![Chromecast Integration]\(https://github.com/OpenVoiceOS/ovos-media-plugin-chromecast/assets/33) Tj
T*
(701864/b1c7de47-750c-478a-9ebe-15d4076eb71c\)) Tj
T*
() Tj
T*
(> ? If you want to control Chromecast playback externally, you can install [cast_control]\(https) Tj
T*
(://github.com/alexdelorenzo/cast_control\) to enable MPRIS interface integration.) Tj
T*
() Tj
T*
(### Configuration) Tj
T*
() Tj
T*
(Use the `ovos-chromecast-autoconfigure` script to automatically configure Chromecast devices un) Tj
T*
(der your `mycroft.conf`:) Tj
T*
ET
endstream
endobj
106 0 obj
<< /Length 2333 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(```bash) Tj
T*
($ ovos-chromecast-autoconfigure) Tj
T*
(```) Tj
T*
() Tj
T*
(This script will discover Chromecast devices on your network and update `mycroft.conf` with the) Tj
T*
( necessary configuration.) Tj
T*
() Tj
T*
(Example output:) Tj
T*
() Tj
T*
(```bash) Tj
T*
($ ovos-chromecast-autoconfigure) Tj
T*
(Scanning...) Tj
T*
(    - Found Chromecast: Bedroom TV - 192.168.1.17:8009) Tj
T*
() Tj
T*
(Found devices: ['Bedroom TV']) Tj
T*
() Tj
T*
(mycroft.conf updated!) Tj
T*
() Tj
T*
(# Legacy Audio Service:) Tj
T*
({'backends': {'chromecast-bedroom-tv': {'active': True,) Tj
T*
(                                        'identifier': 'Bedroom TV',) Tj
T*
(                                        'type': 'ovos_chromecast'}}}) Tj
T*
() Tj
T*
(# ovos-media Service:) Tj
T*
({'audio_players': {'chromecast-bedroom-tv': {'active': True,) Tj
T*
(                                             'aliases': ['Bedroom TV'],) Tj
T*
(                                             'identifier': 'Bedroom TV',) Tj
T*
(                                             'module': 'ovos-media-audio-plugin-chromecast'}}},) Tj
T*
( 'video_players': {'chromecast-bedroom-tv': {'active': True,) Tj
T*
(                                             'aliases': ['Bedroom TV'],) Tj
T*
(                                             'identifier': 'Bedroom TV',) Tj
T*
(                                             'module': 'ovos-media-video-plugin-chromecast'}}}) Tj
T*
(```) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(### Summary) Tj
T*
() Tj
T*
(OVOS Media Plugins, like **ovos-media-plugin-spotify** and **ovos-media-plugin-chromecast**, pr) Tj
T*
(ovide seamless integration with popular media platforms and devices, allowing you to control pl) Tj
T*
(ayback directly through OVOS. Whether it's streaming from Spotify, controlling Chromecast devic) Tj
T*
(es, or casting media, these plugins enhance the flexibility of the OVOS ecosystem for media pla) Tj
T*
(yback.) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/399-intents.md ===) Tj
T*
() Tj
T*
(# Skills and Intents) Tj
T*
() Tj
T*
(At the heart of OVOS lies a powerful yet flexible **intent handling system** that enables voice) Tj
T*
(-driven interaction. The system connects **user utterances** to **developer-defined behavior** ) Tj
T*
(through *intents*.) Tj
T*
() Tj
T*
ET
endstream
endobj
107 0 obj
<< /Length 2076 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(## Key Concept) Tj
T*
() Tj
T*
(**Skills register intent handlers.**) Tj
T*
(In practice, this means that:) Tj
T*
() Tj
T*
(* A **bus message** representing a user **intent** is **mapped to a specific piece of code**?th) Tj
T*
(e **intent handler**?within a skill.) Tj
T*
(* When the system detects that an utterance matches a registered intent, it emits the relevant ) Tj
T*
(bus message, and the corresponding handler is invoked.) Tj
T*
() Tj
T*
(## How Intents Are Defined) Tj
T*
() Tj
T*
(Skill developers have **two main ways** to define intents:) Tj
T*
() Tj
T*
(### 1. Example Utterances) Tj
T*
() Tj
T*
(* Developers write full example phrases that a user might say.) Tj
T*
(* The engine learns patterns from these to match similar user utterances.) Tj
T*
(* Example:) Tj
T*
() Tj
T*
(```text) Tj
T*
(["what's the weather", "tell me the weather", "how's the forecast"]) Tj
T*
(```) Tj
T*
() Tj
T*
(### 2. Keyword Rules) Tj
T*
() Tj
T*
(* Developers define combinations of required and optional **keywords**.) Tj
T*
(* Rules are defined in a more structured way.) Tj
T*
(* Example:) Tj
T*
() Tj
T*
(```python) Tj
T*
(IntentBuilder\("WeatherIntent"\)) Tj
T*
(.require\("weather_keyword"\)) Tj
T*
(.optionally\("location"\)) Tj
T*
(```) Tj
T*
() Tj
T*
(## How OVOS Handles This) Tj
T*
() Tj
T*
(The **OVOS Core** is responsible for interpreting user utterances and deciding **which \(if any\)) Tj
T*
( intent** they match. This is done by comparing the input against the limited training data \(ex) Tj
T*
(ample phrases or keyword rules\) provided by skill developers.) Tj
T*
() Tj
T*
(### Modern Intent Pipelines) Tj
T*
() Tj
T*
(* Historically:) Tj
T*
() Tj
T*
(    * **Adapt** was used for keyword-based matching.) Tj
T*
(    * **Padatious** was used for example-based matching.) Tj
T*
(    * These were inherited from Mycroft.) Tj
T*
() Tj
T*
(* Now:) Tj
T*
() Tj
T*
(    * OVOS has evolved into a **highly configurable intent pipeline framework**.) Tj
T*
(    * Multiple intent engines can be used in **parallel or sequence**.) Tj
T*
ET
endstream
endobj
108 0 obj
<< /Length 2300 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(    * Skill developers and system integrators can choose or define:) Tj
T*
() Tj
T*
(        * Which engines to use) Tj
T*
(        * How to prioritize them) Tj
T*
(        * When to fall back or skip certain engines) Tj
T*
() Tj
T*
(### Example Flow:) Tj
T*
() Tj
T*
(1. User says: *"What's the weather like tomorrow in Lisbon?"*) Tj
T*
(2. OVOS pipelines the utterance through configured engines.) Tj
T*
(3. If an intent matches, a bus message like `intent:WeatherIntent` is emitted.) Tj
T*
(4. The matching skill?s handler for `WeatherIntent` is called with the parsed data.) Tj
T*
() Tj
T*
(## Summary) Tj
T*
() Tj
T*
(* **Intent = Message + Handler**) Tj
T*
(* Skills declare what they can handle; OVOS decides *when* to trigger them.) Tj
T*
(* Intents are defined either via:) Tj
T*
(    * Full utterance examples) Tj
T*
(    * Structured keyword rules) Tj
T*
(* Modern OVOS pipelines go beyond Padatious and Adapt, allowing advanced, modular configuration) Tj
T*
(s for intent parsing.) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/400-skill-design-guidelines.md ===) Tj
T*
() Tj
T*
(# Voice User Interface Design Guidelines) Tj
T*
() Tj
T*
(Through these guidelines you will learn how to use principles of Voice User Interface Design to) Tj
T*
( build more effective) Tj
T*
(skills. These tools will help define and validate the features of the skill before diving deep ) Tj
T*
(into development.) Tj
T*
() Tj
T*
(This guide will cover some methods to use that can help plan, prototype and test your skill dur) Tj
T*
(ing the early design stages.) Tj
T*
() Tj
T*
(> **CREDITS** - Voice User Interface Design Guidelines based on the [original work of Derick Sc) Tj
T*
(hweppe]\(https://derickschweppe.com/mycroft-ai-user-experience\)) Tj
T*
() Tj
T*
(## Interactions) Tj
T*
() Tj
T*
(### Intents) Tj
T*
() Tj
T*
(Let's start with an example. A user in Melbourne, Australia might want to know about the weathe) Tj
T*
(r. To ask for this) Tj
T*
(information, they might say:) Tj
T*
() Tj
T*
(> "Hey Mycroft, what's today's weather like?") Tj
T*
(>) Tj
T*
(> "Hey Mycroft, what's the weather like in Melbourne?") Tj
T*
(>) Tj
T*
(> "Hey Mycroft, weather") Tj
T*
() Tj
T*
(Even though these are three different expressions, for most of us they probably have roughly th) Tj
T*
ET
endstream
endobj
109 0 obj
<< /Length 2633 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(e same meaning. In each) Tj
T*
(case we would assume the user expects OVOS to respond with today's weather for their current lo) Tj
T*
(cation.) Tj
T*
() Tj
T*
(It is up us as Skill creators to teach OVOS the variety of ways that a user might express the s) Tj
T*
(ame intent. This is a key) Tj
T*
(part of the design process. It is the key difference between a Skill that kind of works if you ) Tj
T*
(know what to say, and a) Tj
T*
(Skill that feels intuitive and natural to talk to.) Tj
T*
() Tj
T*
(This is handled by an intent parser whose job it is to learn from your Skill what intents it ca) Tj
T*
(n handle, and extract) Tj
T*
(from the user's speech and key information that might be useful for your Skill. In this case it) Tj
T*
( might include the) Tj
T*
(specified date and location.) Tj
T*
() Tj
T*
() Tj
T*
(### Statements and Prompts) Tj
T*
() Tj
T*
(You can think of **Prompts** as questions and **Statements** as providing information to the us) Tj
T*
(er that does not need a) Tj
T*
(follow-up response. For example a weather forecast like this would be considered a statement:) Tj
T*
() Tj
T*
(> Today?s forecast is sunny with a high of 60 and a low of 45.) Tj
T*
() Tj
T*
(#### Statements) Tj
T*
() Tj
T*
(For a lot of skills the conversation might end with a simple statement from OVOS, and no furthe) Tj
T*
(r action is necessary.) Tj
T*
(Try to imagine what the user is trying to accomplish, if a simple statement gets the job done t) Tj
T*
(here is no reason to keep) Tj
T*
(the conversation rolling, and in fact a follow-up might annoy the user with unnecessary interac) Tj
T*
(tion.) Tj
T*
() Tj
T*
(#### Prompts) Tj
T*
() Tj
T*
(It may be tempting to always give users specific instructions like traditional automated phones) Tj
T*
( systems \\\(Interactive) Tj
T*
(Voice Response\\\). Many phone systems are notorious for being too verbose and difficult to follo) Tj
T*
(w.) Tj
T*
() Tj
T*
(With OVOS we?re trying to break that mold and make the interaction natural. If you follow the p) Tj
T*
(hone system method you) Tj
T*
(may be giving the user the exact phrasing to say, but you?re also taking up valuable time and t) Tj
T*
(raining them to think the) Tj
T*
(system is very narrow in capability. In the event that the user does give a response that your ) Tj
T*
(skill can not handle,) Tj
T*
(create follow-up prompts that steer the user back on track.) Tj
T*
() Tj
T*
(Remember, there are no errors in a cooperative conversation.) Tj
T*
() Tj
T*
(**Avoid**) Tj
T*
() Tj
T*
(| Speaker     |                                                                    |) Tj
T*
ET
endstream
endobj
110 0 obj
<< /Length 3583 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(|:------------|:-------------------------------------------------------------------|) Tj
T*
(| **Mycroft** | _How many people are playing? For example, you can say 2 players._ |) Tj
T*
() Tj
T*
(**Better**) Tj
T*
() Tj
T*
(| Speaker     |                                              |) Tj
T*
(|:------------|:---------------------------------------------|) Tj
T*
(| **Mycroft** | _How many players?_                          |) Tj
T*
(| **User**    | _My Brother and Myself_                      |) Tj
T*
(| **Mycroft** | _I?m sorry, what was the number of players?_ |) Tj
T*
(| **User**    | _Two_                                        |) Tj
T*
() Tj
T*
(In the first example the user is told explicitly what they can say, but the prompt is unnatural) Tj
T*
(, we don?t typically) Tj
T*
(suggest responses to a conversation partner in real life. These long-winded prompts can become ) Tj
T*
(tiresome if they are used) Tj
T*
(repeatedly throughout the skill. Remember the phone system example, typically poorly designed a) Tj
T*
(utomated phone systems) Tj
T*
(inundate the user with many options and additional instructions at every step of the interactio) Tj
T*
(n.) Tj
T*
() Tj
T*
(In the second example we see a better prompt, although the user gives a response that is easy f) Tj
T*
(or a human to understand) Tj
T*
(it is more difficult to design a skill to understand. Instead, the skill designer can apply a r) Tj
T*
(e-prompt strategy that) Tj
T*
(steers the user back on track and doesn't require them to start the interaction over. In this c) Tj
T*
(ase the re-prompt changes) Tj
T*
(the wording slightly to make it clear that the user needs to say a number. The next time the us) Tj
T*
(er interacts with this) Tj
T*
(Skill, they will likely say a number in their first interaction.) Tj
T*
() Tj
T*
(Determining whether to respond to the user with a statement or a prompt can be a bit tricky. Wh) Tj
T*
(en the user is) Tj
T*
(somewhat vague it is tempting to assume the user?s intent in order to speed along the interacti) Tj
T*
(on. Sometimes this is the) Tj
T*
(right approach and sometimes it is not. If you are very confident in the user?s input then it i) Tj
T*
(s alright to assume, and) Tj
T*
(respond with a statement. For example in the Wikipedia Skill the Wikipedia API is used to confi) Tj
T*
(dently select the best response.) Tj
T*
() Tj
T*
(**Wikipedia Skill**) Tj
T*
() Tj
T*
(| Speaker     |                                                                                ) Tj
T*
(                                                                                               ) Tj
T*
(                                                                    |) Tj
T*
(|:------------|:-------------------------------------------------------------------------------) Tj
T*
(-----------------------------------------------------------------------------------------------) Tj
T*
(--------------------------------------------------------------------|) Tj
T*
(| **User**    | _Tell me about Abraham Lincoln_                                                ) Tj
T*
(                                                                                               ) Tj
T*
(                                                                    |) Tj
T*
(| **Mycroft** | _Abraham Lincoln was an American statesman and lawyer who served as the 16th pr) Tj
T*
(esident of the UnitedStates from 1861 to 1865. Lincoln led the nation through its greatest mora) Tj
T*
(l, constitutional, and political crisis in the American Civil War_. |) Tj
T*
ET
endstream
endobj
111 0 obj
<< /Length 2979 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(In contrast, let?s look at an example of where a follow-up prompt is a better approach. You?re ) Tj
T*
(working on a skill that) Tj
T*
(gives important information about birds, such as wingspan, laden and unladen airspeed, etc..) Tj
T*
() Tj
T*
(**Avoid**) Tj
T*
() Tj
T*
(| Speaker     | \\*\\*\\*\\*                                                               |) Tj
T*
(|:------------|:-----------------------------------------------------------------------|) Tj
T*
(| **User**    | _what is the airspeed velocity of an unladen swallow?_                 |) Tj
T*
(| **Mycroft** | _The unladen airspeed of the european swallow is 20.1 miles per hour._ |) Tj
T*
() Tj
T*
(**Better**) Tj
T*
() Tj
T*
(| Speaker     |                                                                        |) Tj
T*
(|:------------|:-----------------------------------------------------------------------|) Tj
T*
(| **User**    | _What is the airspeed velocity of an unladen Swallow?_                 |) Tj
T*
(| **Mycroft** | _What do you mean, African or European Swallow?_                       |) Tj
T*
(| **User**    | European Swallow.                                                      |) Tj
T*
(| **Mycroft** | _The unladen airspeed of the European Swallow is 20.1 miles per hour._ |) Tj
T*
() Tj
T*
(In the first example Mycroft assumes the user is referring to the European Swallow, however the) Tj
T*
(re is nothing to give) Tj
T*
(confidence to that assumption. In this case it?s dangerous to assume the User meant the Europea) Tj
T*
(n Swallow since it is) Tj
T*
(just as likely they meant the African Swallow. When there is no confidence in one answer versus) Tj
T*
( another, OVOS should) Tj
T*
(follow up with a prompt as demonstrated in the second example.) Tj
T*
() Tj
T*
(Another approach to solving this problem is to offer the most likely answer and inform the user) Tj
T*
( that there are other) Tj
T*
(answers available with a statement.) Tj
T*
() Tj
T*
(### Confirmations) Tj
T*
() Tj
T*
(Confirmation approaches can also be defined by Statements or Prompts , but when we talk about t) Tj
T*
(hem in the context of) Tj
T*
(confirmations we call them Implicit and Explicit.) Tj
T*
() Tj
T*
(#### Implicit Confirmation) Tj
T*
() Tj
T*
(This type of confirmation is also a statement. The idea is to parrot the information back to th) Tj
T*
(e user to confirm that it) Tj
T*
(was correct, but not require additional input from the user. The implicit confirmation can be u) Tj
T*
(sed in a majority of) Tj
T*
(situations. For example Mycroft?s Timer Skill uses implicit confirmation when creating new time) Tj
T*
(rs.) Tj
T*
() Tj
T*
(**Timer Skill**) Tj
T*
() Tj
T*
(| Speaker     |                                          |) Tj
T*
(|:------------|:-----------------------------------------|) Tj
T*
(| **User**    | _Hey Mycroft set a timer for 5 minutes_  |) Tj
T*
(| **Mycroft** | _Alright, I?m starting a 5 minute timer_ |) Tj
T*
ET
endstream
endobj
112 0 obj
<< /Length 3098 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(**Avoid**) Tj
T*
() Tj
T*
(| Speaker     |                                                |) Tj
T*
(|:------------|:-----------------------------------------------|) Tj
T*
(| **User**    | _Hey Mycroft, add bananas to my shopping list_ |) Tj
T*
(| **Mycroft** | _done_                                         |) Tj
T*
() Tj
T*
(**Better**) Tj
T*
() Tj
T*
(| Speaker     |                                                |) Tj
T*
(|:------------|:-----------------------------------------------|) Tj
T*
(| **User**    | _Hey Mycroft, add bananas to my shopping list_ |) Tj
T*
(| **Mycroft** | _Adding bananas_                               |) Tj
T*
() Tj
T*
(#### Explicit Confirmation) Tj
T*
() Tj
T*
(This type of confirmation requires an input from the user to verify everything is correct. Only) Tj
T*
( use explicit) Tj
T*
(confirmation when needed as it can be tedious for the user to always confirm their input. This ) Tj
T*
(strategy is best when) Tj
T*
(there are multiple steps, and it would be difficult to fix a misstep without starting over, or ) Tj
T*
(when deleting or) Tj
T*
(modifying an existing multistep input.) Tj
T*
() Tj
T*
(**Avoid**) Tj
T*
() Tj
T*
(| **Speaker** |                                                                |) Tj
T*
(|:------------|:---------------------------------------------------------------|) Tj
T*
(| **User**    | _Hey Mycroft, set an alarm for 9:00 am tomorrow_               |) Tj
T*
(| **Mycroft** | _Ok, I?ve set an alarm for 9:00 am tomorrow, is that correct?_ |) Tj
T*
(| **User**    | _Yes_                                                          |) Tj
T*
(| **Mycroft** | _9:00 am alarm set_                                            |) Tj
T*
() Tj
T*
(**Better**) Tj
T*
() Tj
T*
(| Speaker     |                                                              |        ) Tj
T*
(|:------------|:-------------------------------------------------------------|) Tj
T*
(| **User**    | _Hey Mycroft, set an alarm for 9:00 am tomorrow_             |        ) Tj
T*
(| **Mycroft** | I've set an alarm for tomorrow at 9:00 am, 16 hours from now |        ) Tj
T*
() Tj
T*
(The first example requires the user to confirm the alarm. Since the interaction is quite short ) Tj
T*
(it isn?t necessary to use) Tj
T*
(explicit confirmation.) Tj
T*
() Tj
T*
(**Avoid**) Tj
T*
() Tj
T*
(| **Speaker** |                                                                               |) Tj
T*
(|:------------|:------------------------------------------------------------------------------|) Tj
T*
(| **User**    | _Hey Mycroft, set a calendar event for a meeting with Chris Stevens_          |) Tj
T*
(| **Mycroft** | _When is the event?_                                                          |) Tj
T*
(| **User**    | _Tomorrow at 11:00 am_                                                        |) Tj
T*
(| **Mycroft** | _should I send an invite to Chris Stevens?_                                   |) Tj
T*
(| **User**    | _Yes_                                                                         |) Tj
T*
ET
endstream
endobj
113 0 obj
<< /Length 3706 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(| **Mycroft** | _Alright, I've created a meeting for Tomorrow_                                |) Tj
T*
(| **Mycroft** | _Alright, I?ve created a meeting for Tomorrow at 11:00 am with Chris Stevens_ |) Tj
T*
(| **User**    | _Cancel my 11:00 am meeting tomorrow_                                         |) Tj
T*
(| **Mycroft** | _Done_                                                                        |) Tj
T*
() Tj
T*
(**Better**) Tj
T*
() Tj
T*
(| Speaker     |                                                                               |) Tj
T*
(|:------------|:------------------------------------------------------------------------------|) Tj
T*
(| **User**    | _Hey Mycroft, set a calendar event for a meeting with Chris Stevens_          |) Tj
T*
(| **Mycroft** | _When is the event?_                                                          |) Tj
T*
(| **User**    | _Tomorrow at 11:00 am_                                                        |) Tj
T*
(| **Mycroft** | _should I send an invite to Chris Stevens?_                                   |) Tj
T*
(| **User**    | Yes                                                                           |) Tj
T*
(| **Mycroft** | _Alright, I?ve created a meeting for Tomorrow at 11:00 am with Chris Stevens_ |) Tj
T*
(| **User**    | _Cancel my 11:00 am meeting tomorrow_                                         |) Tj
T*
(| **Mycroft** | _Are you sure you want to delete your meeting tomorrow at 11:00 am?_          |) Tj
T*
(| **User**    | _Yes_                                                                         |) Tj
T*
() Tj
T*
(Both examples use explicit and implicit confirmation correctly until the end of the interaction) Tj
T*
( when the user wants to) Tj
T*
(cancel the event. Unlike setting a simple timer or an alarm creating this calendar event requir) Tj
T*
(es multiple steps and) Tj
T*
(would require reasonable effort to recreate. There may also be significant consequences if the ) Tj
T*
(request was) Tj
T*
(misinterpreted and the meeting was cancelled unintentionally.) Tj
T*
() Tj
T*
(## Conversations) Tj
T*
() Tj
T*
(Any time the user needs to input a lot of information or the user needs to sort through a varie) Tj
T*
(ty of options a conversation will be needed.) Tj
T*
(Users may be used to systems that require them to separate input into different chunks. ) Tj
T*
(For example, many personal navigation devices \\\(GPS units\\\) require users to input the street n) Tj
T*
(umber, street name, city, and state separately, like this:) Tj
T*
() Tj
T*
(| Speaker               |                             |) Tj
T*
(|:----------------------|:----------------------------|) Tj
T*
(| **Navigation Device** | _What is the street number_ |) Tj
T*
(| **User**              | _123_                       |) Tj
T*
(| **Navigation Device** | _What is the street name_   |) Tj
T*
(| **User**              | _Main Street_               |) Tj
T*
(| **Navigation Device** | _What is the city_          |) Tj
T*
(| **User**              | _Springfield_               |) Tj
T*
(| **Navigation Device** | _Oregon_                    |) Tj
T*
() Tj
T*
(This was a limitation of the technology, both the STT and intent parser were not capable of han) Tj
T*
(dling an entire address. ) Tj
T*
(With OVOS you do not need to separate the address into multiple inputs. ) Tj
T*
(It?s also easy to think like a traditional GUI and translate what are typically separate fields) Tj
T*
( into prompts for the user,) Tj
T*
(but that will only slow down the interaction. ) Tj
T*
() Tj
T*
(The best solution is to allow the user to input information both ways, all at once, or in piece) Tj
T*
(s. ) Tj
T*
ET
endstream
endobj
114 0 obj
<< /Length 3893 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(For example the Alarm skill allows the user to set a complicated alarm all in one go, or in ste) Tj
T*
(ps.) Tj
T*
() Tj
T*
(**In Steps:**) Tj
T*
() Tj
T*
(| Speaker     |                                                 |) Tj
T*
(|:------------|:------------------------------------------------|) Tj
T*
(| **User**    | _Hey Mycroft, set a recurring alarm_            |) Tj
T*
(| **Mycroft** | _For what day?_                                 |) Tj
T*
(| **User**    | _weekdays_                                      |) Tj
T*
(| **Mycroft** | _For what time?_                                |) Tj
T*
(| **User**    | _7 am_                                          |) Tj
T*
(| **Mycroft** | I've set a recurring Alarm for 7 am on weekdays |) Tj
T*
() Tj
T*
(**All at once:**) Tj
T*
() Tj
T*
(| Speaker  |                                                         |) Tj
T*
(|:---------|:--------------------------------------------------------|) Tj
T*
(| **User** | Hey Mycroft, set a recurring alarm for weekdays at 7 am |) Tj
T*
(| Mycroft  | I've set a recurring Alarm for 7 am on weekdays         |) Tj
T*
() Tj
T*
(### Context) Tj
T*
() Tj
T*
(Conversational context is a given when speaking to another person, but not always when interact) Tj
T*
(ing with a computer based system. Many skills are designed with only a quick back and forth int) Tj
T*
(eraction in mind, and can operate well without conversational context, but conversational conte) Tj
T*
(xt can be a powerful addition to a skill and can make the interaction much more life like. Here) Tj
T*
( are some examples of how to use context in conversation. ) Tj
T*
() Tj
T*
(| Speaker     |                                                                                ) Tj
T*
(                                                                                               ) Tj
T*
(                                                           |) Tj
T*
(|:------------|:-------------------------------------------------------------------------------) Tj
T*
(-----------------------------------------------------------------------------------------------) Tj
T*
(-----------------------------------------------------------|) Tj
T*
(| **User**    | _Who is Shaquille O'Neal_                                                      ) Tj
T*
(                                                                                               ) Tj
T*
(                                                           |) Tj
T*
(| **Mycroft** | _Shaquille O'Neal is an American former professional basketball player who is a) Tj
T*
( sports analyst on the television program Inside the NBA on TNT. He is considered one of the gr) Tj
T*
(eatest players in National Basketball Association history_ |) Tj
T*
(| **User**    | _How tall is he?_                                                              ) Tj
T*
(                                                                                               ) Tj
T*
(                                                           |) Tj
T*
(| **Mycroft** | _seven foot 1 inches tall_                                                     ) Tj
T*
(                                                                                               ) Tj
T*
(                                                           |) Tj
T*
(| **User**    | _when did he retire_                                                           ) Tj
T*
(                                                                                               ) Tj
T*
(                                                           |) Tj
T*
(| **Mycroft** | _2011_                                                                         ) Tj
T*
(                                                                                               ) Tj
T*
(                                                           |) Tj
T*
() Tj
T*
ET
endstream
endobj
115 0 obj
<< /Length 2425 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(## Error Handling) Tj
T*
() Tj
T*
(Inevitably, the user will say something that your skill can?t handle. It?s best not to think of) Tj
T*
( these as errors on the part of the user, remember there aren?t really errors in conversations.) Tj
T*
( Conversations are naturally cooperative with both parties seeking to continue to a successful ) Tj
T*
(outcome. Keeping that in mind you should do your best to avoid Error Handling that is a dead-en) Tj
T*
(d.) Tj
T*
() Tj
T*
(**Avoid**) Tj
T*
() Tj
T*
(| Speaker     |                                        |) Tj
T*
(|:------------|:---------------------------------------|) Tj
T*
(| **User**    | _Timer_                                |) Tj
T*
(| **Mycroft** | _I'm sorry I can't help you with that_ |) Tj
T*
() Tj
T*
(**Better**) Tj
T*
() Tj
T*
(| **Speaker** |                         |) Tj
T*
(|:------------|:------------------------|) Tj
T*
(| **Use**r    | _Timer_                 |) Tj
T*
(| **Mycroft** | _A timer for how long?_ |) Tj
T*
(| **User**    | _5 minutes_             |) Tj
T*
() Tj
T*
(In the first example OVOS does not give the user any options to finish the job they set out to ) Tj
T*
(do. Try to avoid situations where the user has to start the conversation over.) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/401-skill_structure.md ===) Tj
T*
() Tj
T*
(## Anatomy of a Skill) Tj
T*
() Tj
T*
(### `vocab`, `dialog`, and `locale` directories) Tj
T*
() Tj
T*
(The `dialog`, `vocab`, and `locale` directories contain subdirectories for each spoken language) Tj
T*
( the skill supports.) Tj
T*
(The subdirectories are named using the [IETF language tag]\(https://en.wikipedia.org/wiki/IETF\\_) Tj
T*
(language\\_tag\) for the) Tj
T*
(language.) Tj
T*
(For example, Brazilian Portuguese is 'pt-br', German is 'de-de', and Australian English is 'en-) Tj
T*
(au'.) Tj
T*
() Tj
T*
(`dialog` and `vocab` have been **deprecated**, they are still supported, but we strongly recomm) Tj
T*
(end you use `locale` for new) Tj
T*
(skills) Tj
T*
() Tj
T*
(inside the `locale` folder you will find subfolders for each language \(e.g. `en-us`\), often all) Tj
T*
( you need to do in order) Tj
T*
(to translate a skill is adding a new folder for your language here) Tj
T*
() Tj
T*
(each language folder can have the structure it wants, you may see files grouped by type in subf) Tj
T*
(older or all in the base) Tj
T*
(folder) Tj
T*
() Tj
T*
ET
endstream
endobj
116 0 obj
<< /Length 2201 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(You will find several unfamiliar file extensions in this folder, but these are simple text file) Tj
T*
(s) Tj
T*
() Tj
T*
(* `.dialog` files used for defining speech responses) Tj
T*
(* `.intent` files used for defining Padatious Intents) Tj
T*
(* `.voc` files define keywords primarily used in Adapt Intents) Tj
T*
(* `.entity` files define a named entity primarily used in Padatious Intents) Tj
T*
() Tj
T*
(### __init__.py) Tj
T*
() Tj
T*
(The `__init__.py` file is where most of the Skill is defined using Python code. ) Tj
T*
() Tj
T*
(#### Importing libraries) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_workshop.intents import IntentBuilder) Tj
T*
(from ovos_workshop.decorators import intent_handler) Tj
T*
(from ovos_workshop.skills import OVOSSkill) Tj
T*
(```) Tj
T*
() Tj
T*
(This section of code imports the required _libraries_. Some libraries will be required on every) Tj
T*
( Skill, and your skill) Tj
T*
(may need to import additional libraries.) Tj
T*
() Tj
T*
(#### Class definition) Tj
T*
() Tj
T*
(The `class` definition extends the `OVOSSkill` class:) Tj
T*
() Tj
T*
(```python) Tj
T*
(class HelloWorldSkill\(OVOSSkill\):) Tj
T*
(```) Tj
T*
() Tj
T*
(The class should be named logically, for example "TimeSkill", "WeatherSkill", "NewsSkill", "IPa) Tj
T*
(ddressSkill". If you) Tj
T*
(would like guidance on what to call your Skill, please join) Tj
T*
(the [skills Channel on OVOS Chat]\(https://matrix.to/#/#openvoiceos-skills:matrix.org\).) Tj
T*
() Tj
T*
(Inside the class, methods are then defined.) Tj
T*
() Tj
T*
(#### __init__\(\)) Tj
T*
() Tj
T*
(This method is the _constructor_. It is called when the Skill is first constructed. It is often) Tj
T*
( used to declare state) Tj
T*
(variables or perform setup actions, however it cannot fully utilise OVOSSkill methods as the sk) Tj
T*
(ill is not fully initialized yet at this point. ) Tj
T*
() Tj
T*
(**You usually don't have to include the constructor.**) Tj
T*
() Tj
T*
(An example `__init__` method might be:) Tj
T*
() Tj
T*
(```python) Tj
T*
(def __init__\(self, *args, **kwargs\):) Tj
T*
(    super\(\).__init__\(*args, **kwargs\)) Tj
T*
(    self.already_said_hello = False) Tj
T*
ET
endstream
endobj
117 0 obj
<< /Length 2267 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(    self.be_friendly = True) Tj
T*
() Tj
T*
() Tj
T*
(```) Tj
T*
() Tj
T*
(`__init__` method must accept at least `skill_id` and `bus` kwargs and pass them to `super\(\)`, ) Tj
T*
(we recommend passing `*args, **kwargs` like in example above instead) Tj
T*
() Tj
T*
(**NOTE**: `self.skill_id`, `self.filesystem`, `self.settings`, `self.bus` are only available af) Tj
T*
(ter the call to `super\(\)`, if you need them consider using `initialize` instead) Tj
T*
() Tj
T*
() Tj
T*
(#### initialize\(\)) Tj
T*
() Tj
T*
(This method is called during `__init__`, if you implemented `__init__` in your skill it will be) Tj
T*
( called during `super\(\)`) Tj
T*
() Tj
T*
(Perform any final setup needed for the skill here. This function is invoked after the skill is ) Tj
T*
(fully constructed and) Tj
T*
(registered with the system. Intents will be registered and Skill settings will be available.) Tj
T*
() Tj
T*
(If you need to access `self.skill_id`, `self.bus`, `self.settings` or `self.filesystem` you mus) Tj
T*
(t do it here instead of `__init__`) Tj
T*
() Tj
T*
(```python) Tj
T*
(def initialize\(self\):) Tj
T*
(    my_setting = self.settings.get\('my_setting'\)) Tj
T*
(```) Tj
T*
() Tj
T*
(#### @intent_handler) Tj
T*
() Tj
T*
(We can use the `initialize` function to manually register intents, however the `@intent_handler) Tj
T*
(` decorator is a) Tj
T*
(cleaner way to achieve this. We will learn all about the different [Intents]\(../intents.md\) sho) Tj
T*
(rtly. ) Tj
T*
() Tj
T*
(In skills we can see two different intent styles.) Tj
T*
() Tj
T*
(1. An Adapt handler, triggered by a keyword defined in a `ThankYouKeyword.voc` file.) Tj
T*
() Tj
T*
(```python) Tj
T*
(   @intent_handler\(IntentBuilder\('ThankYouIntent'\).require\('ThankYouKeyword'\)\)) Tj
T*
(   def handle_thank_you_intent\(self, message\):) Tj
T*
(       self.speak_dialog\("welcome"\)) Tj
T*
(```) Tj
T*
(2. A Padatious intent handler, triggered using a list of sample phrases.) Tj
T*
() Tj
T*
(```python) Tj
T*
(   @intent_handler\('HowAreYou.intent'\)) Tj
T*
(   def handle_how_are_you_intent\(self, message\):) Tj
T*
(       self.speak_dialog\("how.are.you"\)) Tj
T*
(```) Tj
T*
() Tj
T*
(In both cases, the function receives two _parameters_:) Tj
T*
ET
endstream
endobj
118 0 obj
<< /Length 2352 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(* `self` - a reference to the HelloWorldSkill object itself) Tj
T*
(* `message` - an incoming message from the `messagebus`.) Tj
T*
() Tj
T*
(Both intents call the `self.speak_dialog\(\)` method, passing the name of a dialog file to it. In) Tj
T*
( this) Tj
T*
(case `welcome.dialog` and `how.are.you.dialog`.) Tj
T*
() Tj
T*
(#### stop\(\)) Tj
T*
() Tj
T*
(You will usually also have a `stop\(\)` method.) Tj
T*
() Tj
T*
(The `stop` method is called anytime a User says "Stop" or a similar command. It is useful for s) Tj
T*
(topping any output or process that a User might want to end without needing to issue a Skill sp) Tj
T*
(ecific utterance such as media playback or an expired alarm notification.) Tj
T*
() Tj
T*
(In the following example, we call a method `stop_beeping` to end a notification that our Skill ) Tj
T*
(has created.) Tj
T*
() Tj
T*
(If the skill "consumed" the stop signal it should return True, else return False. ) Tj
T*
() Tj
T*
(```python) Tj
T*
(    def stop\(self\):) Tj
T*
(        if self.beeping:) Tj
T*
(            self.stop_beeping\(\)) Tj
T*
(            return True) Tj
T*
(        return False) Tj
T*
(```) Tj
T*
() Tj
T*
(If a Skill has any active functionality, the stop\(\) method should terminate the functionality, ) Tj
T*
(leaving the Skill in a known good state.) Tj
T*
() Tj
T*
(When the skill returns True no other skill will be stopped, when it returns False the next acti) Tj
T*
(ve skill will attempt to stop and so on until something consumes the stop signal) Tj
T*
() Tj
T*
(#### shutdown\(\)) Tj
T*
() Tj
T*
(The `shutdown` method is called during the Skill process termination. ) Tj
T*
(It is used to perform any final actions to ensure all processes and operations in execution are) Tj
T*
( stopped safely. ) Tj
T*
(This might be particularly useful for Skills that have scheduled future events, may be writing ) Tj
T*
(to a file or database, or that have initiated new processes.) Tj
T*
() Tj
T*
(In the following example we cancel a scheduled event and call a method in our Skill to stop a s) Tj
T*
(ubprocess we initiated.) Tj
T*
() Tj
T*
(```python) Tj
T*
(    def shutdown\(self\):) Tj
T*
(        self.cancel_scheduled_event\('my_event'\)) Tj
T*
(        self.stop_my_subprocess\(\)) Tj
T*
(```) Tj
T*
() Tj
T*
(### settingsmeta.yaml) Tj
T*
() Tj
T*
ET
endstream
endobj
119 0 obj
<< /Length 2099 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(This file defines the settings UI that will be available to a User through a backend or compani) Tj
T*
(on app) Tj
T*
() Tj
T*
(Jump to [Skill Settings]\(skill-settings.md\) for more information on this file and handling of S) Tj
T*
(kill settings.) Tj
T*
() Tj
T*
() Tj
T*
(### setup.py) Tj
T*
() Tj
T*
(This file allows a skill to be installed just like any other python package. This means you can) Tj
T*
( publish your skill on pypi or favorite package manager and use it as a dependency) Tj
T*
() Tj
T*
(A typical setup.py file looks like this) Tj
T*
(```python) Tj
T*
(#!/usr/bin/env python3) Tj
T*
(from setuptools import setup) Tj
T*
(import os) Tj
T*
(from os import walk, path) Tj
T*
() Tj
T*
() Tj
T*
(# TODO update this info!) Tj
T*
(# Define package information) Tj
T*
(SKILL_CLAZZ = "MySkill"  # Make sure it matches __init__.py class name) Tj
T*
(VERSION = "0.0.1") Tj
T*
(URL = "https://github.com/authorName/ovos-skill-name") Tj
T*
(AUTHOR = "authorName") Tj
T*
(EMAIL = "") Tj
T*
(LICENSE = "Apache2.0") Tj
T*
(DESCRIPTION = "a skill for OVOS") Tj
T*
() Tj
T*
(PYPI_NAME = URL.split\("/"\)[-1]  # pip install PYPI_NAME) Tj
T*
() Tj
T*
(# Construct entry point for plugin) Tj
T*
(SKILL_ID = f"{PYPI_NAME.lower\(\)}.{AUTHOR.lower\(\)}") Tj
T*
(SKILL_PKG = PYPI_NAME.lower\(\).replace\('-', '_'\)) Tj
T*
(PLUGIN_ENTRY_POINT = f"{SKILL_ID}={SKILL_PKG}:{SKILL_CLAZZ}") Tj
T*
() Tj
T*
() Tj
T*
(def get_requirements\(requirements_filename: str\):) Tj
T*
(    """) Tj
T*
(    Parse requirements from a file.) Tj
T*
() Tj
T*
(    Args:) Tj
T*
(        requirements_filename \(str, optional\): The filename of the requirements file.) Tj
T*
(            Defaults to "requirements.txt".) Tj
T*
() Tj
T*
(    Returns:) Tj
T*
(        List[str]: A list of parsed requirements.) Tj
T*
() Tj
T*
(    Notes:) Tj
T*
(        If the environment variable MYCROFT_LOOSE_REQUIREMENTS is set, this function) Tj
T*
(        will modify the parsed requirements to use loose version requirements,) Tj
T*
(        replacing '==' with '>=' and '~=' with '>='.) Tj
T*
() Tj
T*
ET
endstream
endobj
120 0 obj
<< /Length 2293 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(    """) Tj
T*
(    requirements_file = path.join\(path.abspath\(path.dirname\(__file__\)\),) Tj
T*
(                                  requirements_filename\)) Tj
T*
(    with open\(requirements_file, 'r', encoding='utf-8'\) as r:) Tj
T*
(        requirements = r.readlines\(\)) Tj
T*
(    requirements = [r.strip\(\) for r in requirements if r.strip\(\)) Tj
T*
(                    and not r.strip\(\).startswith\("#"\)]) Tj
T*
(    if 'MYCROFT_LOOSE_REQUIREMENTS' in os.environ:) Tj
T*
(        print\('USING LOOSE REQUIREMENTS!'\)) Tj
T*
(        requirements = [r.replace\('==', '>='\).replace\('~=', '>='\) for r in requirements]) Tj
T*
(    return requirements) Tj
T*
() Tj
T*
() Tj
T*
(def find_resource_files\(\):) Tj
T*
(    """ensure all non-code resource files are included in the package""") Tj
T*
(    # add any folder with files your skill uses here! ) Tj
T*
(    resource_base_dirs = \("locale", "ui", "vocab", "dialog", "regex"\)) Tj
T*
(    base_dir = path.dirname\(__file__\)) Tj
T*
(    package_data = ["*.json"]) Tj
T*
(    for res in resource_base_dirs:) Tj
T*
(        if path.isdir\(path.join\(base_dir, res\)\):) Tj
T*
(            for \(directory, _, files\) in walk\(path.join\(base_dir, res\)\):) Tj
T*
(                if files:) Tj
T*
(                    package_data.append\() Tj
T*
(                        path.join\(directory.replace\(base_dir, ""\).lstrip\('/'\),) Tj
T*
(                                  '*'\)\)) Tj
T*
(    return package_data) Tj
T*
() Tj
T*
() Tj
T*
(# Setup configuration) Tj
T*
(setup\() Tj
T*
(    name=PYPI_NAME,) Tj
T*
(    version=VERSION,) Tj
T*
(    description=DESCRIPTION,) Tj
T*
(    url=URL,) Tj
T*
(    author=AUTHOR,) Tj
T*
(    author_email=EMAIL,) Tj
T*
(    license=LICENSE,) Tj
T*
(    package_dir={SKILL_PKG: ""},) Tj
T*
(    package_data={SKILL_PKG: find_resource_files\(\)},) Tj
T*
(    packages=[SKILL_PKG],) Tj
T*
(    include_package_data=True,) Tj
T*
(    install_requires=get_requirements\("requirements.txt"\),) Tj
T*
(    keywords='ovos skill plugin',) Tj
T*
(    entry_points={'ovos.plugin.skill': PLUGIN_ENTRY_POINT}) Tj
T*
(\)) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/402-statements.md ===) Tj
T*
() Tj
T*
(# Statements) Tj
T*
() Tj
T*
(## Speaking a statement) Tj
T*
ET
endstream
endobj
121 0 obj
<< /Length 3315 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(One of OVOS's most important core capabilities is to convert text to speech, that is, to speak ) Tj
T*
(a statement.) Tj
T*
() Tj
T*
(Within a Skill's Intent handler, you may pass a string of text to OVOS and OVOS will speak it. ) Tj
T*
( For example: `self.speak\('this is my statement'\)`.  That's cool and fun to experiment with, bu) Tj
T*
(t passing strings of text to Mycroft doesn't help to make Mycroft a multilingual product. Rathe) Tj
T*
(r than hard-coded strings of text, OVOS has a design pattern for multilingualism.) Tj
T*
() Tj
T*
(### Multilingualism) Tj
T*
() Tj
T*
(To support multilingualism, the text that OVOS speaks must come from a file. That file is calle) Tj
T*
(d a dialog file. The dialog file contains statements \(lines of text\) that a listener in a parti) Tj
T*
(cular language would consider to be equivalent.  For instance, in USA English, the statements ") Tj
T*
(I am okay" and "I am fine" are equivalent, and both of these statements might appear in a dialo) Tj
T*
(g file used for responding to the USA English question: "How are you?".) Tj
T*
() Tj
T*
(By convention, the dialog filename is formed by _dot connected_ _words_ and must end with ".dia) Tj
T*
(log".  The dialog filename should be descriptive of the contents as a whole.  Sometimes, the fi) Tj
T*
(lename describes the question being answered, and other times, the filename describes the answe) Tj
T*
(r itself.  For the example above, the dialog filename might be: **how.are.you.dialog** or **i.a) Tj
T*
(m.fine.dialog**.) Tj
T*
() Tj
T*
(Multilingualism is accomplished by translating the dialog files into other languages, and stori) Tj
T*
(ng them in their own directory named for the country and language. The filenames remain the sam) Tj
T*
(e.  Using the same filenames in separate language dependent directories allows the Skills to be) Tj
T*
( language agnostic; no hard-coded text strings.  Adjust the language setting for your Device **) Tj
T*
(** and OVOS uses the corresponding set of dialog files.  If the desired file does not exist in ) Tj
T*
(the directory for that language, Mycroft will use the file from the USA English directory.) Tj
T*
() Tj
T*
(As an example of the concept, the contents of **how.are.you.dialog** in the directory for the F) Tj
T*
(rench language in France \(fr-fr\) might include the statement: "Je vais bien".) Tj
T*
() Tj
T*
(### The Tomato Skill Revisited) Tj
T*
() Tj
T*
(To demonstrate the multilingualism design pattern, we examine the usage of the `speak_dialog\(\)`) Tj
T*
( method in the [Tomato Skill]\(intents/padatious-intents.md\) . &#x20;) Tj
T*
() Tj
T*
(The Tomato Skill has two Intents: one demonstrates simple, straightforward statements, and the ) Tj
T*
(other demonstrates the use of variables within a statement.) Tj
T*
() Tj
T*
(### Simple statement) Tj
T*
() Tj
T*
(The first Intent within the Tomato Skill, **what.is.a.tomato.intent**, handles inquiries about ) Tj
T*
(tomatoes, and the dialog file, **tomato.description.dialog**, provides the statements for OVOS ) Tj
T*
(to speak in reply to that inquiry.) Tj
T*
() Tj
T*
(Sample contents of the Intent and dialog files:) Tj
T*
() Tj
T*
() Tj
T*
(`what.is.a.tomato.intent`) Tj
T*
(```) Tj
T*
(what is a tomato) Tj
T*
(what would you say a tomato is) Tj
T*
ET
endstream
endobj
122 0 obj
<< /Length 2420 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(describe a tomato) Tj
T*
(what defines a tomato) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
(`tomato.description.dialog`) Tj
T*
(```) Tj
T*
(The tomato is a fruit of the nightshade family) Tj
T*
(A tomato is an edible berry of the plant Solanum lycopersicum) Tj
T*
(A tomato is a fruit but nutrionists consider it a vegetable) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
(Observe the statements in the tomato.description.dialog file. They are all acceptable answers t) Tj
T*
(o the question: "What is a tomato?"  Providing more than one statement in a dialog file is one ) Tj
T*
(way to make OVOS to seem less robotic, more natural. ) Tj
T*
(OVOS will randomly select one of the statements.) Tj
T*
() Tj
T*
(The Tomato Skill code snippet:) Tj
T*
() Tj
T*
(```python) Tj
T*
(@intent_handler\('what.is.a.tomato.intent'\)) Tj
T*
(def handle_what_is\(self, message\):) Tj
T*
(    """Speaks a statement from the dialog file.""") Tj
T*
(    self.speak_dialog\('tomato.description'\)) Tj
T*
(```) Tj
T*
() Tj
T*
(With the Tomato Skill installed, if the User utters **** "Hey Mycroft, what is a tomato?", the ) Tj
T*
(Intent handler method `handle_what_is\(\)` will be called.) Tj
T*
() Tj
T*
(Inside `handle_what_is\(\)`, we find: `self.speak_dialog\('tomato.description'\)` &#x20;) Tj
T*
() Tj
T*
(As you can probably guess, the parameter `'tomato.description'` is the dialog filename without ) Tj
T*
(the ".dialog" extension. Calling this method opens the dialog file, selects one of the statemen) Tj
T*
(ts, and converts that text to speech. OVOS will speak a statement from the dialog file.  In thi) Tj
T*
(s example, OVOS might say "The tomato is a fruit of the nightshade family". &#x20;) Tj
T*
() Tj
T*
(Remember, OVOS has a language setting that determines from which directory to find the dialog f) Tj
T*
(ile.) Tj
T*
() Tj
T*
(#### File locations) Tj
T*
() Tj
T*
(The [Skill Structure]\(../skill-structure/\) section describes where to place the Intent file and) Tj
T*
( dialog file.  Basically, there are two choices:) Tj
T*
() Tj
T*
(1. Put both files in `locale/en-us`) Tj
T*
(2. Put the dialog file in `dialog/en-us` , and put the Intent file in `vocab/en-us`) Tj
T*
() Tj
T*
(### Statements with variables) Tj
T*
() Tj
T*
(The second Padatious Intent, **do.you.like.intent**, demonstrates the use of variables in the I) Tj
T*
(ntent file and in one of the dialog files:) Tj
T*
() Tj
T*
ET
endstream
endobj
123 0 obj
<< /Length 2169 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(`do.you.like.intent`) Tj
T*
(```) Tj
T*
(do you like tomatoes) Tj
T*
(do you like {type} tomatoes) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
(`like.tomato.type.dialog`) Tj
T*
(```) Tj
T*
(I do like {type} tomatoes) Tj
T*
({type} tomatoes are my favorite) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
(`like.tomato.generic.dialog`) Tj
T*
(```) Tj
T*
(I do like tomatoes) Tj
T*
(tomatoes are my favorite) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
(Compare these two dialog files. The **like.tomato.generic.dialog** file contains only simple st) Tj
T*
(atements. The statements in the **like.tomato.type.dialog** file include a variable named `type) Tj
T*
(`.  The variable is a placeholder in the statement specifying where text may be inserted. The `) Tj
T*
(speak_dialog\(\)` method accepts a dictionary as an optional parameter. If that dictionary contai) Tj
T*
(ns an entry for a variable named in the statement, then the value from the dictionary will be i) Tj
T*
(nserted at the placeholder's location.) Tj
T*
() Tj
T*
() Tj
T*
(Dialog file variables are formed by surrounding the variable's name with curly braces. ) Tj
T*
(In OVOS parlance, curly braces are known as a _mustache_.) Tj
T*
() Tj
T*
(For multi-line dialog files, be sure to include the **same** variable on **all** lines.) Tj
T*
() Tj
T*
() Tj
T*
(The Tomato Skill code snippet:) Tj
T*
() Tj
T*
(```python) Tj
T*
(    @intent_handler\('do.you.like.intent'\)) Tj
T*
(    def handle_do_you_like\(self, message\):) Tj
T*
(        tomato_type = message.data.get\('type'\)) Tj
T*
(        if tomato_type is not None:) Tj
T*
(            self.speak_dialog\('like.tomato.type',) Tj
T*
(                              {'type': tomato_type}\)) Tj
T*
(        else:) Tj
T*
(            self.speak_dialog\('like.tomato.generic'\)) Tj
T*
(```) Tj
T*
() Tj
T*
(When the User utters "Hey Mycroft, do you like RED tomatoes?", the second of the two Intent lin) Tj
T*
(es "do you like {type} tomatoes" is recognized by Mycroft, and the value 'RED' is returned in t) Tj
T*
(he message dictionary assigned to the 'type' entry when `handle_do_you_like\(\)` is called. &#x20) Tj
T*
(;) Tj
T*
ET
endstream
endobj
124 0 obj
<< /Length 3160 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(The line `tomato_type = message.data.get\('type'\)` extracts the value from the dictionary for th) Tj
T*
(e entry 'type'.  In this case,  the variable `tomato_type` will receive the value 'RED', and `s) Tj
T*
(peak_dialog\(\)`will be called with the 'like.tomato.type' dialog file, and a dictionary with 'RE) Tj
T*
(D' assigned to 'type'.   The statement "I do like {type} tomatoes" might be randomly selected, ) Tj
T*
(and after insertion of the value 'RED' for the placeholder variable {type}, OVOS would say: "I ) Tj
T*
(do like RED tomatoes".) Tj
T*
() Tj
T*
(Should the User utter "Hey Mycroft, do you like tomatoes?", the first line in the Intent file ") Tj
T*
(do you like tomatoes" is recognized. There is no variable in this line, and when `handle_do_you) Tj
T*
(_like\(\)` is called, the dictionary in the message is empty. This means `tomato_type` is `None`,) Tj
T*
(`speak_dialog\('like.tomato.generic'\)` would be called, and Mycroft might reply with "Yes, I do ) Tj
T*
(like tomatoes".) Tj
T*
() Tj
T*
(## Waiting for speech) Tj
T*
() Tj
T*
(By default, the `speak_dialog\(\)` method is non-blocking. That is any code following the call to) Tj
T*
( `speak_dialog\(\)` will execute whilst OVOS is talking. This is useful to allow your Skill to pe) Tj
T*
(rform actions while it is speaking.&#x20;) Tj
T*
() Tj
T*
(Rather than telling the User that we are fetching some data, then going out to fetch it, we can) Tj
T*
( do the two things simultaneously providing a better experience.&#x20;) Tj
T*
() Tj
T*
(However, there are times when we need to wait until the statement has been spoken before doing ) Tj
T*
(something else. We have two options for this.) Tj
T*
() Tj
T*
(### Wait Parameter) Tj
T*
() Tj
T*
(We can pass a `wait=True` parameter to our `speak_dialog\(\)` method. This makes the method block) Tj
T*
(ing and no other code will execute until the statement has been spoken.) Tj
T*
() Tj
T*
(```python) Tj
T*
(@intent_handler\('what.is.a.tomato.intent'\)) Tj
T*
(def handle_what_is\(self, message\):) Tj
T*
(    """Speaks a statement from the dialog file.) Tj
T*
(       Waits \(i.e. blocks\) within speak_dialog\(\) until) Tj
T*
(       the speaking has completed. """) Tj
T*
(    self.speak_dialog\('tomato.description', wait=True\)) Tj
T*
(    self.log.info\("I waited for you"\)) Tj
T*
(```) Tj
T*
() Tj
T*
(## Using translatable resources) Tj
T*
() Tj
T*
(There may be a situation where the dialog file and the `speak_dialog\(\)` method do not give the ) Tj
T*
(Skill enough flexibility. For instance, there may be a need to manipulate the statement from th) Tj
T*
(e dialog file before having it spoken by OVOS.) Tj
T*
() Tj
T*
(The OVOSSkill class provides four multilingual methods to address these needs.  Each method use) Tj
T*
(s a file, and multilingualism is accomplished using the country/language directory system.) Tj
T*
() Tj
T*
(The `translate\(\)` method returns a random string from a ".dialog" file \(modified by a data dict) Tj
T*
(ionary\). &#x20;) Tj
T*
() Tj
T*
(The `translate_list\(\)` method returns a list of strings from a ".list" file \(each modified by t) Tj
T*
ET
endstream
endobj
125 0 obj
<< /Length 2855 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(he data dictionary\). Same as translate\\_template\(\) just with a different file extension.) Tj
T*
() Tj
T*
(The `translate_namedvalue\(\)` method returns a dictionary formed from CSV entries in a ".value" ) Tj
T*
(file.) Tj
T*
() Tj
T*
(The `translate_template\(\)` method returns a list of strings from a ".template" file \(each modif) Tj
T*
(ied by the data dictionary\). Same as translate\\_list\(\) just with a different file extension.) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/403-intents.md ===) Tj
T*
() Tj
T*
(# Intent Design) Tj
T*
() Tj
T*
(A user can accomplish the same task by expressing their intent in multiple ways. The role of th) Tj
T*
(e intent parser is to) Tj
T*
(extract from the user's speech key data elements that specify their intent in more detail. This) Tj
T*
( data can then be passed) Tj
T*
(to other services, such as Skills to help the user accomplish their intended task.) Tj
T*
() Tj
T*
(_Example_: Julie wants to know about today's weather in her current location, which is Melbourn) Tj
T*
(e, Australia.) Tj
T*
() Tj
T*
(> "hey mycroft, what's today's weather like?") Tj
T*
(>) Tj
T*
(> "hey mycroft, what's the weather like in Melbourne?") Tj
T*
(>) Tj
T*
(> "hey mycroft, weather") Tj
T*
() Tj
T*
(Even though these are three different expressions, for most of us they probably have roughly th) Tj
T*
(e same meaning. In each) Tj
T*
(case we would assume the user expects OVOS to respond with today's weather for their current lo) Tj
T*
(cation. The role of an) Tj
T*
(intent parser is to determine what this intent is.) Tj
T*
() Tj
T*
(In the example above, we might extract data elements like:) Tj
T*
() Tj
T*
(* **weather** - we know that Julie wants to know about the weather, but she has not been specif) Tj
T*
(ic about the type of) Tj
T*
(  weather, such as _wind_, _precipitation_, _snowfall_ or the risk of _fire danger_ from bushfi) Tj
T*
(res. Melbourne, Australia) Tj
T*
(  rarely experiences snowfall, but falls under bushfire risk every summer.) Tj
T*
(* **location** - Julie has stipulated her location as Melbourne, but she does not state that sh) Tj
T*
(e means Melbourne,) Tj
T*
(  Australia. How do we distinguish this from Melbourne, Florida, United States?) Tj
T*
(* **date** - Julie has been specific about the _timeframe_ she wants weather data for - today. ) Tj
T*
(But how do we know what) Tj
T*
(  today means in Julie's timezone. Melbourne, Australia is between 14-18 hours ahead of the Uni) Tj
T*
(ted States. We don't want) Tj
T*
(  to give Julie yesterday's weather, particularly as Melbourne is renowned for having changeabl) Tj
T*
(e weather.) Tj
T*
() Tj
T*
() Tj
T*
(OVOS has two separate Intent parsing engines each with their own strengths. ) Tj
T*
(Each of these can be used in most situations, however they will process the utterance in differ) Tj
T*
ET
endstream
endobj
126 0 obj
<< /Length 2561 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(ent ways.) Tj
T*
() Tj
T*
(**Example based** intents are trained on whole phrases. These intents are generally more accura) Tj
T*
(te however require you to include sample phrases that cover the) Tj
T*
(breadth of ways that a User may ask about something.) Tj
T*
() Tj
T*
(**Keyword / Rule based ** these intents look for specific required keywords. They are more flex) Tj
T*
(ible, but since these are essentially rule based this can result in a lot of false matches.) Tj
T*
(A badly designed intent may totally throw the intent parser off guard. The main advantage of ke) Tj
T*
(yword based intents is the integration with [conversational context]\(../context\), they facilita) Tj
T*
(te continuous dialogs) Tj
T*
() Tj
T*
(OVOS is moving towards a plugin system for intent engines, currently only the default MycroftAI) Tj
T*
( intent parsers are supported) Tj
T*
() Tj
T*
(- **Padatious** is a light-weight neural network that is trained on whole phrases. You can find) Tj
T*
( the official documentation [here]\(https://mycroft-ai.gitbook.io/docs/mycroft-technologies/pada) Tj
T*
(tious\)) Tj
T*
(- **Adapt** is a keyword based parser. You can find the official documentation [here]\(https://m) Tj
T*
(ycroft-ai.gitbook.io/docs/mycroft-technologies/adapt\)) Tj
T*
() Tj
T*
(> NOTE: Padatious doesnt handle numbers well, internally sees all digits as "#". If you need to) Tj
T*
( use digits in your intents, it is recommended you use Adapt instead.) Tj
T*
() Tj
T*
() Tj
T*
(We will now look at each in more detail, including how to use them in a Skill.) Tj
T*
() Tj
T*
(## Keyword Intents) Tj
T*
() Tj
T*
(Keyword based intent parsers determine user intent based on a list of keywords or entities cont) Tj
T*
(ained within a user's utterance.) Tj
T*
() Tj
T*
(### Defining keywords and entities) Tj
T*
() Tj
T*
(#### Vocab \(.voc\) Files) Tj
T*
() Tj
T*
(Vocab files define keywords that the intent parser will look for in a Users utterance to determ) Tj
T*
(ine their intent.) Tj
T*
() Tj
T*
(These files can be located in either the `vocab/lang-code/` or `locale/lang-code/` directories ) Tj
T*
(of a Skill. They can have one or more lines to list synonyms or terms that have the same meanin) Tj
T*
(g in the context of this Skill. ) Tj
T*
(OVOS will match _any_ of these keywords with the Intent.) Tj
T*
() Tj
T*
(Consider a simple `Potato.voc`. Within this file we might include:) Tj
T*
() Tj
T*
(```) Tj
T*
(potato) Tj
T*
(potatoes) Tj
T*
(spud) Tj
T*
(```) Tj
T*
() Tj
T*
(If the User speaks _either_:) Tj
T*
() Tj
T*
ET
endstream
endobj
127 0 obj
<< /Length 2101 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(> potato) Tj
T*
() Tj
T*
(or) Tj
T*
() Tj
T*
(> potatoes) Tj
T*
() Tj
T*
(or) Tj
T*
() Tj
T*
(> spud) Tj
T*
() Tj
T*
(OVOS will match this to any Keyword Intents that are using the `Potato` keyword.) Tj
T*
() Tj
T*
(#### Regular Expression \(.rx\) Files) Tj
T*
() Tj
T*
(Regular expressions \(or regex\) allow us to capture entities based on the structure of an uttera) Tj
T*
(nce.) Tj
T*
() Tj
T*
(We strongly recommend you avoid using regex, it is very hard to make portable across languages,) Tj
T*
( hard to translate and the reported confidence of the intents is not great.) Tj
T*
() Tj
T*
(We suggest using example based intents instead if you find yourself needing regex) Tj
T*
() Tj
T*
(These files can be located in either the `regex/lang-code/` or `locale/lang-code/` directories ) Tj
T*
(of a Skill. They can have one or more lines to provide different ways that an entity may be ref) Tj
T*
(erenced. OVOS will execute these lines in the order they appear and return the first result as ) Tj
T*
(an entity to the Intent Handler.) Tj
T*
() Tj
T*
(Let's consider a `type.rx` file to extract the type of potato we are interested in. Within this) Tj
T*
( file we might include:) Tj
T*
() Tj
T*
(```) Tj
T*
(.* about \(?P<Type>.*\) potatoes) Tj
T*
(.* \(make|like\) \(?P<Type>.*\) potato) Tj
T*
(```) Tj
T*
() Tj
T*
(**What is this regex doing?** `.*` matches zero, one or more of any single character. `\(?P<Type) Tj
T*
(>.*\)` is known as a Named Capturing Group. The variable name is defined between the "<>", and w) Tj
T*
(hat is captured is defined after this name. In this case we use `.*` to capture anything.) Tj
T*
() Tj
T*
([Learn more about Regular Expressions]\(https://github.com/ziishaned/learn-regex/blob/master/REA) Tj
T*
(DME.md\).) Tj
T*
() Tj
T*
() Tj
T*
(So our first line would match an utterance such as:) Tj
T*
() Tj
T*
(> Tell me about _sweet potatoes_) Tj
T*
() Tj
T*
(Whilst the second line will match either:) Tj
T*
() Tj
T*
(> Do you like _deep fried potato_) Tj
T*
() Tj
T*
(or) Tj
T*
() Tj
T*
(> How do I make _mashed potato_) Tj
T*
ET
endstream
endobj
128 0 obj
<< /Length 2036 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(From these three utterances, what will the extracted `Type` be:\\) Tj
T*
(1\\. `sweet`\\) Tj
T*
(2\\. `deep fried`\\) Tj
T*
(3\\. `mashed`) Tj
T*
() Tj
T*
(This `Type` will be available to use in your Skill's Intent Handler on the `message` object. We) Tj
T*
( can access this using:) Tj
T*
() Tj
T*
(```) Tj
T*
(message.data.get\('Type'\)) Tj
T*
(```) Tj
T*
() Tj
T*
(### Using Keyword Intents in a Skill) Tj
T*
() Tj
T*
(Now that we have a Vocab and Regular Expression defined, let's look at how to use these in a si) Tj
T*
(mple Skill.) Tj
T*
() Tj
T*
(For the following example we will use the two files we outlined above:) Tj
T*
() Tj
T*
(* `Potato.voc`) Tj
T*
(* `Type.rx`) Tj
T*
() Tj
T*
(We will also add some new `.voc` files:) Tj
T*
() Tj
T*
(* `Like.voc` - containing a single line "like") Tj
T*
(* `You.voc` - containing a single line "you") Tj
T*
(* `I.voc` - containing a single line "I") Tj
T*
() Tj
T*
(#### Creating the Intent Handler) Tj
T*
() Tj
T*
(To construct a Keyword Intent, we use the intent_handler\(\) \\_decorator_ and pass in the IntentB) Tj
T*
(uilder helper class.) Tj
T*
() Tj
T*
([Learn more about _decorators_ in Python]\(https://en.wikipedia.org/wiki/Python\\_syntax\\_and\\_se) Tj
T*
(mantics#Decorators\).) Tj
T*
() Tj
T*
(Both of these must be imported before we can use them:) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_workshop.intents import IntentBuilder) Tj
T*
(from ovos_workshop.decorators import intent_handler) Tj
T*
(```) Tj
T*
() Tj
T*
(The IntentBuilder is then passed the name of the Intent as a string, followed by one or more pa) Tj
T*
(rameters that correspond with one of our `.voc` or `.rx` files.) Tj
T*
() Tj
T*
(```python) Tj
T*
(@intent_handler\(IntentBuilder\('IntentName'\)) Tj
T*
(                              .require\('Potato'\)) Tj
T*
(                              .require\('Like'\)) Tj
T*
(                              .optionally\('Type'\)) Tj
T*
(                              .one_of\('You', 'I'\)\)) Tj
T*
(```) Tj
T*
ET
endstream
endobj
129 0 obj
<< /Length 2338 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(In this example:) Tj
T*
() Tj
T*
(* the `Potato` and `Like` keywords are required. It must be present for the intent to match.) Tj
T*
(* the `Type` entity is optional. A stronger match will be made if this is found, but it is not ) Tj
T*
(required.) Tj
T*
(* we require at least one of the `You` or `I` keywords.) Tj
T*
() Tj
T*
(What are some utterances that would match this intent?) Tj
T*
() Tj
T*
(> Do you like potato? Do you like fried potato? Will I like mashed potato? Do you think I would) Tj
T*
( like potato?) Tj
T*
() Tj
T*
(What are some utterances that would _not_ match the intent?) Tj
T*
() Tj
T*
(> How do I make mashed potato?) Tj
T*
() Tj
T*
(_The required `Like` keyword is not found._) Tj
T*
() Tj
T*
(> Is it like a potato?) Tj
T*
() Tj
T*
(_Neither the `You` nor `I` keyword is found._) Tj
T*
() Tj
T*
(#### Including it in a Skill) Tj
T*
() Tj
T*
(Now we can create our Potato Skill:) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_workshop.intents import IntentBuilder) Tj
T*
(from ovos_workshop.skills import OVOSSkill) Tj
T*
(from ovos_workshop.decorators import intent_handler) Tj
T*
() Tj
T*
() Tj
T*
(class PotatoSkill\(OVOSSkill\):) Tj
T*
() Tj
T*
(    @intent_handler\(IntentBuilder\('WhatIsPotato'\).require\('What'\)) Tj
T*
(                    .require\('Potato'\)\)) Tj
T*
(    def handle_what_is\(self, message\):) Tj
T*
(        self.speak_dialog\('potato.description'\)) Tj
T*
() Tj
T*
(    @intent_handler\(IntentBuilder\('DoYouLikePotato'\).require\('Potato'\)) Tj
T*
(                    .require\('Like'\).optionally\('Type'\).one_of\('You', 'I'\)\)) Tj
T*
(    def handle_do_you_like\(self, message\):) Tj
T*
(        potato_type = message.data.get\('Type'\)) Tj
T*
(        if potato_type is not None:) Tj
T*
(            self.speak_dialog\('like.potato.type',) Tj
T*
(                              {'type': potato_type}\)) Tj
T*
(        else:) Tj
T*
(            self.speak_dialog\('like.potato.generic'\)) Tj
T*
(```) Tj
T*
() Tj
T*
(You can [download this entire Potato Skill from Github]\(https://github.com/krisgesling/dev-ex-a) Tj
T*
(dapt-intents-skill/blob/master/\\_\\_init\\_\\_.py\), or see another Keyword Intent handler example ) Tj
T*
(in the [Hello World Skill]\(https://github.com/MycroftAI/skill-hello-world/blob/f3eb89be6d80e183) Tj
T*
ET
endstream
endobj
130 0 obj
<< /Length 2960 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(4637a64566c707d05fb8e3fa/\\_\\_init\\_\\_.py#L37\)) Tj
T*
() Tj
T*
() Tj
T*
(### Common Problems) Tj
T*
() Tj
T*
(#### More vocab!) Tj
T*
() Tj
T*
(One of the most common mistakes when getting started with Skills is that the vocab file doesn't) Tj
T*
( include all the keywords or terms that a User might use to trigger the intent. It is important) Tj
T*
( to map out your Skill and test the interactions with others to see how they might ask question) Tj
T*
(s differently.) Tj
T*
() Tj
T*
(#### I have added new phrases in the .voc file, but Mycroft isn't recognizing them) Tj
T*
() Tj
T*
(1. Compound words like "don't", "won't", "shouldn't" etc. are normalized by OVOS - so they beco) Tj
T*
(me "do not", "will not", "should not". You should use the normalized words in your `.voc` files) Tj
T*
(. Similarly, definite articles like the word "the" are removed in the normalization process, so) Tj
T*
( avoid using them in your `.voc` or `.rx` files as well.) Tj
T*
(2. Tab != 4 Spaces, sometimes your text editor or IDE automatically replaces tabs with spaces o) Tj
T*
(r vice versa. This may lead to an indentation error. So make sure there's no extra tabs and tha) Tj
T*
(t your editor doesn't replace your spaces!) Tj
T*
(3. Wrong order of files directories is a very common mistake. You have to make a language sub-f) Tj
T*
(older inside the dialog, vocab or locale folders such as `skill-dir/locale/en-us/somefile.dialo) Tj
T*
(g`. So make sure that your `.voc` files and `.dialog` files inside a language subfolder.) Tj
T*
() Tj
T*
(#### I am unable to match against the utterance string) Tj
T*
() Tj
T*
(The utterance string received from the speech-to-text engine is received all lowercase. As such) Tj
T*
( any string matching you are trying to do should also be converted to lowercase. For example:) Tj
T*
() Tj
T*
(```python) Tj
T*
(    @intent_handler\(IntentBuilder\('Example'\).require\('Example'\).require\('Intent'\)\)) Tj
T*
(    def handle_example\(self, message\):) Tj
T*
(        utterance = message.data.get\('utterance'\)) Tj
T*
(        if 'Proper Noun'.lower\(\) in utterance:) Tj
T*
(            self.speak\('Found it'\)) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
(## Example based Intents) Tj
T*
() Tj
T*
(Example based parsers have a number of key benefits over other intent parsing technologies.) Tj
T*
() Tj
T*
(* Intents are easy to create) Tj
T*
(* You can easily extract entities and then use these in Skills. For example, "Find the nearest ) Tj
T*
(gas station" -&gt; `{ "place":"gas station"}`) Tj
T*
(* Disambiguation between intents is easier) Tj
T*
(* Harder to create a bad intent that throws the intent parser off) Tj
T*
() Tj
T*
(### Creating Intents) Tj
T*
() Tj
T*
(Most example based intent parsers use a series of example sentences to train a machine learning) Tj
T*
( model to identify an intent. Regex can also be used behind the scenes for example to extract e) Tj
T*
(ntities) Tj
T*
ET
endstream
endobj
131 0 obj
<< /Length 2495 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(The examples are stored in a Skill's `vocab/lang` or `local/lang` directory, in files ending in) Tj
T*
( the file extension `.intent`. For example, if you were to create a _tomato_ Skill to respond t) Tj
T*
(o questions about a _tomato_, you would create the file) Tj
T*
() Tj
T*
(`vocab/en-us/what.is.a.tomato.intent`) Tj
T*
() Tj
T*
(This file would contain examples of questions asking what a _tomato_ is.) Tj
T*
() Tj
T*
(```text) Tj
T*
(what would you say a tomato is) Tj
T*
(what is a tomato) Tj
T*
(describe a tomato) Tj
T*
(what defines a tomato) Tj
T*
(```) Tj
T*
() Tj
T*
(These sample phrases do not require punctuation like a question mark. We can also leave out con) Tj
T*
(tractions such as "what's", as this will be automatically expanded to "what is" by OVOS before ) Tj
T*
(the utterance is parsed.) Tj
T*
() Tj
T*
(Each file should contain at least 4 examples for good modeling.) Tj
T*
() Tj
T*
(The above example allows us to map many phrases to a single intent, however often we need to ex) Tj
T*
(tract specific data from an utterance. This might be a date, location, category, or some other ) Tj
T*
(`entity`.) Tj
T*
() Tj
T*
(#### Defining entities) Tj
T*
() Tj
T*
(Let's now find out OVOS's opinion on different types of tomatoes. To do this we will create a n) Tj
T*
(ew intent file: `vocab/en-us/do.you.like.intent`) Tj
T*
() Tj
T*
(with examples of questions about mycroft's opinion about tomatoes:) Tj
T*
() Tj
T*
(```text) Tj
T*
(are you fond of tomatoes) Tj
T*
(do you like tomatoes) Tj
T*
(what are your thoughts on tomatoes) Tj
T*
(are you fond of {type} tomatoes) Tj
T*
(do you like {type} tomatoes) Tj
T*
(what are your thoughts on {type} tomatoes) Tj
T*
(```) Tj
T*
() Tj
T*
(Note the `{type}` in the above examples. These are wild-cards where matching content is forward) Tj
T*
(ed to the skill's intent handler.) Tj
T*
() Tj
T*
(> **WARNING**: digits are not allowed for the entity name inside the `{}`, **do NOT** use `{roo) Tj
T*
(m1}`, use `{room_one}`.) Tj
T*
() Tj
T*
(#### Specific Entities) Tj
T*
() Tj
T*
(In the above example, `{type}` will match anything. While this makes the intent flexible, it wi) Tj
T*
(ll also match if we say something like Do you like eating tomatoes?. It would think the type of) Tj
T*
( tomato is `"eating"` which doesn't make much sense. Instead, we can specify what type of thing) Tj
T*
(s the {type} of tomato should be. We do this by defining the type entity file here:) Tj
T*
ET
endstream
endobj
132 0 obj
<< /Length 1647 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(`vocab/en-us/type.entity`) Tj
T*
() Tj
T*
(which might contain something like:) Tj
T*
() Tj
T*
(```text) Tj
T*
(red) Tj
T*
(reddish) Tj
T*
(green) Tj
T*
(greenish) Tj
T*
(yellow) Tj
T*
(yellowish) Tj
T*
(ripe) Tj
T*
(unripe) Tj
T*
(pale) Tj
T*
(```) Tj
T*
() Tj
T*
(This must be registered in the Skill before use - most commonly in the `initialize\(\)` method:) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_workshop.skills import OVOSSkill) Tj
T*
(from ovos_workshop.decorators import intent_handler) Tj
T*
() Tj
T*
(class TomatoSkill\(OVOSSkill\):) Tj
T*
(    def initialize\(self\):) Tj
T*
(        self.register_entity_file\('type.entity'\)) Tj
T*
(```) Tj
T*
() Tj
T*
(Now, we can say things like "do you like greenish tomatoes?" and it will tag type as: `"greenis) Tj
T*
(h"`. However, if we say "do you like eating tomatoes?" - the phrase will not match as `"eating") Tj
T*
(` is not included in our `type.entity` file.) Tj
T*
() Tj
T*
(#### Number matching) Tj
T*
() Tj
T*
(Let's say you are writing an Intent to call a phone number. You can make it only match specific) Tj
T*
( formats of numbers by writing out possible arrangements using `#` where a number would go. For) Tj
T*
( example, with the following intent:) Tj
T*
() Tj
T*
(```text) Tj
T*
(Call {number}.) Tj
T*
(Call the phone number {number}.) Tj
T*
(```) Tj
T*
() Tj
T*
(the number.entity could be written as:) Tj
T*
() Tj
T*
(```text) Tj
T*
(+### \(###\) ###-####) Tj
T*
(+## \(###\) ###-####) Tj
T*
(+# \(###\) ###-####) Tj
T*
(\(###\) ###-####) Tj
T*
(###-####) Tj
T*
(###-###-####) Tj
T*
(###.###.####) Tj
T*
(### ### ####) Tj
T*
ET
endstream
endobj
133 0 obj
<< /Length 2025 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(##########) Tj
T*
(```) Tj
T*
() Tj
T*
(#### Entities with unknown tokens) Tj
T*
() Tj
T*
(Let's say you wanted to create an intent to match places:) Tj
T*
() Tj
T*
(```text) Tj
T*
(Directions to {place}.) Tj
T*
(Navigate me to {place}.) Tj
T*
(Open maps to {place}.) Tj
T*
(Show me how to get to {place}.) Tj
T*
(How do I get to {place}?) Tj
T*
(```) Tj
T*
() Tj
T*
(This alone will work, but it will still get a high confidence with a phrase like "How do I get ) Tj
T*
(to the boss in my game?". We can try creating a `.entity` file with things like:) Tj
T*
() Tj
T*
(```text) Tj
T*
(New York City) Tj
T*
(#### Georgia Street) Tj
T*
(San Francisco) Tj
T*
(```) Tj
T*
() Tj
T*
(The problem is, now anything that is not specifically a mix of New York City, San Francisco, or) Tj
T*
( something on Georgia Street won't match. Instead, we can specify an unknown word with :0. This) Tj
T*
( would be written as:) Tj
T*
() Tj
T*
(```text) Tj
T*
(:0 :0 City) Tj
T*
(#### :0 Street) Tj
T*
(:0 :0) Tj
T*
(```) Tj
T*
() Tj
T*
(Now, while this will still match quite a lot, it will match things like "Directions to Baldwin ) Tj
T*
(City" more than "How do I get to the boss in my game?") Tj
T*
() Tj
T*
(_NOTE: Currently, the number of :0 words is not fully taken into consideration so the above mig) Tj
T*
(ht match quite liberally, but this will change in the future._) Tj
T*
() Tj
T*
(#### Parentheses Expansion) Tj
T*
() Tj
T*
(Sometimes you might find yourself writing a lot of variations of the same thing. For example, t) Tj
T*
(o write a skill that orders food, you might write the following intent:) Tj
T*
() Tj
T*
(```text) Tj
T*
(Order some {food}.) Tj
T*
(Order some {food} from {place}.) Tj
T*
(Grab some {food}.) Tj
T*
(Grab some {food} from {place}.) Tj
T*
(```) Tj
T*
() Tj
T*
(Rather than writing out all combinations of possibilities, you can embed them into one or more ) Tj
T*
(lines by writing each possible option inside parentheses with \\| in between each part. For exam) Tj
T*
ET
endstream
endobj
134 0 obj
<< /Length 1986 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(ple, that same intent above could be written as:) Tj
T*
() Tj
T*
(```text) Tj
T*
(\(Order | Grab\) some {food}) Tj
T*
(\(Order | Grab\) some {food} from {place}) Tj
T*
(```) Tj
T*
() Tj
T*
(or even on a single-line:) Tj
T*
() Tj
T*
(```text) Tj
T*
(\(Order | Grab\) some {food} \(from {place} | \)) Tj
T*
(```) Tj
T*
() Tj
T*
(Nested parentheses are supported to create even more complex combinations, such as the followin) Tj
T*
(g:) Tj
T*
() Tj
T*
(```text) Tj
T*
(\(Look \(at | for\) | Find\) {object}.) Tj
T*
(```) Tj
T*
() Tj
T*
(Which would expand to:) Tj
T*
() Tj
T*
(```text) Tj
T*
(Look at {object}) Tj
T*
(Look for {object}) Tj
T*
(Find {object}) Tj
T*
(```) Tj
T*
() Tj
T*
(There is no performance benefit to using parentheses expansion. When used appropriately, this s) Tj
T*
(yntax can be much clearer to read. However, more complex structures should be broken down into ) Tj
T*
(multiple lines to aid readability and reduce false utterances being included in the model. Over) Tj
T*
(use can even result in the model training timing out, rendering the Skill unusable.) Tj
T*
() Tj
T*
(### Using it in a Skill) Tj
T*
() Tj
T*
(The `intent_handler\(\)` _decorator_ can be used to create an examples based intent handler by pa) Tj
T*
(ssing in the filename of the `.intent` file as a string.) Tj
T*
() Tj
T*
(You may also see the `@intent_file_handler` decorator used in Skills. This has been deprecated ) Tj
T*
(and you can now replace any instance of this with the simpler `@intent_handler` decorator.) Tj
T*
() Tj
T*
(From our first example above, we created a file `vocab/en-us/what.is.a.tomato.intent`. To regis) Tj
T*
(ter an intent using this file we can use:) Tj
T*
() Tj
T*
(```python) Tj
T*
(@intent_handler\('what.is.a.tomato.intent'\)) Tj
T*
(```) Tj
T*
() Tj
T*
(This _decorator_ must be imported before it is used:) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_workshop.decorators import intent_handler) Tj
T*
(```) Tj
T*
() Tj
T*
ET
endstream
endobj
135 0 obj
<< /Length 2180 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
([Learn more about _decorators_ in Python]\(https://en.wikipedia.org/wiki/Python_syntax_and_seman) Tj
T*
(tics#Decorators\).) Tj
T*
() Tj
T*
(Now we can create our Tomato Skill:) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_workshop.skills import OVOSSkill) Tj
T*
(from ovos_workshop.decorators import intent_handler) Tj
T*
() Tj
T*
(class TomatoSkill\(OVOSSkill\):) Tj
T*
() Tj
T*
(    def initialize\(self\):) Tj
T*
(        self.register_entity_file\('type.entity'\)) Tj
T*
() Tj
T*
(    @intent_handler\('what.is.a.tomato.intent'\)) Tj
T*
(    def handle_what_is\(self, message\):) Tj
T*
(        self.speak_dialog\('tomato.description'\)) Tj
T*
() Tj
T*
(    @intent_handler\('do.you.like.intent'\)) Tj
T*
(    def handle_do_you_like\(self, message\):) Tj
T*
(        tomato_type = message.data.get\('type'\)) Tj
T*
(        if tomato_type is not None:) Tj
T*
(            self.speak_dialog\('like.tomato.type',) Tj
T*
(                              {'type': tomato_type}\)) Tj
T*
(        else:) Tj
T*
(            self.speak_dialog\('like.tomato.generic'\)) Tj
T*
(```) Tj
T*
() Tj
T*
(See a Padatious intent handler example in the [Hello World Skill]\(https://github.com/MycroftAI/) Tj
T*
(skill-hello-world/blob/67a972792a07da7e3406bf7f94acd54aa2674829/__init__.py#L42\)) Tj
T*
() Tj
T*
(### Common Problems) Tj
T*
() Tj
T*
(#### I am unable to match against the utterance string) Tj
T*
() Tj
T*
(The utterance string received from the speech-to-text engine is received all lowercase. As such) Tj
T*
( any string matching you are trying to do should also be converted to lowercase. For example:) Tj
T*
() Tj
T*
(```python) Tj
T*
(    @intent_handler\('example.intent'\)) Tj
T*
(    def handle_example\(self, message\):) Tj
T*
(        utterance = message.data.get\('utterance'\)) Tj
T*
(        if 'Proper Noun'.lower\(\) in utterance:) Tj
T*
(            self.speak\('Found it'\)) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/405-customization.md ===) Tj
T*
() Tj
T*
(# Customization) Tj
T*
() Tj
T*
(## Resource Files) Tj
T*
() Tj
T*
(Resource files are essential components of OVOS skills, containing data such as dialogs, intent) Tj
T*
ET
endstream
endobj
136 0 obj
<< /Length 3018 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(s, vocabularies, regular expressions, templates, and more. ) Tj
T*
() Tj
T*
(These files define how a skill interacts with the user and responds to queries.) Tj
T*
() Tj
T*
(> **RECAP**: the skill contains a `locale` folder with subfolders for each lang, eg `en-us`, le) Tj
T*
(arn more in [skill structure docs]\(https://openvoiceos.github.io/ovos-technical-manual/skill_st) Tj
T*
(ructure/\)) Tj
T*
() Tj
T*
() Tj
T*
(### Customizing Dialogs) Tj
T*
() Tj
T*
(Users can personalize the behavior of skills by customizing dialogues to better suit their pref) Tj
T*
(erences. ) Tj
T*
() Tj
T*
(To give a unique twist and personality to your assistant you don't need to fork existing skills) Tj
T*
( only to change dialogs) Tj
T*
() Tj
T*
(Here's a step-by-step guide on how to replace the dialog of an existing skill:) Tj
T*
() Tj
T*
(**Identify the Skill and Resource to Replace**:) Tj
T*
() Tj
T*
(   - Determine the ID of the skill whose dialog you want to replace. In this example, let's ass) Tj
T*
(ume the skill ID is `skill-ovos-date-time.openvoiceos`.) Tj
T*
(   - Identify the specific dialog file you want to replace. For this example, let's say you wan) Tj
T*
(t to replace the `time.current.dialog` file located in the `locale/en-us/dialog` directory of t) Tj
T*
(he skill.) Tj
T*
() Tj
T*
(**Create the Replacement Dialog File**:) Tj
T*
() Tj
T*
(   - Create a new dialog file with the same name \(`time.current.dialog`\) as the original file.) Tj
T*
(   - Customize the content of the dialog file according to your preferences. You can modify the) Tj
T*
( existing dialogues, add new ones, or remove any that you don't want to use.) Tj
T*
() Tj
T*
(**Locate the User-Specific Resource Directory**:) Tj
T*
() Tj
T*
(   - Use the provided skill ID \(`skill-ovos-date-time.openvoiceos`\) to locate the user-specific) Tj
T*
( resource directory.) Tj
T*
(   - The user-specific resource directory is located within the XDG data directory. It follows ) Tj
T*
(the path `XDG_DATA_HOME/mycroft/resources/skill-ovos-date-time.openvoiceos` \(where `XDG_DATA_HO) Tj
T*
(ME` is the user's data directory, usually `~/.local/share` on Linux\).) Tj
T*
(   - If it does not exist, create it, This can be done using file manager tools or command-line) Tj
T*
( utilities such as `mkdir` on Unix-like systems.) Tj
T*
() Tj
T*
(**Copy the Replacement Dialog File to the User-Specific Directory**:) Tj
T*
() Tj
T*
(   - Copy or move the replacement dialog file \(`time.current.dialog`\) to the appropriate direct) Tj
T*
(ory within the user-specific resource directory.) Tj
T*
(   - Place the file in the `locale/en-us/dialog` directory within the user-specific resource di) Tj
T*
(rectory. This mirrors the directory structure of the original skill.) Tj
T*
(   - In this example the final path of the file would be `~/.local/share/mycroft/resources/skil) Tj
T*
(l-ovos-date-time.openvoiceos/locale/en-us/dialog/time.current.dialog` ) Tj
T*
() Tj
T*
(**Verify the Replacement**:) Tj
T*
() Tj
T*
ET
endstream
endobj
137 0 obj
<< /Length 2884 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(   - Test the skill to ensure that the modified dialogues are being used instead of the origina) Tj
T*
(l ones.) Tj
T*
() Tj
T*
() Tj
T*
(Customizing dialogues offers users flexibility in tailoring the behavior of skills to their spe) Tj
T*
(cific needs and preferences.) Tj
T*
() Tj
T*
() Tj
T*
(### Local Language support) Tj
T*
() Tj
T*
(Adding support for additional languages to existing skills enables users to interact with OVOS ) Tj
T*
(in their preferred language. ) Tj
T*
() Tj
T*
(While developing or waiting for skills to support your language you might want to add it locall) Tj
T*
(y) Tj
T*
() Tj
T*
(Users can add language support for a skill by creating a new language folder in the user resour) Tj
T*
(ces directory and copying the necessary files over:) Tj
T*
() Tj
T*
(**Identify the Skill and Language to Add**:) Tj
T*
() Tj
T*
(   - Determine the ID of the skill for which you want to add language support. Let's continue u) Tj
T*
(sing the skill ID `skill-ovos-date-time.openvoiceos`.) Tj
T*
(   - Identify the language you want to add support for. For this example, let's say you want to) Tj
T*
( add support for Spanish \(language code: `es-es`\).) Tj
T*
() Tj
T*
(**Create the New Language Folder**:) Tj
T*
() Tj
T*
(   - Create a new directory with the name of the language code \(`es-es` for Spanish\) within the) Tj
T*
( `locale` directory of the skill.) Tj
T*
(   - This can be done using file manager tools or command-line utilities such as `mkdir` on Uni) Tj
T*
(x-like systems.) Tj
T*
(   - Using the previous example, we would create `~/.local/share/mycroft/resources/skill-ovos-d) Tj
T*
(ate-time.openvoiceos/locale/es-es/`) Tj
T*
() Tj
T*
(**Copy the Required Files to the New Language Folder**:) Tj
T*
() Tj
T*
(   - Copy all the necessary resource files from an existing language folder \(e.g., `en-us`\) to ) Tj
T*
(the newly created language folder \(`es-es`\).) Tj
T*
(   - This includes files such as dialogues, vocabularies, regex patterns, etc., depending on th) Tj
T*
(e resources used by the skill.) Tj
T*
(   - Ensure that all files are placed in the corresponding directories within the new language ) Tj
T*
(folder to maintain the directory structure of the original skill.) Tj
T*
() Tj
T*
(**Verify the Language Addition**:) Tj
T*
() Tj
T*
(   - Once the files are copied over, verify that the new language is supported by the skill.) Tj
T*
(   - Restart OpenVoiceOS to allow the skill to recognize the newly added language resources.) Tj
T*
(   - Test the skill using the newly added language to ensure that it functions correctly and us) Tj
T*
(es the appropriate language-specific resources.) Tj
T*
() Tj
T*
(By following these steps, users can add support for additional languages to existing skills by ) Tj
T*
(creating new language folders and copying the required resource files.) Tj
T*
() Tj
T*
ET
endstream
endobj
138 0 obj
<< /Length 2297 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(> **NEXT STEPS**: consider sending a Pull Request to the skill to directly add language support) Tj
T*
(!) Tj
T*
() Tj
T*
(This allows users to extend the language capabilities of skills beyond the languages provided b) Tj
T*
(y default.) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/406-messagebus.md ===) Tj
T*
() Tj
T*
(# OVOSSkill Bus Interaction) Tj
T*
() Tj
T*
(The base [OVOSSkill API]\(http://mycroft-core.readthedocs.io/en/stable/\) handles most of the Mes) Tj
T*
(sagebus usage automatically. ) Tj
T*
() Tj
T*
(For example, the `mycroft.stop` message is caught by the skill framework, invoking an overridde) Tj
T*
(n `OVOSSkills.stop\(\)` method within a **Skill**. ) Tj
T*
() Tj
T*
(Similarly, the `OVOSSkill.speak\(\)` and `OVOSSkill.speak_dialog\(\)` methods generate `speak` mess) Tj
T*
(ages to be conveyed to the text-to-speech \\\(TTS\\\) and audio systems.) Tj
T*
() Tj
T*
(You will really only need to know about the Mycroft Messagebus if you are developing advanced *) Tj
T*
(*Skills**. ) Tj
T*
() Tj
T*
(The `OVOSSkill.add_event\(\)` method allows you to attach a handler which will be triggered when ) Tj
T*
(the message is seen on the Messagebus.) Tj
T*
() Tj
T*
(## Connecting Message handlers) Tj
T*
() Tj
T*
(```python) Tj
T*
(class ListenForMessageSkill\(OVOSSkill\):) Tj
T*
(  def initialize\(self\):  ) Tj
T*
(      self.add_event\('recognizer_loop:record_begin',  ) Tj
T*
(                    self.handle_listener_started\)  ) Tj
T*
(      self.add_event\('recognizer_loop:record_end',  ) Tj
T*
(                    self.handle_listener_ended\)) Tj
T*
() Tj
T*
(  def handle_listener_started\(self, message\):  ) Tj
T*
(      # code to excecute when active listening begins...) Tj
T*
() Tj
T*
(  def handle_listener_ended\(self, message\):  ) Tj
T*
(      # code to excecute when active listening begins...) Tj
T*
(```) Tj
T*
() Tj
T*
(## Generating Messages) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_bus_client import Message) Tj
T*
() Tj
T*
(class GenerateMessageSkill\(OVOSSkill\):) Tj
T*
(  def some_method\(self\):  ) Tj
T*
(    self.bus.emit\(Message\("recognizer_loop:utterance",  ) Tj
T*
(                          {'utterances': ["the injected utterance"],  ) Tj
T*
(                            'lang': 'en-us'}\)\)  ) Tj
T*
() Tj
T*
ET
endstream
endobj
139 0 obj
<< /Length 2166 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(```) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/407-skill_filesystem.md ===) Tj
T*
() Tj
T*
(# Filesystem access) Tj
T*
() Tj
T*
(Many Skills may want access to parts of the filesystem. To account for the many different platf) Tj
T*
(orms that can run OVOS there are three locations that a Skill can utilize.) Tj
T*
() Tj
T*
(* Persistent filesystem) Tj
T*
(* Temporary cache) Tj
T*
(* Skill's own root directory) Tj
T*
() Tj
T*
(## Persistent Files) Tj
T*
() Tj
T*
(When your Skill needs to store some data that will persist over time and cannot easily be rebui) Tj
T*
(lt, there is a persistent filesystem namespaced to your Skill.) Tj
T*
() Tj
T*
(### Reading and writing to files) Tj
T*
() Tj
T*
(This uses the standard Python `open\(\)` method to read and write files. It takes two parameters:) Tj
T*
() Tj
T*
(* file\\_name \\\(str\\\) - a path relative to the namespace. subdirs not currently supported.) Tj
T*
(* mode \\\(str\\\) ? a file handle mode \\[r, r+, w, w+, rb, rb+, wb+, a, ab, a+, ab+, x\\]) Tj
T*
() Tj
T*
(Example:) Tj
T*
() Tj
T*
(```python) Tj
T*
(    def write_line_to_file\(self, file_name, line\):) Tj
T*
(        """Write a single line to a file in the Skills persistent filesystem.""") Tj
T*
(        with self.file_system.open\(file_name, "w"\) as my_file:) Tj
T*
(            my_file.write\(line\)) Tj
T*
() Tj
T*
(    def read_file\(self, file_name\):) Tj
T*
(        """Read the contents of a file in the Skills persistent filesystem.""") Tj
T*
(        with self.file_system.open\(file_name, "r"\) as my_file:) Tj
T*
(            return my_file.read\(\)) Tj
T*
(```) Tj
T*
() Tj
T*
(### Check if a file exists) Tj
T*
() Tj
T*
(Quick method to see if some file exists in the namespaced directory.) Tj
T*
() Tj
T*
(Example:) Tj
T*
() Tj
T*
(```python) Tj
T*
(        file_name = "example.txt") Tj
T*
(        with self.file_system.open\(file_name, "w"\) as my_file:) Tj
T*
(            my_file.write\("Hello world"\)) Tj
T*
(        self.log.info\(self.file_system.exists\(file_name\)\)) Tj
T*
(        # True) Tj
T*
(        self.log.info\(self.file_system.exists\("new.txt"\)\)) Tj
T*
(        # False) Tj
T*
ET
endstream
endobj
140 0 obj
<< /Length 1905 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(```) Tj
T*
() Tj
T*
(### Get the path of the namespaced directory.) Tj
T*
() Tj
T*
(`self.file_system.path` is a member value containing the root path of the namespace. However, i) Tj
T*
(t is recommended that you use the `self.file_system.open\(\)` method to read and write files.) Tj
T*
() Tj
T*
(Example:) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_workshop.skills import OVOSSkill) Tj
T*
() Tj
T*
(class FileSystemSkill\(OVOSSkill\):) Tj
T*
() Tj
T*
(    def initialize\(self\):) Tj
T*
(        """Log the path of this Skills persistent namespace.""") Tj
T*
(        self.log.info\(self.file_system.path\)) Tj
T*
(```) Tj
T*
() Tj
T*
(### Create subdirectories) Tj
T*
() Tj
T*
(Now that we have the path of our namespaced filesystem, we can organize our files however we li) Tj
T*
(ke within that directory.) Tj
T*
() Tj
T*
(In this example, we create a subdirectory called "cache", then write to a text file inside of i) Tj
T*
(t.) Tj
T*
() Tj
T*
(```python) Tj
T*
(from os import mkdir) Tj
T*
(from os.path import join) Tj
T*
() Tj
T*
(from ovos_workshop.skills import OVOSSkill) Tj
T*
() Tj
T*
(class FileSystemSkill\(OVOSSkill\):) Tj
T*
() Tj
T*
(    def initialize\(self\):) Tj
T*
(        """Create a cache subdirectory and write to a file inside it""") Tj
T*
(        cache_dir = "cache") Tj
T*
(        file_name = "example.txt") Tj
T*
(        if not self.file_system.exists\(cache_dir\):) Tj
T*
(            mkdir\(join\(self.file_system.path, cache_dir\)\)) Tj
T*
(        with self.file_system.open\(join\(cache_dir, file_name\), "w"\) as my_file:) Tj
T*
(            my_file.write\('hello'\)) Tj
T*
() Tj
T*
(```) Tj
T*
() Tj
T*
(### Example Skill) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_workshop.skills import OVOSSkill) Tj
T*
(from ovos_workshop.decorators import intent_handler) Tj
T*
() Tj
T*
(class FileSystemSkill\(OVOSSkill\):) Tj
T*
() Tj
T*
ET
endstream
endobj
141 0 obj
<< /Length 2384 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(    def initialize\(self\):) Tj
T*
(        """Perform initial setup for the Skill.) Tj
T*
() Tj
T*
(        For this example we do four things:) Tj
T*
(        1. Log the path of this directory.) Tj
T*
(        2. Write to a file in the directory.) Tj
T*
(        3. Check that our file exists.) Tj
T*
(        4. Read the contents of our file from disk.) Tj
T*
(        """) Tj
T*
(        file_name = "example.txt") Tj
T*
(        self.log.info\(self.file_system.path\)) Tj
T*
(        self.write_line_to_file\(file_name, "hello world"\)) Tj
T*
(        self.log.info\(self.file_system.exists\(file_name\)\)) Tj
T*
(        self.log.info\(self.read_file\(file_name\)\)) Tj
T*
() Tj
T*
(    def write_line_to_file\(self, file_name, line\):) Tj
T*
(        """Write a single line to a file in the Skills persistent filesystem.""") Tj
T*
(        with self.file_system.open\(file_name, "w"\) as my_file:) Tj
T*
(            my_file.write\(line\)) Tj
T*
() Tj
T*
(    def read_file\(self, file_name\):) Tj
T*
(        """Read the contents of a file in the Skills persistent filesystem.""") Tj
T*
(        with self.file_system.open\(file_name, "r"\) as my_file:) Tj
T*
(            return my_file.read\(\)) Tj
T*
(```) Tj
T*
() Tj
T*
(## Temporary Cache) Tj
T*
() Tj
T*
(Skills can create a directory for caching temporary data to speed up performance.) Tj
T*
() Tj
T*
(This directory will likely be part of a small RAM disk and may be cleared at any time. So code ) Tj
T*
(that uses these cached files must be able to fall back and regenerate the file.) Tj
T*
() Tj
T*
(### Example Skill) Tj
T*
() Tj
T*
(```python) Tj
T*
(from os.path import join) Tj
T*
(from ovos_workshop.skills import OVOSSkill) Tj
T*
(from ovos_workshop.decorators import intent_handler) Tj
T*
(from ovos_utils.file_utils import get_cache_directory) Tj
T*
() Tj
T*
() Tj
T*
(class CachingSkill\(OVOSSkill\):) Tj
T*
() Tj
T*
(    def initialize\(self\):) Tj
T*
(        """Perform initial setup for the Skill.) Tj
T*
() Tj
T*
(        For this example we do four things:) Tj
T*
(        1. Get a cache directory namespaced for our Skill.) Tj
T*
(        2. Define a file path for the cache_file.) Tj
T*
(        3. Write some data to the cache_file) Tj
T*
(        4. Log the path of the cache_file) Tj
T*
(        4. Log the contents of the cache_file.) Tj
T*
(        """) Tj
T*
ET
endstream
endobj
142 0 obj
<< /Length 2207 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(        cache_dir = get_cache_directory\('CachingSkill'\)) Tj
T*
(        self.cache_file = join\(cache_dir, "myfile.txt"\)) Tj
T*
(        self.cache_data\(\)) Tj
T*
(        self.log.info\(self.cache_file\)) Tj
T*
(        self.log.info\(self.read_cached_data\(\)\)) Tj
T*
() Tj
T*
(    def cache_data\(self\):) Tj
T*
(        with open\(self.cache_file, "w"\) as cache_file: ) Tj
T*
(            cache_file.write\("Some cached data"\) ) Tj
T*
() Tj
T*
(    def read_cached_data\(self\):) Tj
T*
(        with open\(self.cache_file, "r"\) as cache_file: ) Tj
T*
(            return cache_file.read\(\)) Tj
T*
(```) Tj
T*
() Tj
T*
(## Skill Root Directory) Tj
T*
() Tj
T*
(```python) Tj
T*
(self.root_dir) Tj
T*
(```) Tj
T*
() Tj
T*
(This member variable contains the absolute path of a Skill?s root directory e.g. `~.local/share) Tj
T*
(/mycroft/skills/my-skill.me/`.) Tj
T*
() Tj
T*
(Generally Skills should not modify anything within this directory.) Tj
T*
(Modifying anything in the Skill directory will reload the Skill.  ) Tj
T*
(It is also not guaranteed that the Skill will have permission to write to this directory.) Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
(=== docs/408-skill_settings.md ===) Tj
T*
() Tj
T*
(# Skill Settings) Tj
T*
() Tj
T*
() Tj
T*
(Skill settings in OVOS allow users to configure and personalize the behavior of Skills?either t) Tj
T*
(hrough the command line, configuration files, or a web-based interface. This enables advanced c) Tj
T*
(ustomization and support for external integrations, while remaining completely optional for bas) Tj
T*
(ic usage.) Tj
T*
() Tj
T*
(## Common Use Cases) Tj
T*
() Tj
T*
(- Changing default behaviors \(e.g. alarm sounds, display preferences\)) Tj
T*
(- Authenticating with third-party services \(e.g. Spotify\)) Tj
T*
(- Entering longer or complex data \(e.g. IP addresses, API keys\)) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Using Skill Settings in Your Skill) Tj
T*
() Tj
T*
(Settings are managed through a dictionary-like object available on the `OVOSSkill` base class. ) Tj
T*
(They are persisted to disk and can be updated locally by the Skill or remotely by the user via ) Tj
T*
(a frontend.) Tj
T*
() Tj
T*
ET
endstream
endobj
143 0 obj
<< /Length 1969 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(Settings are stored in your Skill's configuration directory, usually:) Tj
T*
() Tj
T*
(```) Tj
T*
(~/.config/mycroft/skills/<your_skill_id>/settings.json) Tj
T*
(```) Tj
T*
() Tj
T*
(### Accessing Settings) Tj
T*
() Tj
T*
(You can read settings like a standard Python dictionary, but it's recommended to use `.get\(\)` t) Tj
T*
(o avoid `KeyError` exceptions:) Tj
T*
() Tj
T*
(```python) Tj
T*
(# Safely read the 'show_time' setting with a default fallback) Tj
T*
(show_time = self.settings.get\("show_time", False\)) Tj
T*
(```) Tj
T*
() Tj
T*
(> ?? Avoid using `self.settings['show_time']` directly, as it will raise a `KeyError` if the se) Tj
T*
(tting is not defined.) Tj
T*
() Tj
T*
(Also, do not access `self.settings` in your `__init__\(\)` method?wait until the `initialize\(\)` m) Tj
T*
(ethod to ensure the settings are fully loaded.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Handling Settings Updates) Tj
T*
() Tj
T*
(OVOS automatically checks for setting changes, either locally or from a remote backend. You can) Tj
T*
( register a callback to react when settings change:) Tj
T*
() Tj
T*
(```python) Tj
T*
(def initialize\(self\):) Tj
T*
(    self.settings_change_callback = self.on_settings_changed) Tj
T*
(    self.on_settings_changed\(\)  # Also run immediately on start) Tj
T*
() Tj
T*
(def on_settings_changed\(self\):) Tj
T*
(    show_time = self.settings.get\('show_time', False\)) Tj
T*
(    self.trigger_time_display\(show_time\)) Tj
T*
(```) Tj
T*
() Tj
T*
(This ensures your Skill responds to user configuration changes dynamically.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Writing to Settings) Tj
T*
() Tj
T*
(You can update and persist values to the settings file simply by assigning them:) Tj
T*
() Tj
T*
(```python) Tj
T*
(self.settings['show_time'] = True) Tj
T*
(```) Tj
T*
() Tj
T*
(Changes will persist across restarts unless overridden remotely via a backend or web interface.) Tj
T*
() Tj
T*
(---) Tj
T*
ET
endstream
endobj
144 0 obj
<< /Length 1629 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(## Web-Based Skill Settings \(Optional UI\)) Tj
T*
() Tj
T*
(A **community-built** web interface, [OVOS Skill Config Tool]\(https://github.com/OscillateLabsL) Tj
T*
(LC/ovos-skill-config-tool\), provides a modern, user-friendly way to configure OVOS skills.) Tj
T*
() Tj
T*
(### Features) Tj
T*
() Tj
T*
(- Clean UI for managing skill-specific settings) Tj
T*
(- Grouping and organization of Skills) Tj
T*
(- Dark mode support) Tj
T*
(- Built-in Basic Authentication for security) Tj
T*
() Tj
T*
(![Skill Config Interface]\(https://github.com/OscillateLabsLLC/ovos-skill-config-tool/raw/main/s) Tj
T*
(kills-interface.webp\)) Tj
T*
() Tj
T*
(### Installation) Tj
T*
() Tj
T*
(Install via pip:) Tj
T*
() Tj
T*
(```bash) Tj
T*
(pip install ovos-skill-config-tool) Tj
T*
(```) Tj
T*
() Tj
T*
(Run the tool:) Tj
T*
() Tj
T*
(```bash) Tj
T*
(ovos-skill-config-tool) Tj
T*
(```) Tj
T*
() Tj
T*
(Access it in your browser at [http://0.0.0.0:8000]\(http://0.0.0.0:8000\)) Tj
T*
() Tj
T*
(#### Default Login) Tj
T*
() Tj
T*
(- **Username**: `ovos`) Tj
T*
(- **Password**: `ovos`) Tj
T*
() Tj
T*
(To customize credentials:) Tj
T*
() Tj
T*
(```bash) Tj
T*
(export OVOS_CONFIG_USERNAME=myuser) Tj
T*
(export OVOS_CONFIG_PASSWORD=mypassword) Tj
T*
(ovos-skill-config-tool) Tj
T*
(```) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Tips) Tj
T*
() Tj
T*
(- Always use `.get\(key, default\)` for safe reads.) Tj
T*
(- Use `initialize\(\)` instead of `__init__\(\)` for anything that depends on settings.) Tj
T*
(- Use settings callbacks to keep your Skill reactive to user changes.) Tj
T*
() Tj
T*
(---) Tj
T*
ET
endstream
endobj
145 0 obj
<< /Length 1930 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(## See Also) Tj
T*
() Tj
T*
(- [OVOS Skill Config Tool on GitHub]\(https://github.com/OscillateLabsLLC/ovos-skill-config-tool) Tj
T*
(\)) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/408-skill_settings_meta.md ===) Tj
T*
() Tj
T*
(# settingsmeta.json) Tj
T*
() Tj
T*
(## Define settings UI for a Skill) Tj
T*
() Tj
T*
(To define our Skills settings UI we use a `settingsmeta.json` or `settingsmeta.yaml` file. ) Tj
T*
(This file must be in the root directory of the Skill and must follow a specific structure.) Tj
T*
() Tj
T*
(Once settings have been defined using a `settingsmeta` file, they will be presented to the user) Tj
T*
( in the configured backend or helper application) Tj
T*
() Tj
T*
(### Example settingsmeta file) Tj
T*
() Tj
T*
(To see it in action, lets look at a simple example from the [Date-Time Skill]\(https://github.co) Tj
T*
(m/MycroftAI/skill-date-time\). First using the JSON syntax as a `settingsmeta.json` file:) Tj
T*
() Tj
T*
(```javascript) Tj
T*
({) Tj
T*
(    "skillMetadata": {) Tj
T*
(        "sections": [) Tj
T*
(            {) Tj
T*
(                "name": "Display",) Tj
T*
(                "fields": [) Tj
T*
(                    {) Tj
T*
(                        "name": "show_time",) Tj
T*
(                        "type": "checkbox",) Tj
T*
(                        "label": "Show digital clock when idle",) Tj
T*
(                        "value": "true") Tj
T*
(                    }) Tj
T*
(                ]) Tj
T*
(            }) Tj
T*
(        ]) Tj
T*
(    }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(Now, here is the same settings, as it would be defined with YAML in a `settingsmeta.yaml` file:) Tj
T*
() Tj
T*
(```yaml) Tj
T*
(skillMetadata:) Tj
T*
(   sections:) Tj
T*
(      - name: Display) Tj
T*
(        fields:) Tj
T*
(          - name: show_time) Tj
T*
(            type: checkbox) Tj
T*
(            label: Show digital clock when idle) Tj
T*
ET
endstream
endobj
146 0 obj
<< /Length 2664 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(            value: "true") Tj
T*
(```) Tj
T*
() Tj
T*
(Notice that the value of `false` is surrounded by "quotation marks". This is because OVOS expec) Tj
T*
(ts a string of `"true"` or `"false"` rather than a Boolean.) Tj
T*
() Tj
T*
(Both of these files would result in the same settings block.) Tj
T*
() Tj
T*
(![]\(https://3867939753-files.gitbook.io/~/files/v0/b/gitbook-legacy-files/o/assets%2F-LocrEaSe-) Tj
T*
(b3SJ4H87SC%2Fsync%2F1535fed57a285e48b63090cb9e6c82591f3aacc0.png?generation=1599008778025054&al) Tj
T*
(t=media\)) Tj
T*
() Tj
T*
(It is up to your personal preference which syntax you choose.) Tj
T*
() Tj
T*
(### Structure of the settingsmeta file) Tj
T*
() Tj
T*
(Whilst the syntax differs, the structure of these two filetypes is the same. This starts at the) Tj
T*
( top level of the file by defining a `skillMetadata` object. This object must contain one or mo) Tj
T*
(re `sections` elements.) Tj
T*
() Tj
T*
(#### Sections) Tj
T*
() Tj
T*
(Each section represents a group of settings that logically sit together. This enables us to dis) Tj
T*
(play the settings more clearly in the web interface for users.) Tj
T*
() Tj
T*
(In the simple example above we have just one section. However, the [Spotify Skill settings]\(htt) Tj
T*
(ps://github.com/forslund/spotify-skill/blob/19.08/settingsmeta.json\) contains two sections. The) Tj
T*
( first is for Spotify Account authentication, and the second section contains settings to defin) Tj
T*
(e your default playback device.) Tj
T*
() Tj
T*
(Each section must contain a `name` attribute that is used as the heading for that section, and ) Tj
T*
(an Array of `fields`.) Tj
T*
() Tj
T*
(#### Fields) Tj
T*
() Tj
T*
(Each section has one or more `fields`. Each field is a setting available to the user. Each fiel) Tj
T*
(d takes four properties:) Tj
T*
() Tj
T*
(*   `name` \(String\)) Tj
T*
() Tj
T*
(    The `name` of the `field` is used by the Skill to get and set the value of the `field`. It ) Tj
T*
(will not usually be displayed to the user, unless the `label` property has not been set.) Tj
T*
(*   `type` \(Enum\)) Tj
T*
() Tj
T*
(    The data type of this field. The supported types are:) Tj
T*
() Tj
T*
(    * `text`: any kind of text) Tj
T*
(    * `email`: text validated as an email address) Tj
T*
(    * `checkbox`: boolean, True or False) Tj
T*
(    * `number`: text validated as a number) Tj
T*
(    * `password`: text hidden from view by default) Tj
T*
(    * `select`: a drop-down menu of options) Tj
T*
(    * `label`: special field to display text for information purposes only. No name or value is) Tj
T*
( required for a `label` field.) Tj
T*
ET
endstream
endobj
147 0 obj
<< /Length 1366 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(*   `label` \(String\)) Tj
T*
() Tj
T*
(    The text to be displayed above the setting field.) Tj
T*
(*   `value` \(String\)) Tj
T*
() Tj
T*
(    The initial value of the field.) Tj
T*
() Tj
T*
(Examples for each type of field are provided in JSON and YAML at the end of this page.) Tj
T*
() Tj
T*
() Tj
T*
(## SettingsMeta Examples) Tj
T*
() Tj
T*
(### Label Field) Tj
T*
() Tj
T*
(```yaml) Tj
T*
(skillMetadata:) Tj
T*
(   sections:) Tj
T*
(      - name: Label Field Example) Tj
T*
(        fields:) Tj
T*
(          - type: label) Tj
T*
(            label: This is descriptive text.) Tj
T*
(```) Tj
T*
() Tj
T*
(### Text Field) Tj
T*
() Tj
T*
(```yaml) Tj
T*
(skillMetadata:) Tj
T*
(   sections:) Tj
T*
(      - name: Text Field Example) Tj
T*
(        fields:) Tj
T*
(          - name: my_string) Tj
T*
(            type: text) Tj
T*
(            label: Enter any text) Tj
T*
(            value:) Tj
T*
(```) Tj
T*
() Tj
T*
(### Email) Tj
T*
() Tj
T*
(```yaml) Tj
T*
(skillMetadata:) Tj
T*
(   sections:) Tj
T*
(      - name: Email Field Example) Tj
T*
(        fields:) Tj
T*
(          - name: my_email_address) Tj
T*
(            type: email) Tj
T*
(            label: Enter your email address) Tj
T*
(            value:) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
(### Checkbox) Tj
T*
() Tj
T*
(```yaml) Tj
T*
(skillMetadata:) Tj
T*
ET
endstream
endobj
148 0 obj
<< /Length 1490 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(   sections:) Tj
T*
(      - name: Checkbox Field Example) Tj
T*
(        fields:) Tj
T*
(          - name: my_boolean) Tj
T*
(            type: checkbox) Tj
T*
(            label: This is an example checkbox. It creates a Boolean value.) Tj
T*
(            value: "false") Tj
T*
(```) Tj
T*
() Tj
T*
(### Number) Tj
T*
() Tj
T*
(```yaml) Tj
T*
(skillMetadata:) Tj
T*
(   sections:) Tj
T*
(      - name: Number Field Example) Tj
T*
(        fields:) Tj
T*
(          - name: my_number) Tj
T*
(            type: number) Tj
T*
(            label: Enter any number) Tj
T*
(            value: 7) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
(### Password) Tj
T*
() Tj
T*
(```yaml) Tj
T*
(skillMetadata:) Tj
T*
(   sections:) Tj
T*
(      - name: Password Field Example) Tj
T*
(        fields:) Tj
T*
(          - name: my_password) Tj
T*
(            type: password) Tj
T*
(            label: Enter your password) Tj
T*
(            value:) Tj
T*
(```) Tj
T*
() Tj
T*
(### Select) Tj
T*
() Tj
T*
(```yaml) Tj
T*
(skillMetadata:) Tj
T*
(   sections:) Tj
T*
(      - name: Select Field Example) Tj
T*
(        fields:) Tj
T*
(          - name: my_selected_option) Tj
T*
(            type: select) Tj
T*
(            label: Select an option) Tj
T*
(            options: Option 1|option_one;Option 2|option_two;Option 3|option_three) Tj
T*
(            value: option_one) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/409-skill_api.md ===) Tj
T*
() Tj
T*
(# Skill API) Tj
T*
ET
endstream
endobj
149 0 obj
<< /Length 2226 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(The Skill API uses the Message Bus to communicate between Skills and wraps the interaction in s) Tj
T*
(imple Python objects making them easy to use.) Tj
T*
() Tj
T*
(## Making a method available through the Skill API) Tj
T*
() Tj
T*
(A method can be tagged with the `skill_api_method` decorator. This will handle all the basics o) Tj
T*
(f making the method available to other Skills over the Message Bus.) Tj
T*
() Tj
T*
(```python) Tj
T*
(    @skill_api_method) Tj
T*
(    def my_exported_method\(self, my_arg, my_other_arg\):) Tj
T*
(    """My skill api method documentation) Tj
T*
(    """) Tj
T*
(```) Tj
T*
() Tj
T*
(The decorator will generate everything needed for accessing the method over the Message Bus and) Tj
T*
( extract the associated docstring.) Tj
T*
() Tj
T*
(### Limitations) Tj
T*
() Tj
T*
(The Skill API works over the Message Bus. This requires that the return values are json seriali) Tj
T*
(zable. All common Python builtin types \\\(such as List, String, None, etc.\\\) work well, however ) Tj
T*
(custom classes are not currently supported.) Tj
T*
() Tj
T*
(### Example) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_workshop.skills import OVOSSkill) Tj
T*
(from ovos_workshop.decorators import intent_handler, skill_api_method) Tj
T*
() Tj
T*
(class RobberSkill\(OVOSSkill\):) Tj
T*
(    @skill_api_method) Tj
T*
(    def robber_lang\(self, sentence\):) Tj
T*
(        """Encode a sentence to "Rvarsprket".) Tj
T*
() Tj
T*
(        Each consonant gets converted to consonant + "o" + consonant,) Tj
T*
(        vowels are left as is.) Tj
T*
() Tj
T*
(        Returns: \(str\) sentence in the robber language.) Tj
T*
(        """) Tj
T*
(        wovels = "aeiouy") Tj
T*
(        tokens = []) Tj
T*
(        for char in sentence.lower\(\) and char.isalpha\(\):) Tj
T*
(            if char not in wovels:) Tj
T*
(                tokens.append\(char + 'o' + char\)) Tj
T*
(            else:) Tj
T*
(                tokens.append\(char\)) Tj
T*
(        return ' '.join\(tokens\)) Tj
T*
(```) Tj
T*
() Tj
T*
(## Using another Skill's API) Tj
T*
() Tj
T*
(If you want to make use of exported functionality from another Skill, you must fetch that Skill) Tj
T*
ET
endstream
endobj
150 0 obj
<< /Length 2161 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
('s `SkillApi`. This will give you a small class with the target Skill's exported methods. These) Tj
T*
( methods are nothing special and can be called like any other class's methods.) Tj
T*
() Tj
T*
(To access the `robber_lang\(\)` method we created above, we could write:) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_workshop.skills.api import SkillApi) Tj
T*
() Tj
T*
(class NewRobberSkill\(OVOSSkill\):) Tj
T*
(    def initialize\(self\):) Tj
T*
(        self.robber = SkillApi.get\('robber-skill.forslund'\)) Tj
T*
(        self.speak\(self.robber.robber_lang\('hello world'\)\)) Tj
T*
(```) Tj
T*
() Tj
T*
(When the `NewRobberSkill` is initialized, it will assign the API from the Skill `robber-skill.f) Tj
T*
(orslund` to `self.robber`. We then run the exported method `robber_lang\(\)` passing the argument) Tj
T*
( `'hello world'`.) Tj
T*
() Tj
T*
(Our `NewRobberSkill` will therefore speak something like "hoh e lol lol o wow o ror lol dod".) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/410-skill_runtime_requirements.md ===) Tj
T*
() Tj
T*
(# Runtime Requirements in OVOS) Tj
T*
() Tj
T*
(OVOS \(Open Voice OS\) introduces advanced runtime management to ensure skills are only loaded an) Tj
T*
(d active when the system is ready. This improves performance, avoids premature skill activation) Tj
T*
(, and enables greater flexibility across different system setups \(offline, headless, GUI-enable) Tj
T*
(d, etc.\).) Tj
T*
() Tj
T*
(This guide covers how to control when OVOS declares readiness, how dynamic skill loading works,) Tj
T*
( and how developers can use `RuntimeRequirements` to specify resource dependencies for their sk) Tj
T*
(ills.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Usage Guide) Tj
T*
() Tj
T*
(### Step 1: Customize `ready_settings` \(in your configuration\)) Tj
T*
() Tj
T*
(You can specify what the system must wait for before emitting the `mycroft.ready` message:) Tj
T*
() Tj
T*
(```json) Tj
T*
({) Tj
T*
(  "ready_settings": [) Tj
T*
(    "skills",) Tj
T*
(    "network_skills",) Tj
T*
(    "internet_skills",) Tj
T*
(    "audio",) Tj
T*
(    "speech") Tj
T*
(  ]) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
ET
endstream
endobj
151 0 obj
<< /Length 2428 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(In this example, the `ready_settings` are configured to wait for network and internet connectiv) Tj
T*
(ity before emitting) Tj
T*
(the `'mycroft.ready'` message. Each setup can customize these settings based on their needs, a ) Tj
T*
(offline install won't) Tj
T*
(want internet skills, a server wont want a audio stack etc.) Tj
T*
() Tj
T*
(### Step 2: Define `RuntimeRequirements` in your skill) Tj
T*
() Tj
T*
(Use the `runtime_requirements` class property to control when and how your skill should load ba) Tj
T*
(sed on system resources like internet, network, or GUI.) Tj
T*
() Tj
T*
(Example:) Tj
T*
(```python) Tj
T*
(from ovos_utils import classproperty) Tj
T*
(from ovos_workshop.skills import OVOSSkill) Tj
T*
(from ovos_utils.process_utils import RuntimeRequirements) Tj
T*
() Tj
T*
(class MySkill\(OVOSSkill\):) Tj
T*
() Tj
T*
(    @classproperty) Tj
T*
(    def runtime_requirements\(self\):) Tj
T*
(        return RuntimeRequirements\() Tj
T*
(            requires_internet=True) Tj
T*
(        \)) Tj
T*
(```) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Technical Explanation) Tj
T*
() Tj
T*
(### `ready_settings`) Tj
T*
() Tj
T*
(The `ready_settings` config controls when OVOS emits `mycroft.ready`, which signals that the sy) Tj
T*
(stem is ready for use. Each entry in this list waits for a different component:) Tj
T*
() Tj
T*
(- **"skills"** ? Waits for offline skills to load.) Tj
T*
(- **"network_skills"** ? Waits for the system to detect a network connection \(`mycroft.network.) Tj
T*
(connected`\).) Tj
T*
(- **"internet_skills"** ? Waits for an internet connection \(`mycroft.internet.connected`\).) Tj
T*
(- **"setup"** ? Waits for an external setup process \(e.g., pairing or configuration\).) Tj
T*
(- **"audio"** ? Waits for the audio playback and capture systems to be initialized.) Tj
T*
(- **"speech"** ? Waits for the STT \(speech-to-text\) engine to be ready.) Tj
T*
(- **{skill_id}** - Waits for a specific skill to be available) Tj
T*
() Tj
T*
(> ?? **Note**: By default, OVOS only waits for offline skills. Unlike Mycroft-core, OVOS suppor) Tj
T*
(ts dynamic loading, so timing can impact skills that depend on the `mycroft.ready` message.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Dynamic Loading and Unloading) Tj
T*
() Tj
T*
(Introduced in `ovos-core 0.0.8`, dynamic skill management improves system performance and relia) Tj
T*
(bility by:) Tj
T*
() Tj
T*
ET
endstream
endobj
152 0 obj
<< /Length 2768 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(- **Only loading skills when their requirements are met.**) Tj
T*
(- **Unloading skills when they become unusable due to lost resources.**) Tj
T*
() Tj
T*
(### Benefits:) Tj
T*
(- Reduces memory and CPU usage.) Tj
T*
(- Avoids unnecessary skill activations.) Tj
T*
(- Simplifies skill logic \(e.g., no need to check for connectivity manually\).) Tj
T*
() Tj
T*
(Skills are loaded only when their specific requirements are met. This optimization prevents unn) Tj
T*
(ecessary loading, conserving system resources and ensuring a more efficient skill environment.) Tj
T*
() Tj
T*
(**Reducing Unintended Activations**) Tj
T*
() Tj
T*
(Dynamic unloading of skills based on specific conditions significantly reduces the chance of un) Tj
T*
(intentional activations. In scenarios where required conditions are not met, skills are gracefu) Tj
T*
(lly unloaded, enhancing the user experience by avoiding unintended skill triggers.) Tj
T*
() Tj
T*
(This approach aligns with resource-conscious design, providing a more responsive and reliable v) Tj
T*
(oice assistant environment. Developers can focus on skill functionality, knowing that OVOS effi) Tj
T*
(ciently manages skill loading and unloading based on runtime requirements.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## RuntimeRequirements \(`@classproperty`\)) Tj
T*
() Tj
T*
(Also introduced in `ovos-core 0.0.8`, the `RuntimeRequirements` class property allows skill dev) Tj
T*
(elopers to declare when a skill should be loaded or unloaded based on runtime conditions.) Tj
T*
() Tj
T*
(> ?? Replaces the deprecated `"priority_skills"` config.) Tj
T*
() Tj
T*
(### Key fields:) Tj
T*
() Tj
T*
(| Field                 | Description |) Tj
T*
(|----------------------|-------------|) Tj
T*
(| `internet_before_load` | Wait for internet before loading |) Tj
T*
(| `requires_internet`     | Unload if internet is lost \(unless fallback enabled\) |) Tj
T*
(| `no_internet_fallback` | If true, do **not** unload when internet is lost |) Tj
T*
(| `network_before_load`  | Wait for network before loading |) Tj
T*
(| `requires_network`     | Unload if network is lost \(unless fallback enabled\) |) Tj
T*
(| `gui_before_load`      | Wait for GUI before loading |) Tj
T*
(| `requires_gui`         | Unload if GUI is lost \(unless fallback enabled\) |) Tj
T*
(| `no_gui_fallback`      | If true, do **not** unload when GUI is lost |) Tj
T*
() Tj
T*
(> ? Uses `@classproperty` so the system can evaluate the requirements without loading the skill) Tj
T*
(.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Examples) Tj
T*
() Tj
T*
(### 1. Fully Offline Skill) Tj
T*
() Tj
T*
(In this example, a fully offline skill is defined. The skill does not require internet or netwo) Tj
T*
(rk connectivity during) Tj
T*
ET
endstream
endobj
153 0 obj
<< /Length 2450 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(loading or runtime. If the network or internet is unavailable, the skill can still operate.) Tj
T*
() Tj
T*
(Defining this will ensure your skill loads as soon as possible; otherwise, the `SkillManager` w) Tj
T*
(ill wait for internet before loading the skill.) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_utils import classproperty) Tj
T*
(from ovos_workshop.skills import OVOSSkill) Tj
T*
(from ovos_utils.process_utils import RuntimeRequirements) Tj
T*
() Tj
T*
() Tj
T*
(class MyOfflineSkill\(OVOSSkill\):) Tj
T*
() Tj
T*
(    @classproperty) Tj
T*
(    def runtime_requirements\(self\):) Tj
T*
(        return RuntimeRequirements\(internet_before_load=False,) Tj
T*
(                                   network_before_load=False,) Tj
T*
(                                   requires_internet=False,) Tj
T*
(                                   requires_network=False,) Tj
T*
(                                   no_internet_fallback=True,) Tj
T*
(                                   no_network_fallback=True\)) Tj
T*
(```) Tj
T*
(Loads immediately, runs without internet or network.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(### 2. Internet-Dependent Skill \(with fallback\)) Tj
T*
() Tj
T*
(In this example, an online search skill with a local cache is defined. The skill requires inter) Tj
T*
(net connectivity during) Tj
T*
(both loading and runtime. If the internet is not available, the skill won't load. Once loaded, ) Tj
T*
(the skill continues to) Tj
T*
(require internet connectivity.) Tj
T*
() Tj
T*
(However, our skill keeps a cache of previous results; therefore, it declares it can handle inte) Tj
T*
(rnet outages and will not) Tj
T*
(be unloaded when the internet goes down.) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_utils import classproperty) Tj
T*
(from ovos_workshop.skills import OVOSSkill) Tj
T*
(from ovos_utils.process_utils import RuntimeRequirements) Tj
T*
() Tj
T*
() Tj
T*
(class MyInternetSkill\(OVOSSkill\):) Tj
T*
() Tj
T*
(    @classproperty) Tj
T*
(    def runtime_requirements\(self\):) Tj
T*
(        # our skill can answer cached results when the internet goes down) Tj
T*
(        return RuntimeRequirements\() Tj
T*
(            internet_before_load=True,  # only load once we have internet) Tj
T*
(            requires_internet=True,  # indicate we need internet to work) Tj
T*
(            no_internet_fallback=True  # do NOT unload if internet goes down) Tj
T*
(        \)) Tj
T*
ET
endstream
endobj
154 0 obj
<< /Length 2252 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(    def initialize\(self\):) Tj
T*
(        ...  # do something that requires internet connectivity) Tj
T*
(```) Tj
T*
(Loads only when internet is available. Stays loaded even if internet is lost, using a cached fa) Tj
T*
(llback.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(### 3. LAN-Controlled IOT Skill) Tj
T*
() Tj
T*
(Consider a skill that should only load once we have a network connection.) Tj
T*
(By specifying that requirement, we can ensure that the skill is only loaded once the requiremen) Tj
T*
(ts are met, and it is) Tj
T*
(safe to utilize network resources on initialization.) Tj
T*
() Tj
T*
(In this example, an IOT skill controlling devices via LAN is defined. The skill requires networ) Tj
T*
(k connectivity during) Tj
T*
(loading, and if the network is not available, it won't load.) Tj
T*
() Tj
T*
(Once loaded, the skill continues to require network connectivity and will unload if the network) Tj
T*
( is lost.) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_utils import classproperty) Tj
T*
(from ovos_workshop.skills import OVOSSkill) Tj
T*
(from ovos_utils.process_utils import RuntimeRequirements) Tj
T*
() Tj
T*
() Tj
T*
(class MyIOTSkill\(OVOSSkill\):) Tj
T*
() Tj
T*
(    @classproperty) Tj
T*
(    def runtime_requirements\(self\):) Tj
T*
(        return RuntimeRequirements\() Tj
T*
(            network_before_load=True,  # only load once network available) Tj
T*
(            requires_network=True,  # we need network to work) Tj
T*
(            no_network_fallback=False  # unload if network goes down) Tj
T*
(        \)) Tj
T*
() Tj
T*
(    def initialize\(self\):) Tj
T*
(        ...  # do something that needs LAN connectivity) Tj
T*
(```) Tj
T*
(Loads when the local network is connected. Unloads if the network is lost.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(### 4. GUI + Internet Skill \(Unloads without GUI\)) Tj
T*
() Tj
T*
(Consider a skill with both graphical user interface \(GUI\) and internet dependencies is defined.) Tj
T*
() Tj
T*
(The skill requires both GUI availability and internet connectivity during loading.) Tj
T*
() Tj
T*
(If either the GUI or the internet is not available, the skill won't load. Once loaded, the skil) Tj
T*
(l continues to require) Tj
T*
ET
endstream
endobj
155 0 obj
<< /Length 2468 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(both GUI availability, but internet connectivity is optional.) Tj
T*
() Tj
T*
(If the user asks "show me the picture of the day" and we have both internet and a GUI, our skil) Tj
T*
(l will match the intent.) Tj
T*
() Tj
T*
(If we do not have internet but have a GUI, the skill will still operate, using a cached picture) Tj
T*
(. If no GUI is available then the skill will unload regardless of internet status) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_utils import classproperty) Tj
T*
(from ovos_workshop.skills import OVOSSkill) Tj
T*
(from ovos_utils.process_utils import RuntimeRequirements) Tj
T*
() Tj
T*
() Tj
T*
(class MyGUIAndInternetSkill\(OVOSSkill\):) Tj
T*
() Tj
T*
(    @classproperty) Tj
T*
(    def runtime_requirements\(self\):) Tj
T*
(        return RuntimeRequirements\() Tj
T*
(            gui_before_load=True,  # only load if GUI is available) Tj
T*
(            requires_gui=True,  # continue requiring GUI once loaded) Tj
T*
(            internet_before_load=True,  # only load if internet is available) Tj
T*
(            requires_internet=True,  # continue requiring internet once loaded) Tj
T*
(            no_gui_fallback=False,  # unload if GUI becomes unavailable) Tj
T*
(            no_internet_fallback=True  # do NOT unload if internet becomes unavailable, use cac) Tj
T*
(hed picture) Tj
T*
(        \)) Tj
T*
() Tj
T*
(    def initialize\(self\):) Tj
T*
(        ...  # do something that requires both GUI and internet connectivity) Tj
T*
(```) Tj
T*
(Requires GUI and internet to load. Will stay loaded if internet is lost \(e.g., to show a cached) Tj
T*
( picture\), but unloads if GUI becomes unavailable.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Tips and Caveats) Tj
T*
() Tj
T*
(- If `runtime_requirements` is not defined, OVOS assumes **internet is required** but **GUI is ) Tj
T*
(optional**.) Tj
T*
(- You can combine different requirements to handle a wide range of usage patterns \(e.g., headle) Tj
T*
(ss servers, embedded devices, smart displays\).) Tj
T*
(- Consider defining graceful fallbacks to avoid unnecessary unloading.) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/411-skill_json.md ===) Tj
T*
() Tj
T*
(# Skill Metadata File) Tj
T*
() Tj
T*
(The `skill.json` file is an optional but powerful way to describe your Open Voice OS \(OVOS\) ski) Tj
T*
(ll. It provides metadata used for installation, discovery, and display in GUIs or app stores.) Tj
T*
() Tj
T*
(## Purpose) Tj
T*
() Tj
T*
ET
endstream
endobj
156 0 obj
<< /Length 2128 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(- Helps OVOS identify and install your skill.) Tj
T*
(- Enhances GUI experiences with visuals and usage examples.) Tj
T*
(- Lays the foundation for future help dialogs and skill documentation features.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Usage Guide) Tj
T*
() Tj
T*
(1. Create a `skill.json` file inside your skill's `locale/<language-code>` folder.) Tj
T*
(2. Fill in the metadata fields as needed \(see below\).) Tj
T*
(3. If your skill supports multiple languages, include a separate `skill.json` in each correspon) Tj
T*
(ding `locale` subfolder.) Tj
T*
() Tj
T*
(> ?? **Avoid using old `skill.json` formats** found in some legacy skills where the file exists) Tj
T*
( at the root level. These are deprecated.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Example `skill.json`) Tj
T*
() Tj
T*
(```json) Tj
T*
({) Tj
T*
(  "skill_id": "skill-xxx.exampleauthor",) Tj
T*
(  "source": "https://github.com/ExampleAuthor/skill-xxx",) Tj
T*
(  "package_name": "ovos-skill-xxx",) Tj
T*
(  "pip_spec": "git+https://github.com/ExampleAuthor/skill-xxx@main",) Tj
T*
(  "license": "Apache-2.0",) Tj
T*
(  "author": "ExampleAuthor",) Tj
T*
(  "extra_plugins": {) Tj
T*
(    "core": ["ovos-utterance-transformer-xxx"],) Tj
T*
(    "PHAL": ["ovos-PHAL-xxx"],) Tj
T*
(    "listener": ["ovos-audio-transformer-xxx", "ovos-ww-plugin-xxx", "ovos-vad-plugin-xxx", "ov) Tj
T*
(os-stt-plugin-xxx"],) Tj
T*
(    "audio": ["ovos-dialog-transformer-xxx", "ovos-tts-transformer-xxx", "ovos-tts-plugin-xxx"]) Tj
T*
(,) Tj
T*
(    "media": ["ovos-ocp-xxx", "ovos-media-xxx"],) Tj
T*
(    "gui": ["ovos-gui-extension-xxx"]) Tj
T*
(  },) Tj
T*
(  "icon": "http://example.com/icon.svg",) Tj
T*
(  "images": ["http://example.com/logo.png", "http://example.com/screenshot.png"],) Tj
T*
(  "name": "My Skill",) Tj
T*
(  "description": "Does awesome skill stuff!",) Tj
T*
(  "examples": [) Tj
T*
(    "do the thing",) Tj
T*
(    "say this to use the skill") Tj
T*
(  ],) Tj
T*
(  "tags": ["productivity", "entertainment", "aliens"]) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Field Reference) Tj
T*
() Tj
T*
ET
endstream
endobj
157 0 obj
<< /Length 2655 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(| Field            | Type     | Required | Description |) Tj
T*
(|------------------|----------|----------|-------------|) Tj
T*
(| `skill_id`       | string   | ? Yes    | Unique ID, typically `repo.author` style \(lowercase\)) Tj
T*
(. |) Tj
T*
(| `source`         | string   | ? Optional | Git URL to install from source. |) Tj
T*
(| `package_name`   | string   | ? Yes    | Python package name \(e.g., for PyPI installs\). |) Tj
T*
(| `pip_spec`       | string   | ? Optional | [PEP 508]\(https://peps.python.org/pep-0508/\) insta) Tj
T*
(ll spec. |) Tj
T*
(| `license`        | string   | ? Optional | License ID \(see [SPDX list]\(https://spdx.org/licen) Tj
T*
(ses/\)\). |) Tj
T*
(| `author`         | string   | ? Optional | Display name of the skill author. |) Tj
T*
(| `extra_plugins`  | object   | ? Optional | Dependencies to be installed in other OVOS service) Tj
T*
(s \(not this skill\). |) Tj
T*
(| `icon`           | string   | ? Optional | URL to a skill icon \(SVG recommended\). |) Tj
T*
(| `images`         | list     | ? Optional | Screenshots or promotional images. |) Tj
T*
(| `name`           | string   | ? Optional | User-facing skill name. |) Tj
T*
(| `description`    | string   | ? Optional | Short, one-line summary of the skill. |) Tj
T*
(| `examples`       | list     | ? Optional | Example utterances your skill handles. |) Tj
T*
(| `tags`           | list     | ? Optional | Keywords for searchability. |) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Language Support) Tj
T*
() Tj
T*
(To support multiple languages, place a `skill.json` file in each corresponding `locale/<lang>` ) Tj
T*
(folder. Fields like `name`, `description`, `examples`, and `tags` can be translated for that lo) Tj
T*
(cale.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Installation Behavior) Tj
T*
() Tj
T*
(When installing a skill, OVOS will try the following methods in order:) Tj
T*
() Tj
T*
(1. `pip_spec` \(if present\)) Tj
T*
(2. `package_name` \(from PyPI\)) Tj
T*
(3. `source` \(from Git\)) Tj
T*
() Tj
T*
(At least **one valid installation path is required**.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Tips & Caveats) Tj
T*
() Tj
T*
(- This metadata format is **experimental** and may evolve?check for updates regularly.) Tj
T*
(- `extra_plugins` allows for declaring companion plugins your skill may require, but that aren') Tj
T*
(t direct Python dependencies.) Tj
T*
(- The [Skill store]\(https://store.openvoiceos.org\) and GUI tools like `ovos-shell` use `icon`, ) Tj
T*
(`images`, `examples`, and `description` to present the skill visually.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## See Also) Tj
T*
() Tj
T*
ET
endstream
endobj
158 0 obj
<< /Length 3128 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(- [PEP 508 ? Dependency specification]\(https://peps.python.org/pep-0508/\)) Tj
T*
(- [SPDX License List]\(https://spdx.org/licenses/\)) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/420-ssml.md ===) Tj
T*
() Tj
T*
(# SSMLBuilder ) Tj
T*
() Tj
T*
(## What is SSML?) Tj
T*
() Tj
T*
(Speech Synthesis Markup Language \(SSML\) is a markup language used to enhance synthesized speech) Tj
T*
( output. It provides developers with a way to control various aspects of speech synthesis, such) Tj
T*
( as pronunciation, intonation, volume, and speed, by using predefined tags and attributes.) Tj
T*
() Tj
T*
(SSML allows developers to create more natural and expressive speech output, making interactions) Tj
T*
( with voice-based applications more engaging and user-friendly.) Tj
T*
() Tj
T*
(These use cases demonstrate how SSML can be applied in various contexts to improve the quality,) Tj
T*
( expressiveness, and accessibility of synthesized speech output, ultimately enhancing the overa) Tj
T*
(ll user experience.) Tj
T*
() Tj
T*
(1. **Narration with Emphasis**: In storytelling applications or audiobooks, developers can use ) Tj
T*
(SSML to emphasize specific words or phrases to convey emotions or highlight key points in the n) Tj
T*
(arrative. For example, during a suspenseful moment in a story, the narrator's voice could be sl) Tj
T*
(owed down for dramatic effect using SSML.) Tj
T*
() Tj
T*
(2. **Interactive Voice Responses**: In voice-based applications such as virtual assistants or c) Tj
T*
(ustomer service bots, SSML can be used to provide more natural and engaging interactions with u) Tj
T*
(sers. For instance, developers can use SSML to insert pauses between sentences to mimic natural) Tj
T*
( speech patterns or adjust the pitch and volume of the voice to convey empathy or urgency.) Tj
T*
() Tj
T*
(3. **Educational Content**: SSML can be valuable in educational applications where synthesized ) Tj
T*
(speech is used to deliver instructional content or quizzes. Developers can use SSML to modify t) Tj
T*
(he speaking rate to accommodate different learning paces or employ phonetic pronunciation tags ) Tj
T*
(to ensure correct pronunciation of specialized terms or foreign words.) Tj
T*
() Tj
T*
(4. **Accessibility Features**: For applications designed to assist users with visual impairment) Tj
T*
(s or reading difficulties, SSML can play a crucial role in enhancing accessibility. Developers ) Tj
T*
(can use SSML to provide auditory cues, such as tone changes or speech emphasis, to indicate imp) Tj
T*
(ortant information or user interface elements.) Tj
T*
() Tj
T*
() Tj
T*
(## SSMLBuilder) Tj
T*
() Tj
T*
(The `SSMLBuilder` class simplifies the creation of SSML strings by providing intuitive methods ) Tj
T*
(to control various aspects of speech synthesis. It offers a range of methods for manipulating t) Tj
T*
(ext, adjusting timing and prosody, specifying voice and phoneme characteristics, and more.) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_utils.ssml import SSMLBuilder) Tj
T*
() Tj
T*
(class MySkill:) Tj
T*
() Tj
T*
(    def handle_intent\(self, message\):) Tj
T*
ET
endstream
endobj
159 0 obj
<< /Length 2860 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(        # Create an instance of SSMLBuilder) Tj
T*
(        ssml_builder = SSMLBuilder\(\)) Tj
T*
() Tj
T*
(        # Generate SSML) Tj
T*
(        ssml_text = ssml_builder.sentence\("Hello, world!"\).pause\(500, "ms"\).say_slow\("How are y) Tj
T*
(ou today?"\).build\(\)) Tj
T*
() Tj
T*
(        # Output:) Tj
T*
(        # '<speak>\\n<s>Hello, world!</s> <break time=500ms/><prosody rate='0.4'>How are you tod) Tj
T*
(ay?</prosody>\\n</speak>') Tj
T*
() Tj
T*
(        # Speak the SSML text) Tj
T*
(        self.speak\(ssml_text\)) Tj
T*
(```) Tj
T*
() Tj
T*
(### Text Manipulation) Tj
T*
() Tj
T*
(1. `sub\(alias, word\)`: Replaces a word with a specified alias.) Tj
T*
(2. `emphasis\(level, word\)`: Emphasizes a word with a specified level.) Tj
T*
(3. `parts_of_speech\(word, role\)`: Specifies the usage or role of a word.) Tj
T*
(4. `pause_by_strength\(strength\)`: Inserts a pause with a specified strength.) Tj
T*
(5. `sentence\(text\)`: Wraps text with `<s>` tags to denote a sentence.) Tj
T*
(6. `say_emphasis\(text\)`: Emphasizes the text strongly.) Tj
T*
(7. `say_strong\(text\)`: Modifies the vocal-tract length to increase speech intensity.) Tj
T*
(8. `say_weak\(text\)`: Modifies the vocal-tract length to decrease speech intensity.) Tj
T*
(9. `say_softly\(text\)`: Modifies the phonation to produce softer speech.) Tj
T*
(10. `say_auto_breaths\(text\)`: Adds automatic breaths to the speech.) Tj
T*
(11. `paragraph\(text\)`: Wraps text with `<p>` tags to denote a paragraph.) Tj
T*
(12. `audio\(audio_file, text\)`: Embeds audio with specified text.) Tj
T*
() Tj
T*
(### Timing and Prosody) Tj
T*
() Tj
T*
(1. `pause\(time, unit\)`: Inserts a pause for a specified duration.) Tj
T*
(2. `prosody\(attribute, text\)`: Modifies prosodic attributes of the text such as pitch, rate, or) Tj
T*
( volume.) Tj
T*
(3. `pitch\(pitch, text\)`: Changes the pitch of the text.) Tj
T*
(4. `volume\(volume, text\)`: Modifies the volume of the text.) Tj
T*
(5. `rate\(rate, text\)`: Adjusts the speaking rate of the text.) Tj
T*
() Tj
T*
(### Voice and Phoneme) Tj
T*
() Tj
T*
(1. `say\(text\)`: Adds normal speed text to SSML.) Tj
T*
(2. `say_loud\(text\)`: Increases the volume of the text.) Tj
T*
(3. `say_slow\(text\)`: Slows down the speaking rate of the text.) Tj
T*
(4. `say_fast\(text\)`: Speeds up the speaking rate of the text.) Tj
T*
(5. `say_low_pitch\(text\)`: Lowers the pitch of the text.) Tj
T*
(6. `say_high_pitch\(text\)`: Raises the pitch of the text.) Tj
T*
(7. `say_whispered\(text\)`: Converts text into whispered speech.) Tj
T*
(8. `phoneme\(ph, text\)`: Specifies the phonetic pronunciation of the text.) Tj
T*
(9. `voice\(voice, text\)`: Specifies the voice to use for the text.) Tj
T*
(10. `whisper\(text\)`: Converts text into whispered speech.) Tj
T*
() Tj
T*
(### Build and Utility) Tj
T*
() Tj
T*
ET
endstream
endobj
160 0 obj
<< /Length 2304 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(1. `build\(\)`: Constructs the final SSML string.) Tj
T*
(2. `remove_ssml\(text\)`: Removes SSML tags from the given text.) Tj
T*
(3. `extract_ssml_tags\(text\)`: Extracts SSML tags from the given text.) Tj
T*
() Tj
T*
(## SSML Support in TTS Plugins) Tj
T*
() Tj
T*
(OVOS TTS plugins implement support for SSML, ensuring that SSML content is processed accurately) Tj
T*
( during speech synthesis. Let's take a closer look at how SSML handling works within the `TTS` ) Tj
T*
(abstract class:) Tj
T*
() Tj
T*
(- **SSML Validation**: The `validate_ssml\(\)` method checks if the TTS engine supports SSML. Uns) Tj
T*
(upported or invalid SSML tags are removed from the input text to ensure proper processing.) Tj
T*
() Tj
T*
(- **SSML Tag Handling**: Supported SSML tags are processed by the TTS engine during synthesis. ) Tj
T*
(Unsupported tags are removed, while supported tags are modified or retained based on the implem) Tj
T*
(entation of the `modify_tag\(\)` method.) Tj
T*
() Tj
T*
(```python) Tj
T*
() Tj
T*
(# default handling of ssml, advanced plugins may override this method) Tj
T*
(def modify_tag\(self, tag\):) Tj
T*
(    """Override to modify each supported ssml tag.) Tj
T*
() Tj
T*
(    Arguments:) Tj
T*
(        tag \(str\): SSML tag to check and possibly transform.) Tj
T*
(    """) Tj
T*
(    return tag) Tj
T*
() Tj
T*
(def validate_ssml\(self, utterance\):) Tj
T*
(    """Check if engine supports ssml, if not remove all tags.) Tj
T*
() Tj
T*
(    Remove unsupported / invalid tags) Tj
T*
() Tj
T*
(    Arguments:) Tj
T*
(        utterance \(str\): Sentence to validate) Tj
T*
() Tj
T*
(    Returns:) Tj
T*
(        str: validated_sentence) Tj
T*
(    """) Tj
T*
() Tj
T*
(    # Validate speak tags) Tj
T*
(    if not self.ssml_tags or "speak" not in self.ssml_tags:) Tj
T*
(        self.format_speak_tags\(utterance, False\)) Tj
T*
(    elif self.ssml_tags and "speak" in self.ssml_tags:) Tj
T*
(        self.format_speak_tags\(utterance\)) Tj
T*
() Tj
T*
(    # if ssml is not supported by TTS engine remove all tags) Tj
T*
(    if not self.ssml_tags:) Tj
T*
(        return self.remove_ssml\(utterance\)) Tj
T*
() Tj
T*
(    # find ssml tags in string) Tj
T*
(    tags = SSML_TAGS.findall\(utterance\)) Tj
T*
() Tj
T*
(    for tag in tags:) Tj
T*
ET
endstream
endobj
161 0 obj
<< /Length 2925 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(        if any\(supported in tag for supported in self.ssml_tags\):) Tj
T*
(            utterance = utterance.replace\(tag, self.modify_tag\(tag\)\)) Tj
T*
(        else:) Tj
T*
(            # remove unsupported tag) Tj
T*
(            utterance = utterance.replace\(tag, ""\)) Tj
T*
() Tj
T*
(    # return text with supported ssml tags only) Tj
T*
(    return utterance.replace\("  ", " "\)) Tj
T*
(```) Tj
T*
() Tj
T*
(### Platform-Specific SSML Handling) Tj
T*
() Tj
T*
(Some TTS plugins, like the PollyTTS plugin, may support platform-specific SSML tags that are no) Tj
T*
(t part of the standard specification. For example, Amazon Polly supports additional SSML tags s) Tj
T*
(pecific to Amazon's speech synthesis service.) Tj
T*
() Tj
T*
(Let's take a closer look at how SSML support is implemented in the `PollyTTS` plugin:) Tj
T*
() Tj
T*
(```python) Tj
T*
(class PollyTTS\(TTS\):) Tj
T*
(    def __init__\(self, *args, **kwargs\):) Tj
T*
(        ssml_tags = ["speak", "say-as", "voice", "prosody", "break",) Tj
T*
(                     "emphasis", "sub", "lang", "phoneme", "w", "whisper",) Tj
T*
(                     "amazon:auto-breaths", "p", "s", "amazon:effect", "mark"]) Tj
T*
(        super\(\).__init__\(*args, **kwargs, audio_ext="mp3",) Tj
T*
(                         ssml_tags=ssml_tags, validator=PollyTTSValidator\(self\)\)) Tj
T*
() Tj
T*
(    def get_tts\(self, sentence, wav_file, lang=None, voice=None\):) Tj
T*
(        # SSML handling specific to PollyTTS) Tj
T*
(        # Replace custom SSML tags for Amazon Polly) Tj
T*
(        sentence = sentence.replace\("\\whispered", "/amazon:effect"\) \\) Tj
T*
(            .replace\("\\\\whispered", "/amazon:effect"\) \\) Tj
T*
(            .replace\("whispered", "amazon:effect name=\\"whispered\\""\)) Tj
T*
() Tj
T*
(        # altermatively the plugin could override self.modify_tag method instead) Tj
T*
() Tj
T*
(        # Synthesize speech using Amazon Polly API) Tj
T*
(        # Write audio stream to WAV file) Tj
T*
(        return wav_file, None) Tj
T*
(```) Tj
T*
() Tj
T*
(In this example, the `PollyTTS` plugin defines a list of supported SSML tags, including both st) Tj
T*
(andard and Amazon-specific tags. During initialization, the plugin sets up SSML support by prov) Tj
T*
(iding the list of tags to the `TTS` superclass.) Tj
T*
() Tj
T*
(When synthesizing speech using Amazon Polly, the plugin translates platform-specific SSML tags ) Tj
T*
(like `amazon:effect` to ensure compatibility with Amazon's speech synthesis service.) Tj
T*
() Tj
T*
(### Behavior with Plugins That Do Not Support SSML) Tj
T*
() Tj
T*
(When SSML text is sent to a TTS plugin that does not support SSML, the plugin will typically ig) Tj
T*
(nore the SSML tags and process the text as regular speech. ) Tj
T*
() Tj
T*
(This means that any SSML-specific effects, such as pauses, emphasis, or prosody modifications, ) Tj
T*
ET
endstream
endobj
162 0 obj
<< /Length 2389 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(will be dropped, and the synthesized speech will be generated without considering the SSML mark) Tj
T*
(up.) Tj
T*
() Tj
T*
(It's important to ensure compatibility between the SSML content and the capabilities of the TTS) Tj
T*
( plugin being used. If SSML-specific effects are essential for the intended speech output, it's) Tj
T*
( recommended to verify that the selected TTS plugin supports SSML or consider using a different) Tj
T*
( plugin that provides SSML support.) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/430-skill_dev_faq.md ===) Tj
T*
() Tj
T*
(# Developer FAQ) Tj
T*
() Tj
T*
(> This list is a work in progress, [Suggestions and Pull Requests welcome]\(https://github.com/O) Tj
T*
(penVoiceOS/ovos-technical-manual\)!) Tj
T*
() Tj
T*
(## How do I know what is currently happening in the GUI?) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_utils.gui import GUITracker) Tj
T*
(from ovos_workshop.skills import OVOSSkill) Tj
T*
(from ovos_workshop.decorators import intent_handler) Tj
T*
() Tj
T*
() Tj
T*
(class MyGUIEventTracker\(GUITracker\):) Tj
T*
(    # GUI event handlers) Tj
T*
(    # skill can/should subclass this) Tj
T*
() Tj
T*
(    def on_idle\(self, namespace\):) Tj
T*
(        print\("IDLE", namespace\)) Tj
T*
(        timestamp = self.idle_ts) Tj
T*
() Tj
T*
(    def on_active\(self, namespace\):) Tj
T*
(        # NOTE: page has not been loaded yet) Tj
T*
(        # event will fire right after this one) Tj
T*
(        print\("ACTIVE", namespace\)) Tj
T*
(        # check namespace values, they should all be set before this event) Tj
T*
(        values = self.gui_values[namespace]) Tj
T*
() Tj
T*
(    def on_new_page\(self, page, namespace, index\):) Tj
T*
(        print\("NEW PAGE", namespace, index, namespace\)) Tj
T*
(        # check all loaded pages) Tj
T*
(        for n in self.gui_pages:  # list of named tuples) Tj
T*
(            nspace = n.name  # namespace / skill_id) Tj
T*
(            pages = n.pages  # ordered list of page uris) Tj
T*
() Tj
T*
(    def on_gui_value\(self, namespace, key, value\):) Tj
T*
(        # WARNING this will pollute logs quite a lot, and you will get) Tj
T*
(        # duplicates, better to check values on a different event,) Tj
T*
(        # demonstrated in on_active) Tj
T*
(        print\("VALUE", namespace, key, value\)) Tj
T*
() Tj
T*
() Tj
T*
(class MySkill\(OVOSSkill\): ) Tj
T*
ET
endstream
endobj
163 0 obj
<< /Length 2623 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(    def initialize\(self\):) Tj
T*
(        self.tracker = MyGUIEventTracker\(bus=self.bus\)) Tj
T*
() Tj
T*
(    @intent_handler\("gui.status.intent"\)) Tj
T*
(    def handle_status_intent\(self, message\):) Tj
T*
(        print\("device has screen:", self.tracker.can_display\(\)\)) Tj
T*
(        print\("mycroft-gui installed:", self.tracker.is_gui_installed\(\)\)) Tj
T*
(        print\("gui connected:", self.tracker.is_gui_connected\(\)\)) Tj
T*
(        # TODO - speak or something) Tj
T*
() Tj
T*
(    @intent_handler\("list.idle.screens.intent"\)) Tj
T*
(    def handle_idle_screens_intent\(self, message\):) Tj
T*
(        # check registered idle screens) Tj
T*
(        print\("Registered idle screens:"\)) Tj
T*
(        for name in self.tracker.idle_screens:) Tj
T*
(            skill_id = self.tracker.idle_screens[name]) Tj
T*
(            print\("   - ", name, ":", skill_id\)) Tj
T*
(            # TODO - speak or something) Tj
T*
(```) Tj
T*
() Tj
T*
(## How do I stop an intent mid execution?) Tj
T*
() Tj
T*
(Sometimes you want to abort a running intent immediately, the stop method may not be enough in ) Tj
T*
(some circumstances) Tj
T*
(we provide a `killable_intent` decorator in `ovos_workshop` that can be used to abort a running) Tj
T*
( intent immediately) Tj
T*
() Tj
T*
(a common use case is for GUI interfaces where the same action may be done by voice or clicking ) Tj
T*
(buttons, in this case you may need to abort a running `get_response` loop) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_workshop.skills import OVOSSkill) Tj
T*
(from ovos_workshop.decorators import killable_intent, intent_handler) Tj
T*
(from time import sleep) Tj
T*
() Tj
T*
() Tj
T*
(class Test\(OVOSSkill\):) Tj
T*
(    """) Tj
T*
(    send "mycroft.skills.abort_question" and confirm only get_response is aborted) Tj
T*
(    send "mycroft.skills.abort_execution" and confirm the full intent is aborted, except intent) Tj
T*
(3) Tj
T*
(    send "my.own.abort.msg" and confirm intent3 is aborted) Tj
T*
(    say "stop" and confirm all intents are aborted) Tj
T*
(    """) Tj
T*
(    def __init__\(self\):) Tj
T*
(        super\(Test, self\).__init__\("KillableSkill"\)) Tj
T*
(        self.my_special_var = "default") Tj
T*
() Tj
T*
(    def handle_intent_aborted\(self\):) Tj
T*
(        self.speak\("I am dead"\)) Tj
T*
(        # handle any cleanup the skill might need, since intent was killed) Tj
T*
(        # at an arbitrary place of code execution some variables etc. might) Tj
T*
(        # end up in unexpected states) Tj
T*
(        self.my_special_var = "default") Tj
T*
ET
endstream
endobj
164 0 obj
<< /Length 2288 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(    @killable_intent\(callback=handle_intent_aborted\)) Tj
T*
(    @intent_handler\("test.intent"\)) Tj
T*
(    def handle_test_abort_intent\(self, message\):) Tj
T*
(        self.my_special_var = "changed") Tj
T*
(        while True:) Tj
T*
(            sleep\(1\)) Tj
T*
(            self.speak\("still here"\)) Tj
T*
() Tj
T*
(    @intent_handler\("test2.intent"\)) Tj
T*
(    @killable_intent\(callback=handle_intent_aborted\)) Tj
T*
(    def handle_test_get_response_intent\(self, message\):) Tj
T*
(        self.my_special_var = "CHANGED") Tj
T*
(        ans = self.get_response\("question", num_retries=99999\)) Tj
T*
(        self.log.debug\("get_response returned: " + str\(ans\)\)) Tj
T*
(        if ans is None:) Tj
T*
(            self.speak\("question aborted"\)) Tj
T*
() Tj
T*
(    @killable_intent\(msg="my.own.abort.msg", callback=handle_intent_aborted\)) Tj
T*
(    @intent_handler\("test3.intent"\)) Tj
T*
(    def handle_test_msg_intent\(self, message\):) Tj
T*
(        if self.my_special_var != "default":) Tj
T*
(            self.speak\("someone forgot to cleanup"\)) Tj
T*
(        while True:) Tj
T*
(            sleep\(1\)) Tj
T*
(            self.speak\("you can't abort me"\)) Tj
T*
(```) Tj
T*
() Tj
T*
(## How do I send files over the bus?) Tj
T*
() Tj
T*
(Sometimes you may want to send files or binary data over the messagebus, `ovos_utils` provides ) Tj
T*
(some tools to make this easy) Tj
T*
() Tj
T*
(Sending a file) Tj
T*
(```python) Tj
T*
(from ovos_utils.messagebus import send_binary_file_message, decode_binary_message) Tj
T*
(from ovos_workshop.skills import OVOSSkill) Tj
T*
() Tj
T*
() Tj
T*
(class MySkill\(OVOSSkill\): ) Tj
T*
(    def initialize\(self\):) Tj
T*
(        self.add_event\("mycroft.binary.file", self.receive_file\)) Tj
T*
() Tj
T*
(    def receive_file\(self, message\):) Tj
T*
(        print\("Receiving file"\)) Tj
T*
(        path = message.data["path"]  # file path, extract filename if needed) Tj
T*
(        binary_data = decode_binary_message\(message\)) Tj
T*
(        # TODO process data somehow) Tj
T*
() Tj
T*
(    def send_file\(self, my_file_path\):) Tj
T*
(        send_binary_file_message\(my_file_path\)) Tj
T*
(```) Tj
T*
() Tj
T*
(Sending binary data directly) Tj
T*
ET
endstream
endobj
165 0 obj
<< /Length 2201 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(```python) Tj
T*
(from ovos_utils.messagebus import send_binary_data_message, decode_binary_message) Tj
T*
(from ovos_workshop.skills import OVOSSkill) Tj
T*
() Tj
T*
() Tj
T*
(class MySkill\(OVOSSkill\):) Tj
T*
(    def initialize\(self\):) Tj
T*
(        self.add_event\("mycroft.binary.data", self.receive_binary\)) Tj
T*
() Tj
T*
(    def send_data\(self, binary_data\):) Tj
T*
(        send_binary_data_message\(binary_data\)) Tj
T*
() Tj
T*
(    def receive_binary\(self, message\):) Tj
T*
(        print\("Receiving binary data"\)) Tj
T*
(        binary_data = decode_binary_message\(message\)) Tj
T*
(         # TODO process data somehow) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
(=== docs/50-ovos_installer.md ===) Tj
T*
() Tj
T*
(# How to Install Open Voice OS with the `ovos-installer`) Tj
T*
() Tj
T*
(Welcome to the quick-start guide for installing Open Voice OS \(OVOS\) using the official `ovos-i) Tj
T*
(nstaller`! This guide is suitable for **Raspberry Pi** and **desktop/server** Linux environment) Tj
T*
(s. Whether you?re running this on a headless Raspberry Pi or your everyday laptop, the steps ar) Tj
T*
(e mostly the same?only the way you connect to the device differs.) Tj
T*
() Tj
T*
(> ?? Note: Some ?exotic? hardware \(like ReSpeaker microphones or certain audio HATs\) may requir) Tj
T*
(e extra configuration. The installer aims for wide compatibility, but specialized setups might ) Tj
T*
(need some manual intervention.) Tj
T*
() Tj
T*
(Looking for a pre-built raspberry pi image instead? check out [raspOVOS]\(https://github.com/Ope) Tj
T*
(nVoiceOS/raspOVOS\) and the companion [tutorial]\(https://openvoiceos.github.io/ovos-technical-ma) Tj
T*
(nual/51-install_raspovos/\)) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Step-by-step Installation) Tj
T*
() Tj
T*
(### ? 1. Connect to Your Device *\(if remote\)*) Tj
T*
() Tj
T*
(If you're installing on a headless device \(like a Raspberry Pi\), connect via SSH:) Tj
T*
() Tj
T*
(```bash) Tj
T*
(ssh -l your-username <your-device-ip>) Tj
T*
(```) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(### ? 2. Update Package Metadata) Tj
T*
() Tj
T*
(Make sure your package manager is up to date:) Tj
T*
ET
endstream
endobj
166 0 obj
<< /Length 1679 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(```bash) Tj
T*
(sudo apt update) Tj
T*
(```) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(### ? 3. Install Prerequisites) Tj
T*
() Tj
T*
(Install `git` and `curl`?these are required to run the installer:) Tj
T*
() Tj
T*
(```bash) Tj
T*
(sudo apt install -y git curl) Tj
T*
(```) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(### ? 4. Run the OVOS Installer) Tj
T*
() Tj
T*
(Now you're ready to kick off the installation process:) Tj
T*
() Tj
T*
(```bash) Tj
T*
(sudo sh -c "$\(curl -fsSL https://raw.githubusercontent.com/OpenVoiceOS/ovos-installer/main/inst) Tj
T*
(aller.sh\)") Tj
T*
(```) Tj
T*
() Tj
T*
(![image]\(https://gist.github.com/user-attachments/assets/8a87fd01-2570-419b-8154-159b2d5801cb\)) Tj
T*
() Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## What Happens Next?) Tj
T*
() Tj
T*
(Once you run the script, the installer will:) Tj
T*
() Tj
T*
(- Perform system checks) Tj
T*
(- Install dependencies \(Python, Ansible, etc.\)) Tj
T*
(- Launch a **text-based user interface \(TUI\)** to guide you through the setup) Tj
T*
() Tj
T*
(This can take anywhere from **5 to 20 minutes**, depending on your hardware, internet speed, an) Tj
T*
(d storage performance. Now let?s walk through the installer screens!) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## The Installer Wizard) Tj
T*
() Tj
T*
(Navigation:) Tj
T*
() Tj
T*
(- navigation is done via arrow keys) Tj
T*
(- pressing space selects options in the lists) Tj
T*
(    - eg. when selecting `virtualenv` or `containers`) Tj
T*
(- pressing tab will switch between the options and the `<next>`/`<back>` buttons) Tj
T*
(- pressing enter will execute the highligted `<next>`/`<back>` option) Tj
T*
() Tj
T*
ET
endstream
endobj
167 0 obj
<< /Length 1905 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(---) Tj
T*
() Tj
T*
(### ? Language Selection) Tj
T*
() Tj
T*
(The first screen lets you select your preferred language. Just follow the on-screen instruction) Tj
T*
(s.) Tj
T*
() Tj
T*
(![image]\(https://gist.github.com/user-attachments/assets/61f9e089-1d54-49e9-8d4a-d5e1f6028ee2\)) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(### ? Environment Summary) Tj
T*
() Tj
T*
(You?ll be shown a summary of the detected environment?no action needed here. It?s just informat) Tj
T*
(ive.) Tj
T*
() Tj
T*
(![image]\(https://gist.github.com/user-attachments/assets/1268a703-2007-4bc0-b153-36f33b782b20\)) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(### ? Choose Installation Method) Tj
T*
() Tj
T*
(You have two choices:) Tj
T*
() Tj
T*
(- **Virtualenv**: Recommended for most users. Easier to understand and manage.) Tj
T*
(- **Containers**: For advanced users familiar with Docker or Podman.) Tj
T*
() Tj
T*
(![image]\(https://gist.github.com/user-attachments/assets/e1b881fc-327d-4e1f-839b-396cffcd354c\)) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(### ? Choose Channel) Tj
T*
() Tj
T*
(Select the **?development?** channel. Once OVOS is production-ready, a ?stable? channel will al) Tj
T*
(so be available.) Tj
T*
() Tj
T*
(![image]\(https://gist.github.com/user-attachments/assets/f782cebe-c86b-4474-93d7-894b712e8fe7\)) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(### ? Choose Profile) Tj
T*
() Tj
T*
(Pick the `ovos` profile. This is the classic, all-in-one Open Voice OS experience with all the ) Tj
T*
(necessary components running locally.) Tj
T*
() Tj
T*
(![image]\(https://gist.github.com/user-attachments/assets/0ff4279d-69fa-4ab8-b372-0fef263e6d7c\)) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(### ?? Feature Selection) Tj
T*
() Tj
T*
(Choose what features you?d like to install.) Tj
T*
() Tj
T*
(![image]\(https://gist.github.com/user-attachments/assets/bdb65ba6-18d6-42fd-aff6-22fab0826870\)) Tj
T*
ET
endstream
endobj
168 0 obj
<< /Length 2981 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(> ?? Note: Some features \(like the GUI\) may be unavailable on lower-end hardware like the Raspb) Tj
T*
(erry Pi 3B+.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(### ? Raspberry Pi Tuning *\(if applicable\)*) Tj
T*
() Tj
T*
(On Raspberry Pi boards, you?ll be offered system tweaks to improve performance. It's highly rec) Tj
T*
(ommended to enable this!) Tj
T*
() Tj
T*
(![image]\(https://gist.github.com/user-attachments/assets/91bb5f18-9c5a-49ef-a0fe-5b0e52b44ee9\)) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(### ? Summary) Tj
T*
() Tj
T*
(Before the installation begins, you'll see a summary of your selected options. This is your las) Tj
T*
(t chance to cancel the process.) Tj
T*
() Tj
T*
(![image]\(https://gist.github.com/user-attachments/assets/62a565f3-6871-4dfe-a441-c482199feac0\)) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(### ? Anonymous Telemetry) Tj
T*
() Tj
T*
(You'll be asked whether to share **anonymous usage data** to help improve Open Voice OS. Please) Tj
T*
( consider opting in!) Tj
T*
() Tj
T*
(![image]\(https://gist.github.com/user-attachments/assets/b8015c41-370d-49d3-b783-996887cb421b\)) Tj
T*
() Tj
T*
(The data collection only happens during the installation process, nothing else will be collecte) Tj
T*
(d once the installation is over.) Tj
T*
() Tj
T*
(**The installer will ask you if you want to share or not the data.**) Tj
T*
() Tj
T*
(Below is a list of the collected data _\(please have a look to the [Ansible tempalte]\(https://gi) Tj
T*
(thub.com/OpenVoiceOS/ovos-installer/blob/main/ansible/roles/ovos_installer/templates/telemetry.) Tj
T*
(json.j2\) used ti publish the data\)_.) Tj
T*
() Tj
T*
(| Data                   | Description                                              |) Tj
T*
(| ---------------------- | -------------------------------------------------------- |) Tj
T*
(| `architecture`         | CPU architecture where OVOS was installed                |) Tj
T*
(| `channel`              | `stable` or `development` version of OVOS                |) Tj
T*
(| `container`            | OVOS installed into containers                           |) Tj
T*
(| `country`              | Country where OVOS has been installed                    |) Tj
T*
(| `cpu_capable`          | Is the CPU supports AVX2 or SIMD instructions            |) Tj
T*
(| `display_server`       | Is X or Wayland are used as display server               |) Tj
T*
(| `extra_skills_feature` | Extra OVOS's skills enabled during the installation      |) Tj
T*
(| `gui_feature`          | GUI enabled during the installation                      |) Tj
T*
(| `hardware`             | Is the device a Mark 1, Mark II or DevKit                |) Tj
T*
(| `installed_at`         | Date when OVOS has been installed                        |) Tj
T*
(| `os_kernel`            | Kernel version of the host where OVOS is running         |) Tj
T*
(| `os_name`              | OS name of the host where OVOS is running                |) Tj
T*
ET
endstream
endobj
169 0 obj
<< /Length 2333 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(| `os_type`              | OS type of the host where OVOS is running                |) Tj
T*
(| `os_version`           | OS version of the host where OVOS is running             |) Tj
T*
(| `profile`              | Which profile has been used during the OVOS installation |) Tj
T*
(| `python_version`       | What Python version was running on the host              |) Tj
T*
(| `raspberry_pi`         | Does OVOS has been installed on Raspberry Pi             |) Tj
T*
(| `skills_feature`       | Default OVOS's skills enabled during the installation    |) Tj
T*
(| `sound_server`         | What PulseAudio or PipeWire used                         |) Tj
T*
(| `tuning_enabled`       | Did the Rasperry Pi tuning feature wsas used             |) Tj
T*
(| `venv`                 | OVOS installed into a Python virtual environment         |) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(### ???? Sit Back and Relax) Tj
T*
() Tj
T*
(The installation begins! This can take some time, so why not grab a coffee \(or maybe a cupcake\)) Tj
T*
(? ??) Tj
T*
() Tj
T*
(Here is a demo of how the process should go if everything works as intended) Tj
T*
() Tj
T*
([![asciicast]\(https://asciinema.org/a/710286.svg\)]\(https://asciinema.org/a/710286\)) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Installation Complete!) Tj
T*
() Tj
T*
(You?ve done it! OVOS is now installed and ready to serve you. Try saying things like:) Tj
T*
() Tj
T*
(- ?What?s the weather??) Tj
T*
(- ?Tell me a joke.?) Tj
T*
(- ?Set a timer for 5 minutes.?) Tj
T*
() Tj
T*
(![image]\(https://gist.github.com/user-attachments/assets/acbc71ed-46aa-4084-8f4c-82c6a2a19d49\)) Tj
T*
() Tj
T*
(You?re officially part of the Open Voice OS community! ??) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Additional Configuration and Known Issues) Tj
T*
() Tj
T*
(Depending on your language you probably want to change the default plugins, the ovos-installer ) Tj
T*
(is not perfect and might not always select the best defaults) Tj
T*
() Tj
T*
(It is recommend that you run `ovos-config autoconfigure --help` after the initial install) Tj
T*
() Tj
T*
() Tj
T*
([![asciicast]\(https://asciinema.org/a/710295.svg\)]\(https://asciinema.org/a/710295\)) Tj
T*
() Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Troubleshooting) Tj
T*
() Tj
T*
(> Something went wrong?) Tj
T*
() Tj
T*
ET
endstream
endobj
170 0 obj
<< /Length 2283 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(Don?t panic! If the installer fails, it will generate a log file and upload it to [https://dpas) Tj
T*
(te.com]\(https://dpaste.com\). Please share that link with the community so we can help you out.) Tj
T*
() Tj
T*
(OVOS is a community-driven project, maintained by passionate volunteers. Your feedback, bug rep) Tj
T*
(orts, and patience are truly appreciated.) Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
(=== docs/500-prompts.md ===) Tj
T*
() Tj
T*
(# Prompting the User for Responses in OVOS Skills) Tj
T*
() Tj
T*
(OVOS provides several built-in methods for engaging users in interactive conversations. These i) Tj
T*
(nclude asking open-ended questions, confirming yes/no responses, and offering multiple-choice s) Tj
T*
(elections ? all handled in a natural, voice-first way.) Tj
T*
() Tj
T*
(Here we look at how to implement the most common types of prompts. For more information on conv) Tj
T*
(ersation design see) Tj
T*
(the [Voice User Interface Design Guidelines]\(https://mycroft-ai.gitbook.io/docs/skill-developme) Tj
T*
(nt/voice-user-interface-design-guidelines/interactions-and-guidelines/statements-and-prompts\).) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Usage Guide) Tj
T*
() Tj
T*
(Here?s how to use different types of prompts in your OVOS skills:) Tj
T*
() Tj
T*
(### 1. Open-Ended Questions) Tj
T*
() Tj
T*
(Let the user respond freely, either to trigger another skill or to handle the response with a c) Tj
T*
(ustom intent.) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_workshop.skills import OVOSSkill) Tj
T*
(from ovos_workshop.decorators import intent_handler) Tj
T*
(import random) Tj
T*
() Tj
T*
(class AskMeSkill\(OVOSSkill\):) Tj
T*
(    @intent_handler\('ask_me_something.intent'\)) Tj
T*
(    def handle_set_favorite\(self\):) Tj
T*
(        question = random.choice\(self.question_list\)) Tj
T*
(        self.speak\(question, expect_response=True\)) Tj
T*
(```) Tj
T*
() Tj
T*
(> `expect_response=True` keeps the mic open after speaking, so the response can be handled by O) Tj
T*
(VOS's intent pipeline.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(### 2. Request Extra Information with `get_response\(\)`) Tj
T*
() Tj
T*
(Use this to ask a specific question and directly capture the user's reply.) Tj
T*
() Tj
T*
(```python) Tj
T*
ET
endstream
endobj
171 0 obj
<< /Length 2316 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(from ovos_workshop.skills import OVOSSkill) Tj
T*
(from ovos_workshop.decorators import intent_handler) Tj
T*
() Tj
T*
(class IceCreamSkill\(OVOSSkill\):) Tj
T*
(    @intent_handler\('set.favorite.intent'\)) Tj
T*
(    def handle_set_favorite\(self\):) Tj
T*
(        favorite_flavor = self.get_response\('what.is.your.favorite.flavor'\)) Tj
T*
(        self.speak_dialog\('confirm.favorite.flavor', {'flavor': favorite_flavor}\)) Tj
T*
(```) Tj
T*
() Tj
T*
(**Optional `get_response\(\)` arguments:**) Tj
T*
() Tj
T*
(- `data`: Dictionary to format the dialog file) Tj
T*
(- `validator`: A function to check if the user response is valid) Tj
T*
(- `on_fail`: A fallback string to say if validation fails) Tj
T*
(- `num_retries`: How many times to retry if the response isn?t valid) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(### 3. Yes/No Questions with `ask_yesno\(\)`) Tj
T*
() Tj
T*
(Detects affirmations or negations from user responses.) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_workshop.skills import OVOSSkill) Tj
T*
(from ovos_workshop.decorators import intent_handler) Tj
T*
() Tj
T*
(class IceCreamSkill\(OVOSSkill\):) Tj
T*
(    @intent_handler\('do.you.like.intent'\)) Tj
T*
(    def handle_do_you_like\(self\):) Tj
T*
(        likes_ice_cream = self.ask_yesno\('do.you.like.ice.cream'\)) Tj
T*
(        if likes_ice_cream == 'yes':) Tj
T*
(            self.speak_dialog\('does.like'\)) Tj
T*
(        elif likes_ice_cream == 'no':) Tj
T*
(            self.speak_dialog\('does.not.like'\)) Tj
T*
(        else:) Tj
T*
(            self.speak_dialog\('could.not.understand'\)) Tj
T*
(```) Tj
T*
() Tj
T*
(**Behavior:**) Tj
T*
() Tj
T*
(- Returns `"yes"` or `"no"` for matching phrases.) Tj
T*
(- Returns the full utterance if unclear.) Tj
T*
(- Returns `None` if no valid response is detected.) Tj
T*
() Tj
T*
(> uses [ovos-solver-YesNo-plugin]\(https://github.com/OpenVoiceOS/ovos-solver-YesNo-plugin\) to u) Tj
T*
(nderstand complex affirmations and denials ? even double negations.) Tj
T*
() Tj
T*
(Example mappings:) Tj
T*
() Tj
T*
(| User Says                        | Detected As |) Tj
T*
(|----------------------------------|--------------|) Tj
T*
(| "yes"                            | yes          |) Tj
T*
(| "no"                             | no           |) Tj
T*
ET
endstream
endobj
172 0 obj
<< /Length 2805 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(| "don't think so"                 | no           |) Tj
T*
(| "that's affirmative"             | yes          |) Tj
T*
(| "no, but actually, yes"          | yes          |) Tj
T*
(| "yes, but actually, no"          | no           |) Tj
T*
(| "yes, yes, yes, but actually, no" | "no"            |) Tj
T*
(| "please"                          | "yes"           |) Tj
T*
(| "please don't"                    | "no"            |) Tj
T*
(| "no! please! I beg you"           | "no"            |) Tj
T*
(| "yes, i don't want it for sure"   | "no"            |) Tj
T*
(| "please! I beg you"               | "yes"           |) Tj
T*
(| "i want it for sure"              | "yes"           |) Tj
T*
(| "obviously"                       | "yes"           |) Tj
T*
(| "indeed"                          | "yes"           |) Tj
T*
(| "no, I obviously hate it"         | "no"            |) Tj
T*
(| "that's certainly undesirable"    | "no"            |) Tj
T*
(| "yes, it's a lie"                 | "yes"           |) Tj
T*
(| "no, it's a lie"                  | "no"            |) Tj
T*
(| "he is lying"                     | "no"            |) Tj
T*
(| "correct, he is lying"            | "yes"           |) Tj
T*
(| "it's a lie"                      | "no"            |) Tj
T*
(| "you are mistaken"                | "no"            |) Tj
T*
(| "that's a mistake"                | "no"            |) Tj
T*
(| "wrong answer"                    | "no"            |) Tj
T*
(| "it's not a lie"                  | "yes"           |) Tj
T*
(| "he is not lying"                 | "yes"           |) Tj
T*
(| "you are not mistaken"            | "yes"           |) Tj
T*
(| "tou are not wrong"               | "yes"           |) Tj
T*
(| "beans"                           | None            |) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(### 4. Multiple-Choice Prompts with `ask_selection\(\)`) Tj
T*
() Tj
T*
(Let users choose from a list of options, by name or number.) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_workshop.skills import OVOSSkill) Tj
T*
(from ovos_workshop.decorators import intent_handler) Tj
T*
() Tj
T*
(class IceCreamSkill\(OVOSSkill\):) Tj
T*
(    def initialize\(self\):) Tj
T*
(        self.flavors = ['vanilla', 'chocolate', 'mint']) Tj
T*
() Tj
T*
(    @intent_handler\('request.icecream.intent'\)) Tj
T*
(    def handle_request_icecream\(self\):) Tj
T*
(        self.speak_dialog\('welcome'\)) Tj
T*
(        selection = self.ask_selection\(self.flavors, 'what.flavor'\)) Tj
T*
(        self.speak_dialog\('coming.right_up', {'flavor': selection}\)) Tj
T*
(```) Tj
T*
() Tj
T*
(**Optional arguments:**) Tj
T*
() Tj
T*
(- `min_conf` \(float\): Minimum confidence threshold for fuzzy matching) Tj
T*
(- `numeric` \(bool\): If `True`, speak the list with numbered options) Tj
T*
ET
endstream
endobj
173 0 obj
<< /Length 2171 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(User responses like "chocolate", "the second one", or "option three" are all supported.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Technical Notes) Tj
T*
() Tj
T*
(- All methods handle microphone activation and parsing behind the scenes.) Tj
T*
(- OVOS automatically integrates with the intent engine to resolve follow-up responses.) Tj
T*
(- These prompts are designed to support natural dialogue flows, validating and re-prompting as ) Tj
T*
(needed.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Tips) Tj
T*
() Tj
T*
(- Always confirm user input when using `get_response\(\)` or `ask_selection\(\)` for clarity.) Tj
T*
(- Use `validator` with `get_response\(\)` to catch unclear or unwanted input.) Tj
T*
(- Use `ask_yesno\(\)` for quick binary decisions, but gracefully handle unexpected answers.) Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
(=== docs/501-context.md ===) Tj
T*
() Tj
T*
(# Follow up questions) Tj
T*
() Tj
T*
(Conversational context in Open Voice OS \(OVOS\) allows voice interactions to feel more natural b) Tj
T*
(y remembering parts of a conversation, like the subject being discussed. This is especially use) Tj
T*
(ful for follow-up questions where repeating context \(like a person's name\) would otherwise be n) Tj
T*
(ecessary.) Tj
T*
() Tj
T*
(Currently, conversational context is only supported with the [Adapt Intent Parser]\(https://mycr) Tj
T*
(oft.ai/documentation/adapt\), not [Padatious]\(https://mycroft.ai/documentation/padatious\).) Tj
T*
() Tj
T*
(---) Tj
T*
(## Keyword Contexts) Tj
T*
() Tj
T*
(> How tall is John Cleese?) Tj
T*
() Tj
T*
(`"John Cleese is 196 centimeters"`) Tj
T*
() Tj
T*
(> Where's he from?) Tj
T*
() Tj
T*
(`"He's from England"`) Tj
T*
() Tj
T*
(Context is added manually by the **Skill** creator using either the `self.set_context\(\)` method) Tj
T*
( or the `@adds_context\(\)` decorator.) Tj
T*
() Tj
T*
(Consider the following intent handlers:) Tj
T*
() Tj
T*
(```python) Tj
T*
(    @intent_handler\(IntentBuilder\(\).require\('PythonPerson'\).require\('Length'\)\)) Tj
T*
(    def handle_length\(self, message\):) Tj
T*
(        python = message.data.get\('PythonPerson'\)) Tj
T*
ET
endstream
endobj
174 0 obj
<< /Length 2566 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(        self.speak\(f'{python} is {length_dict[python]} cm tall'\)) Tj
T*
() Tj
T*
(    @intent_handler\(IntentBuilder\(\).require\('PythonPerson'\).require\('WhereFrom'\)\)) Tj
T*
(    def handle_from\(self, message\):) Tj
T*
(        python = message.data.get\('PythonPerson'\)) Tj
T*
(        self.speak\(f'{python} is from {from_dict[python]}'\)) Tj
T*
(```) Tj
T*
() Tj
T*
(To interact with the above handlers the user would need to say) Tj
T*
() Tj
T*
(```text) Tj
T*
(User: How tall is John Cleese?) Tj
T*
(Mycroft: John Cleese is 196 centimeters) Tj
T*
(User: Where is John Cleese from?) Tj
T*
(Mycroft: He's from England) Tj
T*
(```) Tj
T*
() Tj
T*
(To get a more natural response the functions can be changed to let OVOS know which `PythonPerso) Tj
T*
(n` we're talking about by using the `self.set_context\(\)` method to give context:) Tj
T*
() Tj
T*
(```python) Tj
T*
(    @intent_handler\(IntentBuilder\(\).require\('PythonPerson'\).require\('Length'\)\)) Tj
T*
(    def handle_length\(self, message\):) Tj
T*
(        # PythonPerson can be any of the Monty Python members) Tj
T*
(        python = message.data.get\('PythonPerson'\)) Tj
T*
(        self.speak\(f'{python} is {length_dict[python]} cm tall'\)) Tj
T*
(        self.set_context\('PythonPerson', python\)) Tj
T*
() Tj
T*
(    @intent_handler\(IntentBuilder\(\).require\('PythonPerson'\).require\('WhereFrom'\)\)) Tj
T*
(    def handle_from\(self, message\):) Tj
T*
(        # PythonPerson can be any of the Monty Python members) Tj
T*
(        python = message.data.get\('PythonPerson'\)) Tj
T*
(        self.speak\(f'He is from {from_dict[python]}'\)) Tj
T*
(        self.set_context\('PythonPerson', python\)) Tj
T*
(```) Tj
T*
() Tj
T*
(When either of the methods are called the `PythonPerson` keyword is added to OVOS's context, wh) Tj
T*
(ich means that if there is a match with `Length` but `PythonPerson` is missing OVOS will assume) Tj
T*
( the last mention of that keyword. The interaction can now become the one described at the top ) Tj
T*
(of the page.) Tj
T*
() Tj
T*
(> User: How tall is John Cleese?) Tj
T*
() Tj
T*
(OVOS detects the `Length` keyword and the `PythonPerson` keyword) Tj
T*
() Tj
T*
(> OVOS: 196 centimeters) Tj
T*
() Tj
T*
(John Cleese is added to the current context) Tj
T*
() Tj
T*
(> User: Where's he from?) Tj
T*
() Tj
T*
(OVOS detects the `WhereFrom` keyword but not any `PythonPerson` keyword. The Context Manager is) Tj
T*
( activated and returns the latest entry of `PythonPerson` which is _John Cleese_) Tj
T*
() Tj
T*
ET
endstream
endobj
175 0 obj
<< /Length 2258 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(> OVOS: He's from England) Tj
T*
() Tj
T*
() Tj
T*
(## Cross Skill Context) Tj
T*
() Tj
T*
(The context is limited by the keywords provided by the **current** Skill. ) Tj
T*
() Tj
T*
(But we can use context across skills via `self.set_cross_skill_context` to enable conversations) Tj
T*
( with **other** Skills as well. ) Tj
T*
() Tj
T*
(```python) Tj
T*
(    @intent_handler\(IntentBuilder\(\).require\(PythonPerson\).require\(WhereFrom\)\)) Tj
T*
(    def handle_from\(self, message\):) Tj
T*
(        # PythonPerson can be any of the Monty Python members) Tj
T*
(        python = message.data.get\('PythonPerson'\)) Tj
T*
(        self.speak\(f'He is from {from_dict[python]}'\)) Tj
T*
(        self.set_context\('PythonPerson', python\) # context for this skill only) Tj
T*
() Tj
T*
(        self.set_cross_skill_context\('Location', from_dict[python]\)  # context for ALL skills) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
(In this example `Location` keyword is shared with the WeatherSkill) Tj
T*
() Tj
T*
(```text) Tj
T*
(User: Where is John Cleese from?) Tj
T*
(Mycroft: He's from England) Tj
T*
(User: What's the weather like over there?) Tj
T*
(Mycroft: Raining and 14 degrees...) Tj
T*
(```) Tj
T*
() Tj
T*
(## Hint Keyword contexts) Tj
T*
() Tj
T*
(Context do not need to have a value, their presence can be used to simply indicate a previous i) Tj
T*
(nteraction happened) Tj
T*
() Tj
T*
(In this case Context can also be implemented by using decorators instead of calling `self.set_c) Tj
T*
(ontext`) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_workshop.decorators import adds_context, removes_context) Tj
T*
() Tj
T*
() Tj
T*
(class TeaSkill\(OVOSSkill\):) Tj
T*
(    @intent_handler\(IntentBuilder\('TeaIntent'\).require\("TeaKeyword"\)\)) Tj
T*
(    @adds_context\('MilkContext'\)) Tj
T*
(    def handle_tea_intent\(self, message\):) Tj
T*
(        self.milk = False) Tj
T*
(        self.speak\('Of course, would you like Milk with that?',) Tj
T*
(                   expect_response=True\)) Tj
T*
() Tj
T*
(    @intent_handler\(IntentBuilder\('NoMilkIntent'\).require\("NoKeyword"\).) Tj
T*
(                                  require\('MilkContext'\).build\(\)\)) Tj
T*
(    @removes_context\('MilkContext'\)) Tj
T*
ET
endstream
endobj
176 0 obj
<< /Length 2412 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(    @adds_context\('HoneyContext'\)) Tj
T*
(    def handle_no_milk_intent\(self, message\):) Tj
T*
(        self.speak\('all right, any Honey?', expect_response=True\)) Tj
T*
() Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
(> **NOTE**: cross skill context is not yet exposed via decorators) Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
(## Using context to enable **Intents**) Tj
T*
() Tj
T*
(To make sure certain **Intents** can't be triggered unless some previous stage in a conversatio) Tj
T*
(n has occurred. Context can be used to create "bubbles" of available intent handlers.) Tj
T*
() Tj
T*
(```text) Tj
T*
(User: Hey Mycroft, bring me some Tea) Tj
T*
(Mycroft: Of course, would you like Milk with that?) Tj
T*
(User: No) Tj
T*
(Mycroft: How about some Honey?) Tj
T*
(User: All right then) Tj
T*
(Mycroft: Here you go, here's your Tea with Honey) Tj
T*
(```) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_workshop.decorators import adds_context, removes_context) Tj
T*
() Tj
T*
(class TeaSkill\(OVOSSkill\):) Tj
T*
(    @intent_handler\(IntentBuilder\('TeaIntent'\).require\("TeaKeyword"\)\)) Tj
T*
(    @adds_context\('MilkContext'\)) Tj
T*
(    def handle_tea_intent\(self, message\):) Tj
T*
(        self.milk = False) Tj
T*
(        self.speak\('Of course, would you like Milk with that?',) Tj
T*
(                   expect_response=True\)) Tj
T*
() Tj
T*
(    @intent_handler\(IntentBuilder\('NoMilkIntent'\).require\("NoKeyword"\).) Tj
T*
(                                  require\('MilkContext'\).build\(\)\)) Tj
T*
(    @removes_context\('MilkContext'\)) Tj
T*
(    @adds_context\('HoneyContext'\)) Tj
T*
(    def handle_no_milk_intent\(self, message\):) Tj
T*
(        self.speak\('all right, any Honey?', expect_response=True\)) Tj
T*
() Tj
T*
(    @intent_handler\(IntentBuilder\('YesMilkIntent'\).require\("YesKeyword"\).) Tj
T*
(                                  require\('MilkContext'\).build\(\)\)) Tj
T*
(    @removes_context\('MilkContext'\)) Tj
T*
(    @adds_context\('HoneyContext'\)) Tj
T*
(    def handle_yes_milk_intent\(self, message\):) Tj
T*
(        self.milk = True) Tj
T*
(        self.speak\('What about Honey?', expect_response=True\)) Tj
T*
() Tj
T*
(    @intent_handler\(IntentBuilder\('NoHoneyIntent'\).require\("NoKeyword"\).) Tj
T*
(                                  require\('HoneyContext'\).build\(\)\)) Tj
T*
(    @removes_context\('HoneyContext'\)) Tj
T*
ET
endstream
endobj
177 0 obj
<< /Length 2508 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(    def handle_no_honey_intent\(self, message\):) Tj
T*
(        if self.milk:) Tj
T*
(            self.speak\('Heres your Tea with a dash of Milk'\)) Tj
T*
(        else:) Tj
T*
(            self.speak\('Heres your Tea, straight up'\)) Tj
T*
() Tj
T*
(    @intent_handler\(IntentBuilder\('YesHoneyIntent'\).require\("YesKeyword"\).) Tj
T*
(                                require\('HoneyContext'\).build\(\)\)) Tj
T*
(    @removes_context\('HoneyContext'\)) Tj
T*
(    def handle_yes_honey_intent\(self, message\):) Tj
T*
(        if self.milk:) Tj
T*
(            self.speak\('Heres your Tea with Milk and Honey'\)) Tj
T*
(        else:) Tj
T*
(            self.speak\('Heres your Tea with Honey'\)) Tj
T*
(```) Tj
T*
() Tj
T*
(When starting up only the `TeaIntent` will be available. When that has been triggered and _Milk) Tj
T*
(Context_ is added the `MilkYesIntent` and `MilkNoIntent` are available since the _MilkContext_ ) Tj
T*
(is set. when a _yes_ or _no_ is received the _MilkContext_ is removed and can't be accessed. In) Tj
T*
( it's place the _HoneyContext_ is added making the `YesHoneyIntent` and `NoHoneyIntent` availab) Tj
T*
(le.) Tj
T*
() Tj
T*
(You can find an example [Tea Skill using conversational context on Github]\(https://github.com/k) Tj
T*
(risgesling/tea-skill\).) Tj
T*
() Tj
T*
(As you can see, Conversational Context lends itself well to implementing a [dialog tree or conv) Tj
T*
(ersation tree]\(https://en.wikipedia.org/wiki/Dialog_tree\).) Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
(=== docs/502-converse.md ===) Tj
T*
() Tj
T*
(# Converse) Tj
T*
() Tj
T*
(Each Skill may define a `converse\(\)` method. This method will be called anytime the Skill has b) Tj
T*
(een recently active and a new utterance is processed.&#x20;) Tj
T*
() Tj
T*
(The converse method expects a single argument which is a standard Mycroft Message object. This ) Tj
T*
(is the same object an intent handler receives.) Tj
T*
() Tj
T*
(Converse methods must return a Boolean value. True if an utterance was handled, otherwise False) Tj
T*
(.) Tj
T*
() Tj
T*
(## Basic usage) Tj
T*
() Tj
T*
(Let's use a version of the Ice Cream Skill we've been building up and add a converse method to ) Tj
T*
(catch any brief statements of thanks that might directly follow an order.) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_workshop.skills import OVOSSkill) Tj
T*
(from ovos_workshop.decorators import intent_handler) Tj
T*
() Tj
T*
() Tj
T*
(class IceCreamSkill\(OVOSSkill\):) Tj
T*
ET
endstream
endobj
178 0 obj
<< /Length 2816 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(    def initialize\(self\):) Tj
T*
(        self.flavors = ['vanilla', 'chocolate', 'mint']) Tj
T*
() Tj
T*
(    @intent_handler\('request.icecream.intent'\)) Tj
T*
(    def handle_request_icecream\(self\):) Tj
T*
(        self.speak_dialog\('welcome'\)) Tj
T*
(        selection = self.ask_selection\(self.flavors, 'what.flavor'\)) Tj
T*
(        self.speak_dialog\('coming-right-up', {'flavor': selection}\)) Tj
T*
() Tj
T*
(    def converse\(self, message\):) Tj
T*
(        if self.voc_match\(message.data['utterances'][0], 'Thankyou'\):) Tj
T*
(            self.speak_dialog\("you-are-welcome"\)) Tj
T*
(            return True) Tj
T*
(```) Tj
T*
() Tj
T*
(In this example:) Tj
T*
() Tj
T*
(1. A User might request an ice cream which is handled by `handle_request_icecream\(\)`&#x20;) Tj
T*
(2. The Skill would be added to the system Active Skill list for up to 5 minutes.) Tj
T*
(3. Any utterance received by OVOS would trigger this Skills converse system whilst it is consid) Tj
T*
(ered active.) Tj
T*
(4. If the User followed up with a pleasantry such as "Hey Mycroft, thanks" - the converse metho) Tj
T*
(d would match this vocab against the `Thankyou.voc` file in the Skill and speak the contents of) Tj
T*
( the `you-are-welcome.dialog` file. The method would return `True` and the utterance would be c) Tj
T*
(onsumed meaning the intent parsing service would never be triggered.) Tj
T*
(5. Any utterance that did not match would be silently ignored and allowed to continue on to oth) Tj
T*
(er converse methods and finally to the intent parsing service.) Tj
T*
() Tj
T*
() Tj
T*
(> **WARNING** skills that are not [Session]\(https://openvoiceos.github.io/ovos-technical-manual) Tj
T*
(/bus_service/#session\) aware may behave weirdly with voice satellites, see the [parrot skill]\(h) Tj
T*
(ttps://github.com/OpenVoiceOS/skill-ovos-parrot/\) for an example.) Tj
T*
() Tj
T*
() Tj
T*
(## Active Skill List) Tj
T*
() Tj
T*
(A Skill is considered active if it has been called in the last 5 minutes.) Tj
T*
() Tj
T*
(Skills are called in order of when they were last active. For example, if a user spoke the foll) Tj
T*
(owing commands:) Tj
T*
() Tj
T*
(> Hey Mycroft, set a timer for 10 minutes) Tj
T*
(>) Tj
T*
(> Hey Mycroft, what's the weather) Tj
T*
() Tj
T*
(Then the utterance "what's the weather" would first be sent to the Timer Skill's `converse\(\)` m) Tj
T*
(ethod, then to the intent service for normal handling where the Weather Skill would be called.) Tj
T*
() Tj
T*
(As the Weather Skill was called it has now been added to the front of the Active Skills List. H) Tj
T*
(ence, the next utterance received will be directed to:) Tj
T*
() Tj
T*
(1. `WeatherSkill.converse\(\)`) Tj
T*
(2. `TimerSkill.converse\(\)`) Tj
T*
(3. Normal intent parsing service) Tj
T*
ET
endstream
endobj
179 0 obj
<< /Length 2301 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(When does a skill become active?) Tj
T*
() Tj
T*
(1. **before** an intent is called the skill is **activated**) Tj
T*
(2. if a fallback **returns True** \(to consume the utterance\) the skill is **activated** right *) Tj
T*
(*after** the fallback) Tj
T*
(3. if converse **returns True** \(to consume the utterance\) the skill is **reactivated** right *) Tj
T*
(*after** converse) Tj
T*
(4. a skill can activate/deactivate itself at any time) Tj
T*
() Tj
T*
(## Making a Skill Active) Tj
T*
() Tj
T*
(There are occasions where a Skill has not been triggered by the User, but it should still be co) Tj
T*
(nsidered "Active".) Tj
T*
() Tj
T*
(In the case of our Ice Cream Skill - we might have a function that will execute when the custom) Tj
T*
(ers order is ready. ) Tj
T*
(At this point, we also want to be responsive to the customers thanks, so we call `self.activate) Tj
T*
(\(\)` to manually add our Skill to the front of the Active Skills List.) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_workshop.skills import OVOSSkill) Tj
T*
(from ovos_workshop.decorators import intent_handler) Tj
T*
() Tj
T*
() Tj
T*
(class IceCreamSkill\(OVOSSkill\):) Tj
T*
(    def on_order_ready\(self, message\):) Tj
T*
(        self.activate\(\)) Tj
T*
() Tj
T*
(    def handle_activate\(self, message: Message\):) Tj
T*
(        """) Tj
T*
(        Called when this skill is considered active by the intent service;) Tj
T*
(        converse method will be called with every utterance.) Tj
T*
(        Override this method to do any optional preparation.) Tj
T*
(        @param message: `{self.skill_id}.activate` Message) Tj
T*
(        """) Tj
T*
(        LOG.info\("Skill has been activated"\)) Tj
T*
(```) Tj
T*
() Tj
T*
(## Deactivating a Skill) Tj
T*
() Tj
T*
(The active skill list will be pruned by `ovos-core`, any skills that have not been interacted w) Tj
T*
(ith for longer than 5 minutes will be deactivated) Tj
T*
() Tj
T*
(Individual Skills may react to this event, to clean up state or, in some rare cases, to reactiv) Tj
T*
(ate themselves) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_workshop.skills import OVOSSkill) Tj
T*
() Tj
T*
() Tj
T*
(class AlwaysActiveSkill\(OVOSSkill\):) Tj
T*
() Tj
T*
(    def handle_deactivate\(self, message: Message\):) Tj
T*
ET
endstream
endobj
180 0 obj
<< /Length 2189 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(        """) Tj
T*
(        Called when this skill is no longer considered active by the intent) Tj
T*
(        service; converse method will not be called until skill is active again.) Tj
T*
(        Override this method to do any optional cleanup.) Tj
T*
(        @param message: `{self.skill_id}.deactivate` Message) Tj
T*
(        """) Tj
T*
(        self.activate\(\)) Tj
T*
(```) Tj
T*
() Tj
T*
(A skill can also deactivate itself at any time) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_workshop.skills import OVOSSkill) Tj
T*
() Tj
T*
() Tj
T*
(class LazySkill\(OVOSSkill\):) Tj
T*
() Tj
T*
(    def handle_intent\(self, message: Message\):) Tj
T*
(        self.speak\("leave me alone"\)) Tj
T*
(        self.deactivate\(\)) Tj
T*
(```) Tj
T*
() Tj
T*
(## Conversational Intents) Tj
T*
() Tj
T*
(**NEW** in `ovos-core` version **0.0.8**) Tj
T*
() Tj
T*
(Skills can have extra intents valid while they are active, those are internal and not part of t) Tj
T*
(he main intent system, instead each skill checks them BEFORE calling `converse`) Tj
T*
() Tj
T*
(the `@conversational_intent` decorator can be used to define converse intent handlers) Tj
T*
() Tj
T*
(these intents only trigger after an initial interaction, essentially they are only follow up qu) Tj
T*
(estions) Tj
T*
() Tj
T*
(```python) Tj
T*
(class DogFactsSkill\(OVOSSkill\):) Tj
T*
() Tj
T*
(    @intent_handler\("dog_facts.intent"\)) Tj
T*
(    def handle_intent\(self, message\):) Tj
T*
(        fact = "Dogs sense of smell is estimated to be 100,000 times more sensitive than humans) Tj
T*
(") Tj
T*
(        self.speak\(fact\)) Tj
T*
() Tj
T*
(    @conversational_intent\("another_one.intent"\)) Tj
T*
(    def handle_followup_question\(self, message\):) Tj
T*
(        fact2 = "Dogs have a unique nose print,  making each one distinct and identifiable.") Tj
T*
(        self.speak\(fact2\)) Tj
T*
(```) Tj
T*
(> **NOTE**: Only works with `.intent` files, Adapt/Keyword intents are NOT supported) Tj
T*
() Tj
T*
(A more complex example, a game skill that allows saving/exiting the game only during playback) Tj
T*
() Tj
T*
(```python) Tj
T*
(class MyGameSkill\(OVOSSkill\):) Tj
T*
ET
endstream
endobj
181 0 obj
<< /Length 1979 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(    @intent_handler\("play.intent"\)) Tj
T*
(    def handle_play\(self, message\):) Tj
T*
(        self.start_game\(load_save=True\)) Tj
T*
() Tj
T*
(    @conversational_intent\("exit.intent"\)) Tj
T*
(    def handle_exit\(self, message\):) Tj
T*
(        self.exit_game\(\)) Tj
T*
() Tj
T*
(    @conversational_intent\("save.intent"\)) Tj
T*
(    def handle_save\(self, message\):) Tj
T*
(        self.save_game\(\)) Tj
T*
() Tj
T*
(    def handle_deactivate\(self, message\):) Tj
T*
(        self.game_over\(\) # user abandoned interaction) Tj
T*
() Tj
T*
(    def converse\(self, message\):) Tj
T*
(        if self.playing:) Tj
T*
(            # do some game stuff with the utterance) Tj
T*
(            return True) Tj
T*
(        return False) Tj
T*
(```) Tj
T*
() Tj
T*
(> **NOTE**:  if these intents trigger, they are called **INSTEAD** of `converse`) Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
(=== docs/503-layers.md ===) Tj
T*
() Tj
T*
(# Intent Layers) Tj
T*
() Tj
T*
(> **WARNING**: Skills using these features might not play well with [HiveMind]\(https://jarbashi) Tj
T*
(vemind.github.io/HiveMind-community-docs/\) due to shared state across satellites) Tj
T*
() Tj
T*
(## Managing Intents) Tj
T*
() Tj
T*
(Sometimes you might want to manually enable or disable an intent, in OVOSSkills you can do this) Tj
T*
( explicitly to create stateful interactions) Tj
T*
() Tj
T*
(```python) Tj
T*
(class RotatingIntentsSkill\(OVOSSkill\):) Tj
T*
() Tj
T*
(    def initialize\(self\):) Tj
T*
(        # NOTE: this must be done in initialize, not in __init__) Tj
T*
(        self.disable_intent\("B.intent"\)) Tj
T*
(        self.disable_intent\("C.intent"\)) Tj
T*
() Tj
T*
(    @intent_handler\("A.intent"\)) Tj
T*
(    def handle_A_intent\(self, message\):) Tj
T*
(        # do stuff) Tj
T*
(        self.enable_intent\("B.intent"\)) Tj
T*
(        self.disable_intent\("A.intent"\)) Tj
T*
() Tj
T*
(    @intent_handler\("B.intent"\)) Tj
T*
ET
endstream
endobj
182 0 obj
<< /Length 2686 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(    def handle_B_intent\(self, message\):) Tj
T*
(        # do stuff) Tj
T*
(        self.enable_intent\("C.intent"\)) Tj
T*
(        self.disable_intent\("B.intent"\)) Tj
T*
() Tj
T*
(    @intent_handler\("C.intent"\)) Tj
T*
(    def handle_C_intent\(self, message\):) Tj
T*
(        # do stuff) Tj
T*
(        self.enable_intent\("A.intent"\)) Tj
T*
(        self.disable_intent\("C.intent"\)) Tj
T*
(```) Tj
T*
() Tj
T*
(> **NOTE**: Intent states are currently shared across Sessions) Tj
T*
() Tj
T*
() Tj
T*
(## State Machines) Tj
T*
() Tj
T*
(Another utils provided by `ovos-workshop` is `IntentLayers`, to manage groups of intent togethe) Tj
T*
(r) Tj
T*
() Tj
T*
(`IntentLayers` lend themselves well to implement state machines.) Tj
T*
() Tj
T*
(### The Manual way) Tj
T*
() Tj
T*
(In this example we implement the [Konami Code]\(https://en.wikipedia.org/wiki/Konami_Code\), doin) Tj
T*
(g everything the manual way instead of using decorators) Tj
T*
() Tj
T*
(![imagem]\(https://github.com/OpenVoiceOS/ovos-technical-manual/assets/33701864/13b9de20-1f8d-44) Tj
T*
(b3-9b65-c13a79a41b1e\)) Tj
T*
() Tj
T*
(```python) Tj
T*
(class KonamiCodeSkill\(OVOSSkill\):) Tj
T*
(    def initialize\(self\):) Tj
T*
(        self.counter = 0) Tj
T*
(        self.top_fails = 3) Tj
T*
() Tj
T*
(        up_intent = IntentBuilder\('KonamiUpIntent'\).require\("KonamiUpKeyword"\).build\(\)) Tj
T*
(        down_intent = IntentBuilder\('KonamiDownIntent'\).require\("KonamiDownKeyword"\).build\(\)) Tj
T*
(        left_intent = IntentBuilder\('KonamiLeftIntent'\).require\("KonamiLeftKeyword"\).build\(\)) Tj
T*
(        right_intent = IntentBuilder\('KonamiRightIntent'\).require\("KonamiRightKeyword"\).build\(\)) Tj
T*
(        b_intent = IntentBuilder\('KonamiBIntent'\).require\("KonamiBKeyword"\).build\(\)) Tj
T*
(        a_intent = IntentBuilder\('KonamiAIntent'\).require\("KonamiAKeyword"\).build\(\)) Tj
T*
() Tj
T*
(        self.register_intent\(up_intent, self.handle_up_intent\)) Tj
T*
(        self.register_intent\(down_intent, self.handle_down_intent\)) Tj
T*
(        self.register_intent\(left_intent, self.handle_left_intent\)) Tj
T*
(        self.register_intent\(right_intent, self.handle_right_intent\)) Tj
T*
(        self.register_intent\(b_intent, self.handle_b_intent\)) Tj
T*
(        self.register_intent\(a_intent, self.handle_a_intent\)) Tj
T*
() Tj
T*
(    def build_intent_layers\(self\):) Tj
T*
(        self.intent_layers.update_layer\("up1", ["KonamiUpIntent"]\)) Tj
T*
(        self.intent_layers.update_layer\("up2", ["KonamiUpIntent"]\)) Tj
T*
(        self.intent_layers.update_layer\("down1", ["KonamiDownIntent"]\)) Tj
T*
ET
endstream
endobj
183 0 obj
<< /Length 2770 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(        self.intent_layers.update_layer\("down2", ["KonamiDownIntent"]\)) Tj
T*
(        self.intent_layers.update_layer\("left1", ["KonamiLeftIntent"]\)) Tj
T*
(        self.intent_layers.update_layer\("right1",["KonamiRightIntent"]\)) Tj
T*
(        self.intent_layers.update_layer\("left2", ["KonamiLeftIntent"]\)) Tj
T*
(        self.intent_layers.update_layer\("right2",["KonamiRightIntent"]\)) Tj
T*
(        self.intent_layers.update_layer\("B",["KonamiBIntent"]\)) Tj
T*
(        self.intent_layers.update_layer\("A",["KonamiAIntent"]\)) Tj
T*
() Tj
T*
(        self.intent_layers.activate_layer\("up1"\)) Tj
T*
() Tj
T*
(    def reset\(self\):) Tj
T*
(        self.active = False) Tj
T*
(        self.counter = 0) Tj
T*
(        self.intent_layers.disable\(\)) Tj
T*
(        self.intent_layers.activate_layer\("up1"\)) Tj
T*
() Tj
T*
(    def handle_up_intent\(self, message\):) Tj
T*
(        if self.intent_layers.is_active\("up1"\):) Tj
T*
(            self.intent_layers.deactivate_layer\("up1"\)) Tj
T*
(            self.intent_layers.activate_layer\("up2"\)) Tj
T*
(        else:) Tj
T*
(            self.intent_layers.activate_layer\("down1"\)) Tj
T*
(            self.intent_layers.deactivate_layer\("up2"\)) Tj
T*
(        self.acknowledge\(\)) Tj
T*
() Tj
T*
(    def handle_down_intent\(self, message\):        ) Tj
T*
(        if self.intent_layers.is_active\("down1"\):) Tj
T*
(            self.intent_layers.deactivate_layer\("down1"\)) Tj
T*
(            self.intent_layers.activate_layer\("down2"\)) Tj
T*
(        else:) Tj
T*
(            self.intent_layers.activate_layer\("left1"\)) Tj
T*
(            self.intent_layers.deactivate_layer\("down2"\)) Tj
T*
(        self.acknowledge\(\)) Tj
T*
() Tj
T*
(    def handle_left_intent\(self, message\):       ) Tj
T*
(        if self.intent_layers.is_active\("left1"\):) Tj
T*
(            self.intent_layers.deactivate_layer\("left1"\)) Tj
T*
(            self.intent_layers.activate_layer\("right1"\)) Tj
T*
(        else:) Tj
T*
(            self.intent_layers.deactivate_layer\("left2"\)) Tj
T*
(            self.intent_layers.activate_layer\("right2"\)) Tj
T*
(        self.acknowledge\(\)) Tj
T*
() Tj
T*
(    def handle_right_intent\(self, message\):) Tj
T*
(        if self.intent_layers.is_active\("right1"\):) Tj
T*
(            self.intent_layers.deactivate_layer\("right1"\)) Tj
T*
(            self.intent_layers.activate_layer\("left2"\)) Tj
T*
(        else:) Tj
T*
(            self.intent_layers.activate_layer\("B"\)) Tj
T*
(            self.intent_layers.deactivate_layer\("right2"\)) Tj
T*
(        self.acknowledge\(\)) Tj
T*
() Tj
T*
(    def handle_b_intent\(self, message\):) Tj
T*
(        self.intent_layers.activate_layer\("A"\)) Tj
T*
ET
endstream
endobj
184 0 obj
<< /Length 2543 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(        self.intent_layers.deactivate_layer\("B"\)) Tj
T*
(        self.acknowledge\(\)) Tj
T*
() Tj
T*
(    def handle_a_intent\(self, message\):        ) Tj
T*
(        self.play_audio\("power_up.mp3"\)) Tj
T*
(        self.reset\(\)) Tj
T*
() Tj
T*
(    def stop\(self\):) Tj
T*
(        if self.active:) Tj
T*
(            self.reset\(\)) Tj
T*
() Tj
T*
(    def converse\(self, message\):) Tj
T*
(        if self.active:) Tj
T*
(            if not any\(self.voc_match\(utt, kw\) for kw in ["KonamiUpKeyword", ) Tj
T*
(                                                          "KonamiDownKeyword", ) Tj
T*
(                                                          "KonamiLeftKeyword", ) Tj
T*
(                                                          "KonamiRightKeyword", ) Tj
T*
(                                                          "KonamiBKeyword", ) Tj
T*
(                                                          "KonamiAKeyword"]\):) Tj
T*
(                self.counter += 1) Tj
T*
(                if self.counter > self.top_fails:) Tj
T*
(                    self.speak\("Wrong cheat code"\)) Tj
T*
(                    self.reset\(\)) Tj
T*
(                else:) Tj
T*
(                    self.speak\("Wrong! Try again"\)) Tj
T*
(                return True) Tj
T*
(        return False) Tj
T*
(```) Tj
T*
() Tj
T*
(### Decorators) Tj
T*
() Tj
T*
(When you have many complex chained intents `IntentLayers` often makes your life easier, a layer) Tj
T*
( is a named group of intents that you can manage at once.) Tj
T*
() Tj
T*
(Slightly more complex than the previous example, we may want to offer several "forks" on the in) Tj
T*
(tent execution, enabling different intent groups depending on previous interactions) Tj
T*
() Tj
T*
([skill-moon-game]\(https://github.com/JarbasSkills/skill-moon-game/\) is an example full voice ga) Tj
T*
(me implemented this way) Tj
T*
() Tj
T*
(An excerpt from the game to illustrate usage of `IntentLayer` decorators) Tj
T*
() Tj
T*
(> **NOTE**: IntentLayers do not yet support Session, in this example all [voice satellites]\(htt) Tj
T*
(ps://jarbashivemind.github.io/HiveMind-community-docs/07_voicesat/\) would join the game) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_workshop.skills.decorators import layer_intent, enables_layer, \\) Tj
T*
(    disables_layer, resets_layers) Tj
T*
() Tj
T*
() Tj
T*
(class Apollo11GameSkill\(OVOSSkill\):) Tj
T*
() Tj
T*
(    def initialize\(self\):) Tj
T*
(        # start with all game states disabled) Tj
T*
ET
endstream
endobj
185 0 obj
<< /Length 2521 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(        self.intent_layers.disable\(\)) Tj
T*
() Tj
T*
(    @intent_handler\(IntentBuilder\("StartApollo11Intent"\). \\) Tj
T*
(                    optionally\("startKeyword"\). \\) Tj
T*
(                    require\("MoonGameKeyword"\)\)) Tj
T*
(    def handle_start_intent\(self, message=None\):) Tj
T*
(        if not self.playing:) Tj
T*
(            self.playing = True) Tj
T*
(            self.speak_dialog\("start.game"\)) Tj
T*
(            self.handle_intro\(\)) Tj
T*
(        else:) Tj
T*
(            self.speak_dialog\("already.started"\)) Tj
T*
() Tj
T*
(    @layer_intent\(IntentBuilder\("StopApollo11Intent"\). \\) Tj
T*
(                  require\("stopKeyword"\). \\) Tj
T*
(                  optionally\("MoonGameKeyword"\),) Tj
T*
(                  layer_name="stop_game"\)) Tj
T*
(    @resets_layers\(\)) Tj
T*
(    def handle_game_over\(self, message=None\):) Tj
T*
(        if self.playing:) Tj
T*
(            self.speak_dialog\("stop.game"\)) Tj
T*
() Tj
T*
(    @enables_layer\(layer_name="guard"\)) Tj
T*
(    @enables_layer\(layer_name="stop_game"\)) Tj
T*
(    def handle_intro\(self\):) Tj
T*
(        self.speak_dialog\("reach_gate"\)) Tj
T*
(        self.speak_dialog\("guard"\)) Tj
T*
(        self.speak_dialog\("present_id", expect_response=True\)) Tj
T*
() Tj
T*
(    @layer_intent\(IntentBuilder\("Yes1Apollo11Intent"\).require\("yesKeyword"\),) Tj
T*
(                  layer_name="guard"\)) Tj
T*
(    def handle_yes1\(self, message=None\):) Tj
T*
(        self.speak_dialog\("guard_yes"\)) Tj
T*
(        self.briefing_question1\(\)) Tj
T*
() Tj
T*
(    @layer_intent\(IntentBuilder\("No1Apollo11Intent"\).require\("noKeyword"\),) Tj
T*
(                  layer_name="guard"\)) Tj
T*
(    @enables_layer\(layer_name="guard2"\)) Tj
T*
(    @disables_layer\(layer_name="guard"\)) Tj
T*
(    def handle_no1\(self, message=None\):) Tj
T*
(        self.speak_dialog\("guard_no"\)) Tj
T*
(        self.speak_dialog\("present_id", expect_response=True\)) Tj
T*
() Tj
T*
(    # \(...\) more intent layers) Tj
T*
() Tj
T*
(    def converse\(self, message\):) Tj
T*
(        if not self.playing:) Tj
T*
(            return False) Tj
T*
(        # \(...\)) Tj
T*
(        # take corrective action when no intent matched) Tj
T*
(        if self.intent_layers.is_active\("guard"\) or \\) Tj
T*
(                self.intent_layers.is_active\("guard2"\):) Tj
T*
(            self.speak_dialog\("guard_dead"\)) Tj
T*
(            self.handle_game_over\(\)) Tj
T*
ET
endstream
endobj
186 0 obj
<< /Length 2150 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(        # \(...\)) Tj
T*
(        else:) Tj
T*
(            self.speak_dialog\("invalid.command", expect_response=True\)) Tj
T*
(        return True) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/504-session.md ===) Tj
T*
() Tj
T*
(# Session Aware Skills) Tj
T*
() Tj
T*
(**NEW** `ovos-core` version **0.0.8**) Tj
T*
() Tj
T*
(If you want your skills to handle simultaneous users you need to make them [Session]\(https://op) Tj
T*
(envoiceos.github.io/ovos-technical-manual/bus_service/#session\) aware) Tj
T*
() Tj
T*
(Each remote client, usually a [voice satellite]\(https://jarbashivemind.github.io/HiveMind-commu) Tj
T*
(nity-docs/07_voicesat/\), will send a `Session` with the `Message`) Tj
T*
() Tj
T*
(Your skill should keep track of any Session specific state separately, eg, a chat history) Tj
T*
() Tj
T*
(> **WARNING**: Stateful Skills need to be Session Aware to play well with [HiveMind]\(https://ja) Tj
T*
(rbashivemind.github.io/HiveMind-community-docs/\)) Tj
T*
() Tj
T*
(## SessionManager) Tj
T*
() Tj
T*
(You can access the `Session` in a `Message` object via the `SessionManager` class) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_bus_client.session import SessionManager, Session) Tj
T*
() Tj
T*
(class MySkill\(OVOSSkill\):) Tj
T*
() Tj
T*
(    def on_something\(self, message\):) Tj
T*
(        sess = SessionManager.get\(message\)) Tj
T*
(        print\(sess.session_id\)) Tj
T*
(```) Tj
T*
() Tj
T*
(If the message originated in the device itself, the `session_id` is always equal to `"default"`) Tj
T*
(, if it comes from an external client then it will be a unique uuid) Tj
T*
() Tj
T*
(## Magic Properties) Tj
T*
() Tj
T*
(Skills have some "magic properties", these will always reflect the value in the current `Sessio) Tj
T*
(n`) Tj
T*
() Tj
T*
(```python) Tj
T*
(    # magic properties -> depend on message.context / Session) Tj
T*
(    @property) Tj
T*
(    def lang\(self\) -> str:) Tj
T*
(        """) Tj
T*
(        Get the current language as a BCP-47 language code. This will consider) Tj
T*
(        current session data if available, else Configuration.) Tj
T*
(        """) Tj
T*
ET
endstream
endobj
187 0 obj
<< /Length 1968 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(    @property) Tj
T*
(    def location\(self\) -> dict:) Tj
T*
(        """) Tj
T*
(        Get the JSON data struction holding location information.) Tj
T*
(        This info can come from Session) Tj
T*
(        """) Tj
T*
() Tj
T*
(    @property) Tj
T*
(    def location_pretty\(self\) -> Optional[str]:) Tj
T*
(        """) Tj
T*
(        Get a speakable city from the location config if available) Tj
T*
(        This info can come from Session) Tj
T*
(        """) Tj
T*
() Tj
T*
(    @property) Tj
T*
(    def location_timezone\(self\) -> Optional[str]:) Tj
T*
(        """) Tj
T*
(        Get the timezone code, such as 'America/Los_Angeles') Tj
T*
(        This info can come from Session) Tj
T*
(        """) Tj
T*
() Tj
T*
(    @property) Tj
T*
(    def dialog_renderer\(self\) -> Optional[MustacheDialogRenderer]:) Tj
T*
(        """) Tj
T*
(        Get a dialog renderer for this skill. Language will be determined by) Tj
T*
(        message context to match the language associated with the current) Tj
T*
(        session or else from Configuration.) Tj
T*
(        """) Tj
T*
() Tj
T*
(    @property) Tj
T*
(    def resources\(self\) -> SkillResources:) Tj
T*
(        """) Tj
T*
(        Get a SkillResources object for the current language. Objects are) Tj
T*
(        initialized for the current Session language as needed.) Tj
T*
(        """) Tj
T*
() Tj
T*
(```) Tj
T*
() Tj
T*
(## Per User Interactions) Tj
T*
() Tj
T*
(Let's consider a skill that keeps track of a chat history, how would such a skill keep track of) Tj
T*
( `Sessions`?) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_bus_client.session import SessionManager, Session) Tj
T*
(from ovos_workshop.decorators import intent_handler) Tj
T*
(from ovos_workshop.skills import OVOSSkill) Tj
T*
() Tj
T*
() Tj
T*
(class UtteranceRepeaterSkill\(OVOSSkill\):) Tj
T*
() Tj
T*
(    def initialize\(self\):) Tj
T*
(        self.chat_sessions = {}) Tj
T*
ET
endstream
endobj
188 0 obj
<< /Length 2463 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(        self.add_event\('recognizer_loop:utterance', self.on_utterance\)) Tj
T*
() Tj
T*
(    # keep chat history per session) Tj
T*
(    def on_utterance\(self, message\):) Tj
T*
(        utt = message.data['utterances'][0]) Tj
T*
(        sess = SessionManager.get\(message\)) Tj
T*
(        if sess.session_id not in self.chat_sessions:) Tj
T*
(            self.chat_sessions[sess.session_id] = {"current_stt": ""}) Tj
T*
(        self.chat_sessions[sess.session_id]["prev_stt"] = self.chat_sessions[sess.session_id][") Tj
T*
(current_stt"]) Tj
T*
(        self.chat_sessions[sess.session_id]["current_stt"] = utt) Tj
T*
() Tj
T*
(    # retrieve previous STT per session) Tj
T*
(    @intent_handler\('repeat.stt.intent'\)) Tj
T*
(    def handle_repeat_stt\(self, message\):) Tj
T*
(        sess = SessionManager.get\(message\)) Tj
T*
(        if sess.session_id not in self.chat_sessions:) Tj
T*
(            utt = self.translate\('nothing'\)) Tj
T*
(        else:) Tj
T*
(            utt = self.chat_sessions[sess.session_id]["prev_stt"]) Tj
T*
(        self.speak_dialog\('repeat.stt', {"stt": utt}\)) Tj
T*
() Tj
T*
(    # session specific stop event ) Tj
T*
(    # if this method returns True then self.stop will NOT be called) Tj
T*
(    def stop_session\(self, session: Session\):) Tj
T*
(        if session.session_id in self.chat_sessions:) Tj
T*
(            self.chat_sessions.pop\(session.session_id\)) Tj
T*
(            return True) Tj
T*
(        return False) Tj
T*
(```) Tj
T*
() Tj
T*
(A full example can be found in the [parrot skill]\(https://github.com/OpenVoiceOS/skill-ovos-par) Tj
T*
(rot\)) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/51-install_raspovos.md ===) Tj
T*
() Tj
T*
(# RaspOVOS: A Beginner's Guide to Setting Up Your Raspberry Pi with OVOS) Tj
T*
() Tj
T*
(This tutorial is designed for users new to Raspberry Pi and RaspOVOS. Follow these steps to set) Tj
T*
( up and optimize your device for the best experience.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Step 1: Prepare Your Hardware) Tj
T*
() Tj
T*
(### Raspberry Pi Model Recommendations) Tj
T*
(- **Recommended:** Raspberry Pi 4 or 5.) Tj
T*
(    - For offline STT \(speech-to-text\), the **Raspberry Pi 5** offers significant performance i) Tj
T*
(mprovements.) Tj
T*
(- **Minimum Requirement:** Raspberry Pi 3.) Tj
T*
(    - **Note:** The Raspberry Pi 3 will work but may be **extremely slow** compared to newer mo) Tj
T*
(dels.) Tj
T*
() Tj
T*
ET
endstream
endobj
189 0 obj
<< /Length 2968 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(### Storage Options) Tj
T*
(- **SD Card or USB Storage:**) Tj
T*
(    - You can use either a microSD card or a USB drive.) Tj
T*
(- **Recommended:** USB SSD Drive for maximum speed and performance.) Tj
T*
(    - Connect the USB drive to the **blue USB 3.0 port** for optimal performance.) Tj
T*
() Tj
T*
(### Power Supply Considerations) Tj
T*
(Raspberry Pi boards are notoriously **picky about power supplies**. Insufficient power can lead) Tj
T*
( to performance issues, random reboots, or the appearance of the **undervoltage detected** warn) Tj
T*
(ing \(a lightning bolt symbol in the top-right corner of the screen\).) Tj
T*
() Tj
T*
(- **Recommended Power Supplies:**) Tj
T*
(    - Raspberry Pi 4: 5V 3A USB-C power adapter.) Tj
T*
(    - Raspberry Pi 5: Official Raspberry Pi 5 USB-C power adapter or equivalent high-quality ad) Tj
T*
(apter with sufficient current capacity.) Tj
T*
(- **Common Issues:**) Tj
T*
(    - Using cheap or low-quality chargers or cables may result in voltage drops.) Tj
T*
(    - Long or thin USB cables can cause resistance, reducing the power delivered to the board.) Tj
T*
(- **How to Fix:**) Tj
T*
(    - Always use the official power adapter or a trusted brand with a stable 5V output.) Tj
T*
(    - If you see the **"undervoltage detected"** warning, consider replacing your power supply ) Tj
T*
(or cable.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Step 2: Install RaspOVOS Image) Tj
T*
() Tj
T*
(1. **Download and Install Raspberry Pi Imager**) Tj
T*
(    - Visit [Raspberry Pi Imager]\(https://www.raspberrypi.com/software/\) and download the appro) Tj
T*
(priate version for your OS.) Tj
T*
(    - Install and launch the imager.) Tj
T*
() Tj
T*
(2. **Flash the Image to Storage**) Tj
T*
(    - Insert your SD card or USB drive into your computer.) Tj
T*
(    - In the Raspberry Pi Imager:) Tj
T*
(        - **Choose OS:** Select "Use custom" and locate the RaspOVOS image file.) Tj
T*
(        - **Choose Storage:** Select your SD card or USB drive.) Tj
T*
() Tj
T*
() Tj
T*
(![image]\(https://github.com/user-attachments/assets/92458289-a3c3-4c7b-afc8-126881445f9f\)) Tj
T*
() Tj
T*
(![image]\(https://github.com/user-attachments/assets/36a83d0a-ebc2-4095-94ba-604ad78b5452\)) Tj
T*
() Tj
T*
(![image]\(https://github.com/user-attachments/assets/47c92497-d1a2-4f2d-90be-189806736c0d\)) Tj
T*
() Tj
T*
(3. **Advanced Configuration Options**) Tj
T*
(    - Click **Next** and select **Edit Settings** to customize settings, including:) Tj
T*
(        - **Password:** Change the default password.) Tj
T*
(        - **Hostname:** Set a custom hostname for your device.) Tj
T*
(        - **Wi-Fi Credentials:** Enter your Wi-Fi network name and password.) Tj
T*
(        - **Keyboard Layout:** Configure the correct layout for your region.) Tj
T*
() Tj
T*
(   **Important:** **Do NOT change the default username** \(`ovos`\), as it is required for the sy) Tj
T*
(stem to function properly.) Tj
T*
ET
endstream
endobj
190 0 obj
<< /Length 2593 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(![image]\(https://github.com/user-attachments/assets/9509ea57-ae46-4c0b-b9e9-97935579d207\)) Tj
T*
() Tj
T*
(![image]\(https://github.com/user-attachments/assets/252af1a0-54dc-4450-aa4a-eb0f0a4d139f\)) Tj
T*
() Tj
T*
(4. **Write the Image**) Tj
T*
(    - Click **Save** and then **Yes** to flash the image onto your storage device.) Tj
T*
(    - Once complete, safely remove the SD card or USB drive from your computer.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Step 3: Initial Setup and First Boot) Tj
T*
() Tj
T*
(### Connect and Power On) Tj
T*
(- Insert the SD card or connect the USB drive to your Raspberry Pi.) Tj
T*
(- Plug in the power supply and connect an HDMI monitor to observe the boot process.) Tj
T*
() Tj
T*
(### First Boot Process) Tj
T*
(1. **Initialization:**) Tj
T*
(    - The system will expand the filesystem, generate SSH keys, and perform other setups.) Tj
T*
(2. **Reboots:**) Tj
T*
(    - The device will reboot **up to three times** during this process.) Tj
T*
(3. **Autologin:**) Tj
T*
(    - The `ovos` user will automatically log in to the terminal after boot.) Tj
T*
() Tj
T*
(4. **Check System Status:**) Tj
T*
(    - Use the `ologs` command to monitor logs and confirm that the system has fully initialized) Tj
T*
(.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Step 4: Setting Up Wi-Fi) Tj
T*
() Tj
T*
(### Option 1: Configure Wi-Fi Using Raspberry Pi Imager) Tj
T*
(The most straightforward method is to set up Wi-Fi during the imaging process.) Tj
T*
() Tj
T*
(1. Open Raspberry Pi Imager and select Edit Settings Option.) Tj
T*
(2. Enter your **SSID \(Wi-Fi network name\)** and **password** in the Wi-Fi configuration fields.) Tj
T*
(3. Write the image to your SD card or USB drive, and your Wi-Fi will be pre-configured.) Tj
T*
() Tj
T*
(### Option 2: Use Audio-Based Wi-Fi Setup \(ggwave\)) Tj
T*
() Tj
T*
(1. Open [ggwave Wi-Fi setup]\(https://openvoiceos.github.io/ovos-audio-transformer-plugin-ggwave) Tj
T*
(/\) on a device with speakers.) Tj
T*
(2. Enter your **SSID** and **password** and transmit the data as sound.) Tj
T*
(3. Place the transmitting device near the Raspberry Pi microphone.) Tj
T*
(4. If successful, you?ll hear an acknowledgment tone.) Tj
T*
(    - If decoding fails or credentials are incorrect, you?ll hear an error tone.) Tj
T*
() Tj
T*
(? **Note:** ggwave is a **work-in-progress** feature and does not have any dialogs or provide o) Tj
T*
(n-screen feedback. ?) Tj
T*
() Tj
T*
(![image]\(https://github.com/user-attachments/assets/ce2857b1-b93f-4092-99f3-43f555e04920\)) Tj
T*
() Tj
T*
ET
endstream
endobj
191 0 obj
<< /Length 2078 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(---) Tj
T*
() Tj
T*
(## Step 5: Running OVOS) Tj
T*
() Tj
T*
(### OVOS First Launch) Tj
T*
(- On the first run, OVOS may take longer to initialize.) Tj
T*
(- When ready, OVOS will say: **"I am ready"** \(requires an Internet connection\).) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Step 6: Using OVOS Commands) Tj
T*
() Tj
T*
(### Helpful Commands) Tj
T*
(Once the terminal appears, you?ll see a guide with OVOS commands. Some key commands include:) Tj
T*
() Tj
T*
(- **Configuration:**) Tj
T*
(    - `ovos-config` ? Manage configuration files.) Tj
T*
(- **Voice Commands:**) Tj
T*
(    - `ovos-listen` ? Activate the microphone for commands.) Tj
T*
(    - `ovos-speak <phrase>` ? Make OVOS speak a specific phrase.) Tj
T*
(- **Skill Management:**) Tj
T*
(    - `ovos-install [PACKAGE_NAME]` ? Install OVOS packages.) Tj
T*
(    - `ovos-update` ? Update all OVOS and skill packages.) Tj
T*
(- **Logs and Status:**) Tj
T*
(    - `ologs` ? View logs in real-time.) Tj
T*
(    - `ovos-status` ? Check the status of OVOS-related services.) Tj
T*
() Tj
T*
(You use the command `ovos-help` to print the message with all commands again at any point) Tj
T*
() Tj
T*
(### Check Logs in Real-Time) Tj
T*
(- Use the `ologs` command to monitor logs live on your screen.) Tj
T*
(- If you?re unsure whether the system has finished booting, check logs using this command.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(Enjoy your journey with RaspOVOS! With your Raspberry Pi set up, you can start exploring all th) Tj
T*
(e features of OpenVoiceOS.) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/54-skill-examples.md ===) Tj
T*
() Tj
T*
(# Default Skills overview) Tj
T*
() Tj
T*
(A non-exhaustive list of skills available for OpenVoiceOS, these might be available out of the ) Tj
T*
(box or not depending on how you installed OVOS) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## ovos-skill-alerts.openvoiceos) Tj
T*
() Tj
T*
(A skill to manage alarms, timers, reminders, events and todos and optionally sync them with a C) Tj
T*
(alDAV service.) Tj
T*
() Tj
T*
(**Usage examples:**) Tj
T*
ET
endstream
endobj
192 0 obj
<< /Length 1498 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(- What are my reminders?) Tj
T*
(- Cancel all reminders.) Tj
T*
(- When is my next alarm?) Tj
T*
(- Schedule a tennis event for 2 PM on friday spanning 2 hours.) Tj
T*
(- What did I miss?) Tj
T*
(- remind me to take out the trash every Thursday and Sunday at 7 PM.) Tj
T*
(- Start a bread timer for 30 minutes.) Tj
T*
(- Did I miss anything?) Tj
T*
(- Set an alarm for 8 AM.) Tj
T*
(- Set a daily alarm for 8 AM.) Tj
T*
() Tj
T*
(-------) Tj
T*
() Tj
T*
() Tj
T*
(## ovos-skill-cmd.forslund) Tj
T*
() Tj
T*
(No description available) Tj
T*
() Tj
T*
(**Usage examples:**) Tj
T*
() Tj
T*
(- run script ___) Tj
T*
(- launch command ___) Tj
T*
() Tj
T*
(-------) Tj
T*
() Tj
T*
() Tj
T*
(## ovos-skill-confucius-quotes.openvoiceos) Tj
T*
() Tj
T*
(Quotes from Confucius) Tj
T*
() Tj
T*
(**Usage examples:**) Tj
T*
() Tj
T*
(- Quote from Confucius) Tj
T*
(- When did Confucius die) Tj
T*
(- When was Confucius born) Tj
T*
(- Who is Confucius) Tj
T*
() Tj
T*
(-------) Tj
T*
() Tj
T*
() Tj
T*
(## ovos-skill-days-in-history.openvoiceos) Tj
T*
() Tj
T*
(Provides historical events for today or any other calendar day using information pulled from Wi) Tj
T*
(kipedia.) Tj
T*
() Tj
T*
(**Usage examples:**) Tj
T*
() Tj
T*
(- who died today in history?) Tj
T*
(- who was born today in history?) Tj
T*
(- What historical events happened on June 16th?) Tj
T*
(- Tell me about events in history on December 12th) Tj
T*
(- What happened today in history?) Tj
T*
() Tj
T*
ET
endstream
endobj
193 0 obj
<< /Length 1404 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(-------) Tj
T*
() Tj
T*
() Tj
T*
(## ovos-skill-dictation.openvoiceos) Tj
T*
() Tj
T*
(continuously transcribes user speech to text file while enabled) Tj
T*
() Tj
T*
(**Usage examples:**) Tj
T*
() Tj
T*
(- start dictation) Tj
T*
(- end dictation) Tj
T*
() Tj
T*
(-------) Tj
T*
() Tj
T*
() Tj
T*
(## ovos-skill-ip.openvoiceos) Tj
T*
() Tj
T*
(Network connection information) Tj
T*
() Tj
T*
(**Usage examples:**) Tj
T*
() Tj
T*
(- What's your IP address?) Tj
T*
(- What's your network address?) Tj
T*
(- Tell me your network address) Tj
T*
(- What network are you connected to?) Tj
T*
(- Tell me your IP address) Tj
T*
() Tj
T*
(-------) Tj
T*
() Tj
T*
() Tj
T*
(## ovos-skill-iss-location.openvoiceos) Tj
T*
() Tj
T*
(Track the location of the ISS) Tj
T*
() Tj
T*
(**Usage examples:**) Tj
T*
() Tj
T*
(- When is the ISS passing over) Tj
T*
(- Where is the ISS) Tj
T*
(- Tell me about the IS) Tj
T*
(- how many persons on board of the space station) Tj
T*
(- Who is on board of the space station?) Tj
T*
() Tj
T*
(-------) Tj
T*
() Tj
T*
() Tj
T*
(## ovos-skill-moviemaster.openvoiceos) Tj
T*
() Tj
T*
(Find information about movies, actors, and production details. Easily find information about a ) Tj
T*
(movie with your voice.) Tj
T*
() Tj
T*
(**Usage examples:**) Tj
T*
() Tj
T*
(- What are popular movies playing now?) Tj
T*
(- Tell me about the movie _______) Tj
T*
ET
endstream
endobj
194 0 obj
<< /Length 1561 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(- What genres does the flick _______ belong to?) Tj
T*
(- Who plays in the movie _______?) Tj
T*
(- How long is the movie _______?) Tj
T*
(- Look for information on the movie _______.) Tj
T*
(- Do you have info on the film _______?) Tj
T*
(- What is the movie _______ about?) Tj
T*
(- What are the highest rated movies out?) Tj
T*
(- When was the movie _______ made?) Tj
T*
() Tj
T*
(-------) Tj
T*
() Tj
T*
() Tj
T*
(## ovos-skill-number-facts.openvoiceos) Tj
T*
() Tj
T*
(Facts about numbers) Tj
T*
() Tj
T*
(**Usage examples:**) Tj
T*
() Tj
T*
(- random number trivia) Tj
T*
(- trivia about next week) Tj
T*
(- trivia about tomorrow) Tj
T*
(- fact about number 666) Tj
T*
(- fact about yesterday) Tj
T*
(- curiosity about year 1992) Tj
T*
(- math fact about number 7) Tj
T*
() Tj
T*
(-------) Tj
T*
() Tj
T*
() Tj
T*
(## ovos-skill-personal.openvoiceos) Tj
T*
() Tj
T*
(Learn history and personality of the assistant. Ask about the 'birth' and parentage of the voic) Tj
T*
(e assistant and get a taste of the community who is fostering this open source artificial intel) Tj
T*
(ligence.) Tj
T*
() Tj
T*
(**Usage examples:**) Tj
T*
() Tj
T*
(- Where were you born?) Tj
T*
(- What are you?) Tj
T*
(- When were you created?) Tj
T*
(- Who made you?) Tj
T*
() Tj
T*
(-------) Tj
T*
() Tj
T*
() Tj
T*
(## ovos-skill-pyradios.openvoiceos) Tj
T*
() Tj
T*
(a client for the client for the Radio Browser API) Tj
T*
() Tj
T*
(**Usage examples:**) Tj
T*
() Tj
T*
(- play tsf jazz on pyradios) Tj
T*
(- play tsf jazz radio) Tj
T*
() Tj
T*
ET
endstream
endobj
195 0 obj
<< /Length 1288 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(-------) Tj
T*
() Tj
T*
() Tj
T*
(## ovos-skill-speedtest.openvoiceos) Tj
T*
() Tj
T*
(runs an internet bandwidth test using speedtest.net) Tj
T*
() Tj
T*
(**Usage examples:**) Tj
T*
() Tj
T*
(- run a speedtest) Tj
T*
() Tj
T*
(-------) Tj
T*
() Tj
T*
() Tj
T*
(## ovos-skill-wikihow.openvoiceos) Tj
T*
() Tj
T*
(How to do nearly everything.) Tj
T*
() Tj
T*
(**Usage examples:**) Tj
T*
() Tj
T*
(- how do i get my dog to stop barking) Tj
T*
(- how to boil an egg) Tj
T*
() Tj
T*
(-------) Tj
T*
() Tj
T*
() Tj
T*
(## skill-ovos-audio-recording.openvoiceos) Tj
T*
() Tj
T*
(No description available) Tj
T*
() Tj
T*
(**Usage examples:**) Tj
T*
() Tj
T*
(- new recording named {name}) Tj
T*
(- start recording) Tj
T*
(- start a recording called {name}) Tj
T*
(- start a new audio recording called {name}) Tj
T*
(- begin recording) Tj
T*
() Tj
T*
(-------) Tj
T*
() Tj
T*
() Tj
T*
(## skill-ovos-boot-finished.openvoiceos) Tj
T*
() Tj
T*
(The Finished Booting skill provides notifications when OpenVoiceOS has fully started and all co) Tj
T*
(re services are ready) Tj
T*
() Tj
T*
(**Usage examples:**) Tj
T*
() Tj
T*
(- Disable ready notifications.) Tj
T*
(- Is the system ready?) Tj
T*
(- Enable ready notifications.) Tj
T*
() Tj
T*
(-------) Tj
T*
() Tj
T*
ET
endstream
endobj
196 0 obj
<< /Length 1393 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(## skill-ovos-date-time.openvoiceos) Tj
T*
() Tj
T*
(Get the time, date, day of the week) Tj
T*
() Tj
T*
(**Usage examples:**) Tj
T*
() Tj
T*
(- What time is it?) Tj
T*
(- Tell me the day of the week) Tj
T*
(- What day is Memorial Day 2020?) Tj
T*
(- What's the date?) Tj
T*
(- Show me the time) Tj
T*
(- How many days until July 4th) Tj
T*
(- What time is it in Paris?) Tj
T*
() Tj
T*
(-------) Tj
T*
() Tj
T*
() Tj
T*
(## skill-ovos-ddg.openvoiceos) Tj
T*
() Tj
T*
(Use DuckDuckGo to answer questions.) Tj
T*
() Tj
T*
(**Usage examples:**) Tj
T*
() Tj
T*
(- ask the duck about the big bang) Tj
T*
(- when was stephen hawking born) Tj
T*
(- who is elon musk) Tj
T*
() Tj
T*
(-------) Tj
T*
() Tj
T*
() Tj
T*
(## skill-ovos-hello-world.openvoiceos) Tj
T*
() Tj
T*
(Introductory Skill so that Skill Authors can see how an OVOS Skill is put together) Tj
T*
() Tj
T*
(**Usage examples:**) Tj
T*
() Tj
T*
(- Hello world) Tj
T*
(- Thank you) Tj
T*
(- How are you?) Tj
T*
() Tj
T*
(-------) Tj
T*
() Tj
T*
() Tj
T*
(## skill-ovos-icanhazdadjokes.openvoiceos) Tj
T*
() Tj
T*
(Brighten your day with dad humor. Laughter is not guaranteed, but eye rolls are likely.) Tj
T*
() Tj
T*
(**Usage examples:**) Tj
T*
() Tj
T*
(- Can you tell jokes?) Tj
T*
(- Make me laugh.) Tj
T*
(- Do you know any Chuck Norris jokes?) Tj
T*
(- Tell me a joke about dentists.) Tj
T*
ET
endstream
endobj
197 0 obj
<< /Length 1219 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(- Say a joke.) Tj
T*
(- Tell me a joke.) Tj
T*
(- Do you know any jokes?) Tj
T*
() Tj
T*
(-------) Tj
T*
() Tj
T*
() Tj
T*
(## skill-ovos-local-media.openvoiceos) Tj
T*
() Tj
T*
(Local Media File Browser For Open Voice OS) Tj
T*
() Tj
T*
(**Usage examples:**) Tj
T*
() Tj
T*
(- open my file browser) Tj
T*
(- show my file browser) Tj
T*
(- show my usb drive) Tj
T*
(- start usb browser app) Tj
T*
(- show my usb) Tj
T*
(- show file browser app) Tj
T*
(- show file browser) Tj
T*
(- open usb) Tj
T*
(- start usb browser) Tj
T*
(- open my usb) Tj
T*
() Tj
T*
(-------) Tj
T*
() Tj
T*
() Tj
T*
(## skill-ovos-naptime.openvoiceos) Tj
T*
() Tj
T*
(Put the assistant to sleep when you don't want to be disturbed.) Tj
T*
() Tj
T*
(**Usage examples:**) Tj
T*
() Tj
T*
(- Nap time) Tj
T*
(- Wake up) Tj
T*
(- Go to sleep) Tj
T*
() Tj
T*
(-------) Tj
T*
() Tj
T*
() Tj
T*
(## skill-ovos-news.openvoiceos) Tj
T*
() Tj
T*
(News streams from around the globe.) Tj
T*
() Tj
T*
(**Usage examples:**) Tj
T*
() Tj
T*
(- play npr news) Tj
T*
(- play news in spanish) Tj
T*
(- play euronews) Tj
T*
(- play the news) Tj
T*
(- play portuguese news) Tj
T*
(- play catalan news) Tj
T*
() Tj
T*
(-------) Tj
T*
ET
endstream
endobj
198 0 obj
<< /Length 1375 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
() Tj
T*
(## skill-ovos-parrot.openvoiceos) Tj
T*
() Tj
T*
(Turn OpenVoiceOS into a echoing parrot! Make OVOS repeat whatever you want.) Tj
T*
() Tj
T*
(**Usage examples:**) Tj
T*
() Tj
T*
(- Tell me what I just said.) Tj
T*
(- say Goodnight, Gracie) Tj
T*
(- speak I can say anything you'd like!) Tj
T*
(- start parrot) Tj
T*
(- repeat Once upon a midnight dreary, while I pondered, weak and weary, Over many a quaint and ) Tj
T*
(curious volume of forgotten lore) Tj
T*
(- Repeat what you just said) Tj
T*
(- What did I just say?) Tj
T*
(- Can you repeat that?) Tj
T*
(- stop parrot) Tj
T*
(- Repeat that) Tj
T*
() Tj
T*
(-------) Tj
T*
() Tj
T*
() Tj
T*
(## skill-ovos-somafm.openvoiceos) Tj
T*
() Tj
T*
(No description available) Tj
T*
() Tj
T*
(**Usage examples:**) Tj
T*
() Tj
T*
(- play soma fm radio) Tj
T*
(- play metal detector) Tj
T*
(- play secret agent) Tj
T*
() Tj
T*
(-------) Tj
T*
() Tj
T*
() Tj
T*
(## skill-ovos-spelling.openvoiceos) Tj
T*
() Tj
T*
(No description available) Tj
T*
() Tj
T*
(**Usage examples:**) Tj
T*
() Tj
T*
(- How do you spell bureacracy?) Tj
T*
(- How do you spell aardvark?) Tj
T*
(- Spell omnipotence) Tj
T*
(- Spell succotash) Tj
T*
() Tj
T*
(-------) Tj
T*
() Tj
T*
() Tj
T*
(## skill-ovos-volume.openvoiceos) Tj
T*
() Tj
T*
(Control the volume of OVOS with verbal commands) Tj
T*
() Tj
T*
ET
endstream
endobj
199 0 obj
<< /Length 1601 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(**Usage examples:**) Tj
T*
() Tj
T*
(- unmute volume) Tj
T*
(- volume low) Tj
T*
(- mute audio) Tj
T*
(- volume to high level) Tj
T*
(- reset volume) Tj
T*
(- volume to high) Tj
T*
(- volume level low) Tj
T*
(- toggle audio) Tj
T*
(- low volume) Tj
T*
(- set volume to maximum) Tj
T*
() Tj
T*
(-------) Tj
T*
() Tj
T*
() Tj
T*
(## skill-ovos-weather.openvoiceos) Tj
T*
() Tj
T*
(Get weather conditions, forecasts, expected precipitation and more! You can also ask for other ) Tj
T*
(cities around the world. Current conditions and weather forecasts come from OpenMeteo) Tj
T*
() Tj
T*
(**Usage examples:**) Tj
T*
() Tj
T*
(- What's the temperature in Paris tomorrow in Celsius?) Tj
T*
(- When will it rain next?) Tj
T*
(- What's the high temperature tomorrow) Tj
T*
(- Is it going to snow in Baltimore?) Tj
T*
(- what is the weather like?) Tj
T*
(- How windy is it?) Tj
T*
(- What is the weather this weekend?) Tj
T*
(- What is the weather in Houston?) Tj
T*
(- Will it be cold on Tuesday) Tj
T*
(- What's the temperature?) Tj
T*
() Tj
T*
(-------) Tj
T*
() Tj
T*
() Tj
T*
(## skill-ovos-wikipedia.openvoiceos) Tj
T*
() Tj
T*
(Query Wikipedia for answers to all your questions. Get just a summary, or ask for more to get i) Tj
T*
(n-depth information.) Tj
T*
() Tj
T*
(**Usage examples:**) Tj
T*
() Tj
T*
(- Search for chocolate) Tj
T*
(- More information) Tj
T*
(- Tell me about beans) Tj
T*
(- Tell me More) Tj
T*
(- Tell me about the Pembroke Welsh Corgi) Tj
T*
(- Check Wikipedia for beans) Tj
T*
(- Tell me about Elon Musk) Tj
T*
() Tj
T*
(-------) Tj
T*
() Tj
T*
ET
endstream
endobj
200 0 obj
<< /Length 1760 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(## skill-ovos-wolfie.openvoiceos) Tj
T*
() Tj
T*
(Use Wolfram Alpha for general knowledge questions.) Tj
T*
() Tj
T*
(**Usage examples:**) Tj
T*
() Tj
T*
(- How tall is Mount Everest?) Tj
T*
(- What's 18 times 4?) Tj
T*
(- How many inches in a meter?) Tj
T*
(- What is Madonna's real name?) Tj
T*
(- When was The Rocky Horror Picture Show released?) Tj
T*
(- ask the wolf what is the speed of light) Tj
T*
() Tj
T*
(-------) Tj
T*
() Tj
T*
() Tj
T*
(## skill-ovos-wordnet.openvoiceos) Tj
T*
() Tj
T*
(Use Wordnet to answer dictionary-like questions.) Tj
T*
() Tj
T*
(**Usage examples:**) Tj
T*
() Tj
T*
(- what is the definition of ...) Tj
T*
(- what is the antonym of ...) Tj
T*
() Tj
T*
(-------) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/55-raspovos_troubleshooting.md ===) Tj
T*
() Tj
T*
(# RaspOVOS Troubleshooting) Tj
T*
() Tj
T*
(> ?? This guide applies to raspOVOS and may assume some raspOVOS exclusive utilities are availa) Tj
T*
(ble, if you are not using raspOVOS [some command line utilities]\(https://github.com/OpenVoiceOS) Tj
T*
(/raspOVOS/tree/dev/overlays/base_ovos/usr/local/bin\) will not be available) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Undervoltage Detected Warning) Tj
T*
() Tj
T*
(If you see an **undervoltage detected** warning:) Tj
T*
() Tj
T*
(- Check your power adapter and cable.) Tj
T*
(- Ensure the adapter can supply enough current \(e.g., 5A for Raspberry Pi 5\).) Tj
T*
(- Replace long or thin cables with shorter, thicker ones for better power delivery.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## System Boot Issues) Tj
T*
() Tj
T*
(If the device does not complete its boot sequence:) Tj
T*
() Tj
T*
(1. Ensure the power supply is stable and sufficient for your Raspberry Pi model.) Tj
T*
ET
endstream
endobj
201 0 obj
<< /Length 3723 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(2. If the OS boots but OVOS doesn't work:) Tj
T*
(     - See if all OVOS services started up correctly with `ovos-status` command) Tj
T*
(     - Check log files in `~/.local/state/mycroft/` for OVOS error messages.) Tj
T*
(3. Re-flash the image if necessary, ensuring all configuration options are set correctly.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## OVOS Fails to Speak "I am Ready") Tj
T*
() Tj
T*
(- Confirm the device has a working Internet connection. otherwise OVOS won't consider itself re) Tj
T*
(ady) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## How to debug intent matching) Tj
T*
() Tj
T*
(To easily debug intent parsing open a terminal and run `ologs | grep intent` , this will show y) Tj
T*
(ou live logs related only to intent parsing) Tj
T*
() Tj
T*
(then in another terminal send commands with `ovos-say-to "sentence to test"`  \(or use your voic) Tj
T*
(e\)) Tj
T*
() Tj
T*
() Tj
T*
(```bash) Tj
T*
(\(ovos\) ovos@raspOVOS:~ $ ologs | grep intent) Tj
T*
(2025-01-23 16:29:54.299 - skills - ovos_core.intent_services:handle_utterance:416 - INFO - comm) Tj
T*
(on_qa match: IntentHandlerMatch\(match_type='question:action.skill-ovos-wikipedia.openvoiceos', ) Tj
T*
(match_data={'phrase': 'Qui s Elon Musk', 'skill_id': 'skill-ovos-wikipedia.openvoiceos', 'answ) Tj
T*
(er': "Elon Reeve Musk FRS s un empresari, inversor i magnat conegut pels seus papers clau a l') Tj
T*
(empresa espacial SpaceX i l'automobilstica Tesla, Inc. Les accions i les opinions expressades ) Tj
T*
(per Musk l'han convertit en una figura polaritzadora. Desprs de guanyar al novembre, Trump va ) Tj
T*
(anunciar que havia triat Musk per codirigir la junta assessora del nou Departament d'Eficincia) Tj
T*
( Governamental .", 'callback_data': {'answer': "Elon Reeve Musk FRS s un empresari, inversor i) Tj
T*
( magnat conegut pels seus papers clau a l'empresa espacial SpaceX i l'automobilstica Tesla, In) Tj
T*
(c. Les accions i les opinions expressades per Musk l'han convertit en una figura polaritzadora.) Tj
T*
( Desprs de guanyar al novembre, Trump va anunciar que havia triat Musk per codirigir la junta ) Tj
T*
(assessora del nou Departament d'Eficincia Governamental ."}, 'conf': 0.6}, skill_id='skill-ovo) Tj
T*
(s-wikipedia.openvoiceos', utterance='Qui s Elon Musk', updated_session=None\)) Tj
T*
(2025-01-23 16:29:54.300 - skills - ovos_core.intent_services:handle_utterance:436 - DEBUG - int) Tj
T*
(ent matching took: 1.5732948780059814) Tj
T*
(2025-01-23 16:34:07.672 - skills - ovos_core.intent_services:handle_utterance:399 - INFO - Pars) Tj
T*
(ing utterance: ['quina hora s']) Tj
T*
(2025-01-23 16:34:07.675 - skills - ovos_core.intent_services:get_pipeline:234 - DEBUG - Session) Tj
T*
( pipeline: ['stop_high', 'converse', 'ocp_high', 'padatious_high', 'adapt_high', 'ocp_medium', ) Tj
T*
('fallback_high', 'stop_medium', 'adapt_medium', 'padatious_medium', 'adapt_low', 'common_qa', ') Tj
T*
(fallback_medium', 'fallback_low']) Tj
T*
(2025-01-23 16:34:07.678 - skills - ovos_core.intent_services:handle_utterance:430 - DEBUG - no ) Tj
T*
(match from <bound method StopService.match_stop_high of <ovos_core.intent_services.stop_service) Tj
T*
(.StopService object at 0x7fff2b036310>>) Tj
T*
(2025-01-23 16:34:07.686 - skills - ovos_core.intent_services:handle_utterance:430 - DEBUG - no ) Tj
T*
(match from <bound method ConverseService.converse_with_skills of <ovos_core.intent_services.con) Tj
T*
(verse_service.ConverseService object at 0x7fff7159ae50>>) Tj
T*
(2025-01-23 16:34:07.691 - skills - ovos_core.intent_services:handle_utterance:430 - DEBUG - no ) Tj
T*
(match from <bound method OCPPipelineMatcher.match_high of <ocp_pipeline.opm.OCPPipelineMatcher ) Tj
T*
ET
endstream
endobj
202 0 obj
<< /Length 2456 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(object at 0x7fff26ac3910>>) Tj
T*
(2025-01-23 16:34:07.696 - skills - ovos_core.intent_services:handle_utterance:416 - INFO - pada) Tj
T*
(tious_high match: IntentHandlerMatch\(match_type='skill-ovos-date-time.openvoiceos:what.time.is.) Tj
T*
(it.intent', match_data={}, skill_id='skill-ovos-date-time.openvoiceos', utterance='quina hora ) Tj
T*
(s', updated_session=None\)) Tj
T*
(2025-01-23 16:34:07.698 - skills - ovos_core.intent_services:handle_utterance:436 - DEBUG - int) Tj
T*
(ent matching took: 0.022924184799194336) Tj
T*
(```) Tj
T*
() Tj
T*
(## How to check installed skills) Tj
T*
() Tj
T*
(use the `ls-skills` command) Tj
T*
() Tj
T*
() Tj
T*
(```bash) Tj
T*
(\(ovos\) ovos@raspOVOS:~ $ ls-skills) Tj
T*
([INFO] Listing installed skills for OpenVoiceOS...) Tj
T*
([WARNING] Scanning for installed skills. This may take a few moments, depending on the number o) Tj
T*
(f installed skills...) Tj
T*
() Tj
T*
(The following skills are installed:) Tj
T*
() Tj
T*
(['skill-ovos-weather.openvoiceos',) Tj
T*
( 'ovos-skill-dictation.openvoiceos',) Tj
T*
( 'skill-ovos-parrot.openvoiceos',) Tj
T*
( 'ovos-skill-speedtest.openvoiceos',) Tj
T*
( 'ovos-skill-ip.openvoiceos',) Tj
T*
( 'skill-ovos-spelling.openvoiceos',) Tj
T*
( 'ovos-skill-iss-location.openvoiceos',) Tj
T*
( 'skill-ovos-audio-recording.openvoiceos',) Tj
T*
( 'skill-ovos-wordnet.openvoiceos',) Tj
T*
( 'ovos-skill-days-in-history.openvoiceos',) Tj
T*
( 'ovos-skill-confucius-quotes.openvoiceos',) Tj
T*
( 'skill-ovos-fallback-chatgpt.openvoiceos',) Tj
T*
( 'ovos-skill-alerts.openvoiceos',) Tj
T*
( 'skill-ovos-local-media.openvoiceos',) Tj
T*
( 'skill-ovos-volume.openvoiceos',) Tj
T*
( 'ovos-skill-wikihow.openvoiceos',) Tj
T*
( 'ovos-skill-personal.OpenVoiceOS',) Tj
T*
( 'ovos-skill-number-facts.openvoiceos',) Tj
T*
( 'skill-ovos-hello-world.openvoiceos',) Tj
T*
( 'ovos-skill-moviemaster.openvoiceos',) Tj
T*
( 'skill-ovos-date-time.openvoiceos',) Tj
T*
( 'skill-ovos-fallback-unknown.openvoiceos',) Tj
T*
( 'ovos-skill-pyradios.openvoiceos',) Tj
T*
( 'skill-ovos-icanhazdadjokes.openvoiceos',) Tj
T*
( 'ovos-skill-cmd.forslund',) Tj
T*
( 'ovos-skill-spotify.openvoiceos',) Tj
T*
( 'skill-ovos-randomness.openvoiceos',) Tj
T*
( 'skill-ovos-naptime.openvoiceos',) Tj
T*
( 'skill-ovos-wikipedia.openvoiceos',) Tj
T*
( 'skill-ovos-boot-finished.openvoiceos',) Tj
T*
( 'ovos-skill-camera.openvoiceos',) Tj
T*
( 'skill-ovos-ddg.openvoiceos',) Tj
T*
ET
endstream
endobj
203 0 obj
<< /Length 2284 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
( 'ovos-skill-laugh.openvoiceos',) Tj
T*
( 'skill-ovos-somafm.openvoiceos',) Tj
T*
( 'skill-ovos-news.openvoiceos',) Tj
T*
( 'skill-ovos-wolfie.openvoiceos',) Tj
T*
( 'ovos-skill-fuster-quotes.openvoiceos']) Tj
T*
([SUCCESS] Skill listing completed.) Tj
T*
(```) Tj
T*
() Tj
T*
(## How to check available intents) Tj
T*
() Tj
T*
(Skills can optionally provide metadata, if they do instructions will be available under `ovos-c) Tj
T*
(ommands`) Tj
T*
() Tj
T*
(```bash) Tj
T*
(\(ovos\) ovos@raspOVOS:~ $ ovos-commands ) Tj
T*
(##########################) Tj
T*
(OpenVoiceOS - Skills help) Tj
T*
(##########################) Tj
T*
() Tj
T*
(Scanning skills...) Tj
T*
(Found 37 installed skills) Tj
T*
(Skill ids:) Tj
T*
(0\) - skill-ovos-weather.openvoiceos) Tj
T*
(1\) - ovos-skill-dictation.openvoiceos) Tj
T*
(2\) - skill-ovos-parrot.openvoiceos) Tj
T*
(3\) - ovos-skill-speedtest.openvoiceos) Tj
T*
(4\) - ovos-skill-ip.openvoiceos) Tj
T*
(5\) - skill-ovos-spelling.openvoiceos) Tj
T*
(6\) - ovos-skill-iss-location.openvoiceos) Tj
T*
(7\) - skill-ovos-audio-recording.openvoiceos) Tj
T*
(8\) - skill-ovos-wordnet.openvoiceos) Tj
T*
(9\) - ovos-skill-days-in-history.openvoiceos) Tj
T*
(10\) - ovos-skill-confucius-quotes.openvoiceos) Tj
T*
(11\) - skill-ovos-fallback-chatgpt.openvoiceos) Tj
T*
(12\) - ovos-skill-alerts.openvoiceos) Tj
T*
(13\) - skill-ovos-local-media.openvoiceos) Tj
T*
(14\) - skill-ovos-volume.openvoiceos) Tj
T*
(15\) - ovos-skill-wikihow.openvoiceos) Tj
T*
(16\) - ovos-skill-personal.OpenVoiceOS) Tj
T*
(17\) - ovos-skill-number-facts.openvoiceos) Tj
T*
(18\) - skill-ovos-hello-world.openvoiceos) Tj
T*
(19\) - ovos-skill-moviemaster.openvoiceos) Tj
T*
(20\) - skill-ovos-date-time.openvoiceos) Tj
T*
(21\) - skill-ovos-fallback-unknown.openvoiceos) Tj
T*
(22\) - ovos-skill-pyradios.openvoiceos) Tj
T*
(23\) - skill-ovos-icanhazdadjokes.openvoiceos) Tj
T*
(24\) - ovos-skill-cmd.forslund) Tj
T*
(25\) - ovos-skill-spotify.openvoiceos) Tj
T*
(26\) - skill-ovos-randomness.openvoiceos) Tj
T*
(27\) - skill-ovos-naptime.openvoiceos) Tj
T*
(28\) - skill-ovos-wikipedia.openvoiceos) Tj
T*
(29\) - skill-ovos-boot-finished.openvoiceos) Tj
T*
(30\) - ovos-skill-camera.openvoiceos) Tj
T*
(31\) - skill-ovos-ddg.openvoiceos) Tj
T*
ET
endstream
endobj
204 0 obj
<< /Length 2015 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(32\) - ovos-skill-laugh.openvoiceos) Tj
T*
(33\) - skill-ovos-somafm.openvoiceos) Tj
T*
(34\) - skill-ovos-news.openvoiceos) Tj
T*
(35\) - skill-ovos-wolfie.openvoiceos) Tj
T*
(36\) - ovos-skill-fuster-quotes.openvoiceos) Tj
T*
(Select skill number: 36) Tj
T*
() Tj
T*
(Skill name: ovos-skill-fuster-quotes.openvoiceos) Tj
T*
(Description: La cita del dia de Fuster) Tj
T*
(Usage examples:) Tj
T*
(    - La frase del Fuster del dia) Tj
T*
(    - Necessito alguna idea fusteriana) Tj
T*
(    - Algun pensament fusteri?) Tj
T*
(    - Digue?m un aforisme del Fuster) Tj
T*
(    - Qu diria Joan Fuster, aqu?) Tj
T*
(    - Vull sentir un aforisme fusteri) Tj
T*
(    - Qu diu en Fuster?) Tj
T*
(    - Qu pensen els fusterians?) Tj
T*
(    - Digues-me alguna cosa fusteriana) Tj
T*
(```) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## How to remove all skills) Tj
T*
() Tj
T*
(If you want to revert OVOS to a blank state you can use `ovos-reset-brain` to remove ALL skills) Tj
T*
() Tj
T*
() Tj
T*
(```bash) Tj
T*
(\(ovos\) ovos@raspOVOS:~ $ ovos-reset-brain ) Tj
T*
([INFO] Starting OpenVoiceOS skill uninstallation process...) Tj
T*
(WARNING: This will uninstall all installed skills. Do you want to continue? \(y/n\): y) Tj
T*
(Using Python 3.11.2 environment at: .venvs/ovos) Tj
T*
([INFO] The following skills will be uninstalled:) Tj
T*
(- ovos-skill-alerts) Tj
T*
(- ovos-skill-audio-recording) Tj
T*
(- ovos-skill-boot-finished) Tj
T*
(- ovos-skill-camera) Tj
T*
(- ovos-skill-cmd) Tj
T*
(- ovos-skill-confucius-quotes) Tj
T*
(- ovos-skill-date-time) Tj
T*
(- ovos-skill-days-in-history) Tj
T*
(- ovos-skill-dictation) Tj
T*
(- ovos-skill-fallback-unknown) Tj
T*
(- ovos-skill-fuster-quotes) Tj
T*
(- ovos-skill-hello-world) Tj
T*
(- ovos-skill-icanhazdadjokes) Tj
T*
(- ovos-skill-ip) Tj
T*
(- ovos-skill-iss-location) Tj
T*
(- ovos-skill-laugh) Tj
T*
(- ovos-skill-local-media) Tj
T*
(- ovos-skill-moviemaster) Tj
T*
(- ovos-skill-naptime) Tj
T*
(- ovos-skill-number-facts) Tj
T*
ET
endstream
endobj
205 0 obj
<< /Length 2005 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(- ovos-skill-parrot) Tj
T*
(- ovos-skill-personal) Tj
T*
(- ovos-skill-pyradios) Tj
T*
(- ovos-skill-randomness) Tj
T*
(- ovos-skill-somafm) Tj
T*
(- ovos-skill-speedtest) Tj
T*
(- ovos-skill-spelling) Tj
T*
(- ovos-skill-spotify) Tj
T*
(- ovos-skill-volume) Tj
T*
(- ovos-skill-weather) Tj
T*
(- ovos-skill-wikihow) Tj
T*
(- ovos-skill-wikipedia) Tj
T*
(- skill-ddg) Tj
T*
(- skill-news) Tj
T*
(- skill-ovos-fallback-chatgpt) Tj
T*
(- skill-wolfie) Tj
T*
(- skill-wordnet) Tj
T*
([INFO] Uninstalling skills...) Tj
T*
(Using Python 3.11.2 environment at: .venvs/ovos) Tj
T*
(Uninstalled 37 packages in 513ms) Tj
T*
( - ovos-skill-alerts==0.1.15) Tj
T*
( - ovos-skill-audio-recording==0.2.5a5) Tj
T*
( - ovos-skill-boot-finished==0.4.9) Tj
T*
( - ovos-skill-camera==1.0.3a4) Tj
T*
( - ovos-skill-cmd==0.2.8) Tj
T*
( - ovos-skill-confucius-quotes==0.1.11a1) Tj
T*
( - ovos-skill-date-time==0.4.6) Tj
T*
( - ovos-skill-days-in-history==0.3.9) Tj
T*
( - ovos-skill-dictation==0.2.10) Tj
T*
( - ovos-skill-fallback-unknown==0.1.6a2) Tj
T*
( - ovos-skill-fuster-quotes==0.0.1) Tj
T*
( - ovos-skill-hello-world==0.1.11a4) Tj
T*
( - ovos-skill-icanhazdadjokes==0.3.2) Tj
T*
( - ovos-skill-ip==0.2.7a1) Tj
T*
( - ovos-skill-iss-location==0.2.10) Tj
T*
( - ovos-skill-laugh==0.2.1a3) Tj
T*
( - ovos-skill-local-media==0.2.9) Tj
T*
( - ovos-skill-moviemaster==0.0.8a4) Tj
T*
( - ovos-skill-naptime==0.3.12a1) Tj
T*
( - ovos-skill-number-facts==0.1.10) Tj
T*
( - ovos-skill-parrot==0.1.14) Tj
T*
( - ovos-skill-personal==0.1.9) Tj
T*
( - ovos-skill-pyradios==0.1.5a1) Tj
T*
( - ovos-skill-randomness==0.1.2a1) Tj
T*
( - ovos-skill-somafm==0.1.5) Tj
T*
( - ovos-skill-speedtest==0.3.3a4) Tj
T*
( - ovos-skill-spelling==0.2.6a3) Tj
T*
( - ovos-skill-spotify==0.1.9) Tj
T*
( - ovos-skill-volume==0.1.13a2) Tj
T*
( - ovos-skill-weather==0.1.14) Tj
T*
( - ovos-skill-wikihow==0.2.14) Tj
T*
( - ovos-skill-wikipedia==0.6.0a1) Tj
T*
( - skill-ddg==0.1.15) Tj
T*
( - skill-news==0.1.12) Tj
T*
ET
endstream
endobj
206 0 obj
<< /Length 2933 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
( - skill-ovos-fallback-chatgpt==0.1.12) Tj
T*
( - skill-wolfie==0.3.0) Tj
T*
( - skill-wordnet==0.1.1) Tj
T*
([SUCCESS] All skills have been uninstalled successfully.) Tj
T*
([WARNING] Note: This operation only deletes the skills. Configuration files and pipeline plugin) Tj
T*
(s \(which still influence intent matching\) are NOT affected by this action.) Tj
T*
(```) Tj
T*
() Tj
T*
(## Wake Word Issues) Tj
T*
() Tj
T*
(Wake word detection in raspOVOS offers several options, each with its advantages and limitation) Tj
T*
(s. Understanding these) Tj
T*
(can help resolve potential issues and improve performance.) Tj
T*
() Tj
T*
(By default, raspOVOS uses the `precise-lite` model with the wake word "hey mycroft." This model) Tj
T*
( was trained by MycroftAI) Tj
T*
(for their Mark2 device. However, there are a few things to consider:) Tj
T*
() Tj
T*
(- **Microphone Compatibility:** The performance of precise models can be impacted if the specif) Tj
T*
(ic properties of your) Tj
T*
(  microphone \(e.g., sensitivity, frequency response\) do not match the data used to train the mo) Tj
T*
(del. While the default) Tj
T*
(  `precise-lite` model was trained with a balanced dataset from a variety of Mycroft users, the) Tj
T*
(re is no guarantee it) Tj
T*
(  will work optimally with your microphone.) Tj
T*
(- **Speaker Demographics:** Precise models, including `precise-lite`, are often trained with da) Tj
T*
(tasets predominantly) Tj
T*
(  featuring adult male voices. As a result, the model may perform poorly with voices that are o) Tj
T*
(utside this demographic,) Tj
T*
(  such as children's or women's voices. This is a common issue also seen in Speech-to-Text \(STT) Tj
T*
(\) models.) Tj
T*
() Tj
T*
(### Custom Models) Tj
T*
() Tj
T*
(If the default model is not working well for you, consider training your own precise model. Her) Tj
T*
(e are some helpful) Tj
T*
(resources for creating a more tailored solution:) Tj
T*
() Tj
T*
(- [Helpful Wake Word Datasets on Hugging Face]\(https://huggingface.co/collections/Jarbas/wake-w) Tj
T*
(ord-datasets-672cc275fa4bddff9cf69c39\)) Tj
T*
(- [Data Collection]\(https://github.com/secretsauceai/wakeword-data-collector\)) Tj
T*
(- [Wake Word Trainer]\(https://github.com/secretsauceai/precise-wakeword-model-maker\)) Tj
T*
(- [precise-lite-trainer Code]\(https://github.com/OpenVoiceOS/precise-lite-trainer\)) Tj
T*
(- [Synthetic Data Creation for Wake Words]\(https://github.com/OpenVoiceOS/ovos-ww-auto-synth-da) Tj
T*
(taset\)) Tj
T*
() Tj
T*
(### Alternative Wake Word: Vosk Plugin) Tj
T*
() Tj
T*
(If you're looking for an alternative to the precise model, the Vosk wake word plugin is another) Tj
T*
( option.) Tj
T*
() Tj
T*
(- [Vosk Wake Word Plugin GitHub]\(https://github.com/OpenVoiceOS/ovos-ww-plugin-vosk\)) Tj
T*
() Tj
T*
(One of the main advantages of using the **Vosk Wake Word Plugin** is that it does **not require) Tj
T*
ET
endstream
endobj
207 0 obj
<< /Length 2425 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
( a training step**.) Tj
T*
() Tj
T*
(Instead, it uses Kaldi with a limited language model, which means it can work out-of-the-box wi) Tj
T*
(th certain wake words) Tj
T*
(without needing to collect and train custom data.) Tj
T*
() Tj
T*
(The performance of Vosk may vary depending on the wake word you choose. Some wake words may wor) Tj
T*
(k better than) Tj
T*
(others, so it?s essential to test and evaluate the plugin with your chosen word.) Tj
T*
() Tj
T*
(Some wake words are hard to trigger, especially if missing from the language model vocabulary) Tj
T*
() Tj
T*
(> ? e.g. `hey mycroft` is usually transcribed as `hey microsoft`,) Tj
T*
() Tj
T*
(example for "hey  computer") Tj
T*
() Tj
T*
(```json) Tj
T*
(  "listener": {) Tj
T*
(    "wake_word": "hey_computer") Tj
T*
(  },) Tj
T*
(  "hotwords": {) Tj
T*
(    "hey_computer": {) Tj
T*
(        "module": "ovos-ww-plugin-vosk",) Tj
T*
(        "lang": "en",) Tj
T*
(        "listen": true,) Tj
T*
(        "debug": true,) Tj
T*
(        "samples": ["hey computer", "a computer", "hey computed"],) Tj
T*
(        "rule": "equals",) Tj
T*
(        "full_vocab": false,) Tj
T*
(    }) Tj
T*
(  }) Tj
T*
(```) Tj
T*
() Tj
T*
(- `lang` - lang code for model, optional, will use global value if not set. only used to downlo) Tj
T*
(ad models) Tj
T*
(- `debug` - if true will print extra info, like the transcription contents, useful for adjustin) Tj
T*
(g "samples") Tj
T*
(- `rule` - how to process the transcript for detections) Tj
T*
(    - `contains` - if the transcript contains any of provided samples) Tj
T*
(    - `equals` - if the transcript exactly matches any of provided samples) Tj
T*
(    - `starts` - if the transcript starts with any of provided samples) Tj
T*
(    - `ends` - if the transcript ends with any of provided samples) Tj
T*
(    - `fuzzy` - fuzzy match transcript against samples) Tj
T*
(- `samples` - list of samples to match the rules against, optional, by default uses keyword nam) Tj
T*
(e) Tj
T*
(- `full_vocab` - use the full language model vocabulary for transcriptions, if false \(default\) ) Tj
T*
(will run in keyword mode) Tj
T*
() Tj
T*
(> ? `"lang"` does not need to match the main language, if there is no vosk model for your langu) Tj
T*
(age you can try faking it with similar sounding words from a different one) Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
(### Tips for Choosing a Good Wake Word) Tj
T*
ET
endstream
endobj
208 0 obj
<< /Length 2356 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(Selecting a wake word is crucial to improving the accuracy and responsiveness of your system. H) Tj
T*
(ere are some tips for) Tj
T*
(choosing a wake word that will work well in various environments:) Tj
T*
() Tj
T*
(- **3 or 4 Syllables:** Wake words that are 3 or 4 syllables long tend to perform better becaus) Tj
T*
(e they are more distinct) Tj
T*
(  and less likely to be confused with common words in everyday speech. For example:) Tj
T*
(    - **Bad Example:** "Bob" \(short, common name\)) Tj
T*
(    - **Less Bad Example:** "Computer" \(common word\)) Tj
T*
(    - **Good Example:** "Ziggy" \(uncommon\)) Tj
T*
(    - **Better Example:** "Hey Ziggy" \(3 syllables, longer\)) Tj
T*
() Tj
T*
(- **Uncommon Words:** Choose a wake word that is not often used in regular conversation. This r) Tj
T*
(educes the chance of) Tj
T*
(  false triggers when other words sound similar to your wake word. Unique and uncommon names, p) Tj
T*
(hrases, or combinations) Tj
T*
(  of sounds work best.) Tj
T*
() Tj
T*
(- **Clear Pronunciation:** Make sure the wake word has a clear and easy-to-pronounce structure.) Tj
T*
( Words with ambiguous or) Tj
T*
(  difficult-to-articulate syllables may cause detection issues, especially in noisy environment) Tj
T*
(s.) Tj
T*
() Tj
T*
(- **Avoid Overused Words:** Stay away from wake words like "hey" or "hello," as they are often ) Tj
T*
(used in daily speech and) Tj
T*
(  can trigger false positives. Try combining a less common word with a familiar greeting for be) Tj
T*
(tter results.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Audio Issues) Tj
T*
() Tj
T*
(- **Run Diagnostics script:**) Tj
T*
(    - raspOVOS includes a helper script `ovos-audio-diagnostics` that will print basic info abo) Tj
T*
(ut your sound system) Tj
T*
() Tj
T*
(```bash) Tj
T*
(\(ovos\) ovos@raspOVOS:~ $ ovos-audio-diagnostics) Tj
T*
(=========================== ) Tj
T*
(raspOVOS Audio Diagnostics) Tj
T*
(===========================) Tj
T*
() Tj
T*
(# Detected sound server:) Tj
T*
(pipewire) Tj
T*
() Tj
T*
(# Available audio outputs:) Tj
T*
(36 - Built-in Audio Stereo [vol: 0.40]) Tj
T*
(45 - Built-in Audio Stereo [vol: 0.85]) Tj
T*
(46 - Built-in Audio Digital Stereo \(HDMI\) [vol: 0.40]) Tj
T*
() Tj
T*
(# Default audio output:) Tj
T*
(ID: 36) Tj
T*
(NAME: WM8731 HiFi wm8731-hifi-0) Tj
T*
ET
endstream
endobj
209 0 obj
<< /Length 2138 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(CARD NUMBER: 2) Tj
T*
(CARD NAME: snd_rpi_proto) Tj
T*
(```) Tj
T*
() Tj
T*
(- **Check Input Devices:**) Tj
T*
(    - Run `arecord -l` to list all detected audio capture devices \(microphones\).) Tj
T*
() Tj
T*
(```) Tj
T*
(**** List of CAPTURE Hardware Devices ****) Tj
T*
(card 2: sndrpiproto [snd_rpi_proto], device 0: WM8731 HiFi wm8731-hifi-0 [WM8731 HiFi wm8731-hi) Tj
T*
(fi-0]) Tj
T*
(Subdevices: 0/1) Tj
T*
(Subdevice #0: subdevice #0) Tj
T*
(card 3: Device [USB Audio Device], device 0: USB Audio [USB Audio]) Tj
T*
(Subdevices: 1/1) Tj
T*
(Subdevice #0: subdevice #0) Tj
T*
(```  ) Tj
T*
() Tj
T*
(- **Check Output Devices:**) Tj
T*
(    - Run `aplay -l` to list all detected audio playback devices \(speakers\). Verify your card i) Tj
T*
(s being detected) Tj
T*
(      correctly) Tj
T*
() Tj
T*
(```) Tj
T*
(**** List of PLAYBACK Hardware Devices ****) Tj
T*
(card 0: Headphones [bcm2835 Headphones], device 0: bcm2835 Headphones [bcm2835 Headphones]) Tj
T*
(Subdevices: 7/8) Tj
T*
(Subdevice #0: subdevice #0) Tj
T*
(Subdevice #1: subdevice #1) Tj
T*
(Subdevice #2: subdevice #2) Tj
T*
(Subdevice #3: subdevice #3) Tj
T*
(Subdevice #4: subdevice #4) Tj
T*
(Subdevice #5: subdevice #5) Tj
T*
(Subdevice #6: subdevice #6) Tj
T*
(Subdevice #7: subdevice #7) Tj
T*
(card 1: vc4hdmi [vc4-hdmi], device 0: MAI PCM i2s-hifi-0 [MAI PCM i2s-hifi-0]) Tj
T*
(Subdevices: 1/1) Tj
T*
(Subdevice #0: subdevice #0) Tj
T*
(card 2: sndrpiproto [snd_rpi_proto], device 0: WM8731 HiFi wm8731-hifi-0 [WM8731 HiFi wm8731-hi) Tj
T*
(fi-0]) Tj
T*
(Subdevices: 1/1) Tj
T*
(Subdevice #0: subdevice #0) Tj
T*
(```) Tj
T*
() Tj
T*
(- **Verify Volume and Mute status:**) Tj
T*
(    - Run `alsamixer` and verify that volume isn't too low or audio muted.) Tj
T*
() Tj
T*
(- **Check audio setup logs:**) Tj
T*
(- During boot the audio setup generates logs, which are saved to the `/tmp` directory:) Tj
T*
(    - `/tmp/autosoundcard.log` \(for soundcard autoconfiguration\)) Tj
T*
() Tj
T*
(```) Tj
T*
(==> /tmp/autosoundcard.log <==) Tj
T*
(Fri 17 Jan 11:42:46 WET 2025 - **** List of PLAYBACK Hardware Devices ****) Tj
T*
ET
endstream
endobj
210 0 obj
<< /Length 2763 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(card 0: Headphones [bcm2835 Headphones], device 0: bcm2835 Headphones [bcm2835 Headphones]) Tj
T*
(Subdevices: 8/8) Tj
T*
(Subdevice #0: subdevice #0) Tj
T*
(Subdevice #1: subdevice #1) Tj
T*
(Subdevice #2: subdevice #2) Tj
T*
(Subdevice #3: subdevice #3) Tj
T*
(Subdevice #4: subdevice #4) Tj
T*
(Subdevice #5: subdevice #5) Tj
T*
(Subdevice #6: subdevice #6) Tj
T*
(Subdevice #7: subdevice #7) Tj
T*
(card 1: Device [USB Audio Device], device 0: USB Audio [USB Audio]) Tj
T*
(Subdevices: 1/1) Tj
T*
(Subdevice #0: subdevice #0) Tj
T*
(card 2: vc4hdmi [vc4-hdmi], device 0: MAI PCM i2s-hifi-0 [MAI PCM i2s-hifi-0]) Tj
T*
(Subdevices: 1/1) Tj
T*
(Subdevice #0: subdevice #0) Tj
T*
(card 3: sndrpiproto [snd_rpi_proto], device 0: WM8731 HiFi wm8731-hifi-0 [WM8731 HiFi wm8731-hi) Tj
T*
(fi-0]) Tj
T*
(Subdevices: 0/1) Tj
T*
(Subdevice #0: subdevice #0) Tj
T*
(Fri 17 Jan 11:42:48 WET 2025 - Mark 1 soundcard detected by ovos-i2csound.) Tj
T*
(Fri 17 Jan 11:42:48 WET 2025 - Detected CARD_NUMBER for Mark 1 soundcard: 3) Tj
T*
(Fri 17 Jan 11:42:48 WET 2025 - Configuring ALSA default card) Tj
T*
(Fri 17 Jan 11:42:48 WET 2025 - Running as user, modifying ~/.asoundrc) Tj
T*
(Fri 17 Jan 11:42:48 WET 2025 - ALSA default card set to: 3) Tj
T*
(```) Tj
T*
() Tj
T*
(- **Confirm available audio sinks:**) Tj
T*
(    - Run `wpctl status` to check the available outputs as seen by `pipewire`.) Tj
T*
(    - The default sinks will be marked with `*`) Tj
T*
(- You can inspect a sink by its number with `wpctl inspect $SINK_ID`) Tj
T*
() Tj
T*
(```) Tj
T*
(\(ovos\) ovos@raspOVOS:~ $ wpctl status) Tj
T*
(PipeWire 'pipewire-0' [1.2.4, ovos@raspOVOS, cookie:3349583741]) Tj
T*
(?? Clients:) Tj
T*
(   33. WirePlumber                         [1.2.4, ovos@raspOVOS, pid:695]) Tj
T*
(   34. WirePlumber [export]                [1.2.4, ovos@raspOVOS, pid:695]) Tj
T*
(   47. PipeWire ALSA [librespot]           [1.2.4, ovos@raspOVOS, pid:702]) Tj
T*
(   67. PipeWire ALSA [python3.11]          [1.2.4, ovos@raspOVOS, pid:691]) Tj
T*
(   75. PipeWire ALSA [python3.11]          [1.2.4, ovos@raspOVOS, pid:699]) Tj
T*
(   83. PipeWire ALSA [python3.11]          [1.2.4, ovos@raspOVOS, pid:700]) Tj
T*
(   84. wpctl                               [1.2.4, ovos@raspOVOS, pid:1710]) Tj
T*
() Tj
T*
(Audio) Tj
T*
(?? Devices:) Tj
T*
(?      42. Built-in Audio                      [alsa]) Tj
T*
(?      43. Built-in Audio                      [alsa]) Tj
T*
(?      44. Built-in Audio                      [alsa]) Tj
T*
(?  ) Tj
T*
(?? Sinks:) Tj
T*
(?  *   36. Built-in Audio Stereo               [vol: 0.40]) Tj
T*
(?      45. Built-in Audio Stereo               [vol: 0.85]) Tj
T*
(?      46. Built-in Audio Digital Stereo \(HDMI\) [vol: 0.40]) Tj
T*
ET
endstream
endobj
211 0 obj
<< /Length 2175 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(?  ) Tj
T*
(?? Sink endpoints:) Tj
T*
(?  ) Tj
T*
(?? Sources:) Tj
T*
(?  *   37. Built-in Audio Stereo               [vol: 1.00]) Tj
T*
(?  ) Tj
T*
(?? Source endpoints:) Tj
T*
(?  ) Tj
T*
(?? Streams:) Tj
T*
(   48. PipeWire ALSA [librespot]                                   ) Tj
T*
(        63. output_FL       > WM8731 HiFi wm8731-hifi-0:playback_FL    [active]) Tj
T*
(        64. output_FR       > WM8731 HiFi wm8731-hifi-0:playback_FR    [active]) Tj
T*
(   68. PipeWire ALSA [python3.11]                                  ) Tj
T*
(        69. input_FL        < WM8731 HiFi wm8731-hifi-0:capture_FL    [active]) Tj
T*
(        70. monitor_FL     ) Tj
T*
(        71. input_FR        < WM8731 HiFi wm8731-hifi-0:capture_FR    [active]) Tj
T*
(        72. monitor_FR              ) Tj
T*
() Tj
T*
(\(ovos\) ovos@raspOVOS:~ $ wpctl inspect 36) Tj
T*
(id 36, type PipeWire:Interface:Node) Tj
T*
(   alsa.card = "2") Tj
T*
(   alsa.card_name = "snd_rpi_proto") Tj
T*
(   alsa.class = "generic") Tj
T*
(   alsa.device = "0") Tj
T*
(   alsa.driver_name = "snd_soc_rpi_proto") Tj
T*
(   alsa.id = "sndrpiproto") Tj
T*
(   alsa.long_card_name = "snd_rpi_proto") Tj
T*
(   alsa.name = "WM8731 HiFi wm8731-hifi-0") Tj
T*
(   alsa.resolution_bits = "16") Tj
T*
(   alsa.subclass = "generic-mix") Tj
T*
(   alsa.subdevice = "0") Tj
T*
(   alsa.subdevice_name = "subdevice #0") Tj
T*
(   ...) Tj
T*
(```) Tj
T*
() Tj
T*
(- **Test Audio:**) Tj
T*
(    - Record a short test file with `arecord -f test.wav`.) Tj
T*
(    - Play it back with `aplay test.wav`.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## STT tips and tricks) Tj
T*
() Tj
T*
(### Saving Transcriptions) Tj
T*
() Tj
T*
(You can enable saving of recordings to file, this should be your first step to diagnose problem) Tj
T*
(s, is the audio) Tj
T*
(inteligible? is it being cropped? too noisy? low volume?) Tj
T*
() Tj
T*
(> ? set `"save_utterances": true` in) Tj
T*
(> your [listener config]\(https://github.com/OpenVoiceOS/ovos-config/blob/V0.0.13a19/ovos_config) Tj
T*
(/mycroft.conf#L436\),) Tj
T*
(> recordings will be saved to `~/.local/share/mycroft/listener/utterances`) Tj
T*
() Tj
T*
ET
endstream
endobj
212 0 obj
<< /Length 2320 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(If the recorded audio looks good to you, maybe you need to use a different STT plugin, maybe th) Tj
T*
(e one you are using does) Tj
T*
(not like your microphone, or just isn't very good for your language) Tj
T*
() Tj
T*
(### Wrong Transcriptions) Tj
T*
() Tj
T*
(If you consistently get specific words or utterances transcribed wrong, you can remedy around t) Tj
T*
(his to some extent by) Tj
T*
(using the [ovos-utterance-corrections-plugin]\(https://github.com/OpenVoiceOS/ovos-utterance-cor) Tj
T*
(rections-plugin\)) Tj
T*
() Tj
T*
(> ? You can define replacements at word level `~/.local/share/mycroft/word_corrections.json`) Tj
T*
() Tj
T*
(for example whisper STT often gets artist names wrong, this allows you to correct them) Tj
T*
() Tj
T*
(```json) Tj
T*
({) Tj
T*
(  "Jimmy Hendricks": "Jimi Hendrix",) Tj
T*
(  "Eric Klapptern": "Eric Clapton",) Tj
T*
(  "Eric Klappton": "Eric Clapton") Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(### Silence Removal) Tj
T*
() Tj
T*
(By default OVOS applies VAD \(Voice Activity Detection\) to crop silence from the audio sent to S) Tj
T*
(TT, this helps in) Tj
T*
(performance and in accuracy \(reduces hallucinations in plugins like FasterWhisper\)) Tj
T*
() Tj
T*
(Depending on your microphone/VAD plugin, this might be removing too much audio) Tj
T*
() Tj
T*
(> ? set `"remove_silence": false` in) Tj
T*
(> your [listener config]\(https://github.com/OpenVoiceOS/ovos-config/blob/V0.0.13a19/ovos_config) Tj
T*
(/mycroft.conf#L452\), this) Tj
T*
(> will send the full audio recording to STT) Tj
T*
() Tj
T*
(### Listen Sound) Tj
T*
() Tj
T*
(does your listen sound contain speech? some users replace the "ding" sound with words such as ") Tj
T*
(yes?") Tj
T*
() Tj
T*
(In this case the listen sound will be sent to STT and might negatively affect the transcription) Tj
T*
() Tj
T*
(> ? set `"instant_listen": false` in your [listener config]\(https://github.com/OpenVoiceOS/ovos) Tj
T*
(-config/blob/V0.0.13a19/ovos_config/mycroft.conf#L519\), this) Tj
T*
(> will drop the listen sound audio from the STT audio buffer. You will need to wait for the lis) Tj
T*
(ten sound to finish before speaking your command in this case) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/590-voice_apps.md ===) Tj
T*
() Tj
T*
(# Standalone Apps) Tj
T*
ET
endstream
endobj
213 0 obj
<< /Length 2250 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(Standalone applications can be made for OVOS, these applications are not skills, instead they a) Tj
T*
(re launched by the user) Tj
T*
() Tj
T*
(The main use case for these applications is in desktops, when you want to add a voice interface) Tj
T*
( to a regular application) Tj
T*
() Tj
T*
(## OVOSAbstractApplication) Tj
T*
() Tj
T*
(`ovos-workshop` provides the `OVOSAbstractApplication` class, you can use all methods and decor) Tj
T*
(ators from regular Skills in applications built from this) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_workshop.app import OVOSAbstractApplication) Tj
T*
() Tj
T*
() Tj
T*
(class MyApplication\(OVOSAbstractApplication\):) Tj
T*
(    def __init__\(self, skill_id: str = "my_app",) Tj
T*
(                 bus: Optional[MessageBusClient] = None,) Tj
T*
(                 resources_dir: Optional[str] = None,) Tj
T*
(                 gui: Optional[GUIInterface] = None,) Tj
T*
(                 **kwargs\):) Tj
T*
(        """) Tj
T*
(        Create an Application. An application is essentially a skill, but) Tj
T*
(        designed such that it may be run without an intent service.) Tj
T*
(        @param skill_id: Unique ID for this application) Tj
T*
(        @param bus: MessageBusClient to bind to application) Tj
T*
(        @param resources_dir: optional root resource directory \(else defaults to) Tj
T*
(            application `root_dir`) Tj
T*
(        @param gui: GUIInterface to bind \(if `None`, one is created\)) Tj
T*
(        """) Tj
T*
(        super\(\).__init__\(skill_id, bus, resources_dir, gui=gui, **kwargs\)) Tj
T*
() Tj
T*
() Tj
T*
(    def do_app_stuff\(self\):) Tj
T*
(        pass) Tj
T*
() Tj
T*
(    @intent_handler\("app_action.intent"\)) Tj
T*
(    def do_intent_stuff_in_app\(self, message\):) Tj
T*
(        pass) Tj
T*
() Tj
T*
() Tj
T*
(if __name__ == "__main__":) Tj
T*
(    # launch your application) Tj
T*
(    from ovos_utils import wait_for_exit_signal) Tj
T*
() Tj
T*
(    app = MyApplication\(\)) Tj
T*
() Tj
T*
(    # wait for user to exit) Tj
T*
(    wait_for_exit_signal\(\)) Tj
T*
(```) Tj
T*
() Tj
T*
(> **NOTE**: from OVOS perspective Voice Apps are just like skills and need to have a unique `sk) Tj
T*
(ill_id`) Tj
T*
ET
endstream
endobj
214 0 obj
<< /Length 2184 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
() Tj
T*
(=== docs/600-fallbacks.md ===) Tj
T*
() Tj
T*
(# Fallback Skill) Tj
T*
() Tj
T*
(## Order of precedence) Tj
T*
() Tj
T*
(The Fallback **Skills** all have a priority and will be checked in order from low priority valu) Tj
T*
(e to high priority value. ) Tj
T*
(If a Fallback **Skill** can handle the **Utterance** it will create a response and return `True) Tj
T*
(`. ) Tj
T*
() Tj
T*
(After this no other Fallback **Skills** are tried. This means the priority for Fallbacks that c) Tj
T*
(an handle a _broad_ range of queries should be _high_ \\\(80-100\\\) and Fallbacks that only respon) Tj
T*
(ds to a very specific range of queries should be higher \\\(20-80\\\). The more specific, the lower) Tj
T*
( the priority value.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(##  Fallback Handlers) Tj
T*
() Tj
T*
(Import the `FallbackSkill` base class, create a derived class and register the handler with the) Tj
T*
( fallback system) Tj
T*
() Tj
T*
(Implement the fallback handler \\\(the method that will be called to potentially handle the **Utt) Tj
T*
(erance**\\\). ) Tj
T*
() Tj
T*
(The method implements logic to determine if the **Utterance** can be handled and shall output s) Tj
T*
(peech if it can handle the query. ) Tj
T*
() Tj
T*
(It shall return Boolean `True` if the **Utterance** was handled and Boolean `False` if not.) Tj
T*
() Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_workshop.skills.fallback import FallbackSkill) Tj
T*
() Tj
T*
(class MeaningFallback\(FallbackSkill\):) Tj
T*
(    """) Tj
T*
(        A Fallback skill to answer the question about the) Tj
T*
(        meaning of life, the universe and everything.) Tj
T*
(    """) Tj
T*
(    def initialize\(self\):) Tj
T*
(         """) Tj
T*
(             Registers the fallback handler) Tj
T*
(         """) Tj
T*
(         self.register_fallback\(self.handle_fallback, 10\)) Tj
T*
(         # Any other initialize code you like can be placed here) Tj
T*
() Tj
T*
(    def handle_fallback\(self, message\):) Tj
T*
(        """) Tj
T*
(            Answers question about the meaning of life, the universe) Tj
T*
(            and everything.) Tj
T*
(        """) Tj
T*
ET
endstream
endobj
215 0 obj
<< /Length 1960 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(        utterance = message.data.get\("utterance"\)) Tj
T*
(        if 'what' in utterance) Tj
T*
(            and 'meaning' in utterance) Tj
T*
(            and \('life' in utterance) Tj
T*
(                or 'universe' in utterance) Tj
T*
(                or 'everything' in utterance\):) Tj
T*
(            self.speak\('42'\)) Tj
T*
(            return True) Tj
T*
(        else:) Tj
T*
(            return False) Tj
T*
(```) Tj
T*
(> **NOTE**: a `FallbackSkill` can register any number of fallback handlers) Tj
T*
() Tj
T*
(The above example can be found [here]\(https://github.com/forslund/fallback-meaning\).) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Decorators) Tj
T*
() Tj
T*
(Alternatively, you can use decorators ) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_workshop.decorators.fallback_handler import fallback_handler) Tj
T*
() Tj
T*
() Tj
T*
(class MeaningFallback\(FallbackSkill\):) Tj
T*
(    """) Tj
T*
(        A Fallback skill to answer the question about the) Tj
T*
(        meaning of life, the universe and everything.) Tj
T*
(    """) Tj
T*
() Tj
T*
(    @fallback_handler\(priority=10\)) Tj
T*
(    def handle_fallback\(self, message\):) Tj
T*
(        """) Tj
T*
(            Answers question about the meaning of life, the universe) Tj
T*
(            and everything.) Tj
T*
(        """) Tj
T*
(        utterance = message.data.get\("utterance"\)) Tj
T*
(        if 'what' in utterance) Tj
T*
(            and 'meaning' in utterance) Tj
T*
(            and \('life' in utterance) Tj
T*
(                or 'universe' in utterance) Tj
T*
(                or 'everything' in utterance\):) Tj
T*
(            self.speak\('42'\)) Tj
T*
(            return True) Tj
T*
(        else:) Tj
T*
(            return False) Tj
T*
(```) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Check utterances) Tj
T*
() Tj
T*
(Fallback skills should report if they are able to answer a question, without actually executing) Tj
T*
ET
endstream
endobj
216 0 obj
<< /Length 2617 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
( any action.) Tj
T*
() Tj
T*
(Besides providing performance improvements this allows other OVOS components to check how a utt) Tj
T*
(erance will be handled without side effects) Tj
T*
() Tj
T*
(```python) Tj
T*
(    def can_answer\(self, utterances: List[str], lang: str\) -> bool:) Tj
T*
(        """) Tj
T*
(        Check if the skill can answer the particular question. Override this) Tj
T*
(        method to validate whether a query can possibly be handled. By default,) Tj
T*
(        assumes a skill can answer if it has any registered handlers) Tj
T*
(        @param utterances: list of possible transcriptions to parse) Tj
T*
(        @param lang: BCP-47 language code associated with utterances) Tj
T*
(        @return: True if skill can handle the query) Tj
T*
(        """) Tj
T*
(        return len\(self._fallback_handlers\) > 0) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
(=== docs/610-common_query.md ===) Tj
T*
() Tj
T*
(# Common Query Framework) Tj
T*
() Tj
T*
(The Common Query Framework handles the common use case of "general information" or question ans) Tj
T*
(wering. Many Skills may implement handlers for "what is X" or "when did Y", the Common Query Fr) Tj
T*
(amework allows all these Skills be queried and a single "best" answer to be selected. This is s) Tj
T*
(imilar to the Common Play Framework that handles the common use of "playing" music or other med) Tj
T*
(ia.) Tj
T*
() Tj
T*
(The Common Query Skill System is led by the Common Query Pipeline. The pipeline handles queries) Tj
T*
( matching a question pattern such as "What is the height of the Eiffle Tower" and "When is lunc) Tj
T*
(h". ) Tj
T*
() Tj
T*
(A matched question will be sent to all Skills based upon the `CommonQuerySkill` base class. The) Tj
T*
( Skills will return wether they can answer the query along with an answer when applicable. The ) Tj
T*
("best" match will be selected and spoken to the user.) Tj
T*
() Tj
T*
(## CommonQuerySkill) Tj
T*
() Tj
T*
(A Skill interfacing with the Common Query Framework inherits from the the `CommonQuerySkill` an) Tj
T*
(d needs to define a method `CQS_match_query_phrase\(\)` taking an utterance as argument.) Tj
T*
() Tj
T*
(The general structure is:) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_workshop.skills.common_query_skill import CommonQuerySkill, CQSMatchLevel) Tj
T*
() Tj
T*
(class MyCommonQuerySkill\(CommonQuerySkill\):) Tj
T*
(    def CQS_match_query_phrase\(self, utt\):) Tj
T*
(       # Parsing implementation) Tj
T*
(       # [...]) Tj
T*
(       return \(utt, CQSMatchLevel.LEVEL, answer_string\)) Tj
T*
(```) Tj
T*
ET
endstream
endobj
217 0 obj
<< /Length 2429 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(The `CQS_match_query_phrase\(\)` method will parse the utterance and determine if it can handle t) Tj
T*
(he query. if it can't answer it will return `None` and if it _can_ answer it will return a data) Tj
T*
( tuple with the format) Tj
T*
() Tj
T*
(```python) Tj
T*
(\(\(str\)Input Query, CQSMatchLevel, \(str\)Answer Text\)) Tj
T*
(```) Tj
T*
() Tj
T*
(The input query is returned to map the query to the answer.) Tj
T*
() Tj
T*
(`CQSMatchLevel` is an Enum with the possible values) Tj
T*
() Tj
T*
(* `CQSMatchLevel.EXACT`: The Skill is very confident that it has the precise answer the user is) Tj
T*
( looking for. There was a category match and a known entity is referenced.) Tj
T*
(* `CQSMatchLevel.CATEGORY`: The Skill could determine that the type of question matches a categ) Tj
T*
(ory that the Skill is good at finding.) Tj
T*
(* `CQSMatchLevel.GENERAL`: This Skill tries to answer all questions and found an answer.) Tj
T*
() Tj
T*
(To show visuals or take some other action in response to being selected, see the [`CQS_action\(\)) Tj
T*
(` method]\(common-query-framework.md#cqs\\_action\) below.) Tj
T*
() Tj
T*
(## An Example) Tj
T*
() Tj
T*
(Let's make a simple Skill that tells us the age of the various Monty Python members. A quick dr) Tj
T*
(aft looks like this. \(You can find the complete code [here]\(https://github.com/forslund/common-) Tj
T*
(query-tutorial\)\)) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_workshop.skills.common_query_skill import CommonQuerySkill, CQSMatchLevel) Tj
T*
() Tj
T*
(# Dict mapping python members to their age and whether they're alive or dead     ) Tj
T*
(PYTHONS = {) Tj
T*
(    'eric idle': \(77,'alive'\),) Tj
T*
(    'michael palin': \(77, 'alive'\),) Tj
T*
(    'john cleese': \(80, 'alive'\),) Tj
T*
(    'graham chapman': \(48, 'dead'\),) Tj
T*
(    'terry gilliam': \(79, 'alive'\),) Tj
T*
(    'terry jones': \(77, 'dead'\)) Tj
T*
(}) Tj
T*
() Tj
T*
() Tj
T*
(def python_in_utt\(utterance\):) Tj
T*
(    """Find a monty python member in the utterance.) Tj
T*
(    Arguments:) Tj
T*
(        utterance \(str\): Sentence to check for Monty Python members) Tj
T*
(    Returns:) Tj
T*
(        \(str\) name of Monty Python member or None) Tj
T*
(    """) Tj
T*
(    for key in PYTHONS:) Tj
T*
(        if key in utterance.lower\(\):) Tj
T*
(            # Return the found python) Tj
T*
(            return key) Tj
T*
() Tj
T*
ET
endstream
endobj
218 0 obj
<< /Length 2358 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(    # No python found) Tj
T*
(    return None) Tj
T*
() Tj
T*
() Tj
T*
(class PythonAgeSkill\(CommonQuerySkill\):) Tj
T*
(    """A Skill for checking the age of the python crew.""") Tj
T*
() Tj
T*
(    def format_answer\(self, python\):) Tj
T*
(        """Create string with answer for the specified "python" person.""") Tj
T*
(        age, status = PYTHONS[python]) Tj
T*
(        if status == 'alive':) Tj
T*
(            return self.dialog_renderer.render\('age_alive',) Tj
T*
(                                               {'person': python, 'age': age}\)) Tj
T*
(        else:) Tj
T*
(            return self.dialog_renderer.render\('age_dead',) Tj
T*
(                                               {'person': python, 'age': age}\)) Tj
T*
() Tj
T*
(    def CQS_match_query_phrase\(self, utt\):) Tj
T*
(        """Check the utterance if it is a question we can answer.) Tj
T*
() Tj
T*
(        Arguments:) Tj
T*
(            utt: The question) Tj
T*
() Tj
T*
(        Returns: tuple \(input utterance, match level, response sentence, extra\)) Tj
T*
(        """) Tj
T*
(        # Check if this is an age query) Tj
T*
(        age_query = self.voc_match\(utt, 'age'\)) Tj
T*
() Tj
T*
(        # Check if a monty python member is mentioned) Tj
T*
(        python = full_python_in_utt\(utt\)) Tj
T*
() Tj
T*
(        # If this is an age query and a monty python member is mentioned the) Tj
T*
(        # skill can answer this) Tj
T*
(        if age_query and python:) Tj
T*
(            # return high confidence) Tj
T*
(            return \(utt, CQSMatchLevel.CATEGORY, self.format_answer\(python\)\)) Tj
T*
(        else:) Tj
T*
(            return None) Tj
T*
(```) Tj
T*
() Tj
T*
(As seen above the `CQS_match_query_phrase\(\)` checks if this is an age related utterance and if ) Tj
T*
(the utterance contains the name of a Monty Python member. If both criteria are met it returns a) Tj
T*
( match with a `CQSMatchLevel.CATEGORY` confidence together with a rendered dialog containing th) Tj
T*
(e answer.) Tj
T*
() Tj
T*
(If both criteria are not fulfilled the method will return `None` indicating that it can't answe) Tj
T*
(r the query.) Tj
T*
() Tj
T*
(This will be able to provide answers to queries such as) Tj
T*
() Tj
T*
(> "how old is Graham Chapman") Tj
T*
(>) Tj
T*
(> "what's Eric Idle's age") Tj
T*
() Tj
T*
ET
endstream
endobj
219 0 obj
<< /Length 2911 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(To make this more exact we can add support for checking for the words "monty python", and if pr) Tj
T*
(esent return the highest confidence.) Tj
T*
() Tj
T*
(The method for parsing the example is quite simplistic but there are many different toolkits ou) Tj
T*
(t there for doing the question parsing. [Adapt]\(https://pypi.org/project/adapt-parser/\), [littl) Tj
T*
(e questions]\(https://pypi.org/project/little-questions/\), [padaos]\(https://pypi.org/project/pad) Tj
T*
(aos/\) and many more!) Tj
T*
() Tj
T*
(## Match Confidence) Tj
T*
() Tj
T*
(If we want to make sure this Skill is used when the user explicitly states it's the age of a Mo) Tj
T*
(nty Python member, a slight modification to the Skill can be made:) Tj
T*
() Tj
T*
(We'll change the end of the `CQS_match_query_phrase\(\)` method to) Tj
T*
() Tj
T*
(```python) Tj
T*
(    def CQS_match_query_phrase\(self, utt\):) Tj
T*
(        # \(...\)) Tj
T*
(        if 'monty python' in utt.lower\(\):) Tj
T*
(            confidence = CQSMatchLevel.EXACT) Tj
T*
(        else:) Tj
T*
(            confidence = CQSMatchLevel.CATEGORY            ) Tj
T*
(        # return high confidence) Tj
T*
(        return \(utt, confidence, self.format_answer\(python\)\)) Tj
T*
(```) Tj
T*
() Tj
T*
(So if the utterance contains the phrase "monty python" the confidence will be set to `CQSMatchL) Tj
T*
(evel.EXACT` making the Skill very very likely to be chosen to answer the query.) Tj
T*
() Tj
T*
(## CQS\\_action\(\)) Tj
T*
() Tj
T*
(In some cases the Skill should do additional operations when selected as the best match. It cou) Tj
T*
(ld be prepared for follow-up questions or show an image on the screen. The `CQS_action\(\)` metho) Tj
T*
(d allows for this, when a Skill is selected this method will be called.) Tj
T*
() Tj
T*
(Let's make our Python Age Skill gloat that it was selected by adding a `CQS_action\(\)` method li) Tj
T*
(ke this:) Tj
T*
() Tj
T*
(where `phrase` is the same phrase that were sent to `CQS_match_query_phrase\(\)` and `data` is op) Tj
T*
(tional additional data from the query matching method.) Tj
T*
() Tj
T*
(```python) Tj
T*
(    def CQS_action\(self, utt, data\):) Tj
T*
(        self.log.info\('I got selected! What you say about that Wolfram Alpha Skill!?!?'\)) Tj
T*
(```) Tj
T*
() Tj
T*
(Now each time the Skill is called the above message will be added to the log! Not very useful y) Tj
T*
(ou say? Hmm, yes... let's add something useful, like show the age on the Mark-1 display.) Tj
T*
() Tj
T*
(To accomplish this we need to get the age into the `CQS_action\(\)` method in some way. we could ) Tj
T*
(store last age in as an internal variable but the more elegant way is to send data as part of t) Tj
T*
(he match tuple. ) Tj
T*
(To do this we must extend the returned match tuple from `CQS_match_query_phrase\(\)` with a data ) Tj
T*
(entry. So the return statement becomes) Tj
T*
ET
endstream
endobj
220 0 obj
<< /Length 2325 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(```python) Tj
T*
(    def CQS_match_query_phrase\(self, utt\):) Tj
T*
(        # \(...\)) Tj
T*
(        data = {'age': PYTHONS[python], 'python': python}) Tj
T*
(        return \(utt, confidence, self.format_answer\(python\), data\)) Tj
T*
(```) Tj
T*
() Tj
T*
(The data structure declared here will be sent to `CQS_Action\(\)` and we can update the method to) Tj
T*
() Tj
T*
(```python) Tj
T*
(    def CQS_action\(self, utt, data\):) Tj
T*
(        self.log.info\('I got selected! What you say about that Wolfram Alpha Skill!?!?'\)) Tj
T*
(        age = data.get\('age'\)) Tj
T*
(        if age:) Tj
T*
(            self.log.info\(f'Showing the age {age}'\)) Tj
T*
(            self.enclosure.mouth_text\(str\(age\)\)) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/620-universal_skills.md ===) Tj
T*
() Tj
T*
(# UniversalSkill) Tj
T*
() Tj
T*
(The `UniversalSkill` class is designed to facilitate automatic translation of input and output ) Tj
T*
(messages between different languages. ) Tj
T*
() Tj
T*
(This skill is particularly useful when native language support is not feasible, providing a con) Tj
T*
(venient way to handle multilingual interactions.) Tj
T*
() Tj
T*
(> **NEW** - `ovos-core` version **0.0.8**) Tj
T*
() Tj
T*
(## Overview) Tj
T*
() Tj
T*
(This skill ensures that intent handlers receive utterances in the skill's internal language and) Tj
T*
( are expected to produce responses in the same internal language. ) Tj
T*
() Tj
T*
(The `speak` method, used for generating spoken responses, automatically translates utterances f) Tj
T*
(rom the internal language to the original query language.) Tj
T*
() Tj
T*
(> **NOTE:** The `self.lang` attribute reflects the original query language, while received utte) Tj
T*
(rances are always in `self.internal_language`.) Tj
T*
() Tj
T*
(## Language Plugins) Tj
T*
() Tj
T*
(To run `UniversalSkills` you need to configure [Translation plugins]\(https://openvoiceos.github) Tj
T*
(.io/ovos-technical-manual/lang_plugins.md\) in `mycroft.conf`) Tj
T*
() Tj
T*
(```javascript) Tj
T*
(  // Translation plugins) Tj
T*
(  "language": {) Tj
T*
(    // by default uses public servers) Tj
T*
(    // https://github.com/OpenVoiceOS/ovos-translate-server    ) Tj
T*
(    "detection_module": "ovos-lang-detector-plugin-server",) Tj
T*
ET
endstream
endobj
221 0 obj
<< /Length 2599 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(    "translation_module": "ovos-translate-plugin-server") Tj
T*
(  },) Tj
T*
(```) Tj
T*
() Tj
T*
(## Usage) Tj
T*
() Tj
T*
(### Initialization) Tj
T*
() Tj
T*
(```python) Tj
T*
(# Example initialization) Tj
T*
(from ovos_workshop.skills.auto_translatable import UniversalSkill) Tj
T*
() Tj
T*
(class MyMultilingualSkill\(UniversalSkill\):) Tj
T*
(    """) Tj
T*
(    Skill that auto translates input/output from any language) Tj
T*
() Tj
T*
(    This skill is designed to automatically translate input and output messages) Tj
T*
(    between different languages. The intent handlers are ensured to receive) Tj
T*
(    utterances in the skill's internal language, and they are expected to produce) Tj
T*
(    utterances in the same internal language.) Tj
T*
() Tj
T*
(    The `speak` method will always translate utterances from the internal language) Tj
T*
(    to the original query language \(`self.lang`\).) Tj
T*
() Tj
T*
(    NOTE: `self.lang` reflects the original query language, but received utterances) Tj
T*
(          are always in `self.internal_language`.) Tj
T*
(    """) Tj
T*
(    def __init__\(self, *args, **kwargs\):) Tj
T*
(        """) Tj
T*
(        Initialize the UniversalSkill.) Tj
T*
() Tj
T*
(        Parameters for super\(\):) Tj
T*
(        - internal_language \(str\): The language in which the skill internally operates.) Tj
T*
(        - translate_tags \(bool\): Whether to translate the private __tags__ value \(adapt entitie) Tj
T*
(s\).) Tj
T*
(        - autodetect \(bool\): If True, the skill will detect the language of the utterance) Tj
T*
(                            and ignore self.lang / Session.lang.) Tj
T*
(        - translate_keys \(list\): default ["utterance", "utterances"] ) Tj
T*
(                                 Keys added here will have values translated in message.data.) Tj
T*
(        """) Tj
T*
(        # skill hardcoded in portuguese) Tj
T*
(        super\(\).__init__\(internal_language="pt-pt", translate_tags=translate_tags,) Tj
T*
(                         autodetect=autodetect, translate_keys=translate_keys, *args, **kwargs\)) Tj
T*
(```) Tj
T*
() Tj
T*
(### Intents and Utterances) Tj
T*
() Tj
T*
(Use the `register_intent` and `register_intent_file` methods to register intents with universal) Tj
T*
( intent handlers. The usual decorators also work) Tj
T*
() Tj
T*
(The `speak` method is used to generate spoken responses.) Tj
T*
(It automatically translates utterances if the output language is different from the skill's int) Tj
T*
(ernal language or autodetection is enabled.) Tj
T*
() Tj
T*
ET
endstream
endobj
222 0 obj
<< /Length 2259 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(```python) Tj
T*
(# Example speaking utterance, hardcoded to self.internal_language) Tj
T*
(self.speak\("Hello, how are you?"\)) Tj
T*
(```) Tj
T*
() Tj
T*
(### Universal Intent Handler) Tj
T*
() Tj
T*
(> **NOTE** Users should NOT use the `create_universal_handler` method manually in skill intents) Tj
T*
(; it is automatically utilized by `self.register_intent`. ) Tj
T*
() Tj
T*
(The following example demonstrates its usage with `self.add_event`.) Tj
T*
() Tj
T*
(```python) Tj
T*
(# Example universal handler creation) Tj
T*
(def my_event_handler\(message\):) Tj
T*
(    # Your event handling logic here) Tj
T*
(    pass) Tj
T*
() Tj
T*
(# Manual usage with self.add_event) Tj
T*
(my_handler = self.create_universal_handler\(my_event_handler\)) Tj
T*
(self.add_event\("my_event", my_handler\)) Tj
T*
(```) Tj
T*
() Tj
T*
(## EnglishCatFacts Skill Example) Tj
T*
() Tj
T*
(Let's create a simple tutorial skill that interacts with an API to fetch cat facts in English. ) Tj
T*
() Tj
T*
(We'll use the `UniversalSkill` class to support translations for other languages.) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_workshop.skills.auto_translatable import UniversalSkill) Tj
T*
() Tj
T*
() Tj
T*
(class EnglishCatFactsSkill\(UniversalSkill\):) Tj
T*
(    def __init__\(self, *args, **kwargs\):) Tj
T*
(        """) Tj
T*
(        This skill is hardcoded in english, indicated by internal_language) Tj
T*
(        """) Tj
T*
(        super\(\).__init__\(internal_language="en-us", *args, **kwargs\)) Tj
T*
() Tj
T*
(    def fetch_cat_fact\(self\):) Tj
T*
(        # Your logic to fetch a cat fact from an API) Tj
T*
(        cat_fact = "Cats have five toes on their front paws but only four on their back paws.") Tj
T*
(        return cat_fact) Tj
T*
() Tj
T*
(    @intent_handler\("cat_fact.intent"\)) Tj
T*
(    def handle_cat_fact_request\(self, message\):) Tj
T*
(        # Fetch a cat fact in self.internal_language) Tj
T*
(        cat_fact = self.fetch_cat_fact\(\)) Tj
T*
(        # Speak the cat fact, it will be translated to self.lang if needed) Tj
T*
(        self.speak\(cat_fact\)) Tj
T*
(```) Tj
T*
() Tj
T*
(In this example, the `CatFactsSkill` class extends `UniversalSkill`, allowing it to seamlessly ) Tj
T*
ET
endstream
endobj
223 0 obj
<< /Length 2319 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(translate cat facts into the user's preferred language.) Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
(## SpanishDatabase Skill Example) Tj
T*
() Tj
T*
(A more advanced example, let's consider a skill that listens to bus messages.) Tj
T*
() Tj
T*
(Our skill listens for messages containing a `"phrase"` payload in message.data that can be in a) Tj
T*
(ny language, and it saves this phrase *in spanish* to a database. ) Tj
T*
(Then it speaks a hardcoded spanish utterance, and it gets translated into the language of the b) Tj
T*
(us message Session) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_workshop.skills.auto_translatable import UniversalSkill) Tj
T*
() Tj
T*
(class SpanishDatabaseSkill\(UniversalSkill\):) Tj
T*
(    def __init__\(self, *args, **kwargs\):) Tj
T*
(        """) Tj
T*
(        This skill is hardcoded in spanish, indicated by internal_language) Tj
T*
(        """) Tj
T*
(        translate_keys=["phrase"] # translate "phrase" in message.data) Tj
T*
(        super\(\).__init__\(internal_language="es-es",) Tj
T*
(                         translate_keys=translate_keys,) Tj
T*
(                         *args, **kwargs\)) Tj
T*
() Tj
T*
(    def initialize\(self\):) Tj
T*
(        # wrap the event into a auto translation layer) Tj
T*
(        handler = self.create_universal_handler\(self.handle_entry\)) Tj
T*
(        self.add_event\("skill.database.add", handler\)) Tj
T*
() Tj
T*
(    def handle_entry\(self, message: Message\):) Tj
T*
(        phrase = message.data["phrase"]  # assured to be in self.internal_language) Tj
T*
() Tj
T*
(        # Your logic to save phrase to a database) Tj
T*
() Tj
T*
(        self.speak\("agregado a la base de datos"\) # will be spoken in self.lang) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/630-OCP_skills.md ===) Tj
T*
() Tj
T*
(# OCP Skills) Tj
T*
() Tj
T*
(OCP skills are built from the OVOSCommonPlaybackSkill class) Tj
T*
() Tj
T*
(These skills work as media providers, they return results for OCP to playback) Tj
T*
() Tj
T*
(The actual voice interaction is handled by OCP, skills only implement the returning of results) Tj
T*
() Tj
T*
(## Search Results) Tj
T*
() Tj
T*
(Search results are returned as a list of dicts, skills can also use iterators to yield results ) Tj
T*
(1 at a time as they become available) Tj
T*
ET
endstream
endobj
224 0 obj
<< /Length 2541 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(Mandatory fields are) Tj
T*
(```python) Tj
T*
(uri: str  # URL/URI of media, OCP will handle formatting and file handling) Tj
T*
(title: str) Tj
T*
(media_type: MediaType) Tj
T*
(playback: PlaybackType) Tj
T*
(match_confidence: int  # 0-100) Tj
T*
(```) Tj
T*
() Tj
T*
(Other optional metadata includes artists, album, length and images for the GUI) Tj
T*
(```python) Tj
T*
(artist: str) Tj
T*
(album: str) Tj
T*
(image: str # uri/file path) Tj
T*
(bg_image: str # uri/file path) Tj
T*
(skill_icon: str # uri/file path) Tj
T*
(length: int # seconds, -1 for live streams) Tj
T*
(```) Tj
T*
() Tj
T*
(![imagem]\(https://github.com/OpenVoiceOS/ovos-technical-manual/assets/33701864/08e31d2d-90e8-45) Tj
T*
(ea-ab2f-dbd235892cb3\)) Tj
T*
() Tj
T*
(### OCP Skill) Tj
T*
() Tj
T*
(General Steps to create a skill) Tj
T*
() Tj
T*
(- subclass your skill from `OVOSCommonPlaybackSkill`) Tj
T*
(- In the \\_\\_init\\_\\_ method indicate [the media types you want to handle]\(https://github.com/O) Tj
T*
(penVoiceOS/ovos-ocp-audio-plugin/blob/31701ded43a4f7ff6c02833d6aaf1bc0740257fc/ovos_plugin_comm) Tj
T*
(on_play/ocp/status.py#L95\)) Tj
T*
(- `self.voc_match\(phrase, "skill_name"\)` to handle specific requests for your skill) Tj
T*
(- `self.remove_voc\(phrase, "skill_name"\)` to remove matched phrases from the search request) Tj
T*
(- Implement the `ocp_search` decorator, as many as you want \(they run in parallel\)) Tj
T*
(  - The decorated method can return a list or be an iterator of `result_dict` \(track or playlis) Tj
T*
(t\)) Tj
T*
(  - The search function can be entirely inline or call another Python library, like [pandorinha) Tj
T*
(]\(https://github.com/OpenJarbas/pandorinha\) or [plexapi]\(https://github.com/pkkid/python-plexap) Tj
T*
(i\)) Tj
T*
(- `self.extend_timeout\(\)` to delay OCP from selecting a result, requesting more time to perform) Tj
T*
( the search) Tj
T*
(- Implement a confidence score formula) Tj
T*
(  - [Values are between 0 and 100]\(https://github.com/OpenVoiceOS/ovos-ocp-audio-plugin/blob/31) Tj
T*
(701ded43a4f7ff6c02833d6aaf1bc0740257fc/ovos_plugin_common_play/ocp/status.py#L4\)) Tj
T*
(  - High confidence scores cancel other OCP skill searches) Tj
T*
(- `ocp_featured_media`, return a playlist for the OCP menu if selected from GUI \(optional\)) Tj
T*
(- Create a `requirements.txt` file with third-party package requirements) Tj
T*
() Tj
T*
() Tj
T*
(```python) Tj
T*
(from os.path import join, dirname) Tj
T*
() Tj
T*
(import radiosoma) Tj
T*
() Tj
T*
ET
endstream
endobj
225 0 obj
<< /Length 2392 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(from ovos_utils import classproperty) Tj
T*
(from ovos_utils.ocp import MediaType, PlaybackType) Tj
T*
(from ovos_utils.parse import fuzzy_match) Tj
T*
(from ovos_workshop.decorators.ocp import ocp_search, ocp_featured_media) Tj
T*
(from ovos_workshop.skills.common_play import OVOSCommonPlaybackSkill) Tj
T*
() Tj
T*
() Tj
T*
(class SomaFMSkill\(OVOSCommonPlaybackSkill\):) Tj
T*
() Tj
T*
(    def __init__\(self, *args, **kwargs\):) Tj
T*
(        # media type this skill can handle) Tj
T*
(        self.supported_media = [MediaType.MUSIC, MediaType.RADIO]) Tj
T*
(        self.skill_icon = join\(dirname\(__file__\), "ui", "somafm.png"\)) Tj
T*
(        super\(\).__init__\(*args, **kwargs\)) Tj
T*
() Tj
T*
(    @ocp_featured_media\(\)) Tj
T*
(    def featured_media\(self\):) Tj
T*
(        # playlist when selected from OCP skills menu) Tj
T*
(        return [{) Tj
T*
(            "match_confidence": 90,) Tj
T*
(            "media_type": MediaType.RADIO,) Tj
T*
(            "uri": ch.direct_stream,) Tj
T*
(            "playback": PlaybackType.AUDIO,) Tj
T*
(            "image": ch.image,) Tj
T*
(            "bg_image": ch.image,) Tj
T*
(            "skill_icon": self.skill_icon,) Tj
T*
(            "title": ch.title,) Tj
T*
(            "author": "SomaFM",) Tj
T*
(            "length": 0) Tj
T*
(        } for ch in radiosoma.get_stations\(\)]) Tj
T*
() Tj
T*
(    @ocp_search\(\)) Tj
T*
(    def search_somafm\(self, phrase, media_type\):) Tj
T*
(        # check if user asked for a known radio station) Tj
T*
(        base_score = 0) Tj
T*
() Tj
T*
(        if media_type == MediaType.RADIO:) Tj
T*
(            base_score += 20) Tj
T*
(        else:) Tj
T*
(            base_score -= 30) Tj
T*
() Tj
T*
(        if self.voc_match\(phrase, "radio"\):) Tj
T*
(            base_score += 10) Tj
T*
(            phrase = self.remove_voc\(phrase, "radio"\)) Tj
T*
() Tj
T*
(        if self.voc_match\(phrase, "somafm"\):) Tj
T*
(            base_score += 30  # explicit request) Tj
T*
(            phrase = self.remove_voc\(phrase, "somafm"\)) Tj
T*
() Tj
T*
(        for ch in radiosoma.get_stations\(\):) Tj
T*
(            score = round\(base_score + fuzzy_match\(ch.title.lower\(\),) Tj
T*
(                                                   phrase.lower\(\)\) * 100\)) Tj
T*
(            if score < 50:) Tj
T*
(                continue) Tj
T*
ET
endstream
endobj
226 0 obj
<< /Length 2216 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(            yield {) Tj
T*
(                "match_confidence": min\(100, score\),) Tj
T*
(                "media_type": MediaType.RADIO,) Tj
T*
(                "uri": ch.direct_stream,) Tj
T*
(                "playback": PlaybackType.AUDIO,) Tj
T*
(                "image": ch.image,) Tj
T*
(                "bg_image": ch.image,) Tj
T*
(                "skill_icon": self.skill_icon,) Tj
T*
(                "title": ch.title,) Tj
T*
(                "artistr": "SomaFM",) Tj
T*
(                "length": 0) Tj
T*
(            }) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
(## OCP Keywords) Tj
T*
() Tj
T*
(OCP skills often need to match hundreds or thousands of strings against the query string, `self) Tj
T*
(.voc_match` can quickly become impractical to use in this scenario) Tj
T*
() Tj
T*
(To help with this the OCP skill class provides efficient keyword matching) Tj
T*
() Tj
T*
(```python) Tj
T*
(def register_ocp_keyword\(self, label: str, samples: List, langs: List[str] = None\):) Tj
T*
(    """ register strings as native OCP keywords \(eg, movie_name, artist_name ...\)) Tj
T*
(    ocp keywords can be efficiently matched with self.ocp_match helper method) Tj
T*
(    that uses Aho?Corasick algorithm) Tj
T*
(    """) Tj
T*
() Tj
T*
(def load_ocp_keyword_from_csv\(self, csv_path: str, lang: str\):) Tj
T*
(    """ load entities from a .csv file for usage with self.ocp_voc_match) Tj
T*
(    see the ocp_entities.csv datatsets for example files built from wikidata SPARQL queries) Tj
T*
() Tj
T*
(    examples contents of csv file) Tj
T*
() Tj
T*
(        label,entity) Tj
T*
(        film_genre,swashbuckler film) Tj
T*
(        film_genre,neo-noir) Tj
T*
(        film_genre,actual play film) Tj
T*
(        film_genre,alternate history film) Tj
T*
(        film_genre,spy film) Tj
T*
(        ...) Tj
T*
(    """) Tj
T*
(```) Tj
T*
() Tj
T*
(### OCP Voc match) Tj
T*
() Tj
T*
(uses [Aho?Corasick algorithm]\(https://en.wikipedia.org/wiki/Aho%E2%80%93Corasick_algorithm\) to ) Tj
T*
(match OCP keywords) Tj
T*
() Tj
T*
(this efficiently matches many keywords against an utterance) Tj
T*
() Tj
T*
(OCP keywords are registered via `self.register_ocp_keyword`) Tj
T*
() Tj
T*
ET
endstream
endobj
227 0 obj
<< /Length 2572 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(wordlists can also be loaded from a .csv file, see [the OCP dataset]\(https://github.com/OpenVoi) Tj
T*
(ceOS/ovos-classifiers/tree/dev/scripts/training/ocp/datasets\) for a list of keywords gathered f) Tj
T*
(rom wikidata with SPARQL queries) Tj
T*
() Tj
T*
() Tj
T*
(### OCP Database Skill) Tj
T*
() Tj
T*
(```python) Tj
T*
(import json) Tj
T*
() Tj
T*
(from ovos_utils.messagebus import FakeBus) Tj
T*
(from ovos_utils.ocp import MediaType) Tj
T*
(from ovos_workshop.skills.common_play import OVOSCommonPlaybackSkill) Tj
T*
() Tj
T*
() Tj
T*
(class HorrorBabbleSkill\(OVOSCommonPlaybackSkill\):) Tj
T*
() Tj
T*
(    def initialize\(self\):) Tj
T*
(        # get file from) Tj
T*
(        # https://github.com/JarbasSkills/skill-horrorbabble/blob/dev/bootstrap.json) Tj
T*
(        with open\("hb.json"\) as f:) Tj
T*
(            db = json.load\(f\)) Tj
T*
(        book_names = []) Tj
T*
(        book_authors = []) Tj
T*
(        for url, data in db.items\(\):) Tj
T*
(            t = data["title"].split\("/"\)[0].strip\(\)) Tj
T*
(            if " by " in t:) Tj
T*
(                title, author = t.split\(" by "\)) Tj
T*
(                title = title.replace\('"', ""\).strip\(\)) Tj
T*
(                author = author.split\("\("\)[0].strip\(\)) Tj
T*
(                book_names.append\(title\)) Tj
T*
(                book_authors.append\(author\)) Tj
T*
(                if " " in author:) Tj
T*
(                    book_authors += author.split\(" "\)) Tj
T*
(            elif t.startswith\('"'\) and t.endswith\('"'\):) Tj
T*
(                book_names.append\(t[1:-1]\)) Tj
T*
(            else:) Tj
T*
(                book_names.append\(t\)) Tj
T*
(        self.register_ocp_keyword\(MediaType.AUDIOBOOK,) Tj
T*
(                                  "book_author",) Tj
T*
(                                  list\(set\(book_authors\)\)\)) Tj
T*
(        self.register_ocp_keyword\(MediaType.AUDIOBOOK,) Tj
T*
(                                  "book_name",) Tj
T*
(                                  list\(set\(book_names\)\)\)) Tj
T*
(        self.register_ocp_keyword\(MediaType.AUDIOBOOK,) Tj
T*
(                                  "audiobook_streaming_provider",) Tj
T*
(                                  ["HorrorBabble", "Horror Babble"]\)) Tj
T*
(```) Tj
T*
() Tj
T*
(```python) Tj
T*
(s = HorrorBabbleSkill\(bus=FakeBus\(\), skill_id="demo.fake"\)) Tj
T*
() Tj
T*
(entities = s.ocp_voc_match\("read The Call of Cthulhu by Lovecraft"\)) Tj
T*
(# {'book_author': 'Lovecraft', 'book_name': 'The Call of Cthulhu'}) Tj
T*
ET
endstream
endobj
228 0 obj
<< /Length 2146 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(print\(entities\)) Tj
T*
() Tj
T*
(entities = s.ocp_voc_match\("play HorrorBabble"\)) Tj
T*
(# {'audiobook_streaming_provider': 'HorrorBabble'}) Tj
T*
(print\(entities\)) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
(## Playlist Results) Tj
T*
() Tj
T*
(Results can also be playlists, not only single tracks, for instance full albums or a full seaso) Tj
T*
(n for a series) Tj
T*
() Tj
T*
(When a playlist is selected from Search Results, it will replace the Now Playing list) Tj
T*
() Tj
T*
(Playlist results look exactly the same as regular results, but instead of a `uri` they provide ) Tj
T*
(a `playlist`) Tj
T*
() Tj
T*
(```python) Tj
T*
(playlist: list  # list of dicts, each dict is a regular search result) Tj
T*
(title: str) Tj
T*
(media_type: MediaType) Tj
T*
(playback: PlaybackType) Tj
T*
(match_confidence: int  # 0-100) Tj
T*
(```) Tj
T*
() Tj
T*
(> NOTE: nested playlists are a work in progress and not guaranteed to be functional, ie, the `") Tj
T*
(playlist"` dict key should not include other playlists) Tj
T*
() Tj
T*
(### Playlist Skill) Tj
T*
() Tj
T*
(```python) Tj
T*
(class MyJamsSkill\(OVOSCommonPlaybackSkill\):) Tj
T*
() Tj
T*
(    def __init__\(self, *args, **kwargs\):) Tj
T*
(        self.supported_media = [MediaType.MUSIC]) Tj
T*
(        self.skill_icon = join\(dirname\(__file__\), "ui", "myjams.png"\)) Tj
T*
(        super\(\).__init__\(*args, **kwargs\)) Tj
T*
() Tj
T*
(    @ocp_search\(\)) Tj
T*
(    def search_my_jams\(self, phrase, media_type\):) Tj
T*
(        if self.voc_match\(...\):) Tj
T*
(            results = [...]  # regular result dicts, as in examples above) Tj
T*
(            score = 70  # TODO) Tj
T*
() Tj
T*
(            yield {) Tj
T*
(                "match_confidence": min\(100, score\),) Tj
T*
(                "media_type": MediaType.MUSIC,) Tj
T*
(                "playlist": results, # replaces "uri") Tj
T*
(                "playback": PlaybackType.AUDIO,) Tj
T*
(                "image": self.image,) Tj
T*
(                "bg_image": self.image,) Tj
T*
(                "skill_icon": self.skill_icon,) Tj
T*
(                "title": "MyJams",) Tj
T*
ET
endstream
endobj
229 0 obj
<< /Length 2573 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(                "length": sum\([r["length"] for r in results]\)  # total playlist duration) Tj
T*
(            }) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/631-OCP_pipeline.md ===) Tj
T*
() Tj
T*
(# OCP Pipeline) Tj
T*
() Tj
T*
(The **OCP \(OVOS Common Playback\)** Pipeline Plugin integrates seamlessly into the OVOS intent p) Tj
T*
(rocessing framework,) Tj
T*
(enabling intelligent handling of media-related voice commands. By leveraging classifiers, skill) Tj
T*
(-registered catalogs, and) Tj
T*
(playback-specific filters, OCP facilitates accurate recognition and execution of user requests ) Tj
T*
(such as "play music," ") Tj
T*
(pause video," or "next song.") Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Pipeline Components) Tj
T*
() Tj
T*
(The OCP Pipeline Plugin registers three components within the OVOS intent pipeline, each corres) Tj
T*
(ponding to different) Tj
T*
(confidence levels in interpreting media-related intents:) Tj
T*
() Tj
T*
(| Pipeline ID  | Description                            | Recommended Use                      ) Tj
T*
(                                              |   ) Tj
T*
(|--------------|----------------------------------------|--------------------------------------) Tj
T*
(----------------------------------------------|) Tj
T*
(| `ocp_high`   | High-confidence media intent matches   | ? Primary media commands             ) Tj
T*
(                                              |   ) Tj
T*
(| `ocp_medium` | Medium-confidence media intent matches | ?? Ambiguous media queries           ) Tj
T*
(                                              |   ) Tj
T*
(| `ocp_low`    | Low-confidence media intent matches    | ? Broad keyword matches. Only use if ) Tj
T*
(the device is exclusively for media playback |   ) Tj
T*
() Tj
T*
(These components should be ordered in the pipeline to prioritize higher-confidence matches) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Intent Classification) Tj
T*
() Tj
T*
(OCP employs a combination of techniques to classify and handle media-related intents:) Tj
T*
() Tj
T*
(* **Keyword-Based Matching**: Identifies explicit media-related terms in user utterances.) Tj
T*
() Tj
T*
(* **Skill-Registered Keywords**: Utilizes media keywords registered by OCP-aware skills \(e.g., ) Tj
T*
(artist names, show) Tj
T*
(  titles\) to enhance intent recognition.) Tj
T*
() Tj
T*
(* **Media Type Classification**: Assigns a media type \(e.g., music, podcast, movie\) to the quer) Tj
T*
(y based on keywords or an) Tj
T*
(  optional experimental classifier.) Tj
T*
() Tj
T*
ET
endstream
endobj
230 0 obj
<< /Length 2094 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(> ?? The `ocp_low` component relies on skill-registered keywords and may trigger on queries tha) Tj
T*
(t include known media) Tj
T*
(> terms, even if the user's intent is not to initiate playback.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Media Type Handling) Tj
T*
() Tj
T*
(OCP supports various media types, including:) Tj
T*
() Tj
T*
(* `music`) Tj
T*
(* `podcast`) Tj
T*
(* `movie`) Tj
T*
(* `radio`) Tj
T*
(* `audiobook`) Tj
T*
(* `news`) Tj
T*
() Tj
T*
(Media type classification is primarily based on keywords within the user's query. For example, ) Tj
T*
(a query containing "play) Tj
T*
(the latest news" would be classified under the `news` media type. An experimental classifier ca) Tj
T*
(n also be enabled to) Tj
T*
(predict media types based on the full query context.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Result Filtering) Tj
T*
() Tj
T*
(After gathering potential media results from OCP-enabled skills, the plugin applies several fil) Tj
T*
(ters to ensure relevance) Tj
T*
(and playability:) Tj
T*
() Tj
T*
(* **Confidence Threshold**: Results with a `match_confidence` below the configured `min_score` ) Tj
T*
(are discarded.) Tj
T*
() Tj
T*
(* **Media Type Consistency**: If a media type has been classified, results of differing types a) Tj
T*
(re removed.) Tj
T*
() Tj
T*
(* **Plugin Availability**: Results requiring unavailable playback plugins \(e.g., `spotify://` U) Tj
T*
(RIs without the Spotify) Tj
T*
(  plugin\) are excluded.) Tj
T*
() Tj
T*
(* **Playback Mode Preference**: Respects user or system preferences for audio-only or video-onl) Tj
T*
(y playback, filtering out) Tj
T*
(  incompatible results.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Playback Management) Tj
T*
() Tj
T*
(OCP delegates the actual media playback to the appropriate plugin managed by `ovos-audio`. Skil) Tj
T*
(ls act solely as media) Tj
T*
(catalogs, providing search results without handling playback directly. This separation ensures ) Tj
T*
(a consistent and) Tj
T*
(centralized playback experience across different media types and sources.) Tj
T*
ET
endstream
endobj
231 0 obj
<< /Length 3055 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(the OCP Pipeline keeps track of media player status across `Session`s, this is taken into accou) Tj
T*
(nt during the intent) Tj
T*
(matching process) Tj
T*
() Tj
T*
(eg. if no media player is active, then "next song" will not trigger) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Configuration Options) Tj
T*
() Tj
T*
(OCP behavior can be customized via the `mycroft.conf` file under the `intents` section:) Tj
T*
() Tj
T*
(```json) Tj
T*
({) Tj
T*
(  "intents": {) Tj
T*
(    "OCP": {) Tj
T*
(      "experimental_media_classifier": false,) Tj
T*
(      "experimental_binary_classifier": false,) Tj
T*
(      "legacy": false,) Tj
T*
(      "classifier_threshold": 0.4,) Tj
T*
(      "min_score": 40,) Tj
T*
(      "filter_media": true,) Tj
T*
(      "filter_SEI": true,) Tj
T*
(      "playback_mode": 0,) Tj
T*
(      "search_fallback": true) Tj
T*
(    }) Tj
T*
(  }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(| Key                              | Type  | Default | Description                             ) Tj
T*
(                               |                                                       ) Tj
T*
(|----------------------------------|-------|---------|-----------------------------------------) Tj
T*
(-------------------------------| ) Tj
T*
(| `experimental_media_classifier`  | bool  | false   | Enable ML-based media type classificatio) Tj
T*
(n \(English only\).              |                                                       ) Tj
T*
(| `experimental_binary_classifier` | bool  | false   | Enable ML-based media detection for `ocp) Tj
T*
(_medium`.  \(English only\).     |                                                       ) Tj
T*
(| `legacy`                         | bool  | false   | Use legacy audio service API instead of ) Tj
T*
(OCP \(not recommended\).         |                                                       ) Tj
T*
(| `classifier_threshold`           | float | 0.4     | Minimum confidence for trusting classifi) Tj
T*
(er results \(0.0?1.0\).          |                                                       ) Tj
T*
(| `min_score`                      | int   | 40      | Minimum match confidence to retain a ski) Tj
T*
(ll result \(0?100\).             |                                                       ) Tj
T*
(| `filter_media`                   | bool  | true    | Enable media type-based result filtering) Tj
T*
(.                              |                                                       ) Tj
T*
(| `filter_SEI`                     | bool  | true    | Filter out results requiring unavailable) Tj
T*
( plugins \(Stream Extractors\).  |                                                       ) Tj
T*
(| `playback_mode`                  | int   | 0       | Playback preference: `0` = auto, `10` = ) Tj
T*
(audio-only, `20` = video-only. |                                                       ) Tj
T*
(| `search_fallback`                | bool  | true    | Perform a generic media search if no typ) Tj
T*
(e-specific results are found.  |) Tj
T*
() Tj
T*
ET
endstream
endobj
232 0 obj
<< /Length 1842 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(---) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/700-homescreen.md ===) Tj
T*
() Tj
T*
(# OpenVoiceOS Home Screen) Tj
T*
() Tj
T*
(The home screen is the central place for all your tasks. It is what your device displays when i) Tj
T*
(t is idle) Tj
T*
() Tj
T*
(## Configuration) Tj
T*
() Tj
T*
(Select a homescreen in `mycroft.conf` or via `ovos-shell`) Tj
T*
() Tj
T*
(```javascript) Tj
T*
("gui": {) Tj
T*
(    "idle_display_skill": "skill-ovos-homescreen.openvoiceos") Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(## Resting Faces) Tj
T*
() Tj
T*
(The resting face API provides skill authors the ability to extend their skills to supply their ) Tj
T*
(own customized IDLE screens that will be displayed when there is no activity on the screen.) Tj
T*
() Tj
T*
(```) Tj
T*
(import requests) Tj
T*
(from ovos_workshop.skills import OVOSSkill) Tj
T*
(from ovos_workshop.descorators import intent_handler, resting_screen_handler) Tj
T*
() Tj
T*
() Tj
T*
(class CatSkill\(OVOSSkill\):) Tj
T*
(    def update_cat\(self\):) Tj
T*
(        r = requests.get\('https://api.thecatapi.com/v1/images/search'\)) Tj
T*
(        return r.json\(\)[0]['url']) Tj
T*
() Tj
T*
(    @resting_screen_handler\("Cat Image"\)) Tj
T*
(    def idle\(self, message\):) Tj
T*
(        img = self.update_cat\(\)) Tj
T*
(        self.gui.show_image\(img\)) Tj
T*
() Tj
T*
(    @intent_handler\('show_cat.intent'\)) Tj
T*
(    def cat_handler\(self, message\):) Tj
T*
(        img = self.update_cat\(\)) Tj
T*
(        self.gui.show_image\(img\)) Tj
T*
(        self.speak_dialog\('mjau'\)) Tj
T*
(```) Tj
T*
() Tj
T*
(A more advanced example, refreshing a webpage on a timer) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_workshop.skills import OVOSSkill) Tj
T*
(from ovos_workshop.descorators import intent_handler, resting_screen_handler) Tj
T*
() Tj
T*
ET
endstream
endobj
233 0 obj
<< /Length 2363 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(class WebpageHomescreen\(OVOSSkill\):) Tj
T*
() Tj
T*
(    def initialize\(self\):) Tj
T*
(        """Perform final setup of Skill.""") Tj
T*
(        # Disable manual refresh until this Homepage is made active.) Tj
T*
(        self.is_active = False) Tj
T*
(        self.disable_intent\("refresh-homepage.intent"\)) Tj
T*
(        self.settings_change_callback = self.refresh_homescreen) Tj
T*
() Tj
T*
(    def get_intro_message\(self\):) Tj
T*
(        """Provide instructions on first install.""") Tj
T*
(        self.speak_dialog\("setting-url"\)) Tj
T*
(        self.speak_dialog\("selecting-homescreen"\)) Tj
T*
() Tj
T*
(    @resting_screen_handler\("Webpage Homescreen"\)) Tj
T*
(    def handle_request_to_use_homescreen\(self, message: Message\):) Tj
T*
(        """Handler for requests from GUI to use this Homescreen.""") Tj
T*
(        self.is_active = True) Tj
T*
(        self.display_homescreen\(\)) Tj
T*
(        self.refresh_homescreen\(message\)) Tj
T*
(        self.enable_intent\("refresh-homepage.intent"\)) Tj
T*
() Tj
T*
(    def display_homescreen\(self\):) Tj
T*
(        """Display the selected webpage as the Homescreen.""") Tj
T*
(        default_url = "https://openvoiceos.github.io/status") Tj
T*
(        url = self.settings.get\("homepage_url", default_url\)) Tj
T*
(        self.gui.show_url\(url\)) Tj
T*
() Tj
T*
(    @intent_handler\("refresh-homepage.intent"\)) Tj
T*
(    def refresh_homescreen\(self, message: Message\):) Tj
T*
(        """Update refresh rate of homescreen and refresh screen.) Tj
T*
() Tj
T*
(        Defaults to 600 seconds / 10 minutes.) Tj
T*
(        """) Tj
T*
(        self.cancel_scheduled_event\("refresh-webpage-homescreen"\)) Tj
T*
(        if self.is_active:) Tj
T*
(            self.schedule_repeating_event\() Tj
T*
(                self.display_homescreen,) Tj
T*
(                0,) Tj
T*
(                self.settings.get\("refresh_frequency", 600\),) Tj
T*
(                name="refresh-webpage-homescreen",) Tj
T*
(            \)) Tj
T*
() Tj
T*
(    def shutdown\(self\):) Tj
T*
(        """Actions to perform when Skill is shutting down.""") Tj
T*
(        self.is_active = False) Tj
T*
(        self.cancel_all_repeating_events\(\)) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/701-gui_protocol.md ===) Tj
T*
() Tj
T*
(## Protocol) Tj
T*
() Tj
T*
ET
endstream
endobj
234 0 obj
<< /Length 2856 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(The [gui service]\(https://github.com/OpenVoiceOS/ovos-gui\) in ovos-core will expose a websocket) Tj
T*
( to) Tj
T*
(the GUI clients following the protocol outlined in this page) Tj
T*
() Tj
T*
(The transport protocol works between gui service and the gui clients, OpenVoiceOS does not dire) Tj
T*
(ctly use the protocol but instead communicates with `ovos-gui` via the standard messagebus) Tj
T*
() Tj
T*
(The QT library which implements the protocol lives in the [mycroft-gui-qt5]\(https://github.com/) Tj
T*
(OpenVoiceOS/mycroft-gui-qt5\) repository. ) Tj
T*
() Tj
T*
(![imagem]\(https://github.com/OpenVoiceOS/ovos-technical-manual/assets/33701864/92e73af7-f7d2-4a) Tj
T*
(a3-a294-77f87aa22390\)) Tj
T*
() Tj
T*
(## Specification) Tj
T*
() Tj
T*
(This protocol defines how ovos-gui communicates with connected clients) Tj
T*
() Tj
T*
(- [CONNECTION - mycroft.gui.connected]\(#connection---mycroftguiconnected\)) Tj
T*
(- [NAMESPACES]\(#namespaces\)) Tj
T*
(  * [Active Skills - mycroft.system.active_skills]\(#active-skills---mycroftsystemactive-skills\)) Tj
T*
(- [PAGES - mycroft.gui.list.xxx]\(#pages---mycroftguilistxxx\)) Tj
T*
(  * [Insert new page at position]\(#insert-new-page-at-position\)) Tj
T*
(  * [Move pages within the list]\(#move-pages-within-the-list\)) Tj
T*
(  * [Remove pages from the list]\(#remove-pages-from-the-list\)) Tj
T*
(- [EVENTS - mycroft.events.triggered]\(#events---mycrofteventstriggered\)) Tj
T*
(  * [SPECIAL EVENT: page_gained_focus]\(#special-event--page-gained-focus\)) Tj
T*
(- [SKILL DATA - mycroft.session.xxx]\(#skill-data---mycroftsessionxxx\)) Tj
T*
(  * [Sets a new key/value in the sessionData dictionary]\(#sets-a-new-key-value-in-the-sessionda) Tj
T*
(ta-dictionary\)) Tj
T*
(  * [Deletes a key/value pair from the sessionData dictionary]\(#deletes-a-key-value-pair-from-t) Tj
T*
(he-sessiondata-dictionary\)) Tj
T*
(  * [Lists]\(#lists\)) Tj
T*
(    + [Inserts new items at position]\(#inserts-new-items-at-position\)) Tj
T*
(    + [Updates item values starting at the given position, as many items as there are in the ar) Tj
T*
(ray]\(#updates-item-values-starting-at-the-given-position--as-many-items-as-there-are-in-the-arr) Tj
T*
(ay\)) Tj
T*
(    + [Move items within the list]\(#move-items-within-the-list\)) Tj
T*
(    + [Remove items from the list]\(#remove-items-from-the-list\)) Tj
T*
() Tj
T*
() Tj
T*
(## CONNECTION - mycroft.gui.connected) Tj
T*
() Tj
T*
(on connection gui clients announce themselves) Tj
T*
() Tj
T*
(This is an extension by OVOS to the [original mycroft protocol]\(https://github.com/MycroftAI/my) Tj
T*
(croft-gui/blob/master/transportProtocol.md\)) Tj
T*
() Tj
T*
() Tj
T*
(```javascript) Tj
T*
({) Tj
T*
(    "type": "mycroft.gui.connected",) Tj
T*
(    "gui_id": "unique_identifier_provided_by_client") Tj
T*
(}) Tj
T*
(```) Tj
T*
ET
endstream
endobj
235 0 obj
<< /Length 2147 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(## NAMESPACES) Tj
T*
() Tj
T*
(ovos-gui maintains a list of namespaces with GUI data, namespaces usually correspond to a skill) Tj
T*
(_id) Tj
T*
() Tj
T*
(Every message in the gui protocol specifies a namespace it belongs to) Tj
T*
() Tj
T*
(gui clients usualy display all namespaces, but can be requested to display a single one, ) Tj
T*
() Tj
T*
(eg, have a dedicated window to show a skill as a [traditional desktop app]\(https://github.com/O) Tj
T*
(penVoiceOS/ovos-ocp-audio-plugin/blob/dev/ovos_plugin_common_play/ocp/res/desktop/OCP.desktop\)) Tj
T*
() Tj
T*
() Tj
T*
(### Active Skills - mycroft.system.active_skills) Tj
T*
() Tj
T*
(a reserved namespace is "mycroft.system.active_skills", the data contained in this namespace de) Tj
T*
(fines the namespace display priority) Tj
T*
() Tj
T*
(Recent skills are ordered from the last used to the oldest, so the first item of the list will ) Tj
T*
(always be the the one showing any GUI page, if available.) Tj
T*
() Tj
T*
(see the section about [lists]\(https://github.com/OpenVoiceOS/ovos-gui/blob/dev/protocol.md#list) Tj
T*
(s\) if you need to modify active skills) Tj
T*
() Tj
T*
() Tj
T*
(## PAGES - mycroft.gui.list.xxx) Tj
T*
() Tj
T*
(Each active skill is associated with a list of uris to the QML files of all gui items that are ) Tj
T*
(supposed to be visible.) Tj
T*
() Tj
T*
(Non QT GUIS get sent other file extensions such as .jsx or .html using the same message format) Tj
T*
() Tj
T*
(### Insert new page at position) Tj
T*
() Tj
T*
(```javascript) Tj
T*
({) Tj
T*
(    "type": "mycroft.gui.list.insert",) Tj
T*
(    "namespace": "mycroft.weather") Tj
T*
(    "position": 2) Tj
T*
(    "values": [{"url": "file://..../currentWeather.qml"}, ...] //values must always be in array) Tj
T*
( form) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(### Move pages within the list) Tj
T*
(```javascript) Tj
T*
({) Tj
T*
(    "type": "mycroft.gui.list.move",) Tj
T*
(    "namespace": "mycroft.weather") Tj
T*
(    "from": 2) Tj
T*
(    "to": 5) Tj
T*
(    "items_number": 2 //optional in case we want to move a big chunk of list at once) Tj
T*
(}) Tj
T*
ET
endstream
endobj
236 0 obj
<< /Length 1977 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(```) Tj
T*
() Tj
T*
(### Remove pages from the list) Tj
T*
(```javascript) Tj
T*
({) Tj
T*
(    "type": "mycroft.gui.list.remove",) Tj
T*
(    "namespace": "mycroft.weather") Tj
T*
(    "position": 2) Tj
T*
(    "items_number": 5 //optional in case we want to get rid a big chunk of list at once) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
(## EVENTS - mycroft.events.triggered) Tj
T*
() Tj
T*
(Events can either be emitted by a gui client \(eg, some element clicked\) or by the skill \(eg, in) Tj
T*
( response to a voice command\)) Tj
T*
() Tj
T*
(```javascript) Tj
T*
({) Tj
T*
(    "type": "mycroft.events.triggered") Tj
T*
(    "namespace": "my_skill_id") Tj
T*
(    "event_name": "my.gui.event",) Tj
T*
(    "parameters": {"item": 3}) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(### SPECIAL EVENT: page_gained_focus) Tj
T*
() Tj
T*
(This event is used when the ovos-gui wants a page of a particular skill to gain user attention ) Tj
T*
(focus and become the current active view and "focus of attention" of the user. ) Tj
T*
() Tj
T*
(when a GUI client receives it, it should render the requested GUI page) Tj
T*
() Tj
T*
(GUI clients can also emit this event, if a new page was rendered \(eg, in response to a user swi) Tj
T*
(pping left\)) Tj
T*
() Tj
T*
(NOTE: for responsiveness it is recommened this message is only emitted after the rendering has ) Tj
T*
(actually been done, skills may be waiting for this event to initiate some actons) Tj
T*
() Tj
T*
(```javascript) Tj
T*
({) Tj
T*
(    "type": "mycroft.events.triggered",) Tj
T*
(    "namespace": "mycroft.weather",) Tj
T*
(    "event_name": "page_gained_focus",) Tj
T*
(    "data": {"number": 0}) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(The parameter "number" is the position \(starting from zero\) of the page) Tj
T*
() Tj
T*
(## SKILL DATA - mycroft.session.xxx) Tj
T*
() Tj
T*
(At the center of data sharing there is a key/value dictionary that is kept synchronized between) Tj
T*
ET
endstream
endobj
237 0 obj
<< /Length 1907 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
( ovos-gui and the GUI client.) Tj
T*
() Tj
T*
(Values can either be simple strings, numbers and booleans or be more complicated data types) Tj
T*
() Tj
T*
(this event can be sent from gui clients \(eg, in response to a dropdown selection\) or from skill) Tj
T*
(s \(eg, change weather data\)) Tj
T*
() Tj
T*
(NOTE: Once a new gui client connects to ovos-gui, all existing session data is sent to the clie) Tj
T*
(nt, ) Tj
T*
(after that the client gets live updates via these events) Tj
T*
() Tj
T*
(### Sets a new key/value in the sessionData dictionary) Tj
T*
() Tj
T*
(Either sets a new key/value pair or replace an existing old value.) Tj
T*
() Tj
T*
(```javascript) Tj
T*
({) Tj
T*
(    "type": "mycroft.session.set",) Tj
T*
(    "namespace": "weather.mycroft") Tj
T*
(    "data": {) Tj
T*
(        "temperature": "28",) Tj
T*
(        "icon": "cloudy",) Tj
T*
(        "forecast": [{...},...] //if it's a list see below for more message types) Tj
T*
(    }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(### Deletes a key/value pair from the sessionData dictionary) Tj
T*
(```javascript) Tj
T*
({) Tj
T*
(    "type": "mycroft.session.delete",) Tj
T*
(    "namespace": "weather.mycroft") Tj
T*
(    "property": "temperature") Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(### Lists) Tj
T*
() Tj
T*
(#### Inserts new items at position) Tj
T*
(```javascript) Tj
T*
({) Tj
T*
(    "type": "mycroft.session.list.insert",) Tj
T*
(    "namespace": "weather.mycroft") Tj
T*
(    "property": "forecast" //the key of the main data map this list in contained into) Tj
T*
(    "position": 2) Tj
T*
(    "values": [{"date": "tomorrow", "temperature" : 13, ...}, ...] //values must always be in a) Tj
T*
(rray form) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(#### Updates item values starting at the given position, as many items as there are in the arra) Tj
T*
(y) Tj
T*
(```javascript) Tj
T*
({) Tj
T*
ET
endstream
endobj
238 0 obj
<< /Length 1918 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(    "type": "mycroft.session.list.update",) Tj
T*
(    "namespace": "weather.mycroft") Tj
T*
(    "property": "forecast") Tj
T*
(    "position": 2) Tj
T*
(    "values": [{"date": "tomorrow", "temperature" : 13, ...}, ...] //values must always be in a) Tj
T*
(rray form) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(#### Move items within the list) Tj
T*
(```javascript) Tj
T*
({) Tj
T*
(    "type": "mycroft.session.list.move",) Tj
T*
(    "namespace": "weather.mycroft") Tj
T*
(    "property": "forecast") Tj
T*
(    "from": 2) Tj
T*
(    "to": 5) Tj
T*
(    "items_number": 2 //optional in case we want to move a big chunk of list at once) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(#### Remove items from the list) Tj
T*
(```javascript) Tj
T*
({) Tj
T*
(    "type": "mycroft.session.list.remove",) Tj
T*
(    "namespace": "weather.mycroft") Tj
T*
(    "property": "forecast") Tj
T*
(    "position": 2) Tj
T*
(    "items_number": 5 //optional in case we want to get rid a big chunk of list at once) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
(=== docs/702-ovos-shell.md ===) Tj
T*
() Tj
T*
(# OVOS Shell) Tj
T*
() Tj
T*
([OVOS-shell]\(https://github.com/OpenVoiceOS/ovos-shell\) is the OpenVoiceOS client implementatio) Tj
T*
(n of the [mycroft-gui-qt5]\(https://github.com/OpenVoiceOS/mycroft-gui-qt5\) library used in our ) Tj
T*
(embedded device images) Tj
T*
() Tj
T*
(## Design Principles) Tj
T*
() Tj
T*
(The OpenVoiceOS Shell was designed with some simple principles in mind.) Tj
T*
() Tj
T*
(> **The visual interface is always secondary to the voice interface.**) Tj
T*
() Tj
T*
(Our goal is to make all interactions Voice First, meaning that the user could accomplish their ) Tj
T*
(tasks with just voice interaction.) Tj
T*
() Tj
T*
(> **Touchscreen menus should be kept to a minimum, this reinforces using the primary mode of in) Tj
T*
(teraction, voice.**) Tj
T*
ET
endstream
endobj
239 0 obj
<< /Length 2321 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(However, many important controls need to be implemented as multimodal such as the ability to re) Tj
T*
(turn to the home screen, change the volume, change the brightness of the screen, control media ) Tj
T*
(playback, and other system settings.) Tj
T*
() Tj
T*
(OpenVoiceOS images ship with [ovos-homescreen]\(https://github.com/OpenVoiceOS/skill-ovos-homesc) Tj
T*
(reen\) and `ovos-shell`, built on top of QT5, these components ensure the viability of the GUI i) Tj
T*
(n embedded devices running `ovos-shell` via EGLFS, without requiring a traditional desktop envi) Tj
T*
(ronment) Tj
T*
() Tj
T*
(## Companion Plugins) Tj
T*
() Tj
T*
(To unlock full functionality you also need to configure [ovos-gui-plugin-shell-companion]\(https) Tj
T*
(://github.com/OpenVoiceOS/ovos-gui-plugin-shell-companion\) in mycroft.conf) Tj
T*
() Tj
T*
(This plugin integrates with `ovos-gui` to provide:) Tj
T*
() Tj
T*
(- color scheme manager) Tj
T*
(- notifications widgets) Tj
T*
(- configuration provider  \(settings UI\)) Tj
T*
(- brightness control  \(night mode etc\)) Tj
T*
() Tj
T*
(```javascript) Tj
T*
({) Tj
T*
(  "gui": {) Tj
T*
(    // Extensions provide additional GUI platform support for specific devices) Tj
T*
(    "extension": "ovos-gui-plugin-shell-companion",) Tj
T*
() Tj
T*
(    // homescreen skill to use) Tj
T*
(    "idle_display_skill": "skill-ovos-homescreen.openvoiceos") Tj
T*
(  }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(OVOS-shell is tightly coupled to [PHAL]\(#what-is-phal\), the following companion plugins should ) Tj
T*
(also be installed) Tj
T*
() Tj
T*
(- [ovos-PHAL-plugin-network-manager]\(https://github.com/OpenVoiceOS/ovos-PHAL-plugin-network-ma) Tj
T*
(nager\)) Tj
T*
(- [ovos-PHAL-plugin-gui-network-client]\(https://github.com/OpenVoiceOS/ovos-PHAL-plugin-gui-net) Tj
T*
(work-client\)) Tj
T*
(- [ovos-PHAL-plugin-wifi-setup]\(https://github.com/OpenVoiceOS/ovos-PHAL-plugin-wifi-setup\)) Tj
T*
(- [ovos-PHAL-plugin-alsa]\(https://github.com/OpenVoiceOS/ovos-PHAL-plugin-alsa\)) Tj
T*
(- [ovos-PHAL-plugin-system]\(https://github.com/OpenVoiceOS/ovos-PHAL-plugin-system\)) Tj
T*
() Tj
T*
() Tj
T*
(## Configuration) Tj
T*
() Tj
T*
(The Shell can be configured in a few ways.) Tj
T*
() Tj
T*
(### GUI) Tj
T*
() Tj
T*
(Display settings) Tj
T*
() Tj
T*
ET
endstream
endobj
240 0 obj
<< /Length 2245 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(![]\(https://github.com/OpenVoiceOS/ovos_assets/raw/master/Images/shell_settings.gif\)) Tj
T*
() Tj
T*
(Color Theme editor) Tj
T*
() Tj
T*
(![]\(https://github.com/OpenVoiceOS/ovos_assets/raw/master/Images/shell_theme.gif\)) Tj
T*
() Tj
T*
() Tj
T*
(### Shell Options) Tj
T*
(`~/.config/OpenvoiceOS/OvosShell.conf` can be edited to change shell options that) Tj
T*
(may also be changed via UI. An example config would look like:) Tj
T*
(```) Tj
T*
([General]) Tj
T*
(fakeBrightness=1) Tj
T*
(menuLabels=true) Tj
T*
(```) Tj
T*
() Tj
T*
(### Themes) Tj
T*
(Shell themes can be included in `/usr/share/OVOS/ColorSchemes/` or ) Tj
T*
(`~/.local/share/OVOS/ColorSchemes/` in json format. Note that colors should include) Tj
T*
(an alpha value \(usually `FF`\).) Tj
T*
() Tj
T*
(```json) Tj
T*
({) Tj
T*
(  "name": "Neon Green",) Tj
T*
(  "primaryColor": "#FF072103",) Tj
T*
(  "secondaryColor": "#FF2C7909",) Tj
T*
(  "textColor": "#FFF1F1F1") Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/710-qt5-gui.md ===) Tj
T*
() Tj
T*
(# Mycroft-GUI QT5) Tj
T*
() Tj
T*
(> **NOTE** - Currently only a [QT5 gui-client]\(https://github.com/OpenVoiceOS/mycroft-gui-qt5\) ) Tj
T*
(is available, help wanted to [migrate to QT6]\(https://github.com/OVOSHatchery/mycroft-gui-qt6\)!) Tj
T*
() Tj
T*
(## Introduction to QML) Tj
T*
() Tj
T*
(The reference GUI client implementation is based on the QML user interface markup language that) Tj
T*
( gives you complete freedom to create in-depth innovative interactions without boundaries or pr) Tj
T*
(ovide you with simple templates within the GUI framework that allow minimalistic display of tex) Tj
T*
(t and images based on your skill development specifics and preferences.) Tj
T*
() Tj
T*
(QML user interface markup language is a declarative language built on top of Qt's existing stre) Tj
T*
(ngths designed to describe the user interface of a program: both what it looks like, and how it) Tj
T*
( behaves. QML provides modules that consist of sophisticated set of graphical and behavioral bu) Tj
T*
(ilding elements.) Tj
T*
() Tj
T*
(### Before Getting Started) Tj
T*
() Tj
T*
(A collection of resources to familiarize you with QML and Kirigami Framework.) Tj
T*
() Tj
T*
ET
endstream
endobj
241 0 obj
<< /Length 3118 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(* [Introduction to QML ]\(http://doc.qt.io/qt-5/qml-tutorial.html\)) Tj
T*
(* [Introduction to Kirigami]\(https://www.kde.org/products/kirigami/\)) Tj
T*
() Tj
T*
(### Importing Modules) Tj
T*
() Tj
T*
(A QML module provides versioned types and JavaScript resources in a type namespace which may be) Tj
T*
( used by clients who import the module. Modules make use of the QML versioning system which all) Tj
T*
(ows modules to be independently updated. More in-depth information about QML modules can be fou) Tj
T*
(nd here [Qt QML Modules Documentation]\(http://doc.qt.io/qt-5/qtqml-modules-topic.html\)) Tj
T*
() Tj
T*
(In the code snippet example below we will look at importing some of the common modules that pro) Tj
T*
(vide the components required to get started with our Visual User Interface.) Tj
T*
() Tj
T*
(```) Tj
T*
(import QtQuick 2.4) Tj
T*
(import QtQuick.Controls 2.2) Tj
T*
(import QtQuick.Layouts 1.4) Tj
T*
(import org.kde.kirigami 2.4 as Kirigami) Tj
T*
(import Mycroft 1.0 as Mycroft) Tj
T*
(import org.kde.lottie 1.0) Tj
T*
(```) Tj
T*
() Tj
T*
(**QTQuick Module:**) Tj
T*
() Tj
T*
(Qt Quick module is the standard library for writing QML applications, the module provides a vis) Tj
T*
(ual canvas and includes types for creating and animating visual components, receiving user inpu) Tj
T*
(t, creating data models and views and delayed object instantiation. In-depth information about ) Tj
T*
(QtQuick can be found at [Qt Quick Documentation]\(https://doc.qt.io/qt-5.11/qtquick-index.html\)) Tj
T*
() Tj
T*
(**QTQuick.Controls Module:**) Tj
T*
() Tj
T*
(The QtQuick Controls module provides a set of controls that can be used to build complete inter) Tj
T*
(faces in Qt Quick. Some of the controls provided are button controls, container controls, deleg) Tj
T*
(ate controls, indicator controls, input controls, navigation controls and more, for a complete ) Tj
T*
(list of controls and components provided by QtQuick Controls you can refer to [QtQuick Controls) Tj
T*
( 2 Guidelines]\(https://doc.qt.io/qt-5.11/qtquickcontrols2-guidelines.html\)) Tj
T*
() Tj
T*
(**QtQuick.Layouts Module:**) Tj
T*
() Tj
T*
(QtQuick Layouts are a set of QML types used to arrange items in a user interface. Some of the l) Tj
T*
(ayouts provided by QtQuick Layouts are Column Layout, Grid Layout, Row Layout and more, for a c) Tj
T*
(omplete list of layouts you can refer to [QtQuick Layouts Documentation]\(http://doc.qt.io/qt-5/) Tj
T*
(qtquicklayouts-index.html\)) Tj
T*
() Tj
T*
(**Kirigami Module:**) Tj
T*
() Tj
T*
([Kirigami]\(https://api.kde.org/frameworks/kirigami/html/index.html\) is a set of QtQuick compone) Tj
T*
(nts for mobile and convergent applications. [Kirigami]\(https://api.kde.org/frameworks/kirigami/) Tj
T*
(html/index.html\) is a set of high level components to make the creation of applications that lo) Tj
T*
(ok and feel great on mobile as well as desktop devices and follow the [Kirigami Human Interface) Tj
T*
( Guidelines]\(https://community.kde.org/KDE\\_Visual\\_Design\\_Group/KirigamiHIG\)) Tj
T*
() Tj
T*
(**Mycroft Module:**) Tj
T*
() Tj
T*
ET
endstream
endobj
242 0 obj
<< /Length 2515 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(Mycroft GUI frameworks provides a set of high level components and events system for aiding in ) Tj
T*
(the development of Mycroft visual skills. One of the controls provided by Mycroft GUI framework) Tj
T*
(s are Mycroft-GUI Framework Base Delegates [Mycroft-GUI Framework Base Delegates Documentation]) Tj
T*
(\(mycroft-gui.md\)) Tj
T*
() Tj
T*
(**QML Lottie Module:**) Tj
T*
() Tj
T*
(This provides a QML `Item` to render Adobe After Effects? animations exported as JSON with Bod) Tj
T*
(ymovin using the Lottie Web library. For list of all properties supported refer [Lottie QML]\(ht) Tj
T*
(tps://github.com/kbroulik/lottie-qml\)) Tj
T*
() Tj
T*
(### Mycroft-GUI Framework Base Delegates) Tj
T*
() Tj
T*
(When you design your skill with QML, Mycroft-GUI frameworks provides you with some base delegat) Tj
T*
(es you should use when designing your GUI skill. The base delegates provide you with a basic pr) Tj
T*
(esentation layer for your skill with some property assignments that can help you setup backgrou) Tj
T*
(nd images, background dim, timeout and grace time properties to give you the control you need f) Tj
T*
(or rendering an experience. In your GUI Skill you can use:) Tj
T*
() Tj
T*
(**Mycroft.Delegate:** A basic and simple page based on Kirigami.Page) Tj
T*
() Tj
T*
(Simple display Image and Text Example using Mycroft.Delegate) Tj
T*
() Tj
T*
(```) Tj
T*
(import Mycroft 1.0 as Mycroft) Tj
T*
() Tj
T*
(Mycroft.Delegate {) Tj
T*
(    skillBackgroundSource: sessionData.exampleImage) Tj
T*
(    ColumnLayout {) Tj
T*
(        anchors.fill: parent) Tj
T*
(        Image {) Tj
T*
(            id: imageId) Tj
T*
(            Layout.fillWidth: true) Tj
T*
(            Layout.preferredHeight: Kirigami.Units.gridUnit * 2) Tj
T*
(            source: "https://source.unsplash.com/1920x1080/?+autumn") Tj
T*
(         }) Tj
T*
(         Label {) Tj
T*
(            id: labelId) Tj
T*
(            Layout.fillWidth: true) Tj
T*
(            Layout.preferredHeight: Kirigami.Units.gridUnit * 4) Tj
T*
(            text: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod temp) Tj
T*
(or incididunt ut labore et dolore magna aliqua."            ) Tj
T*
(        }) Tj
T*
(    }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(**Mycroft.ScrollableDelegate:** A delegate that displays skill visuals in a scroll enabled Kiri) Tj
T*
(gami Page.) Tj
T*
() Tj
T*
(Example of using Mycroft.ScrollableDelegate) Tj
T*
() Tj
T*
(```) Tj
T*
(import QtQuick 2.4) Tj
T*
ET
endstream
endobj
243 0 obj
<< /Length 2378 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(import QtQuick.Controls 2.2) Tj
T*
(import QtQuick.Layouts 1.4) Tj
T*
(import org.kde.kirigami 2.4 as Kirigami) Tj
T*
(import Mycroft 1.0 as Mycroft) Tj
T*
() Tj
T*
(Mycroft.ScrollableDelegate{) Tj
T*
(    id: root) Tj
T*
(    skillBackgroundSource: sessionData.background) Tj
T*
(    property var sampleModel: sessionData.sampleBlob) Tj
T*
() Tj
T*
(    Kirigami.CardsListView {) Tj
T*
(        id: exampleListView) Tj
T*
(        Layout.fillWidth: true) Tj
T*
(        Layout.fillHeight: true) Tj
T*
(        model: sampleModel.lorem) Tj
T*
(        delegate: Kirigami.AbstractCard {) Tj
T*
(            id: rootCard) Tj
T*
(            implicitHeight: delegateItem.implicitHeight + Kirigami.Units.largeSpacing) Tj
T*
(            contentItem: Item {) Tj
T*
(                implicitWidth: parent.implicitWidth) Tj
T*
(                implicitHeight: parent.implicitHeight) Tj
T*
(                ColumnLayout {) Tj
T*
(                    id: delegateItem) Tj
T*
(                    anchors.left: parent.left) Tj
T*
(                    anchors.right: parent.right) Tj
T*
(                    anchors.top: parent.top) Tj
T*
(                    spacing: Kirigami.Units.largeSpacing) Tj
T*
(                    Kirigami.Heading {) Tj
T*
(                        id: restaurantNameLabel) Tj
T*
(                        Layout.fillWidth: true) Tj
T*
(                        text: modelData.text) Tj
T*
(                        level: 2) Tj
T*
(                        wrapMode: Text.WordWrap) Tj
T*
(                    }) Tj
T*
(                    Kirigami.Separator {) Tj
T*
(                        Layout.fillWidth: true) Tj
T*
(                    }) Tj
T*
(                    Image {) Tj
T*
(                        id: placeImage) Tj
T*
(                        source: modelData.image) Tj
T*
(                        Layout.fillWidth: true) Tj
T*
(                        Layout.preferredHeight: Kirigami.Units.gridUnit * 3) Tj
T*
(                        fillMode: Image.PreserveAspectCrop) Tj
T*
(                    }) Tj
T*
(                    Item {) Tj
T*
(                        Layout.fillWidth: true) Tj
T*
(                        Layout.preferredHeight: Kirigami.Units.gridUnit * 1) Tj
T*
(                    }) Tj
T*
(                }) Tj
T*
(            }) Tj
T*
(        }) Tj
T*
(    }) Tj
T*
(}) Tj
T*
(```) Tj
T*
ET
endstream
endobj
244 0 obj
<< /Length 2698 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(## QML Design Guidelines) Tj
T*
() Tj
T*
(Before we dive deeper into the Design Guidelines, lets look at some concepts that a GUI develop) Tj
T*
(er should learn about:) Tj
T*
() Tj
T*
(### Units & Theming) Tj
T*
() Tj
T*
(#### Units: ) Tj
T*
(Mycroft.Units.GridUnit is the fundamental unit of space that should be used for all sizing insi) Tj
T*
(de the QML UI, expressed in pixels. Each GridUnit is predefined as 16 pixels) Tj
T*
(```) Tj
T*
(// Usage in QML Components example) Tj
T*
(width: Mycroft.Units.gridUnit * 2 // 32px Wide) Tj
T*
(height: Mycroft.Units.gridUnit // 16px Tall) Tj
T*
(```) Tj
T*
() Tj
T*
(#### Theming:) Tj
T*
() Tj
T*
(OVOS Shell uses a custom Kirigami Platform Theme plugin to provide global theming to all our sk) Tj
T*
(ills and user interfaces, which also allows our GUI's to be fully compatible with the system th) Tj
T*
(emes on platforms that are not running the OVOS Shell.) Tj
T*
() Tj
T*
(Kirigami Theme and Color Scheme guide is extensive and can be found [here]\(https://develop.kde.) Tj
T*
(org/docs/use/kirigami/style-colors/\)) Tj
T*
() Tj
T*
(OVOS GUI's developed to follow the color scheme depend on only a subset of available colors, ma) Tj
T*
(inly:) Tj
T*
() Tj
T*
(1. Kirigami.Theme.backgroundColor = Primary Color \(Background Color: This will always be a dark) Tj
T*
( palette or light palette depending on the dark or light chosen color scheme\)) Tj
T*
() Tj
T*
(2. Kirigami.Theme.highlightColor = Secondary Color \(Accent Color: This will always be a standou) Tj
T*
(t palette that defines the themes dominating color and can be used for buttons, cards, borders,) Tj
T*
( highlighted text etc.\)) Tj
T*
() Tj
T*
(3. Kirigami.Theme.textColor = Text Color \(This will always be an opposite palette to the select) Tj
T*
(ed primary color\)) Tj
T*
() Tj
T*
() Tj
T*
(### QML Delegate Design Best Practise) Tj
T*
() Tj
T*
(__Let's look at this image and qml example below, this is a representation of the Mycroft Deleg) Tj
T*
(ate:__) Tj
T*
(![]\(https://mycroft.blue-systems.com/display-1.png\)) Tj
T*
() Tj
T*
(1. When designing your first QML file, it is important to note the red triangles in the above i) Tj
T*
(mage, these triangles represent the margin from the screen edge the GUI needs to be designed wi) Tj
T*
(thin, these margins ensure your GUI content does not overlap with features like edge lighting a) Tj
T*
(nd menus in the platforms that support it like OVOS-Shell) Tj
T*
() Tj
T*
(2. The content items and components all utilize the selected color scheme, where black is the p) Tj
T*
(rimary background color, red is our accent color and white is our contrasting text color) Tj
T*
() Tj
T*
ET
endstream
endobj
245 0 obj
<< /Length 2440 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(__Let's look at this in QML:__) Tj
T*
(```) Tj
T*
(import ...) Tj
T*
(import Mycroft 1.0 as Mycroft) Tj
T*
() Tj
T*
(Mycroft.Delegate {) Tj
T*
(    skillBackgroundSource: sessionData.exampleImage) Tj
T*
(    leftPadding: 0) Tj
T*
(    rightPadding: 0) Tj
T*
(    topPadding: 0) Tj
T*
(    bottomPadding: 0) Tj
T*
() Tj
T*
(    Rectangle {) Tj
T*
(        anchors.fill: parent) Tj
T*
(        // Setting margins that need to be left for the screen edges) Tj
T*
(        anchors.margins: Mycroft.Units.gridUnit * 2) Tj
T*
() Tj
T*
(        //Setting a background dim using our primary theme / background color on top of our ski) Tj
T*
(llBackgroundSource image for better readability and contrast) Tj
T*
(        color: Qt.rgba\(Kirigami.Theme.backgroundColor.r, Kirigami.Theme.backgroundColor.g, Kiri) Tj
T*
(gami.Theme.backgroundColor.b, 0.3\)) Tj
T*
() Tj
T*
(        Kirigami.Heading {) Tj
T*
(            level: 2) Tj
T*
(            text: "An Example Pie Chart") Tj
T*
(            anchors.top: parent.top) Tj
T*
(            anchors.left: parent.left) Tj
T*
(            anchors.right: parent.right) Tj
T*
(            height: Mycroft.Units.gridUnit * 3) Tj
T*
(            // Setting the text color to always follow the color scheme for this item displayed) Tj
T*
( on the screen) Tj
T*
(            color: Kirigami.Theme.textColor) Tj
T*
(        }) Tj
T*
() Tj
T*
(        PieChart {) Tj
T*
(            anchors.centerIn: parent) Tj
T*
(            pieColorMinor: Kirigami.Theme.backgroundColor // As in the image above the minor ar) Tj
T*
(ea of the pie chart uses our primary color) Tj
T*
(            pieColorMid: Kirigami.Theme.highlightColor // As in the image above the middle area) Tj
T*
( is assigned the highlight or our accent color) Tj
T*
(            pieColorMajor: Kirigami.Theme.textColor // As in the image above the major area is ) Tj
T*
(assigned the text color) Tj
T*
(        }) Tj
T*
(    }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(### QML Delegate Multi Platform and Screen Guidelines) Tj
T*
() Tj
T*
(OVOS Skill GUIs are designed to be multi-platform and screen friendly, to support this we alway) Tj
T*
(s try to support both Horizontal and Vertical display's. Let's look at an example and a general) Tj
T*
( approach to writing multi resolution friendly UI's) Tj
T*
() Tj
T*
(__Let's look at these images below that represent a Delegate as seen in a Horizontal screen:__) Tj
T*
ET
endstream
endobj
246 0 obj
<< /Length 2749 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(![]\(https://mycroft.blue-systems.com/display-2.png\)) Tj
T*
() Tj
T*
(__Let's look at these images below that represent a Delegate as seen in a Vertical screen:__) Tj
T*
(![]\(https://mycroft.blue-systems.com/display-3.png\)) Tj
T*
() Tj
T*
(1. When designing for different screens it is preferred to utilize Grids, GridLayouts and GridV) Tj
T*
(iews this allows easier content placement as one can control the number of columns and rows dis) Tj
T*
(played on the screen) Tj
T*
(2. It is also recommended to use Flickables when you believe your content is going to not fit o) Tj
T*
(n the screen, this allows for content to always be scrollable. To make it easier to design scro) Tj
T*
(llable content, Mycroft GUI provides you with a ready to use Mycroft.ScrollableDelegate.) Tj
T*
(3. It is also preferred to use the width vs height comparison on the root delegate item to know) Tj
T*
( when the screen should be using a vertical layout vs horizontal layout) Tj
T*
() Tj
T*
(__Let's look at this in QML:__) Tj
T*
(```) Tj
T*
(import ...) Tj
T*
(import Mycroft 1.0 as Mycroft) Tj
T*
() Tj
T*
(Mycroft.Delegate {) Tj
T*
(    id: root) Tj
T*
(    skillBackgroundSource: sessionData.exampleImage) Tj
T*
(    leftPadding: 0) Tj
T*
(    rightPadding: 0) Tj
T*
(    topPadding: 0) Tj
T*
(    bottomPadding: 0) Tj
T*
(    property bool horizontalMode: width >= height  ? 1 : 0 // Using a ternary operator to detec) Tj
T*
(t if width of the delegate is greater than the height, which provides if the delegate is in hor) Tj
T*
(izontalMode) Tj
T*
() Tj
T*
(    Rectangle {) Tj
T*
(        anchors.fill: parent) Tj
T*
(        // Setting margins that need to be left for the screen edges) Tj
T*
(        anchors.margins: Mycroft.Units.gridUnit * 2) Tj
T*
() Tj
T*
(        //Setting a background dim using our primary theme / background color on top of our ski) Tj
T*
(llBackgroundSource image for better readability and contrast) Tj
T*
(        color: Qt.rgba\(Kirigami.Theme.backgroundColor.r, Kirigami.Theme.backgroundColor.g, Kiri) Tj
T*
(gami.Theme.backgroundColor.b, 0.3\)) Tj
T*
() Tj
T*
(        Kirigami.Heading {) Tj
T*
(            level: 2) Tj
T*
(            text: "An Example Pie Chart") Tj
T*
(            // Setting the text color to always follow the color scheme) Tj
T*
(            color: Kirigami.Theme.textColor) Tj
T*
(        }) Tj
T*
() Tj
T*
(        GridLayout {) Tj
T*
(            id: examplesGridView) Tj
T*
(            // Checking if we are in horizontal mode, we should display two columns to display ) Tj
T*
(the items in the image above, or if we are in vertical mode, we should display a single column ) Tj
T*
(only) Tj
T*
(            columns: root.horizontalMode ? 2 : 1 ) Tj
T*
() Tj
T*
ET
endstream
endobj
247 0 obj
<< /Length 1616 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(            Repeater {) Tj
T*
(                model: examplesModel) Tj
T*
(                delegates: ExamplesDelegate {) Tj
T*
(                    ...) Tj
T*
(                }) Tj
T*
(            }) Tj
T*
(        }) Tj
T*
(    }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
(## Advanced skill displays using QML) Tj
T*
() Tj
T*
(**Display Lottie Animations**:) Tj
T*
() Tj
T*
(You can use the `LottieAnimation` item just like any other `QtQuick` element, such as an `Image) Tj
T*
(` and place it in your scene any way you please.) Tj
T*
() Tj
T*
(**QML Example**) Tj
T*
() Tj
T*
(```) Tj
T*
(import QtQuick 2.4) Tj
T*
(import QtQuick.Controls 2.2) Tj
T*
(import QtQuick.Layouts 1.4) Tj
T*
(import org.kde.kirigami 2.4 as Kirigami) Tj
T*
(import Mycroft 1.0 as Mycroft) Tj
T*
(import org.kde.lottie 1.0) Tj
T*
() Tj
T*
(Mycroft.Delegate {) Tj
T*
(    LottieAnimation {     ) Tj
T*
(        id: fancyAnimation ) Tj
T*
(        anchors.fill: parent) Tj
T*
(        source: Qt.resolvedUrl\("animations/fancy_animation.json"\)) Tj
T*
(        loops: Animation.Infinite) Tj
T*
(        fillMode: Image.PreserveAspectFit    ) Tj
T*
(        running: true) Tj
T*
(    }    ) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(**Display Sliding Images**) Tj
T*
() Tj
T*
(Contains an image that will slowly scroll in order to be shown completely) Tj
T*
() Tj
T*
(**QML Example**) Tj
T*
() Tj
T*
(```) Tj
T*
(import QtQuick 2.4) Tj
T*
(import QtQuick.Controls 2.2) Tj
T*
(import QtQuick.Layouts 1.4) Tj
T*
(import org.kde.kirigami 2.4 as Kirigami) Tj
T*
(import Mycroft 1.0 as Mycroft) Tj
T*
() Tj
T*
ET
endstream
endobj
248 0 obj
<< /Length 1744 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(Mycroft.Delegate {) Tj
T*
(     background: Mycroft.SlidingImage {) Tj
T*
(     source: "foo.jpg" ) Tj
T*
(     running: bool    //If true the sliding animation is active) Tj
T*
(     speed: 1         //Animation speed in Kirigami.Units.gridUnit / second) Tj
T*
(   }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(**Display Paginated Text**) Tj
T*
() Tj
T*
(Takes a long text and breaks it down into pages that can be horizontally swiped) Tj
T*
() Tj
T*
(**QML Example**) Tj
T*
() Tj
T*
(```) Tj
T*
(import QtQuick 2.4) Tj
T*
(import QtQuick.Controls 2.2) Tj
T*
(import QtQuick.Layouts 1.4) Tj
T*
(import org.kde.kirigami 2.4 as Kirigami) Tj
T*
(import Mycroft 1.0 as Mycroft) Tj
T*
() Tj
T*
(Mycroft.Delegate {) Tj
T*
(     Mycroft.PaginatedText {) Tj
T*
(         text: string      //The text that should be displayed) Tj
T*
(         currentIndex: 0   //The currently visible page number \(starting from 0\)) Tj
T*
(     }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(**Display A Vertical ListView With Information Cards**) Tj
T*
() Tj
T*
(Kirigami CardsListView is a ListView which can have AbstractCard as its delegate: it will autom) Tj
T*
(atically assign the proper spacing and margins around the cards adhering to the design guidelin) Tj
T*
(es.) Tj
T*
() Tj
T*
(**Python Skill Example**) Tj
T*
() Tj
T*
(```python) Tj
T*
(...) Tj
T*
(def handle_food_places\(self, message\):) Tj
T*
(...) Tj
T*
(self.gui["foodPlacesBlob"] = results.json) Tj
T*
(self.gui.show_page\("foodplaces.qml"\)) Tj
T*
(...) Tj
T*
(```) Tj
T*
() Tj
T*
(**QML Example**) Tj
T*
() Tj
T*
(```) Tj
T*
(import QtQuick 2.4) Tj
T*
(import QtQuick.Controls 2.2) Tj
T*
(import QtQuick.Layouts 1.4) Tj
T*
(import org.kde.kirigami 2.4 as Kirigami) Tj
T*
ET
endstream
endobj
249 0 obj
<< /Length 2720 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(import Mycroft 1.0 as Mycroft) Tj
T*
() Tj
T*
(Mycroft.Delegate{) Tj
T*
(    id: root) Tj
T*
(    property var foodPlacesModel: sessionData.foodPlacesBlob) Tj
T*
() Tj
T*
(    Kirigami.CardsListView {) Tj
T*
(        id: restaurantsListView) Tj
T*
(        Layout.fillWidth: true) Tj
T*
(        Layout.fillHeight: true) Tj
T*
(        model: foodPlacesModel) Tj
T*
(        delegate: Kirigami.AbstractCard {) Tj
T*
(            id: rootCard) Tj
T*
(            implicitHeight: delegateItem.implicitHeight + Kirigami.Units.largeSpacing) Tj
T*
(            contentItem: Item {) Tj
T*
(                implicitWidth: parent.implicitWidth) Tj
T*
(                implicitHeight: parent.implicitHeight) Tj
T*
(                ColumnLayout {) Tj
T*
(                    id: delegateItem) Tj
T*
(                    anchors.left: parent.left) Tj
T*
(                    anchors.right: parent.right) Tj
T*
(                    anchors.top: parent.top) Tj
T*
(                    spacing: Kirigami.Units.smallSpacing) Tj
T*
(                    Kirigami.Heading {) Tj
T*
(                        id: restaurantNameLabel) Tj
T*
(                        Layout.fillWidth: true) Tj
T*
(                        text: modelData.name) Tj
T*
(                        level: 3) Tj
T*
(                        wrapMode: Text.WordWrap) Tj
T*
(                    }) Tj
T*
(                    Kirigami.Separator {) Tj
T*
(                        Layout.fillWidth: true) Tj
T*
(                    }) Tj
T*
(                    RowLayout {) Tj
T*
(                        Layout.fillWidth: true) Tj
T*
(                        Layout.preferredHeight: form.implicitHeight) Tj
T*
(                        Image {) Tj
T*
(                            id: placeImage) Tj
T*
(                            source: modelData.image) Tj
T*
(                            Layout.fillHeight: true) Tj
T*
(                            Layout.preferredWidth: placeImage.implicitHeight + Kirigami.Units.g) Tj
T*
(ridUnit * 2) Tj
T*
(                            fillMode: Image.PreserveAspectFit) Tj
T*
(                        }) Tj
T*
(                        Kirigami.Separator {) Tj
T*
(                            Layout.fillHeight: true) Tj
T*
(                        }) Tj
T*
(                        Kirigami.FormLayout {) Tj
T*
(                            id: form) Tj
T*
(                            Layout.fillWidth: true) Tj
T*
(                            Layout.minimumWidth: aCard.implicitWidth) Tj
T*
(                            Layout.alignment: Qt.AlignLeft | Qt.AlignBottom) Tj
T*
(                            Label {) Tj
T*
(                                Kirigami.FormData.label: "Description:") Tj
T*
ET
endstream
endobj
250 0 obj
<< /Length 2193 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(                                Layout.fillWidth: true) Tj
T*
(                                wrapMode: Text.WordWrap) Tj
T*
(                                elide: Text.ElideRight) Tj
T*
(                                text: modelData.restaurantDescription) Tj
T*
(                            }) Tj
T*
(                            Label {) Tj
T*
(                                Kirigami.FormData.label: "Phone:") Tj
T*
(                                Layout.fillWidth: true) Tj
T*
(                                wrapMode: Text.WordWrap) Tj
T*
(                                elide: Text.ElideRight) Tj
T*
(                                text: modelData.phone) Tj
T*
(                            }) Tj
T*
(                        }) Tj
T*
(                    }) Tj
T*
(                }) Tj
T*
(            }) Tj
T*
(        }) Tj
T*
(    }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(**Using Proportional Delegate For Simple Display Skills & Auto Layout**) Tj
T*
() Tj
T*
(**ProportionalDelegate** is a delegate which has proportional padding and a columnlayout as mai) Tj
T*
(nItem. The delegate supports a proportionalGridUnit which is based upon its size and the conten) Tj
T*
(ts are supposed to be scaled proportionally to the delegate size either directly or using the p) Tj
T*
(roportionalGridUnit.) Tj
T*
() Tj
T*
(**AutoFitLabel** is a label that will always scale its text size according to the item size rat) Tj
T*
(her than the other way around) Tj
T*
() Tj
T*
(**QML Example**) Tj
T*
() Tj
T*
(```) Tj
T*
(import QtQuick 2.4) Tj
T*
(import QtQuick.Controls 2.2) Tj
T*
(import QtQuick.Layouts 1.4) Tj
T*
(import org.kde.kirigami 2.4 as Kirigami) Tj
T*
(import Mycroft 1.0 as Mycroft) Tj
T*
() Tj
T*
(Mycroft.ProportionalDelegate {) Tj
T*
(    id: root) Tj
T*
() Tj
T*
(    Mycroft.AutoFitLabel {) Tj
T*
(        id: monthLabel) Tj
T*
(        font.weight: Font.Bold) Tj
T*
(        Layout.fillWidth: true) Tj
T*
(        Layout.preferredHeight: proportionalGridUnit * 40) Tj
T*
(        text: sessionData.month) Tj
T*
(    }) Tj
T*
() Tj
T*
(    Mycroft.AutoFitLabel {) Tj
T*
(        id: dayLabel) Tj
T*
(        font.weight: Font.Bold) Tj
T*
ET
endstream
endobj
251 0 obj
<< /Length 2220 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(        Layout.fillWidth: true) Tj
T*
(        Layout.preferredHeight: proportionalGridUnit * 40) Tj
T*
(        text: sessionData.day) Tj
T*
(    }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(**Using Slideshow Component To Show Cards Slideshow**) Tj
T*
() Tj
T*
(Slideshow component lets you insert a slideshow with your custom delegate in any skill display ) Tj
T*
(which can be tuned to autoplay and loop and also scrolled or flicked manually by the user.) Tj
T*
() Tj
T*
(**QML Example**) Tj
T*
() Tj
T*
(```) Tj
T*
(import QtQuick 2.4) Tj
T*
(import QtQuick.Controls 2.2) Tj
T*
(import QtQuick.Layouts 1.4) Tj
T*
(import org.kde.kirigami 2.4 as Kirigami) Tj
T*
(import Mycroft 1.0 as Mycroft) Tj
T*
() Tj
T*
(Mycroft.Delegate {) Tj
T*
(    id: root) Tj
T*
() Tj
T*
(    Mycroft.SlideShow {) Tj
T*
(        id: simpleSlideShow ) Tj
T*
(        model: sessionData.exampleModel // model with slideshow data) Tj
T*
(        anchors.fill: parent) Tj
T*
(        interval: 5000 // time to switch between slides ) Tj
T*
(        running: true // can be set to false if one wants to swipe manually) Tj
T*
(        loop: true // can be set to play through continously or just once) Tj
T*
(        delegate: Kirigami.AbstractCard { ) Tj
T*
(            width: rootItem.width) Tj
T*
(            height: rootItem.height) Tj
T*
(            contentItem: ColumnLayout {) Tj
T*
(                anchors.fill: parent) Tj
T*
(                Kirigami.Heading {) Tj
T*
(                    Layout.fillWidth: true) Tj
T*
(                    wrapMode: Text.WordWrap) Tj
T*
(                    level: 3) Tj
T*
(                    text: modelData.Title) Tj
T*
(                }) Tj
T*
(                Kirigami.Separator {) Tj
T*
(                        Layout.fillWidth: true) Tj
T*
(                        Layout.preferredHeight: 1) Tj
T*
(                }) Tj
T*
(                Image {) Tj
T*
(                    Layout.fillWidth: true) Tj
T*
(                    Layout.preferredHeight: rootItem.height / 4) Tj
T*
(                    source: modelData.Image) Tj
T*
(                    fillMode: Image.PreserveAspectCrop) Tj
T*
(                }) Tj
T*
(            }) Tj
T*
(        }) Tj
T*
ET
endstream
endobj
252 0 obj
<< /Length 1663 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(    }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(#### Event Handling) Tj
T*
() Tj
T*
(Mycroft GUI API provides an Event Handling Protocol between the skill and QML display which all) Tj
T*
(ow Skill Authors to forward events in either direction to an event consumer. Skill Authors have) Tj
T*
( the ability to create any amount of custom events. Event names that start with "system." are a) Tj
T*
(vailable to all skills, like previous/next/pick.) Tj
T*
() Tj
T*
(**Simple Event Trigger Example From QML Display To Skill**) Tj
T*
() Tj
T*
(**Python Skill Example**) Tj
T*
() Tj
T*
(```python) Tj
T*
(    def initialize\(self\):) Tj
T*
(    # Initialize...) Tj
T*
(        self.gui.register_handler\('skill.foo.event', self.handle_foo_event\)) Tj
T*
(...) Tj
T*
(    def handle_foo_event\(self, message\):) Tj
T*
(        self.speak\(message.data["string"]\)) Tj
T*
(...) Tj
T*
(...) Tj
T*
(```) Tj
T*
() Tj
T*
(**QML Example**) Tj
T*
() Tj
T*
(```) Tj
T*
(import QtQuick 2.4) Tj
T*
(import QtQuick.Controls 2.2) Tj
T*
(import QtQuick.Layouts 1.4) Tj
T*
(import org.kde.kirigami 2.4 as Kirigami) Tj
T*
(import Mycroft 1.0 as Mycroft) Tj
T*
() Tj
T*
(Mycroft.Delegate {) Tj
T*
(    id: root) Tj
T*
() Tj
T*
(    Button {) Tj
T*
(        anchors.fill: parent) Tj
T*
(        text: "Click Me") Tj
T*
(        onClicked: {) Tj
T*
(            triggerGuiEvent\("skill.foo.event", {"string": "Lorem ipsum dolor sit amet"}\)) Tj
T*
(        }) Tj
T*
(    }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(**Simple Event Trigger Example From Skill To QML Display**) Tj
T*
() Tj
T*
(**Python Skill Example**) Tj
T*
() Tj
T*
(```python) Tj
T*
(...) Tj
T*
ET
endstream
endobj
253 0 obj
<< /Length 1664 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(    def handle_foo_intent\(self, message\):) Tj
T*
(        self.gui['foobar'] = message.data.get\("utterance"\)) Tj
T*
(        self.gui['color'] = "blue") Tj
T*
(        self.gui.show_page\("foo"\)) Tj
T*
(...) Tj
T*
(...) Tj
T*
(```) Tj
T*
() Tj
T*
(**QML Example**) Tj
T*
() Tj
T*
(```) Tj
T*
(import QtQuick 2.4) Tj
T*
(import QtQuick.Controls 2.2) Tj
T*
(import QtQuick.Layouts 1.4) Tj
T*
(import org.kde.kirigami 2.4 as Kirigami) Tj
T*
(import Mycroft 1.0 as Mycroft) Tj
T*
() Tj
T*
(Mycroft.Delegate {) Tj
T*
(    id: root) Tj
T*
(    property var fooString: sessionData.foobar) Tj
T*
() Tj
T*
(    onFooStringChanged: {) Tj
T*
(        fooRect.color = sessionData.color ) Tj
T*
(    }) Tj
T*
() Tj
T*
(    Rectangle {) Tj
T*
(        id: fooRect) Tj
T*
(        anchors.fill: parent) Tj
T*
(        color: "#fff") Tj
T*
(    }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
(#### Resting Faces) Tj
T*
() Tj
T*
(The resting face API provides skill authors the ability to extend their skills to supply their ) Tj
T*
(own customized IDLE screens that will be displayed when there is no activity on the screen.) Tj
T*
() Tj
T*
(**Simple Idle Screen Example**) Tj
T*
() Tj
T*
(**Python Skill Example**) Tj
T*
() Tj
T*
(```) Tj
T*
(from ovos_workshop.decorators import resting_screen_handler) Tj
T*
(...) Tj
T*
(@resting_screen_handler\('NameOfIdleScreen'\)) Tj
T*
(def handle_idle\(self, message\):) Tj
T*
(    self.gui.clear\(\)) Tj
T*
(    self.log.info\('Activating foo/bar resting page'\)) Tj
T*
(    self.gui["exampleText"] = "This Is A Idle Screen") Tj
T*
(    self.gui.show_page\('idle.qml'\)) Tj
T*
(```) Tj
T*
() Tj
T*
ET
endstream
endobj
254 0 obj
<< /Length 1810 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(**QML Example**) Tj
T*
() Tj
T*
(```) Tj
T*
(import QtQuick 2.4) Tj
T*
(import QtQuick.Controls 2.2) Tj
T*
(import QtQuick.Layouts 1.4) Tj
T*
(import org.kde.kirigami 2.4 as Kirigami) Tj
T*
(import Mycroft 1.0 as Mycroft) Tj
T*
() Tj
T*
(Mycroft.Delegate {) Tj
T*
(    id: root) Tj
T*
(    property var fooString: sessionData.exampleText) Tj
T*
() Tj
T*
(    Kirigami.Heading {) Tj
T*
(        id: headerExample) Tj
T*
(        anchors.centerIn: parent) Tj
T*
(        text: fooString ) Tj
T*
(    }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
(=== docs/711-qt_voice_apps.md ===) Tj
T*
() Tj
T*
(# QT Applications) Tj
T*
() Tj
T*
(> **NOTE**: Only QT5 is supported, help wanted to migrate to QT6! ) Tj
T*
() Tj
T*
(You can build full standalone QT Voice Applications using [QML]\(https://openvoiceos.github.io/o) Tj
T*
(vos-technical-manual/qt5/\) with `ovos-gui` either via skills or [OVOSAbstractApp]\(\)) Tj
T*
() Tj
T*
(## Desktop Files) Tj
T*
() Tj
T*
(GUI clients are allowed to filter a `namespace`, providing a GUI skill in it's own dedicated wi) Tj
T*
(ndow. ) Tj
T*
() Tj
T*
(This is what powers [Plasma Bigscreen Voice Apps]\(https://plasma-bigscreen.org/docs/develop/\) v) Tj
T*
(ia .desktop files) Tj
T*
() Tj
T*
(Desktop files are also parsed to populate the skills in the [homescreen]\(https://github.com/Ope) Tj
T*
(nVoiceOS/skill-ovos-homescreen\) app drawer) Tj
T*
() Tj
T*
(![]\(https://github.com/OpenVoiceOS/ovos_assets/raw/master/Images/homescreen-app-drawer.png\)) Tj
T*
() Tj
T*
(> **NOTE**: be sure to have [mycroft-gui-qt5]\(https://github.com/OpenVoiceOS/mycroft-gui-qt5\) i) Tj
T*
(nstalled) Tj
T*
() Tj
T*
(```) Tj
T*
([Desktop Entry]) Tj
T*
(X-DBUS-StartupType=None) Tj
T*
(X-KDE-StartupNotify=false) Tj
T*
(Version=1.0) Tj
T*
ET
endstream
endobj
255 0 obj
<< /Length 2241 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(Terminal=false) Tj
T*
(Type=Application) Tj
T*
(Name=OCP) Tj
T*
(Exec=ovos-gui-app --hideTextInput --skill=ovos.common_play) Tj
T*
(Icon=OCP) Tj
T*
(Categories=VoiceApp) Tj
T*
(StartupNotify=false) Tj
T*
(```) Tj
T*
() Tj
T*
(> Learn more about the [Desktop Entry Specification]\(https://specifications.freedesktop.org/des) Tj
T*
(ktop-entry-spec/desktop-entry-spec-latest.html\)) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/720-skill_gui.md ===) Tj
T*
() Tj
T*
(# GUIInterface) Tj
T*
() Tj
T*
(Any component wanting to implement a GUI for OpenVoiceOS can do so via the `GUIInterface` class) Tj
T*
(from [ovos-bus-client]\(https://github.com/OpenVoiceOS/ovos-bus-client/blob/dev/ovos_bus_client/) Tj
T*
(apis/gui.py\)) Tj
T*
() Tj
T*
(Sending custom pages from skills requires skill to explicitly support a client platform) Tj
T*
() Tj
T*
(```python) Tj
T*
(class GUIInterface:) Tj
T*
(    """) Tj
T*
(    Interface to the Graphical User Interface, allows interaction with) Tj
T*
(    the mycroft-gui from anywhere) Tj
T*
() Tj
T*
(    Values set in this class are synced to the GUI, accessible within QML) Tj
T*
(    via the built-in sessionData mechanism.  For example, in Python you can) Tj
T*
(    write in a skill:) Tj
T*
(        self.gui['temp'] = 33) Tj
T*
(        self.gui.show_page\('Weather'\)) Tj
T*
() Tj
T*
(    Then in the Weather.qml you'd access the temp via code such as:) Tj
T*
(        text: sessionData.time) Tj
T*
(    """) Tj
T*
(```) Tj
T*
() Tj
T*
(in OVOS Skills `self.gui` provides a `GUIInterface`  under `self.skill_id` namespace) Tj
T*
() Tj
T*
(## Page Templates) Tj
T*
() Tj
T*
(To have a unified look and feel, and to allow simple UIs to be integrated into skills without U) Tj
T*
(I framework knowledge, the GUIInterface provides page templates) Tj
T*
() Tj
T*
(A page template is a ui file, like QML or html, that is used by gui clients to render the info ) Tj
T*
(provided by `ovos-gui`.) Tj
T*
() Tj
T*
(Skills may provide their own pages, for example for [QT Voice Apps]\(https://openvoiceos.github.) Tj
T*
(io/ovos-technical-manual/qt_apps/\), but is their responsibility to explicitly support individua) Tj
T*
(l gui client apps if not using a provided template) Tj
T*
() Tj
T*
ET
endstream
endobj
256 0 obj
<< /Length 2059 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(#### Text) Tj
T*
() Tj
T*
(Display simple strings of text.) Tj
T*
() Tj
T*
(```python) Tj
T*
(self.gui.show_text\(self, text, title=None, override_idle=None, override_animations=False\)) Tj
T*
(```) Tj
T*
() Tj
T*
(Arguments:) Tj
T*
() Tj
T*
(* text \\\(str\\\): Main text content.  It will auto-paginate) Tj
T*
(* title \\\(str\\\): A title to display above the text content.) Tj
T*
(* override\\_idle \\\(boolean, int\\\):) Tj
T*
(  * True: Takes over the resting page indefinitely) Tj
T*
(  * \\\(int\\\): Delays resting page for the specified number of seconds.) Tj
T*
(* override\\_animations \\\(boolean\\\):) Tj
T*
(  * True: Disables showing all platform skill animations.) Tj
T*
(  * False: 'Default' always show animations.) Tj
T*
() Tj
T*
(#### Static Image) Tj
T*
() Tj
T*
(Display a static image such as a jpeg or png.) Tj
T*
() Tj
T*
(```python) Tj
T*
(self.gui.show_image\(self, url, caption=None, title=None, fill=None, override_idle=None, overrid) Tj
T*
(e_animations=False\)) Tj
T*
(```) Tj
T*
() Tj
T*
(Arguments:) Tj
T*
() Tj
T*
(* url \\\(str\\\): Pointer to the image) Tj
T*
(* caption \\\(str\\\): A caption to show under the image) Tj
T*
(* title \\\(str\\\): A title to display above the image content) Tj
T*
(* fill \\\(str\\\): Fill type - supports: ) Tj
T*
(  * 'PreserveAspectFit',) Tj
T*
(  * 'PreserveAspectCrop', ) Tj
T*
(  * 'Stretch') Tj
T*
(* override\\_idle \\\(boolean, int\\\):) Tj
T*
(  * True: Takes over the resting page indefinitely) Tj
T*
(  * \\\(int\\\): Delays resting page for the specified number of seconds.) Tj
T*
(* override\\_animations \\\(boolean\\\):) Tj
T*
(  * True: Disables showing all platform skill animations.) Tj
T*
(  * False: 'Default' always show animations.) Tj
T*
() Tj
T*
(#### Animated Image) Tj
T*
() Tj
T*
(Display an animated image such as a gif.) Tj
T*
() Tj
T*
(```python) Tj
T*
(self.gui.show_animated_image\(self, url, caption=None, title=None, fill=None, override_idle=None) Tj
T*
(, override_animations=False\)) Tj
T*
(```) Tj
T*
() Tj
T*
ET
endstream
endobj
257 0 obj
<< /Length 2123 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(Arguments:) Tj
T*
() Tj
T*
(* url \\\(str\\\): Pointer to the .gif image) Tj
T*
(* caption \\\(str\\\): A caption to show under the image) Tj
T*
(* title \\\(str\\\): A title to display above the image content) Tj
T*
(* fill \\\(str\\\): Fill type - supports: ) Tj
T*
(  * 'PreserveAspectFit',) Tj
T*
(  * 'PreserveAspectCrop', ) Tj
T*
(  * 'Stretch') Tj
T*
(* override\\_idle \\\(boolean, int\\\):) Tj
T*
(  * True: Takes over the resting page indefinitely) Tj
T*
(  * \\\(int\\\): Delays resting page for the specified number of seconds.) Tj
T*
(* override\\_animations \\\(boolean\\\):) Tj
T*
(  * True: Disables showing all platform skill animations.) Tj
T*
(  * False: 'Default' always show animations.) Tj
T*
() Tj
T*
(#### HTML Page) Tj
T*
() Tj
T*
(Display a local HTML page.) Tj
T*
() Tj
T*
(```python) Tj
T*
(self.gui.show_html\(self, html, resource_url=None, override_idle=None, override_animations=False) Tj
T*
(\)) Tj
T*
(```) Tj
T*
() Tj
T*
(Arguments:) Tj
T*
() Tj
T*
(* html \\\(str\\\): HTML text to display) Tj
T*
(* resource\\_url \\\(str\\\): Pointer to HTML resources) Tj
T*
(* override\\_idle \\\(boolean, int\\\):) Tj
T*
(  * True: Takes over the resting page indefinitely) Tj
T*
(  * \\\(int\\\): Delays resting page for the specified number of seconds.) Tj
T*
(* override\\_animations \\\(boolean\\\):) Tj
T*
(  * True: Disables showing all platform skill animations.) Tj
T*
(  * False: 'Default' always show animations.) Tj
T*
() Tj
T*
(#### Remote URL) Tj
T*
() Tj
T*
(Display a webpage.) Tj
T*
() Tj
T*
(```python) Tj
T*
(self.gui.show_url\(self, url, override_idle=None, override_animations=False\)) Tj
T*
(```) Tj
T*
() Tj
T*
(Arguments:) Tj
T*
() Tj
T*
(* url \\\(str\\\): URL to render) Tj
T*
(* override\\_idle \\\(boolean, int\\\):) Tj
T*
(  * True: Takes over the resting page indefinitely) Tj
T*
(  * \\\(int\\\): Delays resting page for the specified number of seconds.) Tj
T*
(* override\\_animations \\\(boolean\\\):) Tj
T*
(  * True: Disables showing all platform skill animations.) Tj
T*
(  * False: 'Default' always show animations.) Tj
T*
() Tj
T*
ET
endstream
endobj
258 0 obj
<< /Length 2168 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
() Tj
T*
(=== docs/800-mk1_api.md ===) Tj
T*
() Tj
T*
(# Enclosure Api) Tj
T*
() Tj
T*
(The EnclosureApi is an abstraction over an hypothetical "body" housing OVOS) Tj
T*
() Tj
T*
(eg, The Mark 1 **Device** is housed in an **Enclosure**. The Enclosure is the shell that houses) Tj
T*
( a **Device** that runs OVOS.) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_bus_client.apis.enclosure import EnclosureApi) Tj
T*
() Tj
T*
(api = EnclosureApi\(bus\)) Tj
T*
(```) Tj
T*
(## The Mark 1 Enclosure capabilities) Tj
T*
() Tj
T*
(The Mark 1 _mouth_ and _eyes_ can be controlled by **Skills** using the `self.enclosure` object) Tj
T*
( inherited from the `OVOSSkill` base class. ) Tj
T*
(This object acts as an interface to the **Enclosure** and allows the Skill creator to draw to t) Tj
T*
(he _mouth_ display.) Tj
T*
() Tj
T*
(This is how the _mouth_ and _eyes_ are made to change during operations such as audio playback.) Tj
T*
() Tj
T*
(Dedicated utils for fine grained control over the mark 1 can be found at [ovos-mark1-utils]\(htt) Tj
T*
(ps://github.com/OpenVoiceOS/ovos-mark1-utils\)) Tj
T*
() Tj
T*
(## Drawing to the _mouth_ display) Tj
T*
() Tj
T*
(### Drawing text to the _mouth_ display) Tj
T*
() Tj
T*
(Text can be sent to the display using the `mouth_text\(\)` method of the `enclosure` object.) Tj
T*
() Tj
T*
(```python) Tj
T*
(self.enclosure.mouth_text\('The meaning of life, the universe and everything is 42'\)) Tj
T*
(```) Tj
T*
() Tj
T*
(If the text is too long to fit on the display, the text will scroll.) Tj
T*
() Tj
T*
(@TODO how many characters will fit on the display before it will scroll?) Tj
T*
() Tj
T*
(### Drawing images to the _mouth_ display) Tj
T*
() Tj
T*
(**Clearing an existing image from the mouth display**) Tj
T*
() Tj
T*
(Before writing an image to the _mouth_ display, you should clear any previous image.) Tj
T*
() Tj
T*
(```python) Tj
T*
(self.enclosure.mouth_display\(img_code="HIAAAAAAAAAAAAAA", refresh=False\)) Tj
T*
(self.enclosure.mouth_display\(img_code="HIAAAAAAAAAAAAAA", x=24, refresh=False\)) Tj
T*
(```) Tj
T*
() Tj
T*
(### How images are drawn on the _mouth_ display) Tj
T*
ET
endstream
endobj
259 0 obj
<< /Length 2365 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(The _mouth_ display is a grid, 32 pixels wide and 8 pixels high.) Tj
T*
() Tj
T*
(There are two ways to draw an image on the _mouth_ display.) Tj
T*
() Tj
T*
(**Addressing each pixel using a string encoding**) Tj
T*
() Tj
T*
(You can draw an image to the _mouth_ display by binary encoding pixel information in a string.) Tj
T*
() Tj
T*
(The binary encoding is straightforward value substitution.) Tj
T*
() Tj
T*
(| Letter Value | Pixel value |) Tj
T*
(| :--- | :--- |) Tj
T*
(| A | 0 |) Tj
T*
(| B | 1 |) Tj
T*
(| C | 2 |) Tj
T*
(| D | 3 |) Tj
T*
(| E | 4 |) Tj
T*
(| F | 5 |) Tj
T*
(| G | 6 |) Tj
T*
(| H | 7 |) Tj
T*
(| I | 8 |) Tj
T*
() Tj
T*
(and so on.) Tj
T*
() Tj
T*
(```python) Tj
T*
(self.enclosure.mouth_display\(img_code="HIAAAAAAAAAAAAAA", refresh=False\)) Tj
T*
(self.enclosure.mouth_display\(img_code="HIAAAAAAAAAAAAAA", x=24, refresh=False\)) Tj
T*
(```) Tj
T*
() Tj
T*
(The code above clears the image by sending a string consisting of `HI` which stands for a Width) Tj
T*
( of 7 and a height of 8 and each A stands for a segment of 4 pixels in the off state.) Tj
T*
() Tj
T*
(@TODO we really need a grid image here to show how it works - to make it easier to understand.) Tj
T*
() Tj
T*
(**Sending a PNG image to the mouth display**) Tj
T*
() Tj
T*
(Another way to draw an image on the _mouth_ display is to create a PNG-formatted image with a w) Tj
T*
(idth of 32 pixels and a height of 8 pixels, then use the `mouth_display_png\(\)` method of the `e) Tj
T*
(nclosure` object.) Tj
T*
() Tj
T*
(The image should be black and white, with white meaning a dark pixel, and black indicating an i) Tj
T*
(lluminated pixel.) Tj
T*
() Tj
T*
(`mouth_display_png\(\)` expects the first argument to be the image absolute path. Optional argume) Tj
T*
(nts are) Tj
T*
() Tj
T*
(* `threshold`: The value at which a pixel should be considered 'dark' or 'illuminated') Tj
T*
(* `invert`: Treat white in the image as illuminated pixels, and black as dark pixels) Tj
T*
(* `x`: The x position \\\(horizontal\\\) at which the image should be displaye, in pixels) Tj
T*
(* `y`: The y position \\\(vertical\\\) at which the image should be displayed, in pixels) Tj
T*
(* `refresh`: clear the display before writing to it) Tj
T*
() Tj
T*
(@TODO all the above needs to be validated - the information is educated guesswork) Tj
T*
ET
endstream
endobj
260 0 obj
<< /Length 1886 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(```python) Tj
T*
(self.mouth_display_png\('/path/to/image.png', threshold=70, invert=False, x=0, y=0, refresh=True) Tj
T*
(\)) Tj
T*
(```) Tj
T*
() Tj
T*
(Example image: ![A note symbol]\(https://akeiexil.files.wordpress.com/2017/08/note1.png\)) Tj
T*
() Tj
T*
(**Tools for converting PNG image representations to string representations**) Tj
T*
() Tj
T*
(If you don't want to convert PNG files at runtime \\\(for example when creating simple animations) Tj
T*
(\\\) [this short python script]\(https://gist.github.com/forslund/9d8805fd7adb9e74ec3ea321e1676a21) Tj
T*
(\) will convert PNG files to strings compatible with the `img_code` of `self.enclosure.mouth_dis) Tj
T*
(play\(\)`.) Tj
T*
() Tj
T*
(### Resetting the display to the default state) Tj
T*
() Tj
T*
(When the **Skill** is finished, you should reset the **Enclosure** to the default state using) Tj
T*
() Tj
T*
(```python) Tj
T*
(self.enclosure.reset\(\)) Tj
T*
(```) Tj
T*
() Tj
T*
(This will clear the screen and blink the Mark 1's _eyes_ once.) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/801-mk1_utils.md ===) Tj
T*
() Tj
T*
(# Mark1 Utils) Tj
T*
() Tj
T*
(small library to interact with a [Mycroft Mark1 faceplate via the messagebus]\(https://openvoice) Tj
T*
(os.github.io/message_spec/phal_mk1/\)) Tj
T*
() Tj
T*
(gives you full control of the faceplate and eyes pixel by pixel) Tj
T*
() Tj
T*
(![]\(./demo/86788719_10157996735085818_3139665318654246912_n.jpg\)) Tj
T*
() Tj
T*
(## Animate the eyes) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_mark1.eyes import Eyes) Tj
T*
(from ovos_bus_client.utils import get_mycroft_bus) Tj
T*
() Tj
T*
(bus = get_mycroft_bus\("0.0.0.0"\)) Tj
T*
() Tj
T*
(eyes = Eyes\(bus\)) Tj
T*
(eyes.hue_spin\(\)) Tj
T*
(```) Tj
T*
() Tj
T*
(## Faceplate Icons) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_mark1.faceplate import BlackScreen) Tj
T*
() Tj
T*
ET
endstream
endobj
261 0 obj
<< /Length 1800 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(class MusicIcon\(BlackScreen\):) Tj
T*
(    str_grid = """) Tj
T*
(XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX) Tj
T*
(XXXXXXXXXXXXXX     XXXXXXXXXXXXX) Tj
T*
(XXXXXXXXXXXXXX     XXXXXXXXXXXXX) Tj
T*
(XXXXXXXXXXXXXX XXX XXXXXXXXXXXXX) Tj
T*
(XXXXXXXXXXXXXX XXX XXXXXXXXXXXXX) Tj
T*
(XXXXXXXXXXXXX  XX  XXXXXXXXXXXXX) Tj
T*
(XXXXXXXXXXXX   X   XXXXXXXXXXXXX) Tj
T*
(XXXXXXXXXXXXX XXX XXXXXXXXXXXXXX) Tj
T*
(""") Tj
T*
() Tj
T*
(icon = MusicIcon\(\)) Tj
T*
(icon.print\(\)  # show in terminal) Tj
T*
(icon.display\(\)  # show in mark1) Tj
T*
(```) Tj
T*
() Tj
T*
(## Faceplate Animations) Tj
T*
() Tj
T*
(```python) Tj
T*
() Tj
T*
(# it's snowing !) Tj
T*
(class FallingDots\(FacePlateAnimation\):) Tj
T*
(    def __init__\(self, n=10, bus=None\):) Tj
T*
(        super\(\).__init__\(bus=bus\)) Tj
T*
(        self._create = True) Tj
T*
(        assert 0 < n < 32) Tj
T*
(        self.n = n) Tj
T*
() Tj
T*
(    @property) Tj
T*
(    def n_dots\(self\):) Tj
T*
(        n = 0) Tj
T*
(        for y in range\(self.height\):) Tj
T*
(            for x in range\(self.width\):) Tj
T*
(                if self.grid[y][x]:) Tj
T*
(                    n += 1) Tj
T*
(        return n) Tj
T*
() Tj
T*
(    def animate\(self\):) Tj
T*
(        self.move_down\(\)) Tj
T*
(        if self._create:) Tj
T*
(            if random.choice\([True, False]\):) Tj
T*
(                self._create = False) Tj
T*
(                x = random.randint\(0, self.width - 1\)) Tj
T*
(                self.grid[0][x] = 1) Tj
T*
(        if self.n_dots < self.n:) Tj
T*
(            self._create = True) Tj
T*
(```) Tj
T*
() Tj
T*
(Pre made animations) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_mark1.faceplate.animations import ParticleBox) Tj
T*
(from ovos_bus_client.utils import get_mycroft_bus) Tj
T*
ET
endstream
endobj
262 0 obj
<< /Length 1923 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(from time import sleep) Tj
T*
() Tj
T*
(bus = get_mycroft_bus\("0.0.0.0"\)) Tj
T*
() Tj
T*
(for faceplate in ParticleBox\(bus=bus\):) Tj
T*
(    faceplate.display\(invert=False\)) Tj
T*
(    sleep\(0.5\)) Tj
T*
() Tj
T*
() Tj
T*
(from ovos_mark1.faceplate.cellular_automaton import Rule110) Tj
T*
() Tj
T*
(a = Rule110\(bus=bus\)) Tj
T*
() Tj
T*
(for grid in a:) Tj
T*
(    grid.print\(\)  # animate in terminal) Tj
T*
(    grid.display\(invert=False\)) Tj
T*
(    sleep\(0.5\)) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/890-date_parser.md ===) Tj
T*
() Tj
T*
(# ovos-date-parser) Tj
T*
() Tj
T*
(`ovos-date-parser` is a comprehensive library for multilingual date and time parsing, extractio) Tj
T*
(n, and formatting,) Tj
T*
(designed to handle a range of human-readable date, time, and duration expressions.) Tj
T*
() Tj
T*
(## Features) Tj
T*
() Tj
T*
(- **Date and Time Extraction**: Extract specific dates and times from natural language phrases ) Tj
T*
(in various languages.) Tj
T*
(- **Duration Parsing**: Parse phrases that indicate a span of time, such as "two hours and fift) Tj
T*
(een minutes.") Tj
T*
(- **Friendly Time Formatting**: Format time for human-friendly output, supporting both 12-hour ) Tj
T*
(and 24-hour formats.) Tj
T*
(- **Relative Time Descriptions**: Generate relative descriptions \(e.g., "tomorrow," "in three d) Tj
T*
(ays"\) for given dates.) Tj
T*
(- **Multilingual Support**: Includes extraction and formatting methods for multiple languages, ) Tj
T*
(such as English, Spanish,) Tj
T*
(  French, German, and more.) Tj
T*
() Tj
T*
(## Installation) Tj
T*
() Tj
T*
(```bash) Tj
T*
(pip install ovos-date-parser) Tj
T*
(```) Tj
T*
() Tj
T*
(### Languages Supported) Tj
T*
() Tj
T*
(`ovos-date-parser` supports a wide array of languages, each with its own set of methods for han) Tj
T*
(dling natural language) Tj
T*
(time expressions.) Tj
T*
() Tj
T*
ET
endstream
endobj
263 0 obj
<< /Length 3845 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(- ? - supported) Tj
T*
(- ? - not supported) Tj
T*
(- ? - imperfect placeholder, usually a language agnostic implementation or external library) Tj
T*
() Tj
T*
(**Parse**) Tj
T*
() Tj
T*
(| Language | `extract_duration` | `extract_datetime` |) Tj
T*
(|----------|--------------------|--------------------|) Tj
T*
(| az       | ?                  | ?                  |) Tj
T*
(| ca       | ?                  | ?                  |) Tj
T*
(| cs       | ?                  | ?                  |) Tj
T*
(| da       | ?                  | ?                  |) Tj
T*
(| de       | ?                  | ?                  |) Tj
T*
(| en       | ?                  | ?                  |) Tj
T*
(| es       | ?                  | ?                  |) Tj
T*
(| gl       | ?                  | ?                 |) Tj
T*
(| eu       | ?                  | ?                  |) Tj
T*
(| fa       | ?                  | ?                  |) Tj
T*
(| fr       | ?                  | ?                  |) Tj
T*
(| hu       | ?                  | ?                 |) Tj
T*
(| it       | ?                  | ?                  |) Tj
T*
(| nl       | ?                  | ?                  |) Tj
T*
(| pl       | ?                  | ?                  |) Tj
T*
(| pt       | ?                  | ?                  |) Tj
T*
(| ru       | ?                  | ?                  |) Tj
T*
(| sv       | ?                  | ?                  |) Tj
T*
(| uk       | ?                  | ?                  |) Tj
T*
() Tj
T*
() Tj
T*
(> ? If a language is not implemented for `extract_datetime` then [dateparser]\(https://dateparse) Tj
T*
(r.readthedocs.io/en/latest/\) will be used as a fallback) Tj
T*
() Tj
T*
(**Format**) Tj
T*
() Tj
T*
(| Language | `nice_date`<br>`nice_date_time`<br>`nice_day` <br>`nice_weekday` <br>`nice_month` ) Tj
T*
(<br>`nice_year` <br>`get_date_strings` | `nice_time` | `nice_relative_time` | `nice_duration` |) Tj
T*
(|----------|-----------------------------------------------------------------------------------) Tj
T*
(---------------------------------------|-------------|----------------------|-----------------|) Tj
T*
(| az       | ?                                                                                 ) Tj
T*
(                                       | ?           | ?                   | ?               | ) Tj
T*
(| ca       | ?                                                                                 ) Tj
T*
(                                       | ?           | ?                   | ?               | ) Tj
T*
(| cs       | ?                                                                                 ) Tj
T*
(                                       | ?           | ?                   | ?               | ) Tj
T*
(| da       | ?                                                                                 ) Tj
T*
(                                       | ?           | ?                   | ?               | ) Tj
T*
(| de       | ?                                                                                 ) Tj
T*
(                                       | ?           | ?                   | ?               | ) Tj
T*
(| en       | ?                                                                                 ) Tj
T*
(                                       | ?           | ?                   | ?               | ) Tj
T*
(| es       | ?                                                                                 ) Tj
T*
(                                       | ?           | ?                   | ?               | ) Tj
T*
(| gl       | ?                                                                                 ) Tj
T*
(                                       | ?           | ?                   | ?               | ) Tj
T*
ET
endstream
endobj
264 0 obj
<< /Length 3597 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(| eu       | ?                                                                                 ) Tj
T*
(                                       | ?           | ?                    | ?               |) Tj
T*
( ) Tj
T*
(| fa       | ?                                                                                 ) Tj
T*
(                                       | ?           | ?                   | ?               | ) Tj
T*
(| fr       | ?                                                                                 ) Tj
T*
(                                       | ?           | ?                   | ?               | ) Tj
T*
(| hu       | ?                                                                                 ) Tj
T*
(                                       | ?           | ?                   | ?               | ) Tj
T*
(| it       | ?                                                                                 ) Tj
T*
(                                       | ?           | ?                   | ?               | ) Tj
T*
(| nl       | ?                                                                                 ) Tj
T*
(                                       | ?           | ?                   | ?               | ) Tj
T*
(| pl       | ?                                                                                 ) Tj
T*
(                                       | ?           | ?                   | ?               | ) Tj
T*
(| pt       | ?                                                                                 ) Tj
T*
(                                       | ?           | ?                   | ?               | ) Tj
T*
(| ru       | ?                                                                                 ) Tj
T*
(                                       | ?           | ?                   | ?               | ) Tj
T*
(| sv       | ?                                                                                 ) Tj
T*
(                                       | ?           | ?                   | ?               |) Tj
T*
(| sl       | ?                                                                                 ) Tj
T*
(                                       | ?           | ?                   | ?               |) Tj
T*
(| uk       | ?                                                                                 ) Tj
T*
(                                       | ?           | ?                   | ?               | ) Tj
T*
() Tj
T*
(## Usage) Tj
T*
() Tj
T*
(### Date and Time Extraction) Tj
T*
() Tj
T*
(Extract specific dates and times from a phrase. This function identifies date-related terms in ) Tj
T*
(natural language and) Tj
T*
(returns both the datetime object and any remaining text.) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_date_parser import extract_datetime) Tj
T*
() Tj
T*
(result = extract_datetime\("Meet me next Friday at 3pm", lang="en"\)) Tj
T*
(print\(result\)  # \(datetime object, "at 3pm"\)) Tj
T*
(```) Tj
T*
() Tj
T*
(### Duration Extraction) Tj
T*
() Tj
T*
(Identify duration phrases in text and convert them into a `timedelta` object. This can parse co) Tj
T*
(mmon human-friendly) Tj
T*
(duration expressions like "30 minutes" or "two and a half hours.") Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_date_parser import extract_duration) Tj
T*
() Tj
T*
(duration, remainder = extract_duration\("It will take about 2 hours and 30 minutes", lang="en"\)) Tj
T*
(print\(duration\)  # timedelta object) Tj
T*
(print\(remainder\)  # "about") Tj
T*
(```) Tj
T*
ET
endstream
endobj
265 0 obj
<< /Length 2182 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(### Formatting Time) Tj
T*
() Tj
T*
(Generate a natural-sounding time format suitable for voice or display in different languages, a) Tj
T*
(llowing customization for) Tj
T*
(speech or written text.) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_date_parser import nice_time) Tj
T*
(from datetime import datetime) Tj
T*
() Tj
T*
(dt = datetime.now\(\)) Tj
T*
(formatted_time = nice_time\(dt, lang="en", speech=True, use_24hour=False\)) Tj
T*
(print\(formatted_time\)  # "three o'clock") Tj
T*
(```) Tj
T*
() Tj
T*
(### Relative Time Descriptions) Tj
T*
() Tj
T*
(Create relative phrases for describing dates and times in relation to the current moment or a r) Tj
T*
(eference datetime.) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_date_parser import nice_relative_time) Tj
T*
(from datetime import datetime, timedelta) Tj
T*
() Tj
T*
(relative_time = nice_relative_time\(datetime.now\(\) + timedelta\(days=1\), datetime.now\(\), lang="en) Tj
T*
("\)) Tj
T*
(print\(relative_time\)  # "tomorrow") Tj
T*
(```) Tj
T*
() Tj
T*
(## Related Projects) Tj
T*
() Tj
T*
(- [ovos-number-parser]\(https://github.com/OpenVoiceOS/ovos-number-parser\) - for handling number) Tj
T*
(s) Tj
T*
(- [ovos-lang-parser]\(https://github.com/OVOSHatchery/ovos-lang-parser\) - for handling languages) Tj
T*
(- [ovos-color-parser]\(https://github.com/OVOSHatchery/ovos-color-parser\) - for handling colors) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/891-number_parser.md ===) Tj
T*
() Tj
T*
(# OVOS Number Parser) Tj
T*
() Tj
T*
(OVOS Number Parser is a tool for extracting, pronouncing, and detecting numbers from text acros) Tj
T*
(s multiple languages. It) Tj
T*
(supports functionalities like converting numbers to their spoken forms, extracting numbers from) Tj
T*
( text, identifying) Tj
T*
(fractional and ordinal numbers, and more.) Tj
T*
() Tj
T*
(## Features) Tj
T*
() Tj
T*
(- **Pronounce Numbers:** Converts numerical values to their spoken forms.) Tj
T*
(- **Pronounce Ordinals:** Converts numbers to their ordinal forms.) Tj
T*
(- **Extract Numbers:** Extracts numbers from textual inputs.) Tj
T*
(- **Detect Fractions:** Identifies fractional expressions.) Tj
T*
ET
endstream
endobj
266 0 obj
<< /Length 3035 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(- **Detect Ordinals:** Checks if a text input contains an ordinal number.) Tj
T*
() Tj
T*
(## Supported Languages) Tj
T*
() Tj
T*
(- ? - supported) Tj
T*
(- ? - not supported) Tj
T*
(- ? - imperfect placeholder, usually a language agnostic implementation or external library) Tj
T*
() Tj
T*
() Tj
T*
(| Language Code           | Pronounce Number | Pronounce Ordinal | Extract Number | numbers_to_) Tj
T*
(digits |) Tj
T*
(|-------------------------|------------------|-------------------|----------------|------------) Tj
T*
(-------|) Tj
T*
(| `en` \(English\)          | ?               | ?                | ?             | ?             ) Tj
T*
(   |) Tj
T*
(| `az` \(Azerbaijani\)      | ?               | ?                | ?             | ?             ) Tj
T*
(   |) Tj
T*
(| `ca` \(Catalan\)          | ?                | ?                 | ?              | ?          ) Tj
T*
(       |) Tj
T*
(| `gl` \(Galician\)         | ?                | ?                | ?              |  ?          ) Tj
T*
(        |) Tj
T*
(| `cs` \(Czech\)            | ?                | ?                 | ?              | ?          ) Tj
T*
(       |) Tj
T*
(| `da` \(Danish\)           | ?                | ?                 | ?              | ?          ) Tj
T*
(       |) Tj
T*
(| `de` \(German\)           | ?                | ?                 | ?              | ?          ) Tj
T*
(       |) Tj
T*
(| `es` \(Spanish\)          | ?                | ?                 | ?              | ?          ) Tj
T*
(       |) Tj
T*
(| `eu` \(Euskara / Basque\) | ?                | ?                 | ?              | ?          ) Tj
T*
(       |) Tj
T*
(| `fa` \(Farsi / Persian\)  | ?                | ?                 | ?              | ?          ) Tj
T*
(       |) Tj
T*
(| `fr` \(French\)           | ?                | ?                 | ?              | ?          ) Tj
T*
(       |) Tj
T*
(| `hu` \(Hungarian\)        | ?                | ?                 | ?              | ?          ) Tj
T*
(       |) Tj
T*
(| `it` \(Italian\)          | ?                | ?                | ?              | ?           ) Tj
T*
(      |) Tj
T*
(| `nl` \(Dutch\)            | ?                | ?                 | ?              | ?          ) Tj
T*
(       |) Tj
T*
(| `pl` \(Polish\)           | ?                | ?                 | ?              | ?          ) Tj
T*
(       |) Tj
T*
(| `pt` \(Portuguese\)       | ?                | ?                 | ?              | ?          ) Tj
T*
(       |) Tj
T*
(| `ru` \(Russian\)          | ?                | ?                 | ?              | ?          ) Tj
T*
(       |) Tj
T*
(| `sv` \(Swedish\)          | ?                | ?                 | ?              | ?          ) Tj
T*
(       |) Tj
T*
(| `sl` \(Slovenian\)        | ?                | ?                 | ?              | ?          ) Tj
T*
(       |) Tj
T*
(| `uk` \(Ukrainian\)        | ?                | ?                 | ?              | ?          ) Tj
T*
(       |) Tj
T*
() Tj
T*
ET
endstream
endobj
267 0 obj
<< /Length 1890 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(> ? If a language is not implemented for `pronounce_number` or `pronounce_ordinal` then [unicod) Tj
T*
(e-rbnf]\(https://github.com/rhasspy/unicode-rbnf\) will be used as a fallback) Tj
T*
() Tj
T*
(## Installation) Tj
T*
() Tj
T*
(To install OVOS Number Parser, use:) Tj
T*
() Tj
T*
(```bash) Tj
T*
(pip install ovos-number-parser) Tj
T*
(```) Tj
T*
() Tj
T*
(## Usage) Tj
T*
() Tj
T*
(### Pronounce a Number) Tj
T*
() Tj
T*
(Convert a number to its spoken equivalent.) Tj
T*
() Tj
T*
(```python) Tj
T*
(def pronounce_number\(number: Union[int, float], lang: str, places: int = 2, short_scale: bool =) Tj
T*
( True,) Tj
T*
(                     scientific: bool = False, ordinals: bool = False\) -> str:) Tj
T*
(    """) Tj
T*
(    Convert a number to its spoken equivalent.) Tj
T*
() Tj
T*
(    Args:) Tj
T*
(        number: The number to pronounce.) Tj
T*
(        lang \(str\): A BCP-47 language code.) Tj
T*
(        places \(int\): Number of decimal places to express. Default is 2.) Tj
T*
(        short_scale \(bool\): Use short \(True\) or long scale \(False\) for large numbers.) Tj
T*
(        scientific \(bool\): Pronounce in scientific notation if True.) Tj
T*
(        ordinals \(bool\): Pronounce as an ordinal if True.) Tj
T*
() Tj
T*
(    Returns:) Tj
T*
(        str: The pronounced number.) Tj
T*
(    """) Tj
T*
(```) Tj
T*
() Tj
T*
(**Example Usage:**) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_number_parser import pronounce_number) Tj
T*
() Tj
T*
(# Example) Tj
T*
(result = pronounce_number\(123, "en"\)) Tj
T*
(print\(result\)  # "one hundred and twenty-three") Tj
T*
(```) Tj
T*
() Tj
T*
(### Pronounce an Ordinal) Tj
T*
() Tj
T*
(Convert a number to its ordinal spoken equivalent.) Tj
T*
() Tj
T*
(```python) Tj
T*
(def pronounce_ordinal\(number: Union[int, float], lang: str, short_scale: bool = True\) -> str:) Tj
T*
ET
endstream
endobj
268 0 obj
<< /Length 1709 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(    """) Tj
T*
(    Convert an ordinal number to its spoken equivalent.) Tj
T*
() Tj
T*
(    Args:) Tj
T*
(        number: The number to pronounce.) Tj
T*
(        lang \(str\): A BCP-47 language code.) Tj
T*
(        short_scale \(bool\): Use short \(True\) or long scale \(False\) for large numbers.) Tj
T*
() Tj
T*
(    Returns:) Tj
T*
(        str: The pronounced ordinal number.) Tj
T*
(    """) Tj
T*
(```) Tj
T*
() Tj
T*
(**Example Usage:**) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_number_parser import pronounce_ordinal) Tj
T*
() Tj
T*
(# Example) Tj
T*
(result = pronounce_ordinal\(5, "en"\)) Tj
T*
(print\(result\)  # "fifth") Tj
T*
(```) Tj
T*
() Tj
T*
(### Extract a Number) Tj
T*
() Tj
T*
(Extract a number from a given text string.) Tj
T*
() Tj
T*
(```python) Tj
T*
(def extract_number\(text: str, lang: str, short_scale: bool = True, ordinals: bool = False\) -> U) Tj
T*
(nion[int, float, bool]:) Tj
T*
(    """) Tj
T*
(    Extract a number from text.) Tj
T*
() Tj
T*
(    Args:) Tj
T*
(        text \(str\): The string to extract a number from.) Tj
T*
(        lang \(str\): A BCP-47 language code.) Tj
T*
(        short_scale \(bool\): Use short scale if True, long scale if False.) Tj
T*
(        ordinals \(bool\): Consider ordinal numbers.) Tj
T*
() Tj
T*
(    Returns:) Tj
T*
(        int, float, or False: The extracted number, or False if no number found.) Tj
T*
(    """) Tj
T*
(```) Tj
T*
() Tj
T*
(**Example Usage:**) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_number_parser import extract_number) Tj
T*
() Tj
T*
(# Example) Tj
T*
(result = extract_number\("I have twenty apples", "en"\)) Tj
T*
(print\(result\)  # 20) Tj
T*
(```) Tj
T*
() Tj
T*
ET
endstream
endobj
269 0 obj
<< /Length 1707 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(### Check for Fractional Numbers) Tj
T*
() Tj
T*
(Identify if the text contains a fractional number.) Tj
T*
() Tj
T*
(```python) Tj
T*
(def is_fractional\(input_str: str, lang: str, short_scale: bool = True\) -> Union[bool, float]:) Tj
T*
(    """) Tj
T*
(    Check if the text is a fraction.) Tj
T*
() Tj
T*
(    Args:) Tj
T*
(        input_str \(str\): The string to check if fractional.) Tj
T*
(        lang \(str\): A BCP-47 language code.) Tj
T*
(        short_scale \(bool\): Use short scale if True, long scale if False.) Tj
T*
() Tj
T*
(    Returns:) Tj
T*
(        bool or float: False if not a fraction, otherwise the fraction as a float.) Tj
T*
(    """) Tj
T*
(```) Tj
T*
() Tj
T*
(**Example Usage:**) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_number_parser import is_fractional) Tj
T*
() Tj
T*
(# Example) Tj
T*
(result = is_fractional\("half", "en"\)) Tj
T*
(print\(result\)  # 0.5) Tj
T*
(```) Tj
T*
() Tj
T*
(### Check for Ordinals) Tj
T*
() Tj
T*
(Determine if the text contains an ordinal number.) Tj
T*
() Tj
T*
(```python) Tj
T*
(def is_ordinal\(input_str: str, lang: str\) -> Union[bool, float]:) Tj
T*
(    """) Tj
T*
(    Check if the text is an ordinal number.) Tj
T*
() Tj
T*
(    Args:) Tj
T*
(        input_str \(str\): The string to check if ordinal.) Tj
T*
(        lang \(str\): A BCP-47 language code.) Tj
T*
() Tj
T*
(    Returns:) Tj
T*
(        bool or float: False if not an ordinal, otherwise the ordinal as a float.) Tj
T*
(    """) Tj
T*
(```) Tj
T*
() Tj
T*
(**Example Usage:**) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_number_parser import is_ordinal) Tj
T*
() Tj
T*
(# Example) Tj
T*
(result = is_ordinal\("third", "en"\)) Tj
T*
ET
endstream
endobj
270 0 obj
<< /Length 1714 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(print\(result\)  # 3) Tj
T*
(```) Tj
T*
() Tj
T*
(## Related Projects) Tj
T*
() Tj
T*
(- [ovos-date-parser]\(https://github.com/OpenVoiceOS/ovos-date-parser\) - for handling dates and ) Tj
T*
(times) Tj
T*
(- [ovos-lang-parser]\(https://github.com/OVOSHatchery/ovos-lang-parser\) - for handling languages) Tj
T*
(- [ovos-color-parser]\(https://github.com/OVOSHatchery/ovos-color-parser\) - for handling colors) Tj
T*
() Tj
T*
(## License) Tj
T*
() Tj
T*
(This project is licensed under the Apache License 2.0.) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/893-color_parser.md ===) Tj
T*
() Tj
T*
(# OVOS Color Parser) Tj
T*
() Tj
T*
(> :warning: this package is a work in progress) Tj
T*
() Tj
T*
(## What does this have to do with voice?) Tj
T*
() Tj
T*
(- "change the lamp color to moss green") Tj
T*
(- "make it darker") Tj
T*
(- "more saturated") Tj
T*
(- "a bit more yellowish") Tj
T*
(- "perfect") Tj
T*
() Tj
T*
(> NOTE: physicists are huge nerds, so they might say something like "change the lamp wave lengh) Tj
T*
(t to X nanometers", this) Tj
T*
(> is a terrible way to talk about color and innacurate but we also added basic support for this) Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
(## Extracting a color from text) Tj
T*
() Tj
T*
(The parser will do it's best to parse "color modifiers") Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_color_parser import color_from_description) Tj
T*
() Tj
T*
(names = [) Tj
T*
(    "Bright, vibrant green",) Tj
T*
(    "Pale pink",) Tj
T*
(    "Muted, warm gray",) Tj
T*
(    "Dark, cool blue",) Tj
T*
() Tj
T*
(]) Tj
T*
(for n in names:) Tj
T*
(    c = color_from_description\(n\)) Tj
T*
(    print\(c.hex_str\)) Tj
T*
(    print\(c\)) Tj
T*
(```) Tj
T*
ET
endstream
endobj
271 0 obj
<< /Length 2725 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(![image]\(https://github.com/user-attachments/assets/96601212-01d2-4eda-a7e2-120f2d7de5f5\)) Tj
T*
() Tj
T*
() Tj
T*
(Color names are ambiguous, the same name sometimes refers to multiple colors. When a color is m) Tj
T*
(atched by the parser it "averages all matched colors") Tj
T*
(```python) Tj
T*
(from ovos_color_parser import color_from_description) Tj
T*
() Tj
T*
(color = color_from_description\("Red"\)) Tj
T*
(print\(color.hex_str\)  #D21B1B) Tj
T*
(print\(color\) ) Tj
T*
(# sRGBColor\(r=210, g=27, b=27, name='Red', description='Red'\)) Tj
T*
(```) Tj
T*
(![image]\(https://github.com/user-attachments/assets/b54b5452-36a1-4dd8-8e3e-49dfacb57a97\)) Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
(We can tell the parser to always return a known/named color with `cast_to_palette=True`, but th) Tj
T*
(is might not always return what you expect) Tj
T*
(```python) Tj
T*
(from ovos_color_parser import color_from_description) Tj
T*
() Tj
T*
(color = color_from_description\("Red", cast_to_palette=True\)) Tj
T*
(print\(color.hex_str\)  #CE202B) Tj
T*
(print\(color\)) Tj
T*
(# sRGBColor\(r=206, g=32, b=43, name='Fire engine red', description='Red'\)) Tj
T*
(```) Tj
T*
(![image]\(https://github.com/user-attachments/assets/ac3cc89d-2949-4d8e-ae70-e9829402d7b7\)) Tj
T*
() Tj
T*
() Tj
T*
(### Beware of impossible colors) Tj
T*
() Tj
T*
(Some colors are [impossible]\(https://en.wikipedia.org/wiki/Impossible_color\), but that doesn't ) Tj
T*
(stop text from describing them) Tj
T*
() Tj
T*
(`"Reddish-green"` doesn?t make much sense as a description, unless you mean yellow or orange, w) Tj
T*
(hich you don?t, because you would have said ?yellow? or ?orange?. The same applies to `"Yellowi) Tj
T*
(sh?blue"`) Tj
T*
() Tj
T*
(> the Colour of Magic or the King Colour, was the eighth colour of the Discworld spectrum. ) Tj
T*
(Only visible to wizards and cats. It is described in "The Colour of Magic" as the colour of ima) Tj
T*
(gination and is a fluorescent greenish yellow-purple. ) Tj
T*
(The only time non-wizards can see it is when they close their eyes; the bursts of color are oct) Tj
T*
(arine.) Tj
T*
() Tj
T*
() Tj
T*
(Fluorescent greenish-yellow and purple are essentially opposite colors on the color wheel, with) Tj
T*
( wavelengths that can?t coexist in a single light wave in the visible spectrum. Here?s why:) Tj
T*
() Tj
T*
(- Color Wavelengths and Light: Greenish-yellow light falls in a wavelength range of about 560?5) Tj
T*
(90 nanometers, while purple is not a pure spectral color but a combination of blue \(around 450?) Tj
T*
(495 nm\) and red \(around 620?750 nm\). Human eyes perceive purple as a combination of these two e) Tj
T*
(nds of the spectrum.) Tj
T*
ET
endstream
endobj
272 0 obj
<< /Length 2662 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(- Color Opponency Theory: The human visual system relies on color opponency, where certain pair) Tj
T*
(s of colors \(like red-green and blue-yellow\) are processed in opposing channels. Because of thi) Tj
T*
(s, our brains can?t interpret colors that simultaneously activate both ends of an opponent chan) Tj
T*
(nel. This is why we don?t perceive colors like reddish-green or yellowish-blue?our brains are s) Tj
T*
(imply wired to cancel out those combinations.) Tj
T*
(- Perceptual Limits: Fluorescent colors are especially intense because they emit light in a nar) Tj
T*
(row, concentrated wavelength range, making them appear very saturated and bright. Attempting to) Tj
T*
( mix fluorescent greenish-yellow with purple not only challenges the physiology of the eye but ) Tj
T*
(would also result in a muted brown or gray tone, as the colors cancel each other out.) Tj
T*
() Tj
T*
(In short, fluorescent greenish-yellow and purple light can?t coexist in a way our eyes can inte) Tj
T*
(rpret as a single, stable color because of the biological limits of human color perception.) Tj
T*
() Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_color_parser import color_from_description) Tj
T*
() Tj
T*
(# look! an impossible color) Tj
T*
(color = color_from_description\("fluorescent greenish-yellow purple"\)) Tj
T*
(color.name = "Octarine") Tj
T*
(print\(color.hex_str\) #76B11D) Tj
T*
(print\(color\)) Tj
T*
(# sRGBColor\(r=118, g=177, b=29, name='Octarine', description='fluorescent greenish-yellow purpl) Tj
T*
(e'\)) Tj
T*
(```) Tj
T*
(the parser will gladly output something... it just might not make sense) Tj
T*
() Tj
T*
(in this case the parser focused on `"greenish-yellow"`) Tj
T*
() Tj
T*
(![image]\(https://github.com/user-attachments/assets/82484998-3f19-4626-bcea-e6c570a90dc9\)) Tj
T*
() Tj
T*
(but it could have focused on `"purple"`) Tj
T*
() Tj
T*
(![image]\(https://github.com/user-attachments/assets/4aee840a-ccb8-4a63-ad84-bf0d283a49c1\)) Tj
T*
() Tj
T*
() Tj
T*
(## Comparing color objects) Tj
T*
() Tj
T*
(compare color distances \(smaller is better\)) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_color_parser import color_distance, color_from_description) Tj
T*
() Tj
T*
(color_a = color_from_description\("green"\)) Tj
T*
(color_b = color_from_description\("purple"\)) Tj
T*
(print\(color_distance\(color_a, color_b\)\)) Tj
T*
(# 64.97192890677195) Tj
T*
() Tj
T*
(color_a = color_from_description\("green"\)) Tj
T*
(color_b = color_from_description\("yellow"\)) Tj
T*
(print\(color_distance\(color_a, color_b\)\)) Tj
T*
(# 44.557493285361) Tj
T*
() Tj
T*
(color_a = color_from_description\("yellow"\)) Tj
T*
ET
endstream
endobj
273 0 obj
<< /Length 2715 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(color_b = color_from_description\("purple"\)) Tj
T*
(print\(color_distance\(color_a, color_b\)\)) Tj
T*
(# 78.08287998809946) Tj
T*
(```) Tj
T*
() Tj
T*
(match a color object to a list of colors) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_color_parser import sRGBAColor, sRGBAColorPalette, closest_color) Tj
T*
() Tj
T*
(# https://en.wikipedia.org/wiki/Blue-green) Tj
T*
(BlueGreenPalette = sRGBAColorPalette\(colors=[) Tj
T*
(  sRGBAColor\(r=0, g=128, b=128, name="Blue-green"\),) Tj
T*
(  sRGBAColor\(r=0, g=255, b=255, name="Cyan \(Aqua\)", description="Brilliant bluish green"\),) Tj
T*
(  sRGBAColor\(r=64, g=224, b=208, name="Turquoise", description="Brilliant bluish green"\),) Tj
T*
(  sRGBAColor\(r=17, g=100, b=180, name="Green-blue", description="Strong blue"\),) Tj
T*
(  sRGBAColor\(r=57, g=55, b=223, name="Bondi blue"\),) Tj
T*
(  sRGBAColor\(r=0, g=165, b=156, name="Blue green \(Munsell\)", description="Brilliant bluish gree) Tj
T*
(n"\),) Tj
T*
(  sRGBAColor\(r=0, g=123, b=167, name="Cerulean", description="Strong greenish blue"\),) Tj
T*
(  sRGBAColor\(r=0, g=63, b=255, name="Cerulean \(RGB\)", description="Vivid blue"\),) Tj
T*
(  sRGBAColor\(r=0, g=128, b=128, name="Teal", description="Moderate bluish green"\),) Tj
T*
(]\)) Tj
T*
() Tj
T*
(print\(closest_color\(sRGBAColor\(r=0, g=0, b=255, name="Blue"\),) Tj
T*
(                    BlueGreenPalette.colors\)\)) Tj
T*
(# sRGBColor\(r=0, g=63, b=255, name='Cerulean \(RGB\)', description='Vivid blue'\)) Tj
T*
(print\(closest_color\(sRGBAColor\(r=0, g=255, b=0, name="Green"\),) Tj
T*
(                    BlueGreenPalette.colors\)\)) Tj
T*
(# sRGBColor\(r=64, g=224, b=208, name='Turquoise', description='Brilliant bluish green'\)) Tj
T*
(```) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Language support) Tj
T*
() Tj
T*
(When describing color in natural language to approximate it in RGB, there are several keywords ) Tj
T*
(that can convey) Tj
T*
(its properties effectively) Tj
T*
() Tj
T*
(```python) Tj
T*
(# Parse complex color descriptions) Tj
T*
(color = color_from_description\("very bright, slightly warm muted blue"\)) Tj
T*
(```) Tj
T*
() Tj
T*
(- **Description**: Hue refers to the basic color family, such as red, blue, green, or yellow.) Tj
T*
(- **Translation to RGB**:) Tj
T*
(- The hue determines which of the primary RGB channels \(red, green, or blue\) will be most promi) Tj
T*
(nent. For example,) Tj
T*
(  ?red? means a strong red channel with low green and blue, while ?blue? means a high blue chan) Tj
T*
(nel with low red and) Tj
T*
(  green.) Tj
T*
(- Hues like "yellow" indicate both red and green channels are high with blue low, while "purple) Tj
T*
(" combines red and) Tj
T*
ET
endstream
endobj
274 0 obj
<< /Length 2283 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(  blue with little green.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(- **Description**: Saturation, or chroma, is how pure or intense the color is. Terms like ?vibr) Tj
T*
(ant,? ?dull,? or ?washed) Tj
T*
(  out? refer to saturation.) Tj
T*
(- **Translation to RGB**:) Tj
T*
(    - High saturation \(vibrant\): Increase the difference between the dominant channel\(s\) and ot) Tj
T*
(hers. For example, making) Tj
T*
(      the red channel much higher than green and blue for a vibrant red.) Tj
T*
(    - Low saturation \(dull\): Reduce the contrast between channels, creating a blend closer to g) Tj
T*
(rayscale. For instance,) Tj
T*
(      balancing red, green, and blue channels to similar values lowers saturation.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
() Tj
T*
(- **Description**: Brightness refers to how light or dark the color appears. Words like ?bright) Tj
T*
(,? ?dim,? ?dark,? or) Tj
T*
(  ?pale? are often used.) Tj
T*
(- **Translation to RGB**:) Tj
T*
(    - High brightness \(bright\): Increase the values across all channels.) Tj
T*
(    - Low brightness \(dark\): Decrease values across channels while maintaining the hue's relati) Tj
T*
(ve balance.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(- **Description**: Color temperature reflects whether a color feels warm or cool. Terms like "w) Tj
T*
(arm red," "cool green,") Tj
T*
(  or "cold blue" apply here.) Tj
T*
(- **Translation to RGB**:) Tj
T*
(    - Warm colors: Increase red or red and green channels.) Tj
T*
(    - Cool colors: Increase blue or decrease red.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(- **Description**: Opacity doesn?t affect RGB but is relevant for color perception, especially ) Tj
T*
(in design. Terms like) Tj
T*
(  ?translucent,? ?opaque,? or ?sheer? describe it.) Tj
T*
(- **Translation to RGB**:) Tj
T*
(    - Opacity affects the alpha channel \(RGBA\) rather than RGB values.) Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
(This approach, while interpretative, offers a structured way to translate natural language colo) Tj
T*
(r descriptions into RGB) Tj
T*
(approximations.) Tj
T*
() Tj
T*
(#### Color Keywords ) Tj
T*
() Tj
T*
() Tj
T*
(To categorize adjectives and keywords that describe color in ways that translate into RGB or co) Tj
T*
(lor space adjustments the) Tj
T*
ET
endstream
endobj
275 0 obj
<< /Length 2586 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(parser uses a `.json` file per language) Tj
T*
() Tj
T*
(Example JSON structure for English color keywords:) Tj
T*
() Tj
T*
(```json) Tj
T*
({) Tj
T*
(  "saturation": {) Tj
T*
(    "high": ["vibrant", "rich", "bold", "deep"],) Tj
T*
(    "low": ["dull", "muted", "washed-out", "faded"]) Tj
T*
(  },) Tj
T*
(  "brightness": {) Tj
T*
(    "high": ["bright", "light", "pale", "glowing"],) Tj
T*
(    "low": ["dim", "dark", "shadowy", "faint"]) Tj
T*
(  }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(Color name lists in each language are also used to determine the **hue**. ) Tj
T*
() Tj
T*
(> English has a word list of almost ~6000 color name mappings) Tj
T*
() Tj
T*
() Tj
T*
(Below are some examples of non-color-name keywords that define other qualities of a color) Tj
T*
() Tj
T*
() Tj
T*
(- **Very High Saturation**: For colors that are extremely intense or vivid.) Tj
T*
(    - Keywords: ?neon,? ?saturated,? ?intense,? ?brilliant,? ?flamboyant?) Tj
T*
(- **High Saturation**: These adjectives indicate vibrant or intense colors where the hue is pro) Tj
T*
(nounced.) Tj
T*
(    - Keywords: ?vibrant,? ?rich,? ?bold,? ?deep,? ?vivid,? ?intense,? ?pure,? ?electric?) Tj
T*
(- **Low Saturation**: These adjectives imply a muted or washed-out appearance, often making the) Tj
T*
( color appear closer to) Tj
T*
(  grayscale.) Tj
T*
(    - Keywords: ?dull,? ?muted,? ?washed-out,? ?faded,? ?soft,? ?pale,? ?subdued,? ?pastel?) Tj
T*
(- **Very Low Saturation**: For colors that are very desaturated, nearing grayscale.) Tj
T*
(    - Keywords: ?drab,? ?grayed,? ?washed-out,? ?faded,? ?subdued?) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(- **Very High Brightness**: Extremely bright colors, often implying high lightness or near-whit) Tj
T*
(eness.) Tj
T*
(    - Keywords: ?blinding,? ?radiant,? ?glowing,? ?white,? ?light-filled?) Tj
T*
(- **High Brightness**: Bright colors, often indicating a lighter shade or close to white.) Tj
T*
(    - Keywords: ?bright,? ?light,? ?pale,? ?glowing,? ?luminous,? ?brilliant,? ?clear,? ?radian) Tj
T*
(t?) Tj
T*
(- **Low Brightness**: These terms describe darker or dimmer shades, closer to black.) Tj
T*
(    - Keywords: ?dim,? ?dark,? ?shadowy,? ?faint,? ?gloomy,? ?subdued,? ?deep,? ?midnight?) Tj
T*
(- **Very Low Brightness**: Colors that are nearly black or very dark.) Tj
T*
(    - Keywords: ?pitch-dark,? ?black,? ?shadowed,? ?deep,? ?ink-like?) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(- **Very High Temperature \(Very Warm\)**: Intense warm colors, strongly leaning toward red, oran) Tj
T*
(ge, or intense yellow.) Tj
T*
ET
endstream
endobj
276 0 obj
<< /Length 2860 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(    - Keywords: ?fiery,? ?lava-like,? ?burning,? ?blazing?) Tj
T*
(- **High Temperature \(Warm Colors\)**: Warmer colors suggest a shift towards red or yellow tones) Tj
T*
(, giving the color a) Tj
T*
(  warmer feel.) Tj
T*
(    - Keywords: ?warm,? ?hot,? ?fiery,? ?sunny,? ?toasty,? ?scorching,? ?amber,? ?reddish?) Tj
T*
(- **Low Temperature \(Cool Colors\)**: Cooler colors involve blue or green tones, giving the colo) Tj
T*
(r a cooler or icy) Tj
T*
(  appearance.) Tj
T*
(    - Keywords: ?cool,? ?cold,? ?chilly,? ?icy,? ?frosty,? ?crisp,? ?bluish,? ?aqua?) Tj
T*
(- **Very Low Temperature \(Very Cool\)**: Extremely cool tones, verging on cold, icy blues or gre) Tj
T*
(ens.) Tj
T*
(    - Keywords: ?icy,? ?arctic,? ?frigid,? ?wintry,? ?glacial?) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(- **Very High Opacity**: Extremely solid or dense colors.) Tj
T*
(    - Keywords: ?impenetrable,? ?opaque,? ?thick?) Tj
T*
(- **High Opacity**: Describes solid colors without transparency.) Tj
T*
(    - Keywords: ?opaque,? ?solid,? ?dense,? ?thick,? ?cloudy,? ?impenetrable,? ?strong?) Tj
T*
(- **Low Opacity**: Indicates transparency or translucency, where the background may show throug) Tj
T*
(h.) Tj
T*
(    - Keywords: ?transparent,? ?translucent,? ?sheer,? ?see-through,? ?misty,? ?delicate,? ?air) Tj
T*
(y?) Tj
T*
(- **Very Low Opacity**: Highly transparent or barely visible colors.) Tj
T*
(    - Keywords: ?ethereal,? ?ghostly,? ?barely-there,? ?translucent?) Tj
T*
() Tj
T*
() Tj
T*
(## Related Projects) Tj
T*
() Tj
T*
(- [ovos-number-parser]\(https://github.com/OpenVoiceOS/ovos-number-parser\) - for handling number) Tj
T*
(s) Tj
T*
(- [ovos-date-parser]\(https://github.com/OpenVoiceOS/ovos-date-parser\) - for handling dates and ) Tj
T*
(times) Tj
T*
(- [ovos-lang-parser]\(https://github.com/OVOSHatchery/ovos-lang-parser\) - for handling languages) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/900-bus_client.md ===) Tj
T*
() Tj
T*
(# MessageBus Client) Tj
T*
() Tj
T*
(The [OVOS MessageBus Client]\(https://github.com/OpenVoiceOS/ovos-bus-client\) is a Python module) Tj
T*
( providing a simple interface for the OVOS MessageBus. It can be used to connect to OVOS, send ) Tj
T*
(messages, and react to messages sent by the OVOS system.) Tj
T*
() Tj
T*
(The module is available through [PyPI.org]\(https://pypi.org/project/ovos-bus-client\) or directl) Tj
T*
(y [on Github]\(https://github.com/OpenVoiceOS/ovos-bus-client\).) Tj
T*
() Tj
T*
(#### MessageBusClient\\\(\\\)) Tj
T*
() Tj
T*
(The `MessageBusClient\(\)` object can be setup to connect to any host and port as well as any end) Tj
T*
(point on that host. this makes it quite versatile and will work on the main bus as well as on a) Tj
T*
( gui bus. ) Tj
T*
() Tj
T*
(If no arguments are provided it will try to connect to a local instance of OVOS on the default ) Tj
T*
ET
endstream
endobj
277 0 obj
<< /Length 2355 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(endpoint and port.) Tj
T*
() Tj
T*
(> ? in skills and plugins `self.bus` provides a MessageBusClient connections out of the box, yo) Tj
T*
(u don't usually need to initialize this yourself) Tj
T*
() Tj
T*
(#### Message\\\(\\\)) Tj
T*
() Tj
T*
(The `Message` object is a representation of the messagebus message, this will always contain a ) Tj
T*
(message type but can also contain data and context. Data is usually real information while the ) Tj
T*
(context typically contain information on where the message originated or who the intended recip) Tj
T*
(ient is.) Tj
T*
() Tj
T*
(```python) Tj
T*
(Message\('MESSAGE_TYPE', data={'meaning': 42}, context={'origin': 'A.Dent'}\)) Tj
T*
(```) Tj
T*
() Tj
T*
(### Sending a Message) Tj
T*
() Tj
T*
(In the following example we setup an instance of the MessageBusClient then emit a `speak` Messa) Tj
T*
(ge with a data payload. OVOS would consume this Message and speak "Hello World".) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_bus_client import MessageBusClient, Message) Tj
T*
() Tj
T*
(print\('Setting up client to connect to a local mycroft instance'\)) Tj
T*
(client = MessageBusClient\(\)) Tj
T*
(client.run_in_thread\(\)) Tj
T*
() Tj
T*
(print\('Sending speak message...'\)) Tj
T*
(client.emit\(Message\('speak', data={'utterance': 'Hello World'}\)\)) Tj
T*
(```) Tj
T*
() Tj
T*
(### Listening for a Message) Tj
T*
() Tj
T*
(In the following example we setup an instance of the MessageBusClient. We then define a functio) Tj
T*
(n `print_utterance` that prints the `utterance` from a Message. This is registered as a handler) Tj
T*
( for the `speak` Message. Finally we call the `run_forever\(\)` method to keep the `client` runni) Tj
T*
(ng.) Tj
T*
() Tj
T*
(If this code had run before the example above, it would catch the `speak` Message we emitted an) Tj
T*
(d print: `OVOS said "Hello World"`) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_bus_client import MessageBusClient, Message) Tj
T*
() Tj
T*
(print\('Setting up client to connect to a local ovos instance'\)) Tj
T*
(client = MessageBusClient\(\)) Tj
T*
() Tj
T*
(def print_utterance\(message\):) Tj
T*
(    print\('OVOS said "{}"'.format\(message.data.get\('utterance'\)\)\)) Tj
T*
() Tj
T*
() Tj
T*
(print\('Registering handler for speak message...'\)) Tj
T*
(client.on\('speak', print_utterance\)) Tj
T*
ET
endstream
endobj
278 0 obj
<< /Length 2188 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(client.run_forever\(\)) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/910-quebra_frases.md ===) Tj
T*
() Tj
T*
(# Quebra Frases) Tj
T*
() Tj
T*
(The `quebra_frases` package provides essential text processing tools for tokenization, chunking) Tj
T*
(, and token analysis. ) Tj
T*
() Tj
T*
(**No External Dependencies**: quebra_frases is designed to be lightweight and does not rely on ) Tj
T*
(external libraries other than regex for efficient text processing.) Tj
T*
() Tj
T*
(## Installation) Tj
T*
() Tj
T*
(You can install the `quebra_frases` package using pip:) Tj
T*
() Tj
T*
(```bash) Tj
T*
(pip install quebra_frases) Tj
T*
(```) Tj
T*
() Tj
T*
(## Overview) Tj
T*
() Tj
T*
(The `quebra_frases` package includes several modules and functionalities:) Tj
T*
() Tj
T*
(- **Tokenization**: Text tokenization is the process of splitting text into meaningful units su) Tj
T*
(ch as words, sentences, or paragraphs.) Tj
T*
(- **Chunking**: Text chunking involves dividing text into smaller chunks based on specified del) Tj
T*
(imiters or patterns.) Tj
T*
(- **Token Analysis**: This package also provides methods to analyze tokens across multiple text) Tj
T*
( samples, extracting common, uncommon, and exclusive tokens.) Tj
T*
() Tj
T*
(## Usage) Tj
T*
() Tj
T*
(### Tokenization) Tj
T*
() Tj
T*
(The `quebra_frases` package offers various tokenization methods:) Tj
T*
() Tj
T*
(- `word_tokenize\(input_string\)`: Tokenizes an input string into words.) Tj
T*
(- `sentence_tokenize\(input_string\)`: Splits an input string into sentences.) Tj
T*
(- `paragraph_tokenize\(input_string\)`: Divides an input string into paragraphs.) Tj
T*
() Tj
T*
(### Chunking) Tj
T*
() Tj
T*
(Chunking is performed using the following functions:) Tj
T*
() Tj
T*
(- `chunk\(text, delimiters\)`: Splits text into chunks based on specified delimiters.) Tj
T*
(- `get_common_chunks\(samples\)`: Extracts common chunks from a list of text samples.) Tj
T*
(- `get_uncommon_chunks\(samples\)`: Extracts uncommon chunks from text samples.) Tj
T*
(- `get_exclusive_chunks\(samples\)`: Extracts exclusive chunks that are unique to each text sampl) Tj
T*
(e.) Tj
T*
() Tj
T*
ET
endstream
endobj
279 0 obj
<< /Length 2826 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(### Token Analysis) Tj
T*
() Tj
T*
(Token analysis functions are available for text sample comparison:) Tj
T*
() Tj
T*
(- `get_common_tokens\(samples\)`: Extracts tokens that are common across multiple text samples.) Tj
T*
(- `get_uncommon_tokens\(samples\)`: Extracts tokens that are uncommon across multiple text sample) Tj
T*
(s.) Tj
T*
(- `get_exclusive_tokens\(samples\)`: Extracts tokens that are exclusive to each individual text s) Tj
T*
(ample.) Tj
T*
() Tj
T*
(## Example Usage) Tj
T*
() Tj
T*
(Tokenization) Tj
T*
() Tj
T*
(```python) Tj
T*
(import quebra_frases) Tj
T*
() Tj
T*
(sentence = "sometimes i develop stuff for mycroft, mycroft is FOSS!") Tj
T*
(print\(quebra_frases.word_tokenize\(sentence\)\)) Tj
T*
(# ['sometimes', 'i', 'develop', 'stuff', 'for', 'mycroft', ',', ) Tj
T*
(# 'mycroft', 'is', 'FOSS', '!']) Tj
T*
() Tj
T*
(print\(quebra_frases.span_indexed_word_tokenize\(sentence\)\)) Tj
T*
(# [\(0, 9, 'sometimes'\), \(10, 11, 'i'\), \(12, 19, 'develop'\), ) Tj
T*
(# \(20, 25, 'stuff'\), \(26, 29, 'for'\), \(30, 37, 'mycroft'\), ) Tj
T*
(# \(37, 38, ','\), \(39, 46, 'mycroft'\), \(47, 49, 'is'\), ) Tj
T*
(# \(50, 54, 'FOSS'\), \(54, 55, '!'\)]) Tj
T*
() Tj
T*
(print\(quebra_frases.sentence_tokenize\() Tj
T*
(    "Mr. Smith bought cheapsite.com for 1.5 million dollars, i.e. he paid a lot for it. Did he ) Tj
T*
(mind? Adam Jones Jr. thinks he didn't. In any case, this isn't true... Well, with a probability) Tj
T*
( of .9 it isn't."\)\)) Tj
T*
(#['Mr. Smith bought cheapsite.com for 1.5 million dollars, i.e. he paid a lot for it.',) Tj
T*
(#'Did he mind?',) Tj
T*
(#"Adam Jones Jr. thinks he didn't.",) Tj
T*
(#"In any case, this isn't true...",) Tj
T*
(#"Well, with a probability of .9 it isn't."]) Tj
T*
() Tj
T*
(print\(quebra_frases.span_indexed_sentence_tokenize\() Tj
T*
(    "Mr. Smith bought cheapsite.com for 1.5 million dollars, i.e. he paid a lot for it. Did he ) Tj
T*
(mind? Adam Jones Jr. thinks he didn't. In any case, this isn't true... Well, with a probability) Tj
T*
( of .9 it isn't."\)\)) Tj
T*
(#[\(0, 82, 'Mr. Smith bought cheapsite.com for 1.5 million dollars, i.e. he paid a lot for it.'\)) Tj
T*
(,) Tj
T*
(#\(83, 95, 'Did he mind?'\),) Tj
T*
(#\(96, 128, "Adam Jones Jr. thinks he didn't."\),) Tj
T*
(#\(129, 160, "In any case, this isn't true..."\),) Tj
T*
(#\(161, 201, "Well, with a probability of .9 it isn't."\)]) Tj
T*
() Tj
T*
(print\(quebra_frases.paragraph_tokenize\('This is a paragraph!\\n\\t\\nThis is another ') Tj
T*
(                                       'one.\\t\\n\\tUsing multiple lines\\t   \\n     ') Tj
T*
(                                       '\\n\\tparagraph 3 says goodbye'\)\)) Tj
T*
(#['This is a paragraph!\\n\\t\\n',) Tj
T*
(#'This is another one.\\t\\n\\tUsing multiple lines\\t   \\n     \\n',) Tj
T*
ET
endstream
endobj
280 0 obj
<< /Length 2243 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(#'\\tparagraph 3 says goodbye']) Tj
T*
() Tj
T*
(print\(quebra_frases.span_indexed_paragraph_tokenize\('This is a paragraph!\\n\\t\\nThis is another ) Tj
T*
(') Tj
T*
(                                                    'one.\\t\\n\\tUsing multiple lines\\t   \\n     ) Tj
T*
(') Tj
T*
(                                                    '\\n\\tparagraph 3 says goodbye'\)\)) Tj
T*
(#[\(0, 23, 'This is a paragraph!\\n\\t\\n'\),) Tj
T*
(#\(23, 77, 'This is another one.\\t\\n\\tUsing multiple lines\\t   \\n     \\n'\),) Tj
T*
(#\(77, 102, '\\tparagraph 3 says goodbye'\)]) Tj
T*
(```) Tj
T*
() Tj
T*
(chunking) Tj
T*
() Tj
T*
(```python) Tj
T*
(import quebra_frases) Tj
T*
() Tj
T*
(delimiters = ["OpenVoiceOS"]) Tj
T*
(sentence = "sometimes i develop stuff for OpenVoiceOS, OpenVoiceOS is FOSS!") Tj
T*
(print\(quebra_frases.chunk\(sentence, delimiters\)\)) Tj
T*
(# ['sometimes i develop stuff for', 'OpenVoiceOS', ',', 'OpenVoiceOS', 'is FOSS!']) Tj
T*
(```) Tj
T*
() Tj
T*
(token analysis) Tj
T*
() Tj
T*
(```python) Tj
T*
(import quebra_frases) Tj
T*
() Tj
T*
(samples = ["tell me what do you dream about",) Tj
T*
(           "tell me what did you dream about",) Tj
T*
(           "tell me what are your dreams about",) Tj
T*
(           "tell me what were your dreams about"]) Tj
T*
(print\(quebra_frases.get_common_chunks\(samples\)\)) Tj
T*
(# {'tell me what', 'about'}) Tj
T*
(print\(quebra_frases.get_uncommon_chunks\(samples\)\)) Tj
T*
(# {'do you dream', 'did you dream', 'are your dreams', 'were your dreams'}) Tj
T*
(print\(quebra_frases.get_exclusive_chunks\(samples\)\)) Tj
T*
(# {'do', 'did', 'are', 'were'}) Tj
T*
() Tj
T*
(samples = ["what is the speed of light",) Tj
T*
(           "what is the maximum speed of a firetruck",) Tj
T*
(           "why are fire trucks red"]) Tj
T*
(print\(quebra_frases.get_exclusive_chunks\(samples\)\)) Tj
T*
(# {'light', 'maximum', 'a firetruck', 'why are fire trucks red'}\)) Tj
T*
(print\(quebra_frases.get_exclusive_chunks\(samples, squash=False\)\)) Tj
T*
(#[['light'],) Tj
T*
(#['maximum', 'a firetruck'],) Tj
T*
(#['why are fire trucks red']]\)) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/920-padacioso.md ===) Tj
T*
() Tj
T*
(# Padacioso) Tj
T*
ET
endstream
endobj
281 0 obj
<< /Length 1925 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(*A lightweight, dead-simple intent parser*) Tj
T*
() Tj
T*
(Built on top of [simplematch]\(https://github.com/tfeldmann/simplematch\), inspired by [Padaos]\(h) Tj
T*
(ttps://github.com/MycroftAI/padaos\)) Tj
T*
() Tj
T*
(## Example) Tj
T*
() Tj
T*
(```python) Tj
T*
(from padacioso import IntentContainer) Tj
T*
() Tj
T*
(container = IntentContainer\(\)) Tj
T*
() Tj
T*
(## samples) Tj
T*
(container.add_intent\('hello', ['hello', 'hi', 'how are you', "what's up"]\)) Tj
T*
() Tj
T*
(## "optionally" syntax) Tj
T*
(container.add_intent\('hello world', ["hello [world]"]\)) Tj
T*
() Tj
T*
(## "one_of" syntax) Tj
T*
(container.add_intent\('greeting', ["\(hi|hey|hello\)"]\)) Tj
T*
() Tj
T*
(## entity extraction) Tj
T*
(container.add_intent\('buy', [) Tj
T*
(    'buy {item}', 'purchase {item}', 'get {item}', 'get {item} for me') Tj
T*
(]\)) Tj
T*
(container.add_intent\('search', [) Tj
T*
(    'search for {query} on {engine}', 'using {engine} \(search|look\) for {query}',) Tj
T*
(    'find {query} \(with|using\) {engine}') Tj
T*
(]\)) Tj
T*
(container.add_entity\('engine', ['abc', 'xyz']\)) Tj
T*
(container.calc_intent\('find cats using xyz'\)) Tj
T*
(# {'conf': 1.0, 'name': 'search', 'entities': {'query': 'cats', 'engine': 'xyz'}}) Tj
T*
() Tj
T*
(## wildcards syntax) Tj
T*
(container.add_intent\('say', ["say *"]\)) Tj
T*
(container.calc_intent\('say something, whatever'\)) Tj
T*
(# {'conf': 0.85, 'entities': {}, 'name': 'test'}) Tj
T*
() Tj
T*
(## typed entities syntax) Tj
T*
(container.add_intent\('pick_number', ['* number {number:int}']\)) Tj
T*
(container.calc_intent\('i want number 3'\)) Tj
T*
(# {'conf': 0.85, 'entities': {'number': 3}, 'name': 'pick_number'}\)) Tj
T*
() Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/99-architecture-overview.md ===) Tj
T*
() Tj
T*
(# Architecture Overview) Tj
T*
() Tj
T*
(![]\(img/Full%20flow.jpeg\)) Tj
T*
() Tj
T*
() Tj
T*
ET
endstream
endobj
282 0 obj
<< /Length 2007 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(=== docs/990-eggscript.md ===) Tj
T*
() Tj
T*
(# Eggscript) Tj
T*
() Tj
T*
(Eggscript is a markup language that can be "compiled" into a valid OVOS Skill) Tj
T*
() Tj
T*
(> **EXPERIMENTAL** This is an experimental feature) Tj
T*
() Tj
T*
(It is intended as an easy way for user to create simple skills, while offering an easy transiti) Tj
T*
(on to regular skills) Tj
T*
() Tj
T*
(It also helps getting a lot of the boilerplate done for you when getting started) Tj
T*
() Tj
T*
(You can find a developer preview of eggscript in [github]\(https://github.com/OpenVoiceOS/eggscr) Tj
T*
(ipt\)) Tj
T*
() Tj
T*
(## Crash Course) Tj
T*
() Tj
T*
(Example files written in eggscript) Tj
T*
() Tj
T*
() Tj
T*
(hello.eggscript) Tj
T*
() Tj
T*
(        // this is a comment) Tj
T*
(        // all comments and blank lines are ignored) Tj
T*
(        // special interperter variables can be set with @var syntax) Tj
T*
(        // - @name -> skill name) Tj
T*
(        // - @author -> skill author) Tj
T*
(        // - @email -> author contact) Tj
T*
(        // - @license -> skill license) Tj
T*
(        // - @interpreter -> supported interperter, eg, cli) Tj
T*
(        // - @compiler -> supported compiler, eg, mycroft skill) Tj
T*
() Tj
T*
(        @author jarbasai) Tj
T*
(        @email jarbasai@mailfence.com) Tj
T*
(        @license MIT) Tj
T*
(        @name hello world) Tj
T*
(        @url https://github.com/author/repo) Tj
T*
(        @version 0.1.0) Tj
T*
() Tj
T*
(        // this script can be used standalone in the cli) Tj
T*
(        @interpreter cli) Tj
T*
(        // a standalone python file can be generated) Tj
T*
(        @compiler cli) Tj
T*
(        // a mycroft skill can be generated) Tj
T*
(        @compiler mycroft) Tj
T*
() Tj
T*
(        // intent definition) Tj
T*
(        # hello world) Tj
T*
(        + hello world) Tj
T*
(        - hello world) Tj
T*
() Tj
T*
(        // you can define python code, executed after TTS) Tj
T*
(        ```) Tj
T*
ET
endstream
endobj
283 0 obj
<< /Length 1874 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(        hello = "world") Tj
T*
(        if hello == "world":) Tj
T*
(            print\("python code!"\)) Tj
T*
(        ```) Tj
T*
() Tj
T*
() Tj
T*
(dialogs.eggscript) Tj
T*
() Tj
T*
() Tj
T*
(        // this is a comment) Tj
T*
(        // all comments and blank lines are ignored) Tj
T*
() Tj
T*
(        // text after # is the intent name) Tj
T*
(        # hello world) Tj
T*
(        // text after + is the user utterance) Tj
T*
(        + hello world) Tj
T*
(        // text after - is mycroft's response) Tj
T*
(        - hello world) Tj
T*
() Tj
T*
() Tj
T*
(        # weather in location) Tj
T*
(        // you can capture variables and use them using {var} syntax) Tj
T*
(        + how is the weather in {location}) Tj
T*
(        - how am i supposed to know the weather in {location}) Tj
T*
() Tj
T*
() Tj
T*
(        # weather) Tj
T*
(        // this will create a intent file with the 3 + utterances) Tj
T*
(        + what is the weather like) Tj
T*
(        + how is the weather) Tj
T*
(        + how does it look outside) Tj
T*
(        // this will create a dialog file with the 2 - utterances) Tj
T*
(        - i do not know how to check the weather) Tj
T*
(        - stick your head ouf of the window and check for yourself) Tj
T*
() Tj
T*
() Tj
T*
(        # count to 10) Tj
T*
(        + count to 10) Tj
T*
(        // if ident level matches its an alternate dialog) Tj
T*
(        - i will only count to 5) Tj
T*
(        - i only know how to count to 5) Tj
T*
(          // use tab for identation) Tj
T*
(          // each ident level defines a new utterance to be spoken) Tj
T*
(              - 1) Tj
T*
(                  - 2) Tj
T*
(                      - 3) Tj
T*
(                          - 4) Tj
T*
(                              - 5) Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
(layers.eggscript) Tj
T*
() Tj
T*
() Tj
T*
ET
endstream
endobj
284 0 obj
<< /Length 1626 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(        // this is a comment) Tj
T*
(        // all comments and blank lines are ignored) Tj
T*
(        // this sample scripts show intent layers usage) Tj
T*
() Tj
T*
() Tj
T*
(        // the number of # in intent definition determines an intent layer) Tj
T*
(        # tell me about) Tj
T*
(        + tell me about {thing}) Tj
T*
(        - {thing} exists) Tj
T*
() Tj
T*
(        // N times + will enable layer N) Tj
T*
(        // to enable layer 2) Tj
T*
(        ++) Tj
T*
() Tj
T*
() Tj
T*
(        // use N times # for layer N) Tj
T*
(        // this intent is in layer 2, enabled by previous intent) Tj
T*
(        ## tell me more) Tj
T*
(        + tell me more) Tj
T*
(        + continue) Tj
T*
(        - i do not know more) Tj
T*
() Tj
T*
(        // N times - will disable layer N) Tj
T*
(        // to disable layer 2) Tj
T*
(        --) Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
(## Interpreters) Tj
T*
() Tj
T*
(Can run a subset of eggscript directly, enough to test simple skills in the terminal) Tj
T*
() Tj
T*
(```python) Tj
T*
(from eggscript import CliInterpreter) Tj
T*
(from os.path import dirname) Tj
T*
() Tj
T*
(c = CliInterpreter\(\)) Tj
T*
(c.load_eggscript_file\(f"{dirname\(__file__\)}/dialogs.eggscript"\)) Tj
T*
(c.run\(\)) Tj
T*
() Tj
T*
(```) Tj
T*
() Tj
T*
(## Compilers) Tj
T*
() Tj
T*
(```python) Tj
T*
(from eggscript import OVOSSkillCompiler) Tj
T*
(from os.path import dirname) Tj
T*
() Tj
T*
(c = OVOSSkillCompiler\(\)) Tj
T*
(c.load_eggscript_file\(f"{dirname\(__file__\)}/layers.eggscript"\)) Tj
T*
(c.export\("myskill"\)) Tj
T*
(```) Tj
T*
() Tj
T*
ET
endstream
endobj
285 0 obj
<< /Length 2020 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(You can now continue extending your exported skill to add more advanced functionality) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/999-ovos_bigscreen.md ===) Tj
T*
() Tj
T*
(# Plasma Bigscreen - OVOS Edition) Tj
T*
() Tj
T*
(**EXPERIMENTAL** - experimental repository) Tj
T*
() Tj
T*
(> **WARNING** - Not actively maintained, this fork is essentially a snapshot in time since Plas) Tj
T*
(ma Bigscreen dropped support for OVOS and moved to QT6) Tj
T*
() Tj
T*
(## Introduction) Tj
T*
() Tj
T*
(A big launcher giving you easy access to any installed apps and skills.) Tj
T*
(Controllable via voice or TV remote.) Tj
T*
() Tj
T*
(This project is using various open-source components like Plasma Bigscreen, OpenVoiceOS and lib) Tj
T*
(cec.) Tj
T*
() Tj
T*
(![ovos-bigscreen]\(https://github.com/OpenVoiceOS/ovos-plasma-bigscreen/assets/33701864/afcc5e15) Tj
T*
(-146b-4f38-be8d-0e5a56acaa55\)) Tj
T*
() Tj
T*
(This is a fork from https://invent.kde.org/plasma/plasma-bigscreen/) Tj
T*
() Tj
T*
(Changes:) Tj
T*
() Tj
T*
(- moves from Mycroft to OVOS ) Tj
T*
() Tj
T*
(- "mycroft" is no longer optional and it's integration is enabled by default) Tj
T*
() Tj
T*
(- Remove MycroftSkillInstaller \(not OVOS compliant\)) Tj
T*
() Tj
T*
(- Remove "Recent" section) Tj
T*
() Tj
T*
(- Remove generic "Applications" section) Tj
T*
() Tj
T*
(- Add "Media" section) Tj
T*
() Tj
T*
(- Add "Network" section) Tj
T*
() Tj
T*
(- Add "Graphics" section) Tj
T*
() Tj
T*
(## Voice Control) Tj
T*
() Tj
T*
(Bigscreen supports OpenVoiceOS, a free and open-source voice assistant that can be run complete) Tj
T*
(ly decentralized on your own server.) Tj
T*
() Tj
T*
(Download new apps \(aka skills\) for your Bigscreen or add your own ones for others to enjoy.) Tj
T*
() Tj
T*
(## Remote control your TV via CEC) Tj
T*
() Tj
T*
(CEC \(Consumer Electronics Control\) is a standard to control devices over HDMI.) Tj
T*
(Use your normal TV remote control, or a RC with built-in microphone for voice control and optio) Tj
T*
ET
endstream
endobj
286 0 obj
<< /Length 2433 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(nal mouse simulation.) Tj
T*
() Tj
T*
(## Application Launcher) Tj
T*
() Tj
T*
(Bigscreen replaces your DE, to stop an application from showing up you can edit `/etc/xdg/appli) Tj
T*
(cations-blacklistrc`) Tj
T*
() Tj
T*
(Adding new applications only requires a [.desktop file]\(https://specifications.freedesktop.org/) Tj
T*
(desktop-entry-spec/desktop-entry-spec-latest.html\)) Tj
T*
() Tj
T*
(see [plasma-bigscreen/bigscreen-image-settings]\(https://invent.kde.org/plasma-bigscreen/bigscre) Tj
T*
(en-image-settings\) for more settings you might want to tweak in a Bigscreen image) Tj
T*
() Tj
T*
(## Installing from source) Tj
T*
() Tj
T*
(```bash) Tj
T*
(mkdir build) Tj
T*
(cd build) Tj
T*
(cmake .. -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release   -DKDE_INSTALL_LIBDIR=lib -DKD) Tj
T*
(E_INSTALL_USE_QT_SYS_PATHS=ON -DCMAKE_CXX_COMPILER=clazy) Tj
T*
(make) Tj
T*
(sudo make install) Tj
T*
(```) Tj
T*
() Tj
T*
(## Running) Tj
T*
() Tj
T*
(To start the Bigscreen homescreen in a window, run:) Tj
T*
() Tj
T*
(```) Tj
T*
(QT_QPA_PLATFORM=wayland dbus-run-session kwin_wayland "plasmashell -p org.kde.plasma.mycroft.bi) Tj
T*
(gscreen") Tj
T*
(```) Tj
T*
() Tj
T*
(you can also select [plasma-bigscreen-x11]\(bin/plasma-bigscreen-x11\) on your login screen as DE) Tj
T*
() Tj
T*
(## Related repositories) Tj
T*
() Tj
T*
(- Image Settings for Bigscreen https://invent.kde.org/plasma-bigscreen/bigscreen-image-settings) Tj
T*
(- Plasma Remote Controllers https://invent.kde.org/plasma-bigscreen/plasma-remotecontrollers) Tj
T*
(- ovos-gui-app - https://github.com/OpenVoiceOS/mycroft-gui-qt5) Tj
T*
(- bigscreen gui extension https://github.com/OpenVoiceOS/ovos-gui-plugin-bigscreen) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/adapt_pipeline.md ===) Tj
T*
() Tj
T*
(# Adapt Pipeline Plugin) Tj
T*
() Tj
T*
(The **Adapt Pipeline Plugin** brings rule-based intent parsing to the **OVOS intent pipeline** ) Tj
T*
(using the Adapt parser. It supports `high`, `medium`, and `low` confidence intent detection and) Tj
T*
( integrates seamlessly with OVOS?s multi-stage pipeline.) Tj
T*
() Tj
T*
(While Adapt is powerful for **explicit, deterministic matching**, it has notable limitations in) Tj
T*
( multilingual environments and complex skill ecosystems. **In general, Adapt is not recommended) Tj
T*
( for broad deployments**?it is best suited for **personal skills** where you control the full c) Tj
T*
ET
endstream
endobj
287 0 obj
<< /Length 1976 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(ontext and can craft precise intent rules.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Pipeline Stages) Tj
T*
() Tj
T*
(This plugin registers three pipelines:) Tj
T*
() Tj
T*
(| Pipeline ID    | Description                          | Recommended Use        |) Tj
T*
(| -------------- | ------------------------------------ | ---------------------- |) Tj
T*
(| `adapt_high`   | High-confidence Adapt intent matches | ? Personal skills only |) Tj
T*
(| `adapt_medium` | Medium-confidence Adapt matches      | ?? Use with caution    |) Tj
T*
(| `adapt_low`    | Low-confidence Adapt matches         | ? Not recommended     |) Tj
T*
() Tj
T*
(Each pipeline is scored by Adapt and routed according to configured confidence thresholds.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Limitations) Tj
T*
() Tj
T*
(Adapt requires **hand-crafted rules** for every intent:) Tj
T*
() Tj
T*
(* ? **Poor scalability** ? hard to manage with many skills) Tj
T*
(* ? **Difficult to localize** ? rules rely on exact words and phrases) Tj
T*
(* ? **Prone to conflicts** ? multiple skills defining overlapping rules can cause collisions or) Tj
T*
( missed matches) Tj
T*
() Tj
T*
(As your skill library grows or if you operate in a multilingual setup, these problems increase.) Tj
T*
() Tj
T*
(**Recommendation:**) Tj
T*
() Tj
T*
(> ? Use Adapt **only** in personal projects or controlled environments where you can fully defi) Tj
T*
(ne and test every possible phrase.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Configuration) Tj
T*
() Tj
T*
(Adapt confidence thresholds can be set in `ovos.conf`:) Tj
T*
() Tj
T*
(```json) Tj
T*
("intents": {) Tj
T*
(  "adapt": {) Tj
T*
(    "conf_high": 0.65,) Tj
T*
(    "conf_med": 0.45,) Tj
T*
(    "conf_low": 0.25) Tj
T*
(  }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(* These thresholds control routing into `adapt_high`, `adapt_medium`, and `adapt_low`.) Tj
T*
(* The plugin is included by default in OVOS.) Tj
T*
() Tj
T*
(---) Tj
T*
ET
endstream
endobj
288 0 obj
<< /Length 2162 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(## When to Use Adapt in OVOS) Tj
T*
() Tj
T*
(Use this plugin **only when**:) Tj
T*
() Tj
T*
(* You are building **a personal or private skill**.) Tj
T*
(* You need **strict, predictable matching** \(e.g., command-and-control\).) Tj
T*
(* You are working in **a single language** and **control all skill interactions**.) Tj
T*
() Tj
T*
(Avoid using Adapt for public-facing or general-purpose assistant skills. Modern alternatives li) Tj
T*
(ke **Padatious**, **LLM-based parsers**, or **neural fallback models** are more scalable and ad) Tj
T*
(aptable.) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/audio_transformers.md ===) Tj
T*
() Tj
T*
(# Audio Transformers) Tj
T*
() Tj
T*
(**Audio Transformers** in OpenVoiceOS \(OVOS\) are plugins designed to process raw audio input be) Tj
T*
(fore it reaches the Speech-to-Text \(STT\) engine. They enable functionalities such as noise redu) Tj
T*
(ction, language detection, and data transmission over sound, thereby enhancing the accuracy and) Tj
T*
( versatility of voice interactions.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Processing Flow) Tj
T*
() Tj
T*
(The typical audio processing pipeline in OVOS is as follows:) Tj
T*
() Tj
T*
(1. **Audio Capture**: Microphone captures raw audio input.) Tj
T*
(2. **Audio Transformation**: Audio Transformers preprocess the raw audio.) Tj
T*
(3. **Speech-to-Text \(STT\)**: Transformed audio is converted into text.) Tj
T*
(4. **Intent Recognition**: Text is analyzed to determine user intent.) Tj
T*
() Tj
T*
(Audio Transformers operate in step 2, allowing for enhancements and modifications to the audio ) Tj
T*
(signal before transcription.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Configuration) Tj
T*
() Tj
T*
(To enable Audio Transformers, add them to your `mycroft.conf` under the `audio_transformers` se) Tj
T*
(ction:) Tj
T*
() Tj
T*
(```json) Tj
T*
("audio_transformers": {) Tj
T*
(  "plugin_name": {) Tj
T*
(    // plugin-specific configuration) Tj
T*
(  }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(Replace `"plugin_name"` with the identifier of the desired plugin and provide any necessary con) Tj
T*
(figuration parameters.) Tj
T*
ET
endstream
endobj
289 0 obj
<< /Length 1732 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Available Audio Transformer Plugins) Tj
T*
() Tj
T*
(### **OVOS GGWave Audio Transformer**) Tj
T*
() Tj
T*
(* **Purpose**: Enables data transmission over sound using audio QR codes.) Tj
T*
(* **Features**:) Tj
T*
() Tj
T*
(    * Transmit data such as Wi-Fi credentials, URLs, or commands via sound.) Tj
T*
(    * Integrates with the `ovos-skill-ggwave` for voice-controlled activation.) Tj
T*
() Tj
T*
(* **Installation**:) Tj
T*
() Tj
T*
(```bash) Tj
T*
(  pip install ovos-audio-transformer-plugin-ggwave) Tj
T*
(```) Tj
T*
() Tj
T*
(* **Configuration Example**:) Tj
T*
() Tj
T*
(```json) Tj
T*
(  "audio_transformers": {) Tj
T*
(    "ovos-audio-transformer-plugin-ggwave": {) Tj
T*
(      "start_enabled": true) Tj
T*
(    }) Tj
T*
(  }) Tj
T*
(```) Tj
T*
() Tj
T*
(For more information, visit the [GitHub repository]\(https://github.com/OpenVoiceOS/ovos-audio-t) Tj
T*
(ransformer-plugin-ggwave\).) Tj
T*
() Tj
T*
(### **OVOS SpeechBrain Language Detection Transformer**) Tj
T*
() Tj
T*
(* **Purpose**: Automatically detects the language of spoken input to route it to the appropriat) Tj
T*
(e STT engine.) Tj
T*
(* **Features**:) Tj
T*
() Tj
T*
(    * Utilizes SpeechBrain models for language identification.) Tj
T*
(    * Enhances multilingual support by dynamically selecting the correct language model.) Tj
T*
() Tj
T*
(* **Installation**:) Tj
T*
() Tj
T*
(```bash) Tj
T*
(  pip install ovos-audio-transformer-plugin-speechbrain-langdetect) Tj
T*
(```) Tj
T*
() Tj
T*
(* **Configuration Example**:) Tj
T*
() Tj
T*
(```json) Tj
T*
(  "audio_transformers": {) Tj
T*
(    "ovos-audio-transformer-plugin-speechbrain-langdetect": {}) Tj
T*
(  }) Tj
T*
(```) Tj
T*
ET
endstream
endobj
290 0 obj
<< /Length 2197 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(For more information, visit the [GitHub repository]\(https://github.com/OpenVoiceOS/ovos-audio-t) Tj
T*
(ransformer-plugin-speechbrain-langdetect\).) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Creating Custom Audio Transformers) Tj
T*
() Tj
T*
(To develop your own Audio Transformer plugin for OVOS, implement a class that extends the base ) Tj
T*
(`AudioTransformer` template. ) Tj
T*
() Tj
T*
(This class allows you to process raw audio chunks at various stages before the Speech-to-Text \() Tj
T*
(STT\) engine processes the audio.) Tj
T*
() Tj
T*
(### Base Class Overview) Tj
T*
() Tj
T*
(Your custom transformer should subclass:) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_plugin_manager.templates.transformers import AudioTransformer) Tj
T*
() Tj
T*
(class MyCustomAudioTransformer\(AudioTransformer\):) Tj
T*
(    def __init__\(self, config=None\):) Tj
T*
(        super\(\).__init__\("my-custom-audio-transformer", priority=10, config=config\)) Tj
T*
() Tj
T*
(    def on_audio\(self, audio_data\):) Tj
T*
(        # Process non-speech audio chunks \(e.g., noise\)) Tj
T*
(        return audio_data) Tj
T*
() Tj
T*
(    def on_hotword\(self, audio_data\):) Tj
T*
(        # Process full hotword/wakeword audio chunks) Tj
T*
(        return audio_data) Tj
T*
() Tj
T*
(    def on_speech\(self, audio_data\):) Tj
T*
(        # Process speech audio chunks during recording \(not full utterance\)) Tj
T*
(        return audio_data) Tj
T*
() Tj
T*
(    def on_speech_end\(self, audio_data\):) Tj
T*
(        # Process full speech utterance audio chunk) Tj
T*
(        return audio_data) Tj
T*
() Tj
T*
(    def transform\(self, audio_data\):) Tj
T*
(        # Optionally perform final transformation before STT stage) Tj
T*
(        # Return tuple \(transformed_audio_data, optional_message_context\)) Tj
T*
(        return audio_data, {}) Tj
T*
(```) Tj
T*
() Tj
T*
(### Lifecycle & Methods) Tj
T*
() Tj
T*
(* **Initialization**: Override `initialize\(\)` for setup steps.) Tj
T*
(* **Audio Feed Handlers**:) Tj
T*
() Tj
T*
(      * `on_audio`: Handle background or non-speech chunks.) Tj
T*
(      * `on_hotword`: Handle wakeword/hotword chunks.) Tj
T*
ET
endstream
endobj
291 0 obj
<< /Length 1869 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(      * `on_speech`: Handle speech chunks during recording.) Tj
T*
(      * `on_speech_end`: Handle full utterance audio.) Tj
T*
() Tj
T*
(* **Final Transformation**:) Tj
T*
() Tj
T*
(      * `transform`: Return the final processed audio and optionally a dictionary of additional) Tj
T*
( metadata/context that will be passed along with the `recognize_loop:utterance` message.) Tj
T*
() Tj
T*
(* **Reset**: The `reset\(\)` method clears internal audio buffers, called after STT completes.) Tj
T*
() Tj
T*
(### Plugin Registration) Tj
T*
() Tj
T*
(In your `setup.py`, register the plugin entry point:) Tj
T*
() Tj
T*
(```python) Tj
T*
(entry_points={) Tj
T*
(    'ovos.plugin.audio_transformer': [) Tj
T*
(        'my-custom-audio-transformer = my_module:MyCustomAudioTransformer') Tj
T*
(    ]) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(### Configuration Example) Tj
T*
() Tj
T*
(Add your transformer to `mycroft.conf`:) Tj
T*
() Tj
T*
(```json) Tj
T*
("audio_transformers": {) Tj
T*
(  "my-custom-audio-transformer": {) Tj
T*
(    // plugin-specific config options here) Tj
T*
(  }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
(=== docs/converse_pipeline.md ===) Tj
T*
() Tj
T*
(# Converse Pipeline) Tj
T*
() Tj
T*
(The **Converse Pipeline** in **OpenVoiceOS \(OVOS\)** manages active conversational contexts betw) Tj
T*
(een the assistant and skills. It allows skills to keep handling user input across multiple turn) Tj
T*
(s, enabling more natural, stateful conversations.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Purpose) Tj
T*
() Tj
T*
(The **Converse pipeline** enables **multi-turn conversations** by prioritizing which skills are) Tj
T*
( given the opportunity to handle an utterance through their `converse\(\)` method before normal i) Tj
T*
(ntent parsing occurs.) Tj
T*
() Tj
T*
(Key purposes include:) Tj
T*
() Tj
T*
ET
endstream
endobj
292 0 obj
<< /Length 2497 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(* **Preserve conversational context** across multiple turns.) Tj
T*
(* **Prioritize recently used skills** for more natural interactions.) Tj
T*
(* **Enable stateful behavior**, such as follow-up questions or corrections.) Tj
T*
(* **Prevent unnecessary intent parsing** when a skill is already engaged.) Tj
T*
(* **Support skill-defined session control** via manual activation/deactivation.) Tj
T*
() Tj
T*
(This allows OVOS to act more like a true conversational assistant rather than a single-turn com) Tj
T*
(mand system.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Active Skill List) Tj
T*
() Tj
T*
(A Skill is considered active if it has been called in the last 5 minutes.) Tj
T*
() Tj
T*
(Skills are called in order of when they were last active. For example, if a user spoke the foll) Tj
T*
(owing commands:) Tj
T*
() Tj
T*
(> Hey Mycroft, set a timer for 10 minutes) Tj
T*
(>) Tj
T*
(> Hey Mycroft, what's the weather) Tj
T*
() Tj
T*
(Then the utterance "what's the weather" would first be sent to the Timer Skill's `converse\(\)` m) Tj
T*
(ethod, then to the intent service for normal handling where the Weather Skill would be called.) Tj
T*
() Tj
T*
(As the Weather Skill was called it has now been added to the front of the Active Skills List. H) Tj
T*
(ence, the next utterance received will be directed to:) Tj
T*
() Tj
T*
(1. `WeatherSkill.converse\(\)`) Tj
T*
(2. `TimerSkill.converse\(\)`) Tj
T*
(3. Normal intent parsing service) Tj
T*
() Tj
T*
(When does a skill become active?) Tj
T*
() Tj
T*
(1. **before** an intent is called the skill is **activated**) Tj
T*
(2. if a fallback **returns True** \(to consume the utterance\) the skill is **activated** right *) Tj
T*
(*after** the fallback) Tj
T*
(3. if converse **returns True** \(to consume the utterance\) the skill is **reactivated** right *) Tj
T*
(*after** converse) Tj
T*
(4. a skill can activate/deactivate itself at any time) Tj
T*
() Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Pipeline Stages) Tj
T*
() Tj
T*
(This plugin registers a single pipeline:) Tj
T*
() Tj
T*
(| Pipeline ID | Description                  | Recommended Use                                 ) Tj
T*
(                           |) Tj
T*
(|-------------|------------------------------|-------------------------------------------------) Tj
T*
(---------------------------|) Tj
T*
(| `converse`  | Continuous dialog for skills | Should always be present, do not remove unless y) Tj
T*
(ou know what you are doing |) Tj
T*
ET
endstream
endobj
293 0 obj
<< /Length 1823 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## How It Works) Tj
T*
() Tj
T*
(* When a user speaks, the pipeline checks if any skill is actively conversing.) Tj
T*
(* Active skills implement a `converse\(\)` method that determines if they want to handle the utte) Tj
T*
(rance.) Tj
T*
(* If no active skill accepts the input, the regular intent matching process continues.) Tj
T*
(* Skills can automatically deactivate after a timeout or based on custom logic.) Tj
T*
(* Only a limited number of skills can be active at any given time \(defaults configurable\).) Tj
T*
() Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Skill Integration) Tj
T*
() Tj
T*
(Skills integrate with the converse pipeline by:) Tj
T*
() Tj
T*
(* Implementing a `converse\(\)` method that checks if the skill wants to handle an utterance.) Tj
T*
(* Returning `True` if the utterance was handled, `False` otherwise.) Tj
T*
(* Managing internal state to determine when to exit conversation mode.) Tj
T*
() Tj
T*
(This enables modular, stateful conversations without hardcoding turn-taking logic into the core) Tj
T*
( assistant.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Configuration) Tj
T*
() Tj
T*
(Customize the pipeline via `mycroft.conf`:) Tj
T*
() Tj
T*
(```json) Tj
T*
("skills": {) Tj
T*
(  "converse": {) Tj
T*
(    "cross_activation": true,) Tj
T*
(    "converse_activation": "accept_all",) Tj
T*
(    "converse_mode": "accept_all",) Tj
T*
(    "converse_blacklist": [],) Tj
T*
(    "converse_whitelist": [],) Tj
T*
(    "max_activations": 3,) Tj
T*
(    "skill_activations": {) Tj
T*
(      "skill-example": 5) Tj
T*
(    },) Tj
T*
(    "timeout": 300,) Tj
T*
(    "skill_timeouts": {) Tj
T*
(      "skill-example": 600) Tj
T*
(    },) Tj
T*
(    "max_skill_runtime": 10) Tj
T*
(  }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
ET
endstream
endobj
294 0 obj
<< /Length 2739 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(**Key Options**) Tj
T*
() Tj
T*
(| Config Key           | Description                                                           ) Tj
T*
(   |) Tj
T*
(| -------------------- | ----------------------------------------------------------------------) Tj
T*
(-- |) Tj
T*
(| `cross_activation`   | Allow skills to activate/deactivate other skills during a conversation) Tj
T*
(.  |) Tj
T*
(| `converse_mode`      | Global mode for allowing/disallowing skills from converse participatio) Tj
T*
(n. |) Tj
T*
(| `converse_blacklist` | Skills that are not allowed to enter converse mode.                   ) Tj
T*
(   |) Tj
T*
(| `converse_whitelist` | Skills explicitly allowed to converse.                                ) Tj
T*
(   |) Tj
T*
(| `max_activations`    | Default number of times a skill can consecutively handle turns.       ) Tj
T*
(   |) Tj
T*
(| `skill_activations`  | Per-skill override of `max_activations`.                              ) Tj
T*
(   |) Tj
T*
(| `timeout`            | Time \(in seconds\) before an idle skill is removed from converse mode. ) Tj
T*
(   |) Tj
T*
(| `skill_timeouts`     | Per-skill override of `timeout`.                                      ) Tj
T*
(   |) Tj
T*
(| `max_skill_runtime`  | Maximum time \(in seconds\) to wait for a skill?s `converse\(\)` response.) Tj
T*
(   |) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Converse Modes) Tj
T*
() Tj
T*
(| Mode         | Description                                                                  |) Tj
T*
(| ------------ | ---------------------------------------------------------------------------- |) Tj
T*
(| `accept_all` | All skills are allowed to use converse mode \(default\).                       |) Tj
T*
(| `whitelist`  | Only skills explicitly listed in `converse_whitelist` can use converse mode. |) Tj
T*
(| `blacklist`  | All skills can use converse mode except those in `converse_blacklist`.       |) Tj
T*
() Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Security & Performance) Tj
T*
() Tj
T*
(A malicious or badly designed skill using the converse method can potentially hijack the whole ) Tj
T*
(conversation loop and render the skills service unusable) Tj
T*
() Tj
T*
(Because skills can "hijack" the conversation loop indefinitely, misbehaving or malicious skills) Tj
T*
( can degrade UX. Protections include:) Tj
T*
() Tj
T*
(* Timeouts for inactivity and maximum runtime.) Tj
T*
(* `max_activations` limits per skill.) Tj
T*
(* Blacklist/whitelist enforcement to restrict which skills can enter converse mode.) Tj
T*
(* `cross_activation` can be disabled to prevent skill-to-skill manipulation.) Tj
T*
() Tj
T*
() Tj
T*
(The concept of "converse priority" is under active development) Tj
T*
() Tj
T*
ET
endstream
endobj
295 0 obj
<< /Length 2871 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(```javascript) Tj
T*
("skills": {) Tj
T*
(    // converse stage configuration) Tj
T*
(    "converse": {) Tj
T*
(        // the default number of seconds a skill remains active,) Tj
T*
(        // if the user does not interact with the skill in this timespan it) Tj
T*
(        // will be deactivated, default 5 minutes \(same as mycroft\)) Tj
T*
(        "timeout": 300,) Tj
T*
() Tj
T*
(        // override of "skill_timeouts" per skill_id) Tj
T*
(        // you can configure specific skills to remain active longer) Tj
T*
(        "skill_timeouts": {},) Tj
T*
() Tj
T*
(        // conversational mode has 3 modes of operations:) Tj
T*
(        // - "accept_all"  # default mycroft-core behavior) Tj
T*
(        // - "whitelist"  # only call converse for skills in "converse_whitelist") Tj
T*
(        // - "blacklist"  # only call converse for skills NOT in "converse_blacklist") Tj
T*
(        "converse_mode": "accept_all",) Tj
T*
(        "converse_whitelist": [],) Tj
T*
(        "converse_blacklist": [],) Tj
T*
() Tj
T*
(        // converse activation has 4 modes of operations:) Tj
T*
(        // - "accept_all"  # default mycroft-core behavior, any skill can) Tj
T*
(        //                 # activate itself unconditionally) Tj
T*
(        // - "priority"  # skills can only activate themselves if no skill with) Tj
T*
(        //               # higher priority is active) Tj
T*
(        // - "whitelist"  # only skills in "converse_whitelist" can activate themselves) Tj
T*
(        // - "blacklist"  # only skills NOT in converse "converse_blacklist" can activate thems) Tj
T*
(elves) Tj
T*
(        // NOTE: this does not apply for regular skill activation, only to skill) Tj
T*
(        //       initiated activation requests, eg, self.make_active\(\)) Tj
T*
(        "converse_activation": "accept_all",) Tj
T*
() Tj
T*
(        // number of consecutive times a skill is allowed to activate itself) Tj
T*
(        // per minute, -1 for no limit \(default\), 0 to disable self-activation) Tj
T*
(        "max_activations": -1,) Tj
T*
() Tj
T*
(        // override of "max_activations" per skill_id) Tj
T*
(        // you can configure specific skills to activate more/less often) Tj
T*
(        "skill_activations": {},) Tj
T*
() Tj
T*
(        // if false only skills can activate themselves) Tj
T*
(        // if true any skill can activate any other skill) Tj
T*
(        "cross_activation": true,) Tj
T*
() Tj
T*
(        // if false only skills can deactivate themselves) Tj
T*
(        // if true any skill can deactivate any other skill) Tj
T*
(        // NOTE: skill deactivation is not yet implemented) Tj
T*
(        "cross_deactivation": true,) Tj
T*
() Tj
T*
() Tj
T*
(        // you can add skill_id: priority to override the developer defined) Tj
T*
(        // priority of those skills, ) Tj
T*
() Tj
T*
ET
endstream
endobj
296 0 obj
<< /Length 2373 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(        // converse priority is work in progress and not yet exposed to skills) Tj
T*
(        // priority is assumed to be 50) Tj
T*
(        // the only current source for converse priorities is this setting) Tj
T*
(        "converse_priorities": {) Tj
T*
(           // "skill_id": 10) Tj
T*
(        }) Tj
T*
(    }) Tj
T*
() Tj
T*
(},) Tj
T*
(```) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Notes) Tj
T*
() Tj
T*
(* The plugin **does not enforce a fallback behavior** if no skill accepts the input.) Tj
T*
(* If no skill handles the utterance via converse, the pipeline falls back to normal intent matc) Tj
T*
(hing or fallback skills.) Tj
T*
(* This mechanism is ideal for multi-turn conversations like dialogs, games, or assistant flows ) Tj
T*
(that require memory of previous input.) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/cq_pipeline.md ===) Tj
T*
() Tj
T*
(# Common Query Pipeline) Tj
T*
() Tj
T*
(The **Common Query Pipeline Plugin** in OVOS is a specialized pipeline component designed **exc) Tj
T*
(lusively for handling general knowledge questions**. It processes utterances that resemble ques) Tj
T*
(tions?typically starting with interrogatives like *what*, *who*, *how*, *when*, etc.?and querie) Tj
T*
(s a set of registered general knowledge skills to find the most accurate factual answer.) Tj
T*
() Tj
T*
(Unlike conversational or chit-chat pipelines, this plugin focuses strictly on **fact-based ques) Tj
T*
(tion answering**. It does **not** generate answers or perform retrieval-augmented generation \(R) Tj
T*
(AG\). Instead, it relies on a **reranker module** to evaluate candidate answers from all queried) Tj
T*
( skills and selects the most relevant and factually accurate response.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Purpose) Tj
T*
() Tj
T*
(* **Handle only question-like utterances** \(e.g., ?What is the tallest mountain??, ?Who wrote H) Tj
T*
(amlet??\).) Tj
T*
(* Query multiple **general knowledge skills** to obtain candidate answers.) Tj
T*
(* Use a **reranker mechanism** to evaluate and select the most confident and factually accurate) Tj
T*
( response.) Tj
T*
(* Provide a robust fallback for answering factual queries outside of high-confidence intent mat) Tj
T*
(ches.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Pipeline Stages) Tj
T*
() Tj
T*
(This plugin registers a single pipeline:) Tj
T*
() Tj
T*
ET
endstream
endobj
297 0 obj
<< /Length 2319 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(| Pipeline ID | Description          | Recommended Use                                     |) Tj
T*
(|-------------|----------------------|-----------------------------------------------------|) Tj
T*
(| `common_qa` | Common Query matches | Only as good as the common query skills you install |) Tj
T*
() Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## How It Works) Tj
T*
() Tj
T*
(1. **Question Detection:** The pipeline filters incoming utterances to only process those that ) Tj
T*
(appear to be questions, based on interrogative keywords.) Tj
T*
(2. **Parallel Skill Querying:** The plugin sends the utterance to all registered common query s) Tj
T*
(kills capable of answering general knowledge questions.) Tj
T*
(3. **Candidate Collection:** Each skill returns zero or more candidate answers along with confi) Tj
T*
(dence scores.) Tj
T*
(4. **Reranking:** A reranker component evaluates all candidate answers across skills to identif) Tj
T*
(y the best response, focusing on factual accuracy and confidence.) Tj
T*
(5. **Answer Delivery:** If a suitable answer is found, it is returned to the user; otherwise, t) Tj
T*
(he query is passed on or marked as unanswered.) Tj
T*
(---) Tj
T*
() Tj
T*
(## Installation) Tj
T*
() Tj
T*
(The Common Query Pipeline Plugin is included by default in `ovos-core`, but can also be install) Tj
T*
(ed independently:) Tj
T*
() Tj
T*
(```bash) Tj
T*
(pip install ovos-common-query-pipeline-plugin) Tj
T*
(```) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Configuration) Tj
T*
() Tj
T*
(```json) Tj
T*
("intents": {) Tj
T*
(  "common_query": {) Tj
T*
(    "min_self_confidence": 0.5,) Tj
T*
(    "min_reranker_score": 0.5,) Tj
T*
(    "reranker": "ovos-flashrank-reranker-plugin",) Tj
T*
(    "ovos-flashrank-reranker-plugin": {) Tj
T*
(      "model": "ms-marco-TinyBERT-L-2-v2") Tj
T*
(    }) Tj
T*
(  }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(* **min\\_self\\_confidence:** Minimum confidence required from the skill answer itself before re) Tj
T*
(ranking.) Tj
T*
(* **min\\_reranker\\_score:** Minimum reranker score threshold to accept an answer.) Tj
T*
(* **reranker:** The reranker plugin to use \(must be installed separately\).) Tj
T*
(* **Model:** Choose a suitable reranker model based on accuracy and device constraints.) Tj
T*
() Tj
T*
(---) Tj
T*
ET
endstream
endobj
298 0 obj
<< /Length 2490 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(## Performance Considerations) Tj
T*
() Tj
T*
(* The plugin?s response time depends on the slowest queried skill ? the latency of installed co) Tj
T*
(mmon query skills affects overall speed.) Tj
T*
(* Enabling rerankers, especially on resource-limited hardware \(e.g., Raspberry Pi\), may add not) Tj
T*
(iceable latency.) Tj
T*
(* Timeout \(default 2 seconds\) ensures responsiveness but might cause some slow skill answers to) Tj
T*
( be discarded.) Tj
T*
(* Tune confidence thresholds and reranker settings according to your hardware capabilities and ) Tj
T*
(user experience goals.) Tj
T*
() Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Example Usage Scenario) Tj
T*
() Tj
T*
(User says: *"When was the Declaration of Independence signed?"*) Tj
T*
() Tj
T*
(* The utterance is detected as a question.) Tj
T*
(* The plugin queries `ovos-skill-wolfram-alpha` and `ovos-skill-wikipedia`.) Tj
T*
(* Each skill returns candidate answers with confidence scores.) Tj
T*
(* The reranker evaluates answers and selects the most reliable response.) Tj
T*
(* The selected answer is delivered back to the user.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Important Notes) Tj
T*
() Tj
T*
(* **No generation or RAG:** The plugin only retrieves answers from skills; it does not generate) Tj
T*
( or synthesize new content.) Tj
T*
(* **No chit-chat:** This pipeline is strictly for general knowledge queries, **not for casual c) Tj
T*
(onversation or small talk**.) Tj
T*
(* **Reranker-based selection:** The reranker improves the quality of responses by ranking answe) Tj
T*
(rs from multiple sources.) Tj
T*
(* **Skills required:** Ensure that relevant common query skills \(e.g., knowledge bases, encyclo) Tj
T*
(pedias\) are installed and enabled.) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/dialog_transformers.md ===) Tj
T*
() Tj
T*
(# Dialog Transformers) Tj
T*
() Tj
T*
(**Dialog Transformers** in OpenVoiceOS \(OVOS\) are plugins that modify or enhance text responses) Tj
T*
( just before they are sent to the Text-to-Speech \(TTS\) engine. This allows for dynamic adjustme) Tj
T*
(nts to the assistant's speech, such as altering tone, simplifying language, or translating cont) Tj
T*
(ent, without requiring changes to individual skills.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## How They Work) Tj
T*
() Tj
T*
(1. **Intent Handling**: After a user's utterance is processed and an intent is matched, the cor) Tj
T*
(responding skill generates a textual response.) Tj
T*
ET
endstream
endobj
299 0 obj
<< /Length 1724 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(2. **Transformation Phase**: Before this response is vocalized, it passes through any active di) Tj
T*
(alog transformers.) Tj
T*
(3. **TTS Output**: The transformed text is then sent to the TTS engine for audio synthesis.) Tj
T*
() Tj
T*
(This pipeline ensures that all spoken responses can be uniformly modified according to the desi) Tj
T*
(red transformations.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Configuration) Tj
T*
() Tj
T*
(To enable dialog transformers, add them to your `mycroft.conf` file under the `dialog_transform) Tj
T*
(ers` section:) Tj
T*
() Tj
T*
(```json) Tj
T*
("dialog_transformers": {) Tj
T*
(  "plugin_name": {) Tj
T*
(    // plugin-specific configuration) Tj
T*
(  }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(Replace `"plugin_name"` with the identifier of the desired plugin and provide any necessary con) Tj
T*
(figuration parameters.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Available Dialog Transformer Plugins) Tj
T*
() Tj
T*
(### **OVOS Dialog Normalizer Plugin**) Tj
T*
() Tj
T*
(* **Purpose**: Prepares text for TTS by expanding contractions and converting digits to words, ) Tj
T*
(ensuring clearer pronunciation.) Tj
T*
(* **Example**:) Tj
T*
() Tj
T*
(    * Input: `"I'm 5 years old."`) Tj
T*
(    * Output: `"I am five years old."`) Tj
T*
() Tj
T*
(* **Installation**:) Tj
T*
() Tj
T*
(```bash) Tj
T*
(pip install ovos-dialog-normalizer-plugin) Tj
T*
(```) Tj
T*
(* **Configuration**:) Tj
T*
() Tj
T*
(```json) Tj
T*
("dialog_transformers": {) Tj
T*
(  "ovos-dialog-normalizer-plugin": {}) Tj
T*
(}) Tj
T*
(```) Tj
T*
(* **Source**: [GitHub Repository]\(https://github.com/OpenVoiceOS/ovos-dialog-normalizer-plugin\)) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
ET
endstream
endobj
300 0 obj
<< /Length 1773 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(### **OVOS OpenAI Dialog Transformer Plugin**) Tj
T*
() Tj
T*
(* **Purpose**: Utilizes OpenAI's API to rewrite responses based on a specified persona or tone.) Tj
T*
(* **Example**:) Tj
T*
() Tj
T*
(    * Rewrite Prompt: `"Explain like I'm five"`) Tj
T*
(    * Input: `"Quantum mechanics is a branch of physics that describes the behavior of particle) Tj
T*
(s at the smallest scales."`) Tj
T*
(    * Output: `"Quantum mechanics helps us understand really tiny things."`) Tj
T*
() Tj
T*
(* **Installation**:) Tj
T*
() Tj
T*
(```bash) Tj
T*
(pip install ovos-openai-plugin) Tj
T*
(```) Tj
T*
() Tj
T*
(* **Configuration**:) Tj
T*
() Tj
T*
(```json) Tj
T*
("dialog_transformers": {) Tj
T*
(    "ovos-dialog-transformer-openai-plugin": {) Tj
T*
(      "rewrite_prompt": "Explain like I'm five") Tj
T*
(    }) Tj
T*
(}) Tj
T*
(```) Tj
T*
(* **Source**: [GitHub Repository]\(https://github.com/OpenVoiceOS/ovos-openai-plugin\)) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(### **OVOS Bidirectional Translation Plugin**) Tj
T*
() Tj
T*
(* **Purpose**: Translates responses to match the user's language, enabling multilingual interac) Tj
T*
(tions.) Tj
T*
() Tj
T*
(* **Features**:) Tj
T*
() Tj
T*
(    * Detects the language of the user's input.) Tj
T*
(    * Works together with a companion utterance transformer plugin) Tj
T*
(    * Translates the assistant's response back into the user's language.) Tj
T*
() Tj
T*
(* **Installation**:) Tj
T*
() Tj
T*
(```bash) Tj
T*
(pip install ovos-bidirectional-translation-plugin) Tj
T*
(```) Tj
T*
(* **Configuration**:) Tj
T*
() Tj
T*
(```json) Tj
T*
("dialog_transformers": {) Tj
T*
(    "ovos-bidirectional-dialog-transformer": {) Tj
T*
(      "bidirectional": true) Tj
T*
(    }) Tj
T*
(}) Tj
T*
(```) Tj
T*
ET
endstream
endobj
301 0 obj
<< /Length 1710 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(* **Source**: [GitHub Repository]\(https://github.com/OpenVoiceOS/ovos-bidirectional-translation) Tj
T*
(-plugin\)) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Creating Custom Dialog Transformers) Tj
T*
() Tj
T*
(To develop your own dialog transformer:) Tj
T*
() Tj
T*
(**Create a Python Class**:) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_plugin_manager.templates.transformers import DialogTransformer) Tj
T*
() Tj
T*
(class MyCustomTransformer\(DialogTransformer\):) Tj
T*
(   def __init__\(self, config=None\):) Tj
T*
(       super\(\).__init__\("my-custom-transformer", priority=10, config=config\)) Tj
T*
() Tj
T*
(   def transform\(self, dialog: str, context: dict = None\) -> Tuple[str, dict]:) Tj
T*
(        """) Tj
T*
(        Optionally transform passed dialog and/or return additional context) Tj
T*
(        :param dialog: str utterance to mutate before TTS) Tj
T*
(        :returns: str mutated dialog) Tj
T*
(        """) Tj
T*
(       # Modify the dialog as needed) Tj
T*
(        return modified_dialog, context) Tj
T*
(```) Tj
T*
() Tj
T*
(**Register as a Plugin**:) Tj
T*
(In your `setup.py`, include:) Tj
T*
() Tj
T*
(```python) Tj
T*
(entry_points={) Tj
T*
(   'ovos.plugin.dialog_transformer': [) Tj
T*
(       'my-custom-transformer = my_module:MyCustomTransformer') Tj
T*
(   ]) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(**Install and Configure**:) Tj
T*
(After installation, add your transformer to the `mycroft.conf`:) Tj
T*
() Tj
T*
(```json) Tj
T*
("dialog_transformers": {) Tj
T*
(  "my-custom-transformer": {}) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
(=== docs/fallback_pipeline.md ===) Tj
T*
() Tj
T*
(# Fallback Pipeline) Tj
T*
() Tj
T*
ET
endstream
endobj
302 0 obj
<< /Length 2626 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(The **Fallback Pipeline** in **OpenVoiceOS \(OVOS\)** manages how fallback skills are queried whe) Tj
T*
(n no primary skill handles a user?s utterance. It coordinates multiple fallback handlers, ensur) Tj
T*
(ing the system gracefully attempts to respond even when regular intent matching fails.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Pipeline Stages) Tj
T*
() Tj
T*
(| Pipeline ID       | Priority Range | Description                     | Use Case              ) Tj
T*
(                  |) Tj
T*
(|-------------------| -------------- | ------------------------------- | ----------------------) Tj
T*
(----------------- |) Tj
T*
(| `fallback_high`   |  0 ? 5          | High-priority fallback skills   | ? Critical fallback h) Tj
T*
(andlers            |) Tj
T*
(| `fallback_medium` |  5 ? 90         | Medium-priority fallback skills | ?? General fallback s) Tj
T*
(kills              |) Tj
T*
(| `fallback_low`    |  90 ? 101       | Low-priority fallback skills    | ? Catch-all or chatbo) Tj
T*
(t fallback skills |) Tj
T*
() Tj
T*
(Fallback skills register with a priority, allowing the pipeline to query them in order. ) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## How It Works) Tj
T*
() Tj
T*
(* When no regular skill handles an utterance, the fallback pipeline queries registered fallback) Tj
T*
( skills asynchronously.) Tj
T*
(* Each fallback skill can decide whether to handle the utterance.) Tj
T*
(* Fallback skills are tried by priority level \(can be overriden by users\)) Tj
T*
(* If no fallback skill accepts the utterance, no fallback response is generated by the pipeline) Tj
T*
( itself.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Skill Integration) Tj
T*
() Tj
T*
(Skills integrate as fallbacks by:) Tj
T*
() Tj
T*
(* Registering on the message bus with a fallback priority.) Tj
T*
(* Listening for fallback queries carrying all utterance variations.) Tj
T*
(* Responding with success/failure on whether they handled the fallback.) Tj
T*
() Tj
T*
(This enables modular and customizable fallback behavior depending on your skill ecosystem.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Notes) Tj
T*
() Tj
T*
(* The pipeline itself **does not define or enforce a default fallback response**.) Tj
T*
(* The default "I don?t understand" reply is implemented in the separate `ovos-skill-fallback-un) Tj
T*
(known` skill.) Tj
T*
(* This modular design allows developers to create custom fallback strategies or add fallback ch) Tj
T*
(atbot skills without modifying the core pipeline.) Tj
T*
(* Fallback skills are expected to implement some dialog if they consume the utterance) Tj
T*
ET
endstream
endobj
303 0 obj
<< /Length 2566 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Security) Tj
T*
() Tj
T*
(Just like with converse a badly designed or malicious skill can hijack the fallback skill loop,) Tj
T*
( while this is not as serious as with converse some protections are also provided) Tj
T*
() Tj
T*
(You can configure what skills are allowed to use the fallback mechanism, you can also modify th) Tj
T*
(e fallback priority to ensure skills behave well together.) Tj
T*
() Tj
T*
(Since priority is defined by developers sometimes the default value is not appropriate and does) Tj
T*
( not fit well with the installed skills collection) Tj
T*
() Tj
T*
(```javascript) Tj
T*
("skills": {) Tj
T*
(    // fallback skill configuration) Tj
T*
(    "fallbacks": {) Tj
T*
(        // you can add skill_id: priority to override the developer defined) Tj
T*
(        // priority of those skills, this allows customization) Tj
T*
(        // of unknown intent handling for default_skills + user preferences) Tj
T*
(        "fallback_priorities": {) Tj
T*
(           // "skill_id": 10) Tj
T*
(        },) Tj
T*
(        // fallback skill handling has 3 modes of operations:) Tj
T*
(        // - "accept_all"  # default mycroft-core behavior) Tj
T*
(        // - "whitelist"  # only call fallback for skills in "fallback_whitelist") Tj
T*
(        // - "blacklist"  # only call fallback for skills NOT in "fallback_blacklist") Tj
T*
(        "fallback_mode": "accept_all",) Tj
T*
(        "fallback_whitelist": [],) Tj
T*
(        "fallback_blacklist": []) Tj
T*
(    }) Tj
T*
(},) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/gitlocalize_tutorial.md ===) Tj
T*
() Tj
T*
(## Contribute to Translations with GitLocalize!) Tj
T*
() Tj
T*
(Thank you for your interest in helping translate our project! Your contributions will help make) Tj
T*
( our project accessible to more people around the world. ) Tj
T*
() Tj
T*
(<iframe width="560" height="315" src="https://www.youtube.com/embed/2udvdIW9W2s" title="OVOS tr) Tj
T*
(anslation guide" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-med) Tj
T*
(ia; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" ) Tj
T*
(allowfullscreen></iframe>) Tj
T*
() Tj
T*
(We?ve made it easy for you to get started, even if you?re not familiar with GitHub or coding. F) Tj
T*
(ollow the steps below to join our translation effort using GitLocalize.) Tj
T*
() Tj
T*
(### Step-by-Step Guide to Translating with GitLocalize) Tj
T*
() Tj
T*
(#### Visit Our GitLocalize Project Page) Tj
T*
ET
endstream
endobj
304 0 obj
<< /Length 2531 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(![image]\(https://gist.github.com/assets/33701864/0a678e87-2cdf-4a9b-924c-e496e47befb4\)) Tj
T*
() Tj
T*
(1. **Click on the link** to our GitLocalize project: https://gitlocalize.com/users/OpenVoiceOS) Tj
T*
(2. You will see a list of OVOS repositories to translate, select one) Tj
T*
(3. You will see a list of languages and translation tasks available.) Tj
T*
() Tj
T*
(![image]\(https://gist.github.com/assets/33701864/c3770638-1452-44fb-ada1-39e39683aea8\)) Tj
T*
() Tj
T*
(#### Sign Up or Log In) Tj
T*
() Tj
T*
(1. If you don?t have an account, **sign up** with your email or GitHub account \(you don?t need ) Tj
T*
(to know GitHub to do this!\).) Tj
T*
(2. If you already have an account, simply **log in**.) Tj
T*
() Tj
T*
(#### Choose a Language) Tj
T*
() Tj
T*
(> Adding new languages to the list is a manual process, if your language is unlisted let us kno) Tj
T*
(w!) Tj
T*
() Tj
T*
(1. Select the language you want to translate into from the list of available languages.) Tj
T*
(2. You will see a list of files that need translation. ) Tj
T*
(  - `dialogs.json` contains sentences that OVOS will speak) Tj
T*
(  - `intents.json` contains sentences that the user will speak to OVOS) Tj
T*
(  - `vocabs.json` similar to intents, but contain sentence fragments/keywords, not full utteran) Tj
T*
(ces) Tj
T*
() Tj
T*
() Tj
T*
(![image]\(https://gist.github.com/assets/33701864/444cbb6d-1e9e-47b0-84f1-aeb38eef6a17\)) Tj
T*
() Tj
T*
(#### Start Translating) Tj
T*
() Tj
T*
(1. Click on a file that you want to translate.) Tj
T*
(2. The translation editor will open. Here, you?ll see the original text on the left and a space) Tj
T*
( to enter your translation on the right.) Tj
T*
(3. Begin translating the text. If you?re unsure about any phrase, feel free to leave it and mov) Tj
T*
(e on to the next one.) Tj
T*
() Tj
T*
(When you open a JSON file for translation in GitLocalize, you?ll see two parts:) Tj
T*
() Tj
T*
(- **Key**: This corresponds to a file name in the OVOS repository you selected.) Tj
T*
(- **Value**: This is the sentence you need to translate.) Tj
T*
() Tj
T*
(#### Variables) Tj
T*
() Tj
T*
(Variables are placeholders within sentences that represent changing content, such as names or n) Tj
T*
(umbers. ) Tj
T*
() Tj
T*
(- Original: `My name is {var_name}`) Tj
T*
(- Translation: `Mi nombre es {var_name}`) Tj
T*
() Tj
T*
(![image]\(https://gist.github.com/assets/33701864/2779c8a3-46de-47b3-894f-eccab0bdd2b5\)) Tj
T*
() Tj
T*
(**Important Rules**:) Tj
T*
ET
endstream
endobj
305 0 obj
<< /Length 2668 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(- **Do not translate the variable names** \(the text inside curly braces `{}`\).) Tj
T*
(- You can **rearrange the position** of variables in your translation, but do not create new va) Tj
T*
(riables.) Tj
T*
(- Ensure that variables are not separated by only whitespace; there should be at least one word) Tj
T*
( between them.) Tj
T*
() Tj
T*
(#### Slots) Tj
T*
() Tj
T*
(Sometimes, the same file will appear several times, each with a different variation of the same) Tj
T*
( sentence. These variations are called "slots". ) Tj
T*
() Tj
T*
(![image]\(https://gist.github.com/assets/33701864/70f30bc5-56f0-4d87-a521-2c4c77790bfe\)) Tj
T*
() Tj
T*
(**Important Rules**:) Tj
T*
() Tj
T*
(- **Translate at least one slot** in each file.) Tj
T*
(- If a slot is not needed in your language, enter `[UNUSED]`. This tells us that you reviewed t) Tj
T*
(he slot and marked it as translated.) Tj
T*
(- If you run out of slots to fit all variations of a sentence, you can use newlines to add more) Tj
T*
( translations.) Tj
T*
() Tj
T*
(![image]\(https://gist.github.com/assets/33701864/c70379ef-ef29-484d-a6fb-84d9fca47660\)) Tj
T*
() Tj
T*
() Tj
T*
(#### Alternative/Optional words) Tj
T*
() Tj
T*
(You can use the "alternative word" syntax to provide options or optional words within a sentenc) Tj
T*
(e.) Tj
T*
() Tj
T*
(- Alternative words: `I love \(cats|dogs|birds\)` becomes `Amo \(gatos|perros|pjaros\)`) Tj
T*
(- Optional words: `I \(really|\) love \(cats|dogs|birds\)` becomes `Yo \(realmente|\) amo \(gatos|perr) Tj
T*
(os|pjaros\)`) Tj
T*
() Tj
T*
(![image]\(https://gist.github.com/assets/33701864/75288b2d-559e-47c3-8e73-bb5391e4a888\)) Tj
T*
() Tj
T*
() Tj
T*
(### Tips for Effective Translation) Tj
T*
() Tj
T*
(- **Consistency**: Try to use consistent terminology throughout the project.) Tj
T*
(- **Context**: If a phrase seems unclear, consider the overall context of the project or reach ) Tj
T*
(out for clarification.) Tj
T*
(- **Accuracy**: Aim to convey the meaning as accurately as possible, rather than a literal word) Tj
T*
(-for-word translation.) Tj
T*
() Tj
T*
(#### Key Take Aways) Tj
T*
() Tj
T*
(- For each sentence \(slot\), enter your translation.) Tj
T*
(- If a slot is not needed, enter `[UNUSED]`.) Tj
T*
(- Leave the variable names in curly braces `{}` unchanged.) Tj
T*
(- Rearrange variables as needed but do not create new ones.) Tj
T*
(- Provide multiple options using the syntax `\(option1|option2|option3\)`.) Tj
T*
(- Include optional words using the syntax `\(optional|\)`.) Tj
T*
(- If there are not enough slots, press `Enter` to add a new line and enter your alternative tra) Tj
T*
ET
endstream
endobj
306 0 obj
<< /Length 2269 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(nslation on the new line.) Tj
T*
() Tj
T*
(#### Review and Feedback) Tj
T*
() Tj
T*
(1. Once you?ve finished translating a file, you can **submit** it for review.) Tj
T*
(2. Your translations will be reviewed by other native speakers and project maintainers.) Tj
T*
(3. If any changes are needed, you might receive feedback. Simply log back in, review the commen) Tj
T*
(ts, and make the necessary adjustments.) Tj
T*
(![image]\(https://gist.github.com/assets/33701864/f76df4fb-a825-48ec-8e76-c8e47e013392\)) Tj
T*
() Tj
T*
(### Need Help?) Tj
T*
() Tj
T*
(If you have any questions or need assistance at any point:) Tj
T*
() Tj
T*
(- **Join our Matrix chat**: https://matrix.to/#/#openvoiceos-languages:matrix.org) Tj
T*
(- **Email us**: support@openvoiceos.org) Tj
T*
() Tj
T*
(### Thank You!) Tj
T*
() Tj
T*
(Your contributions are invaluable, and we appreciate your effort in helping us reach a global a) Tj
T*
(udience. Happy translating!) Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
(=== docs/index.md ===) Tj
T*
() Tj
T*
(# The OpenVoiceOS Technical Manual) Tj
T*
() Tj
T*
(![]\(https://github.com/OpenVoiceOS/ovos_assets/blob/master/Logo/ovos-logo-512.png?raw=true\)) Tj
T*
() Tj
T*
(Welcome to the **Open Voice OS \(OVOS\)** developer documentation. This guide is your starting po) Tj
T*
(int for exploring, building, and contributing to OVOS ? an open and modular platform for voice-) Tj
T*
(enabled applications.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## What is OVOS?) Tj
T*
() Tj
T*
(**Open Voice OS \(OVOS\)** is a flexible voice platform that goes beyond traditional voice assist) Tj
T*
(ants. It provides the foundational tools and frameworks for integrating voice interaction into ) Tj
T*
(a wide range of projects.) Tj
T*
() Tj
T*
(While OVOS can power a ?Hey Mycroft??-style assistant, it is not limited to that use case. As a) Tj
T*
( voice operating system, OVOS is highly customizable and has been used in:) Tj
T*
() Tj
T*
(- Robots and automation systems  ) Tj
T*
(- Smart furniture and mirrors  ) Tj
T*
(- Cloud-based voice services  ) Tj
T*
(- Embedded devices and smart TVs  ) Tj
T*
() Tj
T*
(OVOS is designed to work wherever voice interfaces are needed ? whether that?s on a local devic) Tj
T*
ET
endstream
endobj
307 0 obj
<< /Length 2257 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(e or in the cloud.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## OVOS Distros) Tj
T*
() Tj
T*
(If you?d rather not install and configure components manually, OVOS has several prebuilt distri) Tj
T*
(butions:) Tj
T*
() Tj
T*
(- [**raspOVOS**]\(https://github.com/OpenVoiceOS/raspOVOS\): A Raspberry Pi image with pre-instal) Tj
T*
(led OVOS services.) Tj
T*
(- [**ovos-installer**]\(https://github.com/OpenVoiceOS/ovos-installer\): Installs OVOS on top of ) Tj
T*
(supported Linux systems.) Tj
T*
(- [**ovos-buildroot**]\(https://github.com/OpenVoiceOS/ovos-buildroot\): A highly customizable bu) Tj
T*
(ildroot-based image \(in development\).) Tj
T*
() Tj
T*
(These distros offer a faster setup experience with curated default skills and settings.) Tj
T*
() Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## What You?ll Find in This Manual) Tj
T*
() Tj
T*
(This documentation includes:) Tj
T*
() Tj
T*
(- **Architecture Overview** ? A breakdown of how OVOS components work together  ) Tj
T*
(- **Plugin System** ? Details on STT, TTS, wake word engines, GUI backends, and more  ) Tj
T*
(- **Application Development** ? How to create and deploy custom voice-enabled applications  ) Tj
T*
(- **Testing and Debugging** ? Tools and practices for developing with OVOS  ) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Related Projects and External Resources) Tj
T*
() Tj
T*
(- **Docker Setup**: [OVOS Docker Documentation]\(https://openvoiceos.github.io/ovos-docker/\)) Tj
T*
(- **Message Bus Reference**: [OVOS Message Spec]\(https://openvoiceos.github.io/message_spec/\)) Tj
T*
(- **Remote Client Framework**: [HiveMind Documentation]\(https://jarbashivemind.github.io/HiveMi) Tj
T*
(nd-community-docs/\)) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Contributing to This Documentation) Tj
T*
() Tj
T*
(This manual is maintained by the OVOS community ? developers, users, and contributors who help ) Tj
T*
(shape the platform.) Tj
T*
() Tj
T*
(Whether you?re spotting errors, clarifying instructions, or adding new information, contributio) Tj
T*
(ns are always welcome.) Tj
T*
() Tj
T*
(To contribute, please [open an issue or pull request]\(https://github.com/OpenVoiceOS/ovos-techn) Tj
T*
(ical-manual\) on GitHub.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
ET
endstream
endobj
308 0 obj
<< /Length 2391 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(## Getting Started Tips) Tj
T*
() Tj
T*
(- OVOS is modular ? you can run just one or two components to start.) Tj
T*
(- Try a pre-built distro for a plug-and-play experience.) Tj
T*
(- Check the message bus reference to see how OVOS components communicate.) Tj
T*
(- Explore real-world examples from the community to see OVOS in action.) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/intent_transformers.md ===) Tj
T*
() Tj
T*
(# Intent Transformers) Tj
T*
() Tj
T*
(**Intent Transformers** are a pluggable mechanism in OVOS that allow you to enrich or transform) Tj
T*
( intent data **after** an intent is matched by an engine \(Padatious, Adapt, etc.\), but **before) Tj
T*
(** it is passed to the skill handler.) Tj
T*
() Tj
T*
(This is useful for:) Tj
T*
() Tj
T*
(* Named Entity Recognition \(NER\)) Tj
T*
(* Keyword extraction) Tj
T*
(* Slot filling) Tj
T*
(* Contextual enrichment) Tj
T*
() Tj
T*
(Transformers operate on `IntentHandlerMatch` or `PipelineMatch` objects and are executed **in o) Tj
T*
(rder of priority**. They enable complex processing pipelines without requiring every skill to r) Tj
T*
(eimplement entity logic.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Default Transformers) Tj
T*
() Tj
T*
(In a standard OVOS installation, the following plugins are **installed and enabled by default**) Tj
T*
(:) Tj
T*
() Tj
T*
(| Plugin                          | Description                                                ) Tj
T*
(                                        | Priority |) Tj
T*
(|---------------------------------| -----------------------------------------------------------) Tj
T*
(--------------------------------------- | -------- |) Tj
T*
(| `ovos-keyword-template-matcher` | Extracts values from `{placeholder}`-style intent templates) Tj
T*
(                                        | 1        |) Tj
T*
(| `ovos-ahocorasick-ner-plugin`   | Performs NER using Aho-Corasick keyword matching based on r) Tj
T*
(egistered entities from skill templates | 5        |) Tj
T*
() Tj
T*
(These are **not built into core**, but are bundled in standard OVOS setups and configured via `) Tj
T*
(intent_transformers` in your configuration file.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Configuration) Tj
T*
() Tj
T*
(To enable or disable specific transformers, modify your `mycroft.conf`:) Tj
T*
() Tj
T*
(```json) Tj
T*
("intent_transformers": {) Tj
T*
ET
endstream
endobj
309 0 obj
<< /Length 1689 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(  "ovos-keyword-template-matcher": {) Tj
T*
(    "active": true) Tj
T*
(  },) Tj
T*
(  "ovos-ahocorasick-ner-plugin": {) Tj
T*
(    "active": false) Tj
T*
(  }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## How It Works) Tj
T*
() Tj
T*
(### Example Workflow) Tj
T*
() Tj
T*
(1. An utterance matches an intent via Padatious, Adapt, or another engine.) Tj
T*
(2. The matched intent is passed to the `IntentTransformersService`.) Tj
T*
(3. Each registered transformer plugin runs its `transform\(\)` method.) Tj
T*
(4. Extracted entities are injected into the intent?s `match_data`.) Tj
T*
(5. The updated `match_data` is passed to the skill via the `Message` object.) Tj
T*
() Tj
T*
(### Skill Access) Tj
T*
() Tj
T*
(Entities extracted by transformers are made available to your skill in the `message.data` dicti) Tj
T*
(onary:) Tj
T*
() Tj
T*
(```python) Tj
T*
(location = message.data.get\("location"\)) Tj
T*
(person = message.data.get\("person"\)) Tj
T*
(```) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Default Plugins) Tj
T*
() Tj
T*
(### `ovos-ahocorasick-ner-plugin`) Tj
T*
() Tj
T*
(This plugin builds a per-skill Aho-Corasick automaton using keywords explicitly provided by the) Tj
T*
( developer via registered entities.) Tj
T*
() Tj
T*
(> ? It will **only match keywords that the skill developer has accounted for**) Tj
T*
() Tj
T*
(It does **not** use external data or extract entities generically.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(### `ovos-keyword-template-matcher`) Tj
T*
() Tj
T*
(This plugin parses registered intent templates like:) Tj
T*
() Tj
T*
(```) Tj
T*
(what's the weather in {location}) Tj
T*
(```) Tj
T*
ET
endstream
endobj
310 0 obj
<< /Length 2185 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(It uses the template structure to extract `{location}` directly from the utterance.) Tj
T*
() Tj
T*
(If the user says "what's the weather in Tokyo", the plugin will populate:) Tj
T*
() Tj
T*
(```python) Tj
T*
(match_data = {) Tj
T*
(  "location": "Tokyo") Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Writing Your Own Intent Transformer) Tj
T*
() Tj
T*
(To create a custom transformer:) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_plugin_manager.templates.transformers import IntentTransformer) Tj
T*
() Tj
T*
(class MyCustomTransformer\(IntentTransformer\):) Tj
T*
(    def __init__\(self, config=None\):) Tj
T*
(        super\(\).__init__\("my-transformer", priority=10, config=config\)) Tj
T*
() Tj
T*
(    def transform\(self, intent\):) Tj
T*
(        # Modify intent.match_data here) Tj
T*
(        return intent) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
(=== docs/lang_support.md ===) Tj
T*
() Tj
T*
(# Language Support in OpenVoiceOS) Tj
T*
() Tj
T*
(OpenVoiceOS \(OVOS\) aims to support multiple languages across its components, including intent r) Tj
T*
(ecognition, speech-to-text \(STT\), text-to-speech \(TTS\), and skill dialogs. However, full langua) Tj
T*
(ge support requires more than translation of interface text. This document outlines the current) Tj
T*
( state of language support, known limitations, and how contributors can help improve multilingu) Tj
T*
(al performance in OVOS.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(While the OVOS installer allows users to select a preferred language, **selecting a language do) Tj
T*
(es not guarantee full support across all subsystems**. True multilingual support requires dedic) Tj
T*
(ated:) Tj
T*
() Tj
T*
(- ? Translations \(intents, dialogs, settings, etc.\)) Tj
T*
(- ? STT \(Speech-to-Text\) plugins trained on the target language) Tj
T*
(- ? TTS \(Text-to-Speech\) plugins capable of generating speech in the selected language) Tj
T*
(- ? Language-specific intent adaptation and fallback logic) Tj
T*
() Tj
T*
(Without these, many core features \(e.g., voice commands, speech output, skill interactions\) may) Tj
T*
( not function as expected.) Tj
T*
ET
endstream
endobj
311 0 obj
<< /Length 2240 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Adding a New Language) Tj
T*
() Tj
T*
(Adding support for a new language in OVOS is a multi-step process requiring:) Tj
T*
() Tj
T*
(- Translations of assistant dialog and intent files) Tj
T*
(- A compatible STT plugin with reliable speech recognition) Tj
T*
(- A natural-sounding TTS voice) Tj
T*
(- Validation using real-world user data) Tj
T*
() Tj
T*
(We welcome and encourage community participation to improve language support. Every contributio) Tj
T*
(n helps make OVOS more accessible to speakers around the world.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## STT and TTS Requirements) Tj
T*
() Tj
T*
(For a language to function correctly in a voice assistant environment, it must have **dedicated) Tj
T*
( STT and TTS plugins** that support the language reliably.) Tj
T*
() Tj
T*
(### STT \(Speech-to-Text\)) Tj
T*
() Tj
T*
(- STT plugins must be able to recognize speech in the target language with high accuracy.) Tj
T*
(- Some plugins are multilingual \(e.g., Whisper, MMS\), but accuracy varies across languages.) Tj
T*
(- For production use, **language-specific tuning or models are recommended**.) Tj
T*
() Tj
T*
(### TTS \(Text-to-Speech\)) Tj
T*
() Tj
T*
(- The TTS engine must generate clear, natural-sounding speech in the selected language.) Tj
T*
(- Not all TTS plugins support all languages.) Tj
T*
(- Quality varies significantly by model and backend.) Tj
T*
() Tj
T*
(A list of early TTS and STT plugins test with per-language accuracy benchmarks is available at:) Tj
T*
() Tj
T*
(- ? [STT Bench]\(https://stt-bench.tigregotico.pt\)) Tj
T*
(- ? [TTS Bench]\(https://tts-bench.tigregotico.pt\)) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Translation Coverage) Tj
T*
() Tj
T*
(OVOS uses [GitLocalize]\(https://gitlocalize.com/users/OpenVoiceOS\) for managing translation fil) Tj
T*
(es across its repositories. This includes:) Tj
T*
() Tj
T*
(- Skill dialog files) Tj
T*
(- Intent files \(used by Padatious/Adapt\)) Tj
T*
(- Configuration metadata) Tj
T*
() Tj
T*
(### ? Translation Progress) Tj
T*
() Tj
T*
(Translation progress is tracked at:  ) Tj
T*
(? [https://openvoiceos.github.io/lang-support-tracker]\(https://openvoiceos.github.io/lang-suppo) Tj
T*
ET
endstream
endobj
312 0 obj
<< /Length 2343 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(rt-tracker\)) Tj
T*
() Tj
T*
(The tracker provides daily updates and displays all languages that have reached at least 25% tr) Tj
T*
(anslation coverage.) Tj
T*
() Tj
T*
(> ? If your language is missing from GitLocalize, [open an issue]\(https://github.com/OpenVoiceO) Tj
T*
(S/lang-support-tracker/issues\) to request it. Currently, languages must be added manually.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Known Limitations) Tj
T*
() Tj
T*
(- Selecting a language during installation only automatically configures a compatible STT/TTS p) Tj
T*
(lugin for **some languages**. Manual action might be required for full support) Tj
T*
(- Many skills contain only partial translations or outdated strings.) Tj
T*
(- Skills may be partially translated, with only a subset of intents available for your language) Tj
T*
(- Skills may have translated intents but missing dialog translations. The assistant typically s) Tj
T*
(peaks the dialog filename if it is not translated) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## How to Improve Language Support) Tj
T*
() Tj
T*
(### 1. **Contribute Translations**) Tj
T*
() Tj
T*
(Use GitLocalize to translate dialog and intent files:) Tj
T*
() Tj
T*
(- [GitLocalize for OVOS]\(https://gitlocalize.com/users/OpenVoiceOS\)) Tj
T*
(- [Translation Tutorial]\(https://www.openvoiceos.org/translation\)) Tj
T*
() Tj
T*
(Translation stats for each language are also available in:) Tj
T*
() Tj
T*
(- [Markdown summaries \(e.g., `translate_status_pt.md`\)]\(https://openvoiceos.github.io/lang-supp) Tj
T*
(ort-tracker/tx_info/translate_status_pt-PT.md\)) Tj
T*
(- [JSON format \(e.g., `pt-PT.json`\)]\(https://openvoiceos.github.io/lang-support-tracker/tx_info) Tj
T*
(/pt-PT.json\)) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(### 2. **Test in Real-World Usage**) Tj
T*
() Tj
T*
(Translation coverage alone does not ensure accuracy. Native speakers are encouraged to test OVO) Tj
T*
(S with real speech input and report issues with:) Tj
T*
() Tj
T*
(- Intent matching failures) Tj
T*
(- Mispronunciations or robotic speech) Tj
T*
(- Incorrect or unnatural translations) Tj
T*
() Tj
T*
(You can help by **enabling open data collection** in your OVOS instance:) Tj
T*
() Tj
T*
(```json) Tj
T*
("open_data": {) Tj
T*
(  "intent_urls": [) Tj
T*
(    "https://metrics.tigregotico.pt/intents") Tj
T*
ET
endstream
endobj
313 0 obj
<< /Length 2322 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(  ]) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(> ? Alternatively, you may self-host the reporting server: [ovos-opendata-server on GitHub]\(htt) Tj
T*
(ps://github.com/OpenVoiceOS/ovos-opendata-server\)) Tj
T*
() Tj
T*
(### Monitoring Tools) Tj
T*
() Tj
T*
(- ? Live Data Dashboard: [https://opendata.tigregotico.pt]\(https://opendata.tigregotico.pt\)) Tj
T*
(- ? Server Status: [https://metrics.tigregotico.pt/status]\(https://metrics.tigregotico.pt/statu) Tj
T*
(s\)) Tj
T*
() Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Benchmark Projects \(Open Data\)) Tj
T*
() Tj
T*
(Explore public benchmark tools for evaluating model performance:) Tj
T*
() Tj
T*
(| Project                                                         | Description |) Tj
T*
(|-----------------------------------------------------------------|-------------|) Tj
T*
(| [GitLocalize Bench]\(https://gitlocalize-bench.tigregotico.pt\)   | Evaluate intent translation) Tj
T*
( coverage and performance |) Tj
T*
(| [STT Bench]\(https://stt-bench.tigregotico.pt\)                   | Test STT plugin accuracy ac) Tj
T*
(ross datasets and languages |) Tj
T*
(| [TTS Bench]\(https://tts-bench.tigregotico.pt\)                   | Compare TTS output quality ) Tj
T*
(across plugins |) Tj
T*
(| [Meteocat]\(https://meteocat.bench.tigregotico.pt\)               | Catalan weather query bench) Tj
T*
(mark |) Tj
T*
() Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(##  Tips for Contributors) Tj
T*
() Tj
T*
(- Translators: Use GitLocalize?s side-by-side editor to keep intent logic intact.) Tj
T*
(- Developers: Review user-submitted errors on the dashboard to improve skill performance.) Tj
T*
(- Curious users: Explore benchmark results to see how well OVOS handles your language.) Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
(=== docs/m2v_pipeline.md ===) Tj
T*
() Tj
T*
(# Model2Vec Intent Pipeline) Tj
T*
() Tj
T*
(The **Model2Vec Intent Pipeline** is an advanced plugin for OpenVoiceOS, designed to enhance in) Tj
T*
(tent classification using pretrained Model2Vec models. By leveraging vector-based representatio) Tj
T*
(ns of natural language, this pipeline offers improved accuracy over traditional deterministic e) Tj
T*
(ngines, especially in scenarios where intent recognition is challenging.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Features) Tj
T*
ET
endstream
endobj
314 0 obj
<< /Length 1815 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(* **Model2Vec-Powered Classification:** Uses pretrained Model2Vec models for rich vector-based ) Tj
T*
(intent understanding.) Tj
T*
(* **Seamless OVOS Integration:** Plug-and-play compatibility with existing OVOS intent pipeline) Tj
T*
(s.) Tj
T*
(* **Multilingual & Language-Specific Models:** Offers large multilingual models distilled from ) Tj
T*
(LaBSE and smaller, efficient language-specific models ideal for limited hardware \(e.g., Raspber) Tj
T*
(ry Pi\).) Tj
T*
(* **Dynamic Intent Syncing:** Automatically synchronizes with Adapt and Padatious intents at ru) Tj
T*
(ntime.) Tj
T*
(* **Skill-Aware Matching:** Classifies *only* official OVOS skill intents, reducing false posit) Tj
T*
(ives by ignoring unregistered or personal skill intents.) Tj
T*
(* **Supports Partial Translations:** Multilingual models allow usage of partially translated sk) Tj
T*
(ills, provided their **dialogs** are translated.) Tj
T*
() Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Installation) Tj
T*
() Tj
T*
(Install the plugin via pip:) Tj
T*
() Tj
T*
(```bash) Tj
T*
(pip install ovos-m2v-pipeline) Tj
T*
(```) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Configuration) Tj
T*
() Tj
T*
(Configure the plugin in your `mycroft.conf` file:) Tj
T*
() Tj
T*
(```json) Tj
T*
({) Tj
T*
(  "intents": {) Tj
T*
(    "ovos-m2v-pipeline": {) Tj
T*
(      "model": "Jarbas/ovos-model2vec-intents-LaBSE",) Tj
T*
(      "conf_high": 0.7,) Tj
T*
(      "conf_medium": 0.5,) Tj
T*
(      "conf_low": 0.15,) Tj
T*
(      "ignore_intents": []) Tj
T*
(    },) Tj
T*
(    "pipeline": [) Tj
T*
(      "converse",) Tj
T*
(      "ovos-m2v-pipeline-high",) Tj
T*
(      "padatious_high",) Tj
T*
(      "fallback_low") Tj
T*
(    ]) Tj
T*
(  }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(**Parameters:**) Tj
T*
() Tj
T*
ET
endstream
endobj
315 0 obj
<< /Length 2498 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(* `model`: Path to the pretrained Model2Vec model or Hugging Face repository.) Tj
T*
(* `conf_high`: Confidence threshold for high-confidence matches \(default: 0.7\).) Tj
T*
(* `conf_medium`: Confidence threshold for medium-confidence matches \(default: 0.5\).) Tj
T*
(* `conf_low`: Confidence threshold for low-confidence matches \(default: 0.15\).) Tj
T*
(* `ignore_intents`: List of intent labels to ignore during matching.) Tj
T*
() Tj
T*
(> **Note:** Model2Vec models are pretrained and *do not* dynamically learn new skills at runtim) Tj
T*
(e.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## How It Works) Tj
T*
() Tj
T*
(1. Receives a user utterance as text input.) Tj
T*
(2. Predicts intent labels using the pretrained Model2Vec embedding model.) Tj
T*
(3. Filters out any intents *not* associated with currently loaded official OVOS skills.) Tj
T*
(4. Returns the highest-confidence matching intent.) Tj
T*
() Tj
T*
(This process enhances intent recognition, particularly in cases where traditional parsers like ) Tj
T*
(Adapt or Padatious may struggle.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Models Overview) Tj
T*
() Tj
T*
(* **Multilingual Model:** Over 500MB, distilled from LaBSE, supports many languages and partial) Tj
T*
(ly translated skills.) Tj
T*
(* **Language-Specific Models:** Smaller \(\\~10x smaller than multilingual\), highly efficient, al) Tj
T*
(most as accurate ? ideal for devices with limited resources.) Tj
T*
() Tj
T*
(Models can be specified via local paths or Hugging Face repositories:) Tj
T*
([OVOS Model2Vec Models on Hugging Face]\(https://huggingface.co/collections/Jarbas/ovos-model2ve) Tj
T*
(c-intents-681c478aecb9979e659b17f8\)) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Training Data) Tj
T*
() Tj
T*
(The Model2Vec intent classifier is trained on a diverse, aggregated collection of intent exampl) Tj
T*
(es from:) Tj
T*
() Tj
T*
(* OVOS LLM Augment Intent Examples ? synthetic utterances generated by large language models fo) Tj
T*
(r OVOS skills.) Tj
T*
(* Music Query Templates ? focused on music-related intents.) Tj
T*
(* Language-Specific Skill Intents ? extracted CSV files from OpenVoiceOS GitLocalize covering E) Tj
T*
(nglish, Portuguese, Basque, Spanish, Galician, Dutch, French, German, Catalan, Italian, and Dan) Tj
T*
(ish.) Tj
T*
() Tj
T*
(Models are regularly updated with new data to improve performance and language coverage.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Important Usage Notes) Tj
T*
() Tj
T*
ET
endstream
endobj
316 0 obj
<< /Length 2706 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(* **Official OVOS Skills Only:** The Model2Vec pipeline classifies intents *only* from official) Tj
T*
( OVOS skills. For personal or custom skills, you should continue to use Adapt and Padatious par) Tj
T*
(sers alongside Model2Vec.) Tj
T*
(* **Complementary Pipeline:** Model2Vec is designed to *augment* your intent pipeline, not repl) Tj
T*
(ace Adapt or Padatious. Using all three together provides the best overall recognition.) Tj
T*
(* **Padatious Intent Data & Training:** Padatious intent data and example utterances are availa) Tj
T*
(ble in [GitLocalize]\(https://gitlocalize.com/repo/xyz\) for translations and new model training.) Tj
T*
( The Model2Vec models are continuously updated with this data.) Tj
T*
(* **Language Support:** The multilingual model \(500MB+\) supports many languages and works well ) Tj
T*
(with partially translated skills, as long as **dialogs** are localized.) Tj
T*
(* **Optimization:** Language-specific models are on average 10x smaller and nearly as accurate ) Tj
T*
(as the multilingual model, making them ideal for constrained hardware or single-language setups) Tj
T*
(.) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/padatious_pipeline.md ===) Tj
T*
() Tj
T*
(# Padatious Pipeline) Tj
T*
() Tj
T*
(The **Padatious Pipeline Plugin** brings examples-based intent recognition to the **OpenVoiceOS) Tj
T*
( \(OVOS\)** pipeline. It enables developers to define intents using example sentences, offering a) Tj
T*
( simple and code-free way to create natural language interfaces for voice skills.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Pipeline Stages) Tj
T*
() Tj
T*
(This plugin registers the following pipeline stages:) Tj
T*
() Tj
T*
(| Pipeline ID        | Description                              | Recommended Use              ) Tj
T*
(         |) Tj
T*
(| ------------------ | ---------------------------------------- | -----------------------------) Tj
T*
(-------- |) Tj
T*
(| `padatious_high`   | High-confidence Padatious intent matches | ? Primary stage for Padatious) Tj
T*
( use     |) Tj
T*
(| `padatious_medium` | Medium-confidence Padatious matches      | ?? Backup if confidence tunin) Tj
T*
(g allows |) Tj
T*
(| `padatious_low`    | Low-confidence Padatious matches         | ? Not recommended \(often inac) Tj
T*
(curate\) |) Tj
T*
() Tj
T*
(Each stage is triggered based on the confidence level of the parsed intent, as configured in yo) Tj
T*
(ur system.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Configuration) Tj
T*
() Tj
T*
(Configure Padatious thresholds in your `ovos.conf`:) Tj
T*
() Tj
T*
(```json) Tj
T*
("intents": {) Tj
T*
(  "padatious": {) Tj
T*
(    "conf_high": 0.85,) Tj
T*
(    "conf_med": 0.65,) Tj
T*
ET
endstream
endobj
317 0 obj
<< /Length 1601 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(    "conf_low": 0.45) Tj
T*
(  }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(These thresholds control which pipeline level receives a given intent result.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Multilingual Support) Tj
T*
() Tj
T*
(Padatious is **excellent for multilingual environments** because intents are defined in plain t) Tj
T*
(ext `.intent` files, not in code. This allows translators and non-developers to contribute new ) Tj
T*
(languages easily without touching Python.) Tj
T*
() Tj
T*
(To add another language, simply create a new `.intent` file in the relevant language folder, su) Tj
T*
(ch as:) Tj
T*
() Tj
T*
(```) Tj
T*
(locale/pt-pt/weather.intent) Tj
T*
(locale/fr-fr/weather.intent) Tj
T*
(```) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Defining Intents) Tj
T*
() Tj
T*
(Intent examples are written line-by-line in `.intent` files:) Tj
T*
() Tj
T*
(```) Tj
T*
(what is the weather) Tj
T*
(tell me the weather) Tj
T*
(what's the weather like) Tj
T*
(```) Tj
T*
() Tj
T*
(In your skill:) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_workshop.decorators import intent_handler) Tj
T*
() Tj
T*
(@intent_handler\("weather.intent"\)) Tj
T*
(def handle_weather\(self, message\):) Tj
T*
(    # Your code here) Tj
T*
(    pass) Tj
T*
(```) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Limitations) Tj
T*
() Tj
T*
(Padatious is reliable in terms of **not misclassifying** ? it rarely picks the wrong intent. Ho) Tj
T*
(wever, it has key limitations:) Tj
T*
() Tj
T*
(* **Weak paraphrase handling**: If the user speaks a sentence that doesn?t closely match an exa) Tj
T*
ET
endstream
endobj
318 0 obj
<< /Length 2128 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(mple, Padatious will often fail to match anything at all.) Tj
T*
() Tj
T*
(* **Rigid phrasing required**: You may end up in a ?train the user to speak correctly? scenario) Tj
T*
(, instead of training the system to understand variations.) Tj
T*
() Tj
T*
(* **Maintenance burden for sentence diversity**: Adding more phrasing requires adding more sent) Tj
T*
(ence examples per intent, increasing effort and clutter.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## When to Use) Tj
T*
() Tj
T*
(Padatious is a good choice in OVOS when:) Tj
T*
() Tj
T*
(* You want **easy localization/multilingual support**.) Tj
T*
(* You?re creating **simple, personal, or demo skills**.) Tj
T*
(* You can **control or guide user phrasing**, such as in kiosk or assistant environments.) Tj
T*
() Tj
T*
(Avoid Padatious for complex conversational use cases, skills with overlapping intents, or scena) Tj
T*
(rios requiring broad paraphrasing support.) Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
(=== docs/pipelines_overview.md ===) Tj
T*
() Tj
T*
(# OVOS Intent Pipeline) Tj
T*
() Tj
T*
(The OpenVoiceOS \(OVOS\) Intent Pipeline is a modular and extensible system designed to interpret) Tj
T*
( user utterances and map) Tj
T*
(them to appropriate actions or responses.) Tj
T*
() Tj
T*
(It orchestrates various intent parsers and fallback mechanisms to ensure accurate and contextua) Tj
T*
(lly relevant responses.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## What is an Intent Pipeline?) Tj
T*
() Tj
T*
(An intent pipeline in OVOS is a sequence of processing stages that analyze user input to determ) Tj
T*
(ine the user's intent.) Tj
T*
(Each stage employs different strategies, ranging from high-confidence intent parsers to fallbac) Tj
T*
(k mechanisms, to) Tj
T*
(interpret the input.) Tj
T*
() Tj
T*
(This layered approach ensures that OVOS can handle a wide range of user queries with varying de) Tj
T*
(grees of specificity and) Tj
T*
(complexity.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Pipeline Structure) Tj
T*
() Tj
T*
(OVOS pipelines are structured to prioritize intent matching based on confidence levels:) Tj
T*
() Tj
T*
ET
endstream
endobj
319 0 obj
<< /Length 4235 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(* **High Confidence**: Primary intent parsers that provide precise matches.) Tj
T*
(* **Medium Confidence**: Secondary parsers that handle less specific queries.) Tj
T*
(* **Low Confidence**: Fallback mechanisms for ambiguous or unrecognized inputs.) Tj
T*
() Tj
T*
(Each component in the pipeline is a plugin that can be enabled, disabled, or reordered accordin) Tj
T*
(g to user preferences.) Tj
T*
(This flexibility allows for customization based on specific use cases or device capabilities.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Available Pipeline Components) Tj
T*
() Tj
T*
(Below is a list of available pipeline components, categorized by their confidence levels and fu) Tj
T*
(nctionalities:) Tj
T*
() Tj
T*
(### High Confidence Components) Tj
T*
() Tj
T*
(| Pipeline                            | Description                                            ) Tj
T*
(         | Notes                                                                      |   ) Tj
T*
(|-------------------------------------|--------------------------------------------------------) Tj
T*
(---------|----------------------------------------------------------------------------| ) Tj
T*
(| `stop_high`                         | Exact match for stop commands                          ) Tj
T*
(         | Replaces [skill-ovos-stop]\(https://github.com/OpenVoiceOS/skill-ovos-stop\) |        ) Tj
T*
(                                                                                        ) Tj
T*
(| `converse`                          | Continuous conversation interception for skills        ) Tj
T*
(         |                                                                            |        ) Tj
T*
(                                                                                        ) Tj
T*
(| `padatious_high`                    | High-confidence matches using Padatious                ) Tj
T*
(         |                                                                            |        ) Tj
T*
(                                                                                        ) Tj
T*
(| `adapt_high`                        | High-confidence matches using Adapt                    ) Tj
T*
(         |                                                                            |        ) Tj
T*
(                                                                                        ) Tj
T*
(| `fallback_high`                     | High-priority fallback skill matches                   ) Tj
T*
(         |                                                                            |        ) Tj
T*
(                                                                                        ) Tj
T*
(| `ocp_high`                          | High-confidence media-related queries                  ) Tj
T*
(         |                                                                            |        ) Tj
T*
(                                                                                        ) Tj
T*
(| `ovos-persona-pipeline-plugin-high` | Active persona conversation \(e.g., LLM integration\)    ) Tj
T*
(         |                                                                            |        ) Tj
T*
(                                                                               ) Tj
T*
(| `ovos-m2v-pipeline-high`            | Multilingual intent classifier capable of handling para) Tj
T*
(phrasing | Only supports **default skills**, not dynamic                              |) Tj
T*
() Tj
T*
(### Medium Confidence Components) Tj
T*
() Tj
T*
(| Pipeline                   | Description                                                     ) Tj
T*
(| Notes                                                                      |                 ) Tj
T*
(                        ) Tj
T*
(|----------------------------|-----------------------------------------------------------------) Tj
T*
(|----------------------------------------------------------------------------| ) Tj
T*
(| `stop_medium`              | Medium-confidence stop command matches                          ) Tj
T*
(| Replaces [skill-ovos-stop]\(https://github.com/OpenVoiceOS/skill-ovos-stop\) |                 ) Tj
T*
ET
endstream
endobj
320 0 obj
<< /Length 3685 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(                        ) Tj
T*
(| `padatious_medium`         | Medium-confidence matches using Padatious                       ) Tj
T*
(|                                                                            |                 ) Tj
T*
(                        ) Tj
T*
(| `adapt_medium`             | Medium-confidence matches using Adapt                           ) Tj
T*
(|                                                                            |                 ) Tj
T*
(                        ) Tj
T*
(| `ocp_medium`               | Medium-confidence media-related queries                         ) Tj
T*
(|                                                                            |                 ) Tj
T*
(                        ) Tj
T*
(| `fallback_medium`          | Medium-priority fallback skill matches                          ) Tj
T*
(|                                                                            |                 ) Tj
T*
(                                                                 ) Tj
T*
(| `ovos-m2v-pipeline-medium` | Multilingual intent classifier capable of handling paraphrasing ) Tj
T*
(| Only supports **default skills**, not dynamic                              |) Tj
T*
() Tj
T*
(### Low Confidence Components) Tj
T*
() Tj
T*
(| Pipeline                           | Description                                             ) Tj
T*
(        | Notes                                         |  ) Tj
T*
(|------------------------------------|---------------------------------------------------------) Tj
T*
(--------|-----------------------------------------------| ) Tj
T*
(| `stop_low`                         | Low-confidence stop command matches                     ) Tj
T*
(        | Disabled by default                           |  ) Tj
T*
(| `padatious_low`                    | Low-confidence matches using Padatious                  ) Tj
T*
(        | Often inaccurate; disabled by default         |   ) Tj
T*
(| `adapt_low`                        | Low-confidence matches using Adapt                      ) Tj
T*
(        |                                               |   ) Tj
T*
(| `ocp_low`                          | Low-confidence media-related queries                    ) Tj
T*
(        |                                               |   ) Tj
T*
(| `fallback_low`                     | Low-priority fallback skill matches                     ) Tj
T*
(        |                                               |   ) Tj
T*
(| `common_query`                     | Sends utterance to common_query skills                  ) Tj
T*
(        | Selects the best match among available skills |   ) Tj
T*
(| `ovos-persona-pipeline-plugin-low` | Persona catch-all fallback \(e.g., LLM integration\)      ) Tj
T*
(        |                                               |                                      ) Tj
T*
(                                            ) Tj
T*
(| `ovos-m2v-pipeline-low`            | Multilingual intent classifier capable of handling parap) Tj
T*
(hrasing | Only supports **default skills**, not dynamic | ) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Customizing the Pipeline) Tj
T*
() Tj
T*
(OVOS allows users to customize the intent pipeline through configuration files. Users can enabl) Tj
T*
(e or disable specific) Tj
T*
(components, adjust their order, and set confidence thresholds to tailor the system's behavior t) Tj
T*
(o their needs. This) Tj
T*
(customization ensures that OVOS can be optimized for various applications, from simple command ) Tj
T*
(recognition to complex) Tj
T*
(conversational agents.) Tj
T*
() Tj
T*
(```json) Tj
T*
(  "intents": {) Tj
T*
ET
endstream
endobj
321 0 obj
<< /Length 1944 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(    "adapt": {) Tj
T*
(      "conf_high": 0.5,) Tj
T*
(      "conf_med": 0.3,) Tj
T*
(      "conf_low": 0.2) Tj
T*
(    },) Tj
T*
(    "persona": {) Tj
T*
(      "handle_fallback": true,) Tj
T*
(      "default_persona": "Remote Llama") Tj
T*
(    },) Tj
T*
(    "pipeline": [) Tj
T*
(      "ovos-m2v-pipeline-high",) Tj
T*
(      "ocp_high",) Tj
T*
(      "stop_high",) Tj
T*
(      "converse",) Tj
T*
(      "padatious_high",) Tj
T*
(      "adapt_high",) Tj
T*
(      "stop_medium",) Tj
T*
(      "adapt_medium",) Tj
T*
(      "common_qa",) Tj
T*
(      "fallback_medium",) Tj
T*
(      "fallback_low") Tj
T*
(    ]) Tj
T*
(  },) Tj
T*
(```) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(By understanding and configuring the OVOS Intent Pipeline, developers and users can enhance the) Tj
T*
( accuracy and) Tj
T*
(responsiveness of their voice assistant applications.) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/stop_pipeline.md ===) Tj
T*
() Tj
T*
(# Stop Pipeline) Tj
T*
() Tj
T*
(The **stop pipeline** is a core component of the Open Voice OS \(OVOS\) pipeline architecture. It) Tj
T*
( defines the logic responsible for stopping ongoing interactions with active skills. This inclu) Tj
T*
(des aborting responses, halting speech, and terminating background tasks that skills may be per) Tj
T*
(forming. ) Tj
T*
() Tj
T*
(Because stopping is a **fundamental feature of a voice assistant**, it is implemented as a **de) Tj
T*
(dicated pipeline plugin**, not just a fallback or intent handler.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Purpose) Tj
T*
() Tj
T*
(A voice assistant must always be capable of responding to a "stop" command. Whether the user sa) Tj
T*
(ys *?stop,? ?cancel,?* or another localized phrase, OVOS must quickly:) Tj
T*
() Tj
T*
(* Determine if a skill is actively responding) Tj
T*
(* Allow skills to confirm whether they can be stopped) Tj
T*
(* Abort conversations, questions, or spoken responses) Tj
T*
ET
endstream
endobj
322 0 obj
<< /Length 1600 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(The `stop` pipeline guarantees this behavior through a flexible plugin system and localized voc) Tj
T*
(ab matching.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## How it works) Tj
T*
() Tj
T*
(The stop pipeline activates based on **high-confidence** or **medium-confidence** utterance mat) Tj
T*
(ches.) Tj
T*
() Tj
T*
(### High-confidence \(`stop_high`\)) Tj
T*
() Tj
T*
(This is triggered when a user says an exact match for a stop command, e.g.,:) Tj
T*
() Tj
T*
(* ?Stop?) Tj
T*
(* ?Cancel?) Tj
T*
(* ?Parar? \(in Portuguese\)) Tj
T*
(* ?Stopp? \(in German\)) Tj
T*
() Tj
T*
(The plugin:) Tj
T*
() Tj
T*
(1. Checks if any **active skills** can be stopped.) Tj
T*
(2. Pings active skills) Tj
T*
(3. Waits briefly \(0.5s\) for replies.) Tj
T*
(4. Calls stop on relevant skills.) Tj
T*
(5. If no skills are active, emits a **global stop**: `mycroft.stop`.) Tj
T*
() Tj
T*
(### Medium-confidence \(`stop_medium`\)) Tj
T*
() Tj
T*
(Triggered for more complex phrases that include a stop command but are not exact matches, such ) Tj
T*
(as:) Tj
T*
() Tj
T*
(* ?Can you stop now??) Tj
T*
(* ?I don?t want that anymore?) Tj
T*
(* ?Stop playing music please?) Tj
T*
() Tj
T*
(This match falls back to fuzzy intent matching.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Localization) Tj
T*
() Tj
T*
(The plugin supports stop commands in multiple languages using `.voc` files stored in:) Tj
T*
() Tj
T*
(```) Tj
T*
(locale/) Tj
T*
(  en-us/) Tj
T*
(    stop.voc) Tj
T*
(    global_stop.voc) Tj
T*
(  pt-pt/) Tj
T*
(    stop.voc) Tj
T*
(    global_stop.voc) Tj
T*
(```) Tj
T*
ET
endstream
endobj
323 0 obj
<< /Length 2261 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(You can help with language support via [GitLocalize]\(\)) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Session Integration) Tj
T*
() Tj
T*
(The stop plugin interfaces with the OVOS session system:) Tj
T*
() Tj
T*
(* Skills that respond to `stop` will be removed from **active skill list**) Tj
T*
(* Session blacklists are respected, blacklisted skills will not be pinged) Tj
T*
(* Session state is updated after each successful stop) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Design Philosophy) Tj
T*
() Tj
T*
(* ?? **Low latency**: Matches and stops skills within 0.5 seconds) Tj
T*
(* ? **Extensible**: Other plugins can extend or override this pipeline) Tj
T*
(* ?? **Localized**: All behavior is language-aware and configurable) Tj
T*
(* ? **Resilient**: Falls back to global stop if skills are unresponsive) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Summary) Tj
T*
() Tj
T*
(The `stop` pipeline ensures that OVOS is always in control. Whether a user needs to quickly int) Tj
T*
(errupt a skill, cancel a conversation, or shut down all interactions, the `StopService` plugin ) Tj
T*
(provides the robust, language-aware foundation to make that possible.) Tj
T*
() Tj
T*
(It is **not considered optional**, all OVOS installations should include this pipeline by defau) Tj
T*
(lt.) Tj
T*
() Tj
T*
() Tj
T*
(=== docs/tts_transformers.md ===) Tj
T*
() Tj
T*
(# TTS Transformers) Tj
T*
() Tj
T*
(**TTS Transformers** in OpenVoiceOS \(OVOS\) are plugins that process synthesized speech audio af) Tj
T*
(ter the Text-to-Speech \(TTS\) engine generates it but before it's played back to the user. ) Tj
T*
() Tj
T*
(They enable post-processing of audio to apply effects, enhance clarity, voice clone or tailor t) Tj
T*
(he output to specific needs.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## How They Work) Tj
T*
() Tj
T*
(The typical flow for speech output in OVOS is:) Tj
T*
() Tj
T*
(1. **Dialog Generation**: The assistant formulates a textual response.) Tj
T*
(2. **Dialog Transformation**: Optional plugins modify the text to adjust tone or style.) Tj
T*
(3. **Text-to-Speech \(TTS\)**: The text is converted into speech audio.) Tj
T*
(4. **TTS Transformation**: Plugins apply audio effects or modifications to the speech.) Tj
T*
ET
endstream
endobj
324 0 obj
<< /Length 1529 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(5. **Playback**: The final audio is played back to the user.) Tj
T*
() Tj
T*
(TTS Transformers operate in step 4, allowing for dynamic audio enhancements without altering th) Tj
T*
(e original TTS output.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Configuration) Tj
T*
() Tj
T*
(To enable TTS Transformers, add them to your `mycroft.conf` under the `tts_transformers` sectio) Tj
T*
(n:) Tj
T*
() Tj
T*
(```json) Tj
T*
("tts_transformers": {) Tj
T*
(  "plugin_name": {) Tj
T*
(    // plugin-specific configuration) Tj
T*
(  }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(Replace `"plugin_name"` with the identifier of the desired plugin and provide any necessary con) Tj
T*
(figuration parameters.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Available TTS Transformer Plugins) Tj
T*
() Tj
T*
(### **OVOS SoX TTS Transformer**) Tj
T*
() Tj
T*
(* **Purpose**: Applies various audio effects using SoX \(Sound eXchange\) to the TTS output.) Tj
T*
(* **Features**:) Tj
T*
() Tj
T*
(    * Pitch shifting) Tj
T*
(    * Reverb) Tj
T*
(    * Tempo adjustment) Tj
T*
(    * Equalization) Tj
T*
(    * Noise reduction) Tj
T*
(    * And many more) Tj
T*
() Tj
T*
(* **Installation**:) Tj
T*
() Tj
T*
(```bash) Tj
T*
(  pip install ovos-tts-transformer-sox-plugin) Tj
T*
(```) Tj
T*
() Tj
T*
(* **Configuration Example**:) Tj
T*
() Tj
T*
(```json) Tj
T*
(  "tts_transformers": {) Tj
T*
(    "ovos-tts-transformer-sox-plugin": {) Tj
T*
(      "effects": ["pitch 300", "reverb"]) Tj
T*
(    }) Tj
T*
(  }) Tj
T*
(```) Tj
T*
ET
endstream
endobj
325 0 obj
<< /Length 1826 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(* **Requirements**: Ensure SoX is installed and available in your system's PATH.) Tj
T*
(* **Source**: [GitHub Repository]\(https://github.com/OpenVoiceOS/ovos-tts-transformer-sox-plugi) Tj
T*
(n\)) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Creating Custom TTS Transformers) Tj
T*
() Tj
T*
(To develop your own TTS Transformer:) Tj
T*
() Tj
T*
(**Create a Python Class**:) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_plugin_manager.templates.transformers import TTSTransformer) Tj
T*
() Tj
T*
(class MyCustomTTSTransformer\(TTSTransformer\):) Tj
T*
(   def __init__\(self, config=None\):) Tj
T*
(       super\(\).__init__\("my-custom-tts-transformer", priority=10, config=config\)) Tj
T*
() Tj
T*
(   def transform\(self, wav_file: str, context: dict = None\) -> Tuple[str, dict]:) Tj
T*
(       """Transform passed wav_file and return path to transformed file""") Tj
T*
(       # Apply custom audio processing to wav_file) Tj
T*
(       return modified_wav_file, context) Tj
T*
() Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
(**Register as a Plugin**:) Tj
T*
(In your `setup.py`, include:) Tj
T*
() Tj
T*
(```python) Tj
T*
(entry_points={) Tj
T*
(   'ovos.plugin.tts_transformer': [) Tj
T*
(       'my-custom-tts-transformer = my_module:MyCustomTTSTransformer') Tj
T*
(   ]) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
(**Install and Configure**:) Tj
T*
(After installation, add your transformer to the `mycroft.conf`:) Tj
T*
() Tj
T*
(```json) Tj
T*
("tts_transformers": {) Tj
T*
( "my-custom-tts-transformer": {}) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(By leveraging TTS Transformers, you can enhance the auditory experience of your OVOS assistant,) Tj
T*
( tailoring speech output to better suit your preferences or application requirements.\([ovoshatc) Tj
T*
ET
endstream
endobj
326 0 obj
<< /Length 1987 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(hery.github.io][4]\)) Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
(=== docs/utterance_transformers.md ===) Tj
T*
() Tj
T*
(# Utterance Transformers) Tj
T*
() Tj
T*
(**Utterance Transformers** in OpenVoiceOS \(OVOS\) are plugins that process and modify user utter) Tj
T*
(ances immediately after speech-to-text \(STT\) conversion but before intent recognition. They ser) Tj
T*
(ve to enhance the accuracy and flexibility of the assistant by correcting errors, normalizing i) Tj
T*
(nput, and handling multilingual scenarios.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## How They Work) Tj
T*
() Tj
T*
(1. **Speech Recognition**: The user's spoken input is transcribed into text by the STT engine.) Tj
T*
(2. **Transformation Phase**: The transcribed text passes through any active utterance transform) Tj
T*
(ers.) Tj
T*
(3. **Intent Recognition**: The transformed text is then processed by the intent recognition sys) Tj
T*
(tem to determine the appropriate response.) Tj
T*
() Tj
T*
(This sequence ensures that any necessary preprocessing is applied to the user's input, improvin) Tj
T*
(g the reliability of intent matching.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Configuration) Tj
T*
() Tj
T*
(To enable utterance transformers, add them to your `mycroft.conf` file under the `utterance_tra) Tj
T*
(nsformers` section:) Tj
T*
() Tj
T*
(```json) Tj
T*
("utterance_transformers": {) Tj
T*
(  "plugin_name": {) Tj
T*
(    // plugin-specific configuration) Tj
T*
(  }) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(Replace `"plugin_name"` with the identifier of the desired plugin and provide any necessary con) Tj
T*
(figuration parameters.) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(## Available Utterance Transformer Plugins) Tj
T*
() Tj
T*
(### **OVOS Utterance Normalizer Plugin**) Tj
T*
() Tj
T*
(* **Purpose**: Standardizes user input by expanding contractions, converting numbers to words, ) Tj
T*
(and removing unnecessary punctuation.) Tj
T*
(* **Example**:) Tj
T*
() Tj
T*
ET
endstream
endobj
327 0 obj
<< /Length 1700 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(    * Input: `"I'm 5 years old."`) Tj
T*
(    * Output: `"I am five years old"`) Tj
T*
() Tj
T*
(* **Installation**:) Tj
T*
() Tj
T*
(```bash) Tj
T*
(pip install ovos-utterance-normalizer) Tj
T*
(```) Tj
T*
(* **Configuration**:) Tj
T*
() Tj
T*
(```json) Tj
T*
("utterance_transformers": {) Tj
T*
(  "ovos-utterance-normalizer": {}) Tj
T*
(}) Tj
T*
(```) Tj
T*
(* **Source**: [GitHub Repository]\(https://github.com/OpenVoiceOS/ovos-utterance-normalizer\)) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(### **OVOS Utterance Corrections Plugin**) Tj
T*
() Tj
T*
(* **Purpose**: Applies predefined corrections to common misrecognitions or user-defined replace) Tj
T*
(ments to improve intent matching.) Tj
T*
(* **Features**:) Tj
T*
() Tj
T*
(    * Full utterance replacements via `corrections.json`) Tj
T*
(    * Word-level replacements via `word_corrections.json`) Tj
T*
(    * Regex-based pattern replacements via `regex_corrections.json`) Tj
T*
() Tj
T*
(* **Example**:) Tj
T*
() Tj
T*
(    * Input: `"shalter is a switch"`) Tj
T*
(    * Output: `"schalter is a switch"`) Tj
T*
() Tj
T*
(* **Installation**:) Tj
T*
() Tj
T*
(```bash) Tj
T*
(pip install ovos-utterance-corrections-plugin) Tj
T*
(```) Tj
T*
(* **Configuration**:) Tj
T*
() Tj
T*
(```json) Tj
T*
("utterance_transformers": {) Tj
T*
(  "ovos-utterance-corrections-plugin": {}) Tj
T*
(}) Tj
T*
(```) Tj
T*
(* **Source**: [GitHub Repository]\(https://github.com/OpenVoiceOS/ovos-utterance-corrections-plu) Tj
T*
(gin\)) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(### **OVOS Utterance Cancel Plugin**) Tj
T*
() Tj
T*
(* **Purpose**: Detects phrases indicating the user wishes to cancel or ignore the current comma) Tj
T*
ET
endstream
endobj
328 0 obj
<< /Length 1812 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(nd and prevents further processing.) Tj
T*
(* **Example**:) Tj
T*
() Tj
T*
(    * Input: `"Hey Mycroft, can you tell me the... umm... oh, nevermind that"`) Tj
T*
(    * Output: *Utterance is discarded; no action taken*) Tj
T*
() Tj
T*
(* **Installation**:) Tj
T*
() Tj
T*
(```bash) Tj
T*
(pip install ovos-utterance-plugin-cancel) Tj
T*
(```) Tj
T*
(* **Configuration**:) Tj
T*
() Tj
T*
(```json) Tj
T*
("utterance_transformers": {) Tj
T*
(  "ovos-utterance-plugin-cancel": {}) Tj
T*
(}) Tj
T*
(```) Tj
T*
(* **Source**: [GitHub Repository]\(https://github.com/OpenVoiceOS/ovos-utterance-plugin-cancel\)) Tj
T*
() Tj
T*
(---) Tj
T*
() Tj
T*
(### **OVOS Bidirectional Translation Plugin**) Tj
T*
() Tj
T*
(* **Purpose**: Detects the language of the user's input and translates it to the assistant's pr) Tj
T*
(imary language if necessary, enabling multilingual interactions.) Tj
T*
(* **Features**:) Tj
T*
() Tj
T*
(    * Language detection and translation to primary language) Tj
T*
(    * Optional translation of responses back to the user's language) Tj
T*
() Tj
T*
(* **Example**:) Tj
T*
() Tj
T*
(    * Input: `"Cul es el clima hoy?"` \(Spanish\)) Tj
T*
(    * Output: `"What is the weather today?"` \(translated to English for processing\)) Tj
T*
() Tj
T*
(* **Installation**:) Tj
T*
() Tj
T*
(```bash) Tj
T*
(pip install ovos-bidirectional-translation-plugin) Tj
T*
(```) Tj
T*
(* **Configuration**:) Tj
T*
() Tj
T*
(```json) Tj
T*
("utterance_transformers": {) Tj
T*
(    "ovos-bidirectional-utterance-transformer": {) Tj
T*
(      "verify_lang": true,) Tj
T*
(      "ignore_invalid_langs": true) Tj
T*
(    }) Tj
T*
(}) Tj
T*
(```) Tj
T*
(* **Source**: [GitHub Repository]\(https://github.com/OpenVoiceOS/ovos-bidirectional-translation) Tj
T*
(-plugin\)) Tj
T*
() Tj
T*
ET
endstream
endobj
329 0 obj
<< /Length 1812 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(---) Tj
T*
() Tj
T*
(## Creating Custom Utterance Transformers) Tj
T*
() Tj
T*
(To develop your own utterance transformer:) Tj
T*
() Tj
T*
(**Create a Python Class**:) Tj
T*
() Tj
T*
(```python) Tj
T*
(from ovos_plugin_manager.templates.transformers import UtteranceTransformer) Tj
T*
() Tj
T*
(class MyCustomTransformer\(UtteranceTransformer\):) Tj
T*
(   def __init__\(self, config=None\):) Tj
T*
(       super\(\).__init__\("my-custom-transformer", priority=10, config=config\)) Tj
T*
() Tj
T*
(   def transform\(self, utterances, context\):) Tj
T*
(       # Modify the utterances as needed) Tj
T*
(       return modified_utterances, context) Tj
T*
(```) Tj
T*
() Tj
T*
(**Register as a Plugin**:) Tj
T*
(In your `setup.py`, include:) Tj
T*
() Tj
T*
(```python) Tj
T*
(entry_points={) Tj
T*
(   'ovos.plugin.utterance_transformer': [) Tj
T*
(       'my-custom-transformer = my_module:MyCustomTransformer') Tj
T*
(   ]) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
(**Install and Configure**:) Tj
T*
(After installation, add your transformer to the `mycroft.conf`:) Tj
T*
() Tj
T*
(```json) Tj
T*
("utterance_transformers": {) Tj
T*
( "my-custom-transformer": {}) Tj
T*
(}) Tj
T*
(```) Tj
T*
() Tj
T*
() Tj
T*
() Tj
T*
(=== it/core.md ===) Tj
T*
() Tj
T*
(# ovos-core) Tj
T*
() Tj
T*
([OpenVoiceOS]\(https://openvoiceos.org\)  una assistente vocale open source che permette di dial) Tj
T*
(ogare con i tuoi dispositivi.) Tj
T*
() Tj
T*
(OpenVoiceOS ha un design completamente modulare, tutti i suoi componenti sono sviluppati come p) Tj
T*
(lugin. Ci significa che non solo  un ottimo assistente vocale, ma  anche una bella libreria ) Tj
T*
(di funzioni vocali!) Tj
T*
() Tj
T*
(`ovos-core`  "il cervello" di OpenVoiceOS, tutti i suoi componenti e gli algoritmi di Natural ) Tj
T*
ET
endstream
endobj
330 0 obj
<< /Length 2236 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(Language Processing vengono gestiti qui.) Tj
T*
() Tj
T*
(## Gestione delle competenze) Tj
T*
() Tj
T*
(Il sistema di gestione delle competenze, <strong>skills service</strong> in inglese,  responsa) Tj
T*
(bile per la gestione delle skills e degli intenti.) Tj
T*
() Tj
T*
(Tutte le richieste all'assistente vocale sono gestite dal servizio di gestione delle skills, il) Tj
T*
( cervello di OVOS) Tj
T*
() Tj
T*
(OVOS  davvero modulare. Ad esempio, tutti i plugins di Mycroft funzionano senza problemi fino ) Tj
T*
(alla versione **0.1.0** di `ovos-core`!) Tj
T*
() Tj
T*
(Al momento, tutte le skills sono semplici pacchetti Python. Una volta installate saranno carica) Tj
T*
(ti automaticamente da `ovos-core`) Tj
T*
() Tj
T*
(Importante! A partire da `ovos-core` **0.0.8**  possibile provare una skill senza dover instal) Tj
T*
(lare tutto, ma semplicemente usando `ovos-workshop`, un sistema di contenitori che si basa su [) Tj
T*
(ovos-docker]\(https://openvoiceos.github.io/ovos-docker\)) Tj
T*
() Tj
T*
(Questa funzione si rivela essere utile soprattutto durante lo sviluppo delle skills, dove bisog) Tj
T*
(na fare molte prove prima di creare un pacchetto.) Tj
T*
() Tj
T*
(```bash) Tj
T*
(ovos-skill-launcher {skill_id} [path/to/my/skill_id]) Tj
T*
(```) Tj
T*
() Tj
T*
(## Configurazione) Tj
T*
() Tj
T*
(```javascript) Tj
T*
("skills": {) Tj
T*
() Tj
T*
(    // blacklisted skills to not load) Tj
T*
(    // NB: This is the skill_id, usually the basename\(\) of the directory where the skill lives,) Tj
T*
( so if) Tj
T*
(     // the skill you want to blacklist is in /usr/share/mycroft/skills/mycroft-alarm.mycroftai) Tj
T*
(/) Tj
T*
(    // then you should write `["mycroft-alarm.mycroftai"]` below.) Tj
T*
(    "blacklisted_skills": [],) Tj
T*
() Tj
T*
(    // fallback skill configuration \(see below\)) Tj
T*
(    "fallbacks": {...},) Tj
T*
() Tj
T*
(    // converse stage configuration \(see below\)) Tj
T*
(    "converse": {...}) Tj
T*
() Tj
T*
(},) Tj
T*
(```) Tj
T*
() Tj
T*
(## Utterance transformers) Tj
T*
() Tj
T*
(**Introdotto** da `ovos-core` **v.0.0.8**) Tj
T*
() Tj
T*
(Originariamente sviluppato da <a>Neon.ai</a>, la <strong>utterance transformer</strong> permett) Tj
T*
ET
endstream
endobj
331 0 obj
<< /Length 2382 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(e a `ovos-core` di ricevere una richiesta in linguaggio naturale o una `utterance` da un utiliz) Tj
T*
(zatore, e di inviarla a un plugin di "pre trattamento".) Tj
T*
() Tj
T*
(Il framework dei `utterance` transformers  costituito da un numero qualsiasi di plugin ordinat) Tj
T*
(i per priorit \(definita dallo sviluppatore\). `utterance` e messaggio.`context` vengono quindi ) Tj
T*
(inviati a tutti i plugin che li analizzeranno in modo sequenziale.) Tj
T*
() Tj
T*
(![imagem]\(https://github.com/OpenVoiceOS/ovos-technical-manual/assets/33701864/75b67a91-dd8d-48) Tj
T*
(cd-a146-91988bbbf374\)) Tj
T*
() Tj
T*
(Per attivare un nuovo `utterance transformer`  sufficiente configurarlo in <code>mycroft.conf<) Tj
T*
(/code> dopo averlo installato) Tj
T*
() Tj
T*
(```javascript) Tj
T*
(// To enable a utterance transformer plugin just add it's name with any relevant config) Tj
T*
(// these plugins can mutate the utterance between STT and the Intent stage) Tj
T*
(// they may also modify message.context with metadata) Tj
T*
(// plugins only load if they are installed and enabled in this section) Tj
T*
("utterance_transformers": {) Tj
T*
() Tj
T*
( "ovos-utterance-normalizer": {},) Tj
T*
() Tj
T*
( // cancel utterances mid command) Tj
T*
( "ovos-utterance-plugin-cancel": {},) Tj
T*
() Tj
T*
( // define utterance fixes via fuzzy match ~/.local/share/mycroft/corrections.json) Tj
T*
( // define unconditional replacements at word level ~/.local/share/mycroft/word_corrections.jso) Tj
T*
(n) Tj
T*
( "ovos-utterance-corrections-plugin": {},) Tj
T*
() Tj
T*
( // translation plugin) Tj
T*
( "ovos-utterance-translation-plugin": {) Tj
T*
(   "bidirectional": true,) Tj
T*
(   "verify_lang": false,) Tj
T*
(   "ignore_invalid": true,) Tj
T*
(   "translate_secondary_langs": false) Tj
T*
( }) Tj
T*
(},) Tj
T*
(```) Tj
T*
() Tj
T*
(## Metadata Transformers) Tj
T*
() Tj
T*
(**Introdotto** da `ovos-core` **v.0.0.8**) Tj
T*
() Tj
T*
(Come gli <strong>utterance transformers</strong>, questi plugins trasformano solo il `message.c) Tj
T*
(ontext`.) Tj
T*
() Tj
T*
(```javascript) Tj
T*
(// To enable a metadata transformer plugin just add it's name with any relevant config) Tj
T*
(// these plugins can mutate the message.context between STT and the Intent stage) Tj
T*
("metadata_transformers": {},) Tj
T*
(```) Tj
T*
() Tj
T*
(## Pipelines) Tj
T*
ET
endstream
endobj
332 0 obj
<< /Length 2625 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
() Tj
T*
(**Introdotto** da `ovos-core` **v.0.0.8**) Tj
T*
() Tj
T*
(I concetto di pipeline configurabile  stato introdotto con <code>ovos-core</code> <strong>v.0.) Tj
T*
(0.8</strong> ed  pianificato per diventare completamente operativo con la versione <strong>0.1) Tj
T*
(.0</strong>.) Tj
T*
() Tj
T*
(Le pipeline includono parser di intenti, framework di conversazione, di query comuni e di skill) Tj
T*
(s di fallback.) Tj
T*
() Tj
T*
(```javascript) Tj
T*
(  // Intent Pipeline / plugins config) Tj
T*
(  "intents" : {) Tj
T*
(    // the pipeline is a ordered set of frameworks to send an utterance too) Tj
T*
(    // if one of the frameworks fails the next one is used, until an answer is found) Tj
T*
(    // NOTE: if padatious is not installed, it will be replaced with padacioso \(much slower\)) Tj
T*
(    // in the future these will become plugins, and new pipeline stages can be added by end use) Tj
T*
(rs) Tj
T*
(    "pipeline": [) Tj
T*
(        "stop_high",) Tj
T*
(        "converse",) Tj
T*
(        "padatious_high",) Tj
T*
(        "adapt_high",) Tj
T*
(        "fallback_high",) Tj
T*
(        "stop_medium",) Tj
T*
(        "padatious_medium",) Tj
T*
(        "adapt_medium",) Tj
T*
(        "adapt_low",) Tj
T*
(        "common_qa",) Tj
T*
(        "fallback_medium",) Tj
T*
(        "fallback_low") Tj
T*
(    ]) Tj
T*
(  },) Tj
T*
(```) Tj
T*
() Tj
T*
(La maggior parte dei componenti della pipeline potr essere configurata. Per esempio:) Tj
T*
() Tj
T*
(pipeline | descrizione | note) Tj
T*
(--- | --- | ---) Tj
T*
(stop_high | il comando di "stop" corrisponde esattamente | rimpiazza [OpenVoiceOS/skill-ovos-st) Tj
T*
(op]\(https://github.com/OpenVoiceOS/skill-ovos-stop\)) Tj
T*
(converse | intercettazione continua delle conversazioni |) Tj
T*
(padacioso_high | fidarsi ciecamente di padacioso | estremamente lento!!! <br> disabilitato) Tj
T*
(padatious_high | fidarsi ciecamente di padatious |) Tj
T*
(adapt_high | fidarsi ciecamente di adapt |) Tj
T*
(fallback_high | alta priorit della skill di ripiego |) Tj
T*
(stop_medium | il comando di "stop" corrisponde all'incirca | rimpiazza [OpenVoiceOS/skill-ovos-) Tj
T*
(stop]\(https://github.com/OpenVoiceOS/skill-ovos-stop\)) Tj
T*
(padacioso_medium | fidarsi cos cos di padacioso | estremamente lento!!! <br> disabilitato) Tj
T*
(padatious_medium | fidarsi cos cos di padatious |) Tj
T*
(adapt_medium | fidarsi cos cos di adapt |) Tj
T*
(adapt_low | fidarsi appena di adapt |) Tj
T*
(common_query | invia l'utterance alle skills di common_query e seleziona la corrispondenza migl) Tj
T*
(iore |) Tj
T*
ET
endstream
endobj
333 0 obj
<< /Length 3163 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(fallback_medium | media priorit della skill di ripiego |) Tj
T*
(stop_low | fidarsi appena del comando "stop" captato | disabilitato) Tj
T*
(padacioso_low | fidarsi appena di padacioso | estremamente lento!!! <br> disabilitato) Tj
T*
(padatious_low | fidarsi appena di padatious | sbaglia quasi sempre<br> disabilitato) Tj
T*
(fallback_low | bassa priorit della skill di ripiego | ) Tj
T*
() Tj
T*
() Tj
T*
(=== it/index.md ===) Tj
T*
() Tj
T*
(# Manuale tecnico di OpenVoiceOS) Tj
T*
() Tj
T*
(![]\(https://github.com/OpenVoiceOS/ovos_assets/blob/master/Logo/ovos-logo-512.png?raw=true\)) Tj
T*
() Tj
T*
(Benvenuti nella documentazione per sviluppatori OVOS.) Tj
T*
() Tj
T*
(Se non stai cercando di sviluppare qualcosa per OpenVoiceOS, i [documenti della community]\(http) Tj
T*
(s://openvoiceos.github.io/community-docs\) sono sicuramente una lettura pi digesta.) Tj
T*
() Tj
T*
(## Prospettiva) Tj
T*
() Tj
T*
(OVOS aspira ad essere un sistema operativo completamente vocale, e come tale ha bisogno di molt) Tj
T*
(e applicazioni e framework. OVOS fornisce tutti gli strumenti necessari per integrare la voce n) Tj
T*
(ei tuoi progetti.) Tj
T*
() Tj
T*
(Il tipico caso d'uso di OVOS  come assistente vocale, `"Hey Mycroft, cos' ..."` , ma come sis) Tj
T*
(tema operativo completamente vocale OVOS pu essere personalizzato per molti altri usi. La nost) Tj
T*
(ra comunit si concentra su progetti che miraro a integrare OVOS in robot, mobili, specchi inte) Tj
T*
(lligenti, applicazioni cloud, TV, IoT e altro ancora \(si, anche un manichino!\)) Tj
T*
() Tj
T*
(I progetti qui elencati sono delle "distribuzioni OVOS", combinazioni di pacchetti OVOS create ) Tj
T*
(per fornire uno stack completo di assistenti vocali un po' per tutti i gusti.) Tj
T*
() Tj
T*
(- [raspOVOS]\(https://github.com/OpenVoiceOS/raspOVOS\) - ottimizzato per Raspberry Pi, costruito) Tj
T*
( sul [sistema operativo Raspberry Pi]\(https://www.raspberrypi.com/software/\)) Tj
T*
() Tj
T*
(- [ovos-buildroot]\(https://github.com/OpenVoiceOS/ovos-buildroot\) - Linux minimale per disposit) Tj
T*
(ivi embedded, basato su [ovos-docker]\(https://github.com/OpenVoiceOS/ovos-docker/\) e [buildroot) Tj
T*
(]\(https://buildroot.org/\)) Tj
T*
() Tj
T*
(- [ovos-installer]\(https://github.com/OpenVoiceOS/ovos-installer\) - configura OVOS su un sistem) Tj
T*
(a operativo esistente utilizzando un perfetto equilibrio di scripts e ansible.) Tj
T*
() Tj
T*
(In questi documenti troverai informazioni sull'architettura di OVOS, i diversi tipi di plugin d) Tj
T*
(isponibili e le linee guida per lo sviluppo di nuove applicazioni per OVOS.) Tj
T*
() Tj
T*
(## Altre risorse) Tj
T*
() Tj
T*
(La documentazione per utilizzatori finali  pubblicata automaticamente su [https://openvoiceos.) Tj
T*
(github.io/community-docs]\(https://openvoiceos.github.io/community-docs\)) Tj
T*
() Tj
T*
(La documentazione specifica di Docker  disponibile su [https://openvoiceos.github.io/ovos-dock) Tj
T*
(er]\(https://openvoiceos.github.io/ovos-docker/\)) Tj
T*
() Tj
T*
(Un indice di tutti i messaggi bus emessi o ascoltati da tutti i progetti nelle repository OVOS ) Tj
T*
ET
endstream
endobj
334 0 obj
<< /Length 2960 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(pu essere trovato su [https://openvoiceos.github.io/message_spec]\(https://openvoiceos.github.i) Tj
T*
(o/message_spec/\)) Tj
T*
() Tj
T*
(Esiste anche il progetto HiveMind per creare clusters di assistenti vocali. La sua documentazio) Tj
T*
(ne dedicata pu essere trovata su [https://jarbashivemind.github.io/HiveMind-community-docs/]\(h) Tj
T*
(ttps://jarbashivemind.github.io/HiveMind-community-docs/\)) Tj
T*
() Tj
T*
(## Contribuire alla documentazione) Tj
T*
() Tj
T*
(La documentazione per sviluppatori OVOS  scritta e gestita da utenti proprio come te!) Tj
T*
() Tj
T*
(Pensa a questi documenti come punto di partenza e non dimenticare di contribuire laddove trovi ) Tj
T*
(un errore o una mancanza.) Tj
T*
() Tj
T*
(Per favore, apri [Issues e Pull Requests]\(https://github.com/OpenVoiceOS/ovos-technical-manual\)) Tj
T*
( !) Tj
T*
() Tj
T*
() Tj
T*
(=== it/why.md ===) Tj
T*
() Tj
T*
(# Informazioni su OpenVoiceOS) Tj
T*
() Tj
T*
(Presentazione di OpenVoiceOS: l'assistente vocale intelligente rispettoso della privacy e open ) Tj
T*
(source.) Tj
T*
() Tj
T*
(OpenVoiceOS  un nuovo attore nel mercato degli assistenti vocali, che offre un'alternativa pot) Tj
T*
(ente e flessibile a soluzioni proprietarie come Amazon Echo e Google Home.) Tj
T*
() Tj
T*
(Con OpenVoiceOS hai il controllo completo sui tuoi dati personali e puoi facilmente personalizz) Tj
T*
(are e aggiungere nuove funzionalit al tuo assistente vocale.) Tj
T*
() Tj
T*
(Basato su software open source, OpenVoiceOS  progettato per fornire agli utenti un'interfaccia) Tj
T*
( vocale semplice e intuitiva che permette di controllare i propri dispositivi domestici intelli) Tj
T*
(genti, riprodurre musica, impostare promemoria, raccontare barzellette, chiacchierare con un'in) Tj
T*
(telligenza artificiale e molto altro.) Tj
T*
() Tj
T*
(La piattaforma si basa su tecnologie all'avanguardia: machine learning, elaborazione del lingua) Tj
T*
(ggio naturale NPL e altre, configurate per offrire un'esperienza altamente reattiva e accurata ) Tj
T*
(su tutti i tipi di supporto.) Tj
T*
() Tj
T*
(Oltre alle sue funzionalit vocali, OpenVoiceOS presenta un'interfaccia touch-screen realizzata) Tj
T*
( utilizzando QT5 e il framework KF5.) Tj
T*
() Tj
T*
(L'interfaccia  intuitiva e facile da usare e consente di accedere all'intera gamma di caratter) Tj
T*
(istiche e funzionalit di OpenVoiceOS.) Tj
T*
() Tj
T*
(Che tu preferisca i comandi vocali o l'interfaccia touch pi tradizionale, OpenVoiceOS  sicura) Tj
T*
(mente quello che fa per te.) Tj
T*
() Tj
T*
(Uno dei principali vantaggi di OpenVoiceOS  la sua comunit open source, se anche tu hai delle) Tj
T*
( competenze tecniche prova a contribuire alla piattaforma.) Tj
T*
() Tj
T*
(Che tu sia uno sviluppatore di software, un data scientist o semplicemente qualcuno con una pas) Tj
T*
(sione per la tecnologia e le lingue, puoi partecipare e contribuire a costruire la prossima gen) Tj
T*
ET
endstream
endobj
335 0 obj
<< /Length 727 >>
stream
BT
/F1 11 Tf
12 TL
72 720 Td
(erazione di assistenti vocali intelligenti.) Tj
T*
() Tj
T*
(Con OpenVoiceOS hai la possibilit di far funzionare il tuo assistente completamente offline, i) Tj
T*
(n modo da avere il ??controllo completo sui tuoi dati e assicurandoti che le tue informazioni n) Tj
T*
(on vengano mai condivise con terze parti.  questo che fa di OpenVoiceOS la scelta perfetta per) Tj
T*
( chiunque apprezzi la privacy e la sicurezza.) Tj
T*
() Tj
T*
(Quindi, se stai cercando un assistente vocale intelligente che ti dia la libert e il controllo) Tj
T*
( che meriti, prova OpenVoiceOS!) Tj
T*
() Tj
T*
(**Disclaimer** : questo post  stato scritto \(e tradotto\) in collaborazione con ChatGPT) Tj
T*
() Tj
T*
ET
endstream
endobj
336 0 obj
<< /Type /Pages /Kids [ 337 0 R 338 0 R 339 0 R 340 0 R 341 0 R 342 0 R 343 0 R 344 0 R 345 0 R 346 0 R 347 0 R 348 0 R 349 0 R 350 0 R 351 0 R 352 0 R 353 0 R 354 0 R 355 0 R 356 0 R 357 0 R 358 0 R 359 0 R 360 0 R 361 0 R 362 0 R 363 0 R 364 0 R 365 0 R 366 0 R 367 0 R 368 0 R 369 0 R 370 0 R 371 0 R 372 0 R 373 0 R 374 0 R 375 0 R 376 0 R 377 0 R 378 0 R 379 0 R 380 0 R 381 0 R 382 0 R 383 0 R 384 0 R 385 0 R 386 0 R 387 0 R 388 0 R 389 0 R 390 0 R 391 0 R 392 0 R 393 0 R 394 0 R 395 0 R 396 0 R 397 0 R 398 0 R 399 0 R 400 0 R 401 0 R 402 0 R 403 0 R 404 0 R 405 0 R 406 0 R 407 0 R 408 0 R 409 0 R 410 0 R 411 0 R 412 0 R 413 0 R 414 0 R 415 0 R 416 0 R 417 0 R 418 0 R 419 0 R 420 0 R 421 0 R 422 0 R 423 0 R 424 0 R 425 0 R 426 0 R 427 0 R 428 0 R 429 0 R 430 0 R 431 0 R 432 0 R 433 0 R 434 0 R 435 0 R 436 0 R 437 0 R 438 0 R 439 0 R 440 0 R 441 0 R 442 0 R 443 0 R 444 0 R 445 0 R 446 0 R 447 0 R 448 0 R 449 0 R 450 0 R 451 0 R 452 0 R 453 0 R 454 0 R 455 0 R 456 0 R 457 0 R 458 0 R 459 0 R 460 0 R 461 0 R 462 0 R 463 0 R 464 0 R 465 0 R 466 0 R 467 0 R 468 0 R 469 0 R 470 0 R 471 0 R 472 0 R 473 0 R 474 0 R 475 0 R 476 0 R 477 0 R 478 0 R 479 0 R 480 0 R 481 0 R 482 0 R 483 0 R 484 0 R 485 0 R 486 0 R 487 0 R 488 0 R 489 0 R 490 0 R 491 0 R 492 0 R 493 0 R 494 0 R 495 0 R 496 0 R 497 0 R 498 0 R 499 0 R 500 0 R 501 0 R 502 0 R 503 0 R 504 0 R 505 0 R 506 0 R 507 0 R 508 0 R 509 0 R 510 0 R 511 0 R 512 0 R 513 0 R 514 0 R 515 0 R 516 0 R 517 0 R 518 0 R 519 0 R 520 0 R 521 0 R 522 0 R 523 0 R 524 0 R 525 0 R 526 0 R 527 0 R 528 0 R 529 0 R 530 0 R 531 0 R 532 0 R 533 0 R 534 0 R 535 0 R 536 0 R 537 0 R 538 0 R 539 0 R 540 0 R 541 0 R 542 0 R 543 0 R 544 0 R 545 0 R 546 0 R 547 0 R 548 0 R 549 0 R 550 0 R 551 0 R 552 0 R 553 0 R 554 0 R 555 0 R 556 0 R 557 0 R 558 0 R 559 0 R 560 0 R 561 0 R 562 0 R 563 0 R 564 0 R 565 0 R 566 0 R 567 0 R 568 0 R 569 0 R 570 0 R 571 0 R 572 0 R 573 0 R 574 0 R 575 0 R 576 0 R 577 0 R 578 0 R 579 0 R 580 0 R 581 0 R 582 0 R 583 0 R 584 0 R 585 0 R 586 0 R 587 0 R 588 0 R 589 0 R 590 0 R 591 0 R 592 0 R 593 0 R 594 0 R 595 0 R 596 0 R 597 0 R 598 0 R 599 0 R 600 0 R 601 0 R 602 0 R 603 0 R 604 0 R 605 0 R 606 0 R 607 0 R 608 0 R 609 0 R 610 0 R 611 0 R 612 0 R 613 0 R 614 0 R 615 0 R 616 0 R 617 0 R 618 0 R 619 0 R 620 0 R 621 0 R 622 0 R 623 0 R 624 0 R 625 0 R 626 0 R 627 0 R 628 0 R 629 0 R 630 0 R 631 0 R 632 0 R 633 0 R 634 0 R 635 0 R 636 0 R 637 0 R 638 0 R 639 0 R 640 0 R 641 0 R 642 0 R 643 0 R 644 0 R 645 0 R 646 0 R 647 0 R 648 0 R 649 0 R 650 0 R 651 0 R 652 0 R 653 0 R 654 0 R 655 0 R 656 0 R 657 0 R 658 0 R 659 0 R 660 0 R 661 0 R 662 0 R 663 0 R 664 0 R 665 0 R 666 0 R 667 0 R 668 0 R 669 0 R 670 0 R ] /Count 334 >>
endobj
337 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 2 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
338 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 3 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
339 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 4 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
340 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 5 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
341 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 6 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
342 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 7 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
343 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 8 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
344 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 9 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
345 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 10 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
346 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 11 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
347 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 12 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
348 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 13 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
349 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 14 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
350 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 15 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
351 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 16 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
352 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 17 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
353 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 18 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
354 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 19 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
355 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 20 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
356 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 21 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
357 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 22 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
358 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 23 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
359 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 24 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
360 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 25 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
361 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 26 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
362 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 27 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
363 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 28 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
364 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 29 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
365 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 30 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
366 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 31 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
367 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 32 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
368 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 33 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
369 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 34 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
370 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 35 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
371 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 36 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
372 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 37 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
373 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 38 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
374 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 39 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
375 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 40 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
376 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 41 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
377 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 42 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
378 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 43 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
379 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 44 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
380 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 45 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
381 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 46 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
382 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 47 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
383 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 48 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
384 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 49 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
385 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 50 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
386 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 51 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
387 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 52 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
388 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 53 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
389 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 54 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
390 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 55 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
391 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 56 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
392 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 57 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
393 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 58 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
394 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 59 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
395 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 60 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
396 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 61 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
397 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 62 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
398 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 63 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
399 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 64 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
400 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 65 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
401 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 66 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
402 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 67 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
403 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 68 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
404 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 69 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
405 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 70 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
406 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 71 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
407 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 72 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
408 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 73 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
409 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 74 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
410 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 75 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
411 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 76 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
412 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 77 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
413 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 78 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
414 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 79 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
415 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 80 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
416 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 81 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
417 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 82 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
418 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 83 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
419 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 84 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
420 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 85 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
421 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 86 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
422 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 87 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
423 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 88 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
424 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 89 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
425 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 90 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
426 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 91 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
427 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 92 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
428 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 93 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
429 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 94 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
430 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 95 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
431 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 96 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
432 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 97 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
433 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 98 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
434 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 99 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
435 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 100 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
436 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 101 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
437 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 102 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
438 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 103 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
439 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 104 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
440 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 105 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
441 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 106 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
442 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 107 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
443 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 108 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
444 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 109 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
445 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 110 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
446 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 111 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
447 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 112 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
448 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 113 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
449 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 114 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
450 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 115 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
451 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 116 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
452 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 117 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
453 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 118 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
454 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 119 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
455 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 120 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
456 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 121 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
457 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 122 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
458 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 123 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
459 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 124 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
460 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 125 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
461 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 126 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
462 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 127 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
463 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 128 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
464 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 129 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
465 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 130 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
466 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 131 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
467 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 132 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
468 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 133 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
469 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 134 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
470 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 135 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
471 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 136 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
472 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 137 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
473 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 138 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
474 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 139 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
475 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 140 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
476 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 141 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
477 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 142 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
478 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 143 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
479 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 144 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
480 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 145 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
481 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 146 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
482 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 147 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
483 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 148 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
484 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 149 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
485 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 150 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
486 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 151 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
487 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 152 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
488 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 153 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
489 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 154 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
490 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 155 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
491 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 156 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
492 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 157 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
493 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 158 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
494 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 159 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
495 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 160 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
496 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 161 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
497 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 162 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
498 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 163 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
499 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 164 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
500 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 165 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
501 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 166 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
502 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 167 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
503 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 168 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
504 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 169 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
505 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 170 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
506 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 171 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
507 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 172 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
508 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 173 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
509 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 174 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
510 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 175 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
511 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 176 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
512 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 177 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
513 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 178 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
514 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 179 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
515 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 180 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
516 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 181 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
517 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 182 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
518 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 183 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
519 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 184 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
520 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 185 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
521 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 186 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
522 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 187 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
523 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 188 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
524 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 189 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
525 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 190 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
526 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 191 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
527 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 192 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
528 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 193 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
529 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 194 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
530 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 195 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
531 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 196 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
532 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 197 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
533 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 198 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
534 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 199 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
535 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 200 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
536 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 201 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
537 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 202 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
538 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 203 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
539 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 204 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
540 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 205 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
541 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 206 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
542 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 207 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
543 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 208 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
544 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 209 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
545 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 210 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
546 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 211 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
547 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 212 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
548 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 213 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
549 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 214 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
550 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 215 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
551 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 216 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
552 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 217 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
553 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 218 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
554 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 219 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
555 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 220 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
556 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 221 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
557 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 222 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
558 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 223 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
559 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 224 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
560 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 225 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
561 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 226 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
562 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 227 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
563 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 228 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
564 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 229 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
565 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 230 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
566 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 231 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
567 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 232 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
568 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 233 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
569 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 234 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
570 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 235 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
571 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 236 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
572 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 237 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
573 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 238 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
574 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 239 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
575 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 240 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
576 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 241 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
577 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 242 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
578 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 243 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
579 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 244 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
580 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 245 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
581 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 246 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
582 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 247 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
583 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 248 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
584 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 249 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
585 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 250 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
586 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 251 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
587 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 252 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
588 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 253 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
589 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 254 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
590 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 255 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
591 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 256 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
592 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 257 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
593 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 258 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
594 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 259 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
595 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 260 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
596 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 261 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
597 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 262 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
598 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 263 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
599 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 264 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
600 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 265 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
601 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 266 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
602 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 267 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
603 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 268 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
604 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 269 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
605 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 270 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
606 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 271 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
607 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 272 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
608 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 273 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
609 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 274 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
610 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 275 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
611 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 276 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
612 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 277 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
613 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 278 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
614 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 279 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
615 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 280 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
616 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 281 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
617 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 282 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
618 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 283 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
619 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 284 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
620 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 285 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
621 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 286 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
622 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 287 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
623 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 288 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
624 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 289 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
625 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 290 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
626 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 291 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
627 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 292 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
628 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 293 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
629 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 294 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
630 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 295 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
631 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 296 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
632 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 297 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
633 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 298 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
634 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 299 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
635 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 300 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
636 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 301 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
637 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 302 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
638 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 303 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
639 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 304 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
640 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 305 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
641 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 306 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
642 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 307 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
643 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 308 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
644 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 309 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
645 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 310 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
646 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 311 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
647 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 312 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
648 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 313 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
649 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 314 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
650 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 315 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
651 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 316 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
652 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 317 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
653 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 318 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
654 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 319 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
655 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 320 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
656 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 321 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
657 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 322 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
658 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 323 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
659 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 324 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
660 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 325 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
661 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 326 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
662 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 327 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
663 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 328 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
664 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 329 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
665 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 330 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
666 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 331 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
667 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 332 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
668 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 333 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
669 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 334 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
670 0 obj
<< /Type /Page /Parent 336 0 R /MediaBox [0 0 612 792] /Contents 335 0 R /Resources << /Font << /F1 1 0 R >> >> >>
endobj
671 0 obj
<< /Type /Catalog /Pages 336 0 R >>
endobj
xref
0 672
0000000000 65535 f 
0000000009 00000 n 
0000000077 00000 n 
0000002691 00000 n 
0000005280 00000 n 
0000007775 00000 n 
0000010538 00000 n 
0000013988 00000 n 
0000018208 00000 n 
0000022173 00000 n 
0000025926 00000 n 
0000029646 00000 n 
0000033429 00000 n 
0000037595 00000 n 
0000041855 00000 n 
0000045927 00000 n 
0000048555 00000 n 
0000050692 00000 n 
0000052893 00000 n 
0000055472 00000 n 
0000057585 00000 n 
0000059708 00000 n 
0000061656 00000 n 
0000063917 00000 n 
0000066081 00000 n 
0000068086 00000 n 
0000070225 00000 n 
0000072442 00000 n 
0000074623 00000 n 
0000076613 00000 n 
0000078926 00000 n 
0000081591 00000 n 
0000083803 00000 n 
0000086172 00000 n 
0000089107 00000 n 
0000091962 00000 n 
0000093971 00000 n 
0000095886 00000 n 
0000098223 00000 n 
0000100794 00000 n 
0000103636 00000 n 
0000105873 00000 n 
0000107869 00000 n 
0000110587 00000 n 
0000112661 00000 n 
0000115202 00000 n 
0000117109 00000 n 
0000120098 00000 n 
0000122382 00000 n 
0000124194 00000 n 
0000125998 00000 n 
0000127705 00000 n 
0000129308 00000 n 
0000131257 00000 n 
0000133356 00000 n 
0000135541 00000 n 
0000138080 00000 n 
0000140357 00000 n 
0000143098 00000 n 
0000144591 00000 n 
0000147125 00000 n 
0000148869 00000 n 
0000150542 00000 n 
0000152575 00000 n 
0000154572 00000 n 
0000156626 00000 n 
0000158883 00000 n 
0000161007 00000 n 
0000162750 00000 n 
0000164369 00000 n 
0000166453 00000 n 
0000168767 00000 n 
0000171079 00000 n 
0000173311 00000 n 
0000176421 00000 n 
0000178689 00000 n 
0000181354 00000 n 
0000183619 00000 n 
0000186084 00000 n 
0000188246 00000 n 
0000192423 00000 n 
0000194473 00000 n 
0000196895 00000 n 
0000199464 00000 n 
0000204525 00000 n 
0000206719 00000 n 
0000208937 00000 n 
0000212034 00000 n 
0000214314 00000 n 
0000217431 00000 n 
0000220854 00000 n 
0000223441 00000 n 
0000225798 00000 n 
0000229202 00000 n 
0000232571 00000 n 
0000236864 00000 n 
0000240271 00000 n 
0000242844 00000 n 
0000245599 00000 n 
0000248244 00000 n 
0000250877 00000 n 
0000253172 00000 n 
0000255599 00000 n 
0000258853 00000 n 
0000261472 00000 n 
0000263762 00000 n 
0000266107 00000 n 
0000268494 00000 n 
0000270624 00000 n 
0000272978 00000 n 
0000275665 00000 n 
0000279302 00000 n 
0000282335 00000 n 
0000285487 00000 n 
0000289247 00000 n 
0000293194 00000 n 
0000295673 00000 n 
0000297928 00000 n 
0000300249 00000 n 
0000302655 00000 n 
0000304808 00000 n 
0000307155 00000 n 
0000310524 00000 n 
0000312998 00000 n 
0000315221 00000 n 
0000318435 00000 n 
0000321344 00000 n 
0000323959 00000 n 
0000326114 00000 n 
0000328204 00000 n 
0000330596 00000 n 
0000333610 00000 n 
0000336159 00000 n 
0000337860 00000 n 
0000339939 00000 n 
0000341979 00000 n 
0000344213 00000 n 
0000347285 00000 n 
0000350223 00000 n 
0000352574 00000 n 
0000354794 00000 n 
0000356753 00000 n 
0000359191 00000 n 
0000361452 00000 n 
0000363475 00000 n 
0000365158 00000 n 
0000367142 00000 n 
0000369860 00000 n 
0000371280 00000 n 
0000372824 00000 n 
0000375104 00000 n 
0000377319 00000 n 
0000379801 00000 n 
0000382623 00000 n 
0000385127 00000 n 
0000387433 00000 n 
0000389955 00000 n 
0000392137 00000 n 
0000394846 00000 n 
0000398028 00000 n 
0000400942 00000 n 
0000403300 00000 n 
0000406279 00000 n 
0000408722 00000 n 
0000411399 00000 n 
0000413741 00000 n 
0000415996 00000 n 
0000417729 00000 n 
0000419688 00000 n 
0000422723 00000 n 
0000425110 00000 n 
0000427447 00000 n 
0000429817 00000 n 
0000432676 00000 n 
0000434901 00000 n 
0000437521 00000 n 
0000439833 00000 n 
0000442299 00000 n 
0000444861 00000 n 
0000447731 00000 n 
0000450086 00000 n 
0000452329 00000 n 
0000454362 00000 n 
0000457102 00000 n 
0000459926 00000 n 
0000462523 00000 n 
0000465098 00000 n 
0000467302 00000 n 
0000469324 00000 n 
0000471841 00000 n 
0000474863 00000 n 
0000477510 00000 n 
0000479642 00000 n 
0000481194 00000 n 
0000482652 00000 n 
0000484267 00000 n 
0000485609 00000 n 
0000487056 00000 n 
0000488329 00000 n 
0000489758 00000 n 
0000491413 00000 n 
0000493227 00000 n 
0000497004 00000 n 
0000499514 00000 n 
0000501852 00000 n 
0000503921 00000 n 
0000505980 00000 n 
0000508967 00000 n 
0000511446 00000 n 
0000513856 00000 n 
0000516048 00000 n 
0000518865 00000 n 
0000521094 00000 n 
0000523468 00000 n 
0000525772 00000 n 
0000528010 00000 n 
0000530024 00000 n 
0000532695 00000 n 
0000535178 00000 n 
0000537590 00000 n 
0000540555 00000 n 
0000542934 00000 n 
0000545587 00000 n 
0000547900 00000 n 
0000550273 00000 n 
0000552868 00000 n 
0000555314 00000 n 
0000557584 00000 n 
0000560210 00000 n 
0000562410 00000 n 
0000565037 00000 n 
0000567185 00000 n 
0000570294 00000 n 
0000572190 00000 n 
0000574607 00000 n 
0000577517 00000 n 
0000579718 00000 n 
0000581749 00000 n 
0000583710 00000 n 
0000585682 00000 n 
0000588057 00000 n 
0000590356 00000 n 
0000593528 00000 n 
0000596097 00000 n 
0000598529 00000 n 
0000601281 00000 n 
0000603775 00000 n 
0000606578 00000 n 
0000608248 00000 n 
0000610046 00000 n 
0000612820 00000 n 
0000615067 00000 n 
0000617341 00000 n 
0000619058 00000 n 
0000620776 00000 n 
0000622640 00000 n 
0000624935 00000 n 
0000627048 00000 n 
0000629225 00000 n 
0000631447 00000 n 
0000633866 00000 n 
0000635806 00000 n 
0000637660 00000 n 
0000639637 00000 n 
0000643536 00000 n 
0000647187 00000 n 
0000649423 00000 n 
0000652512 00000 n 
0000654456 00000 n 
0000656219 00000 n 
0000657980 00000 n 
0000659748 00000 n 
0000662527 00000 n 
0000665243 00000 n 
0000668012 00000 n 
0000670349 00000 n 
0000672989 00000 n 
0000675903 00000 n 
0000678312 00000 n 
0000680554 00000 n 
0000683434 00000 n 
0000685731 00000 n 
0000687710 00000 n 
0000689771 00000 n 
0000691699 00000 n 
0000693379 00000 n 
0000695453 00000 n 
0000697940 00000 n 
0000699970 00000 n 
0000702186 00000 n 
0000703972 00000 n 
0000706223 00000 n 
0000708146 00000 n 
0000710697 00000 n 
0000712574 00000 n 
0000715367 00000 n 
0000718292 00000 n 
0000720719 00000 n 
0000723092 00000 n 
0000725636 00000 n 
0000727414 00000 n 
0000729241 00000 n 
0000731005 00000 n 
0000733685 00000 n 
0000736305 00000 n 
0000738890 00000 n 
0000741612 00000 n 
0000743935 00000 n 
0000746246 00000 n 
0000748691 00000 n 
0000750434 00000 n 
0000752673 00000 n 
0000754967 00000 n 
0000757364 00000 n 
0000759740 00000 n 
0000761609 00000 n 
0000764161 00000 n 
0000766921 00000 n 
0000768576 00000 n 
0000770758 00000 n 
0000775047 00000 n 
0000778786 00000 n 
0000780784 00000 n 
0000782438 00000 n 
0000784753 00000 n 
0000786336 00000 n 
0000788216 00000 n 
0000790257 00000 n 
0000792011 00000 n 
0000793877 00000 n 
0000795743 00000 n 
0000798033 00000 n 
0000800469 00000 n 
0000803148 00000 n 
0000806365 00000 n 
0000809379 00000 n 
0000810159 00000 n 
0000812888 00000 n 
0000813018 00000 n 
0000813148 00000 n 
0000813278 00000 n 
0000813408 00000 n 
0000813538 00000 n 
0000813668 00000 n 
0000813798 00000 n 
0000813928 00000 n 
0000814059 00000 n 
0000814190 00000 n 
0000814321 00000 n 
0000814452 00000 n 
0000814583 00000 n 
0000814714 00000 n 
0000814845 00000 n 
0000814976 00000 n 
0000815107 00000 n 
0000815238 00000 n 
0000815369 00000 n 
0000815500 00000 n 
0000815631 00000 n 
0000815762 00000 n 
0000815893 00000 n 
0000816024 00000 n 
0000816155 00000 n 
0000816286 00000 n 
0000816417 00000 n 
0000816548 00000 n 
0000816679 00000 n 
0000816810 00000 n 
0000816941 00000 n 
0000817072 00000 n 
0000817203 00000 n 
0000817334 00000 n 
0000817465 00000 n 
0000817596 00000 n 
0000817727 00000 n 
0000817858 00000 n 
0000817989 00000 n 
0000818120 00000 n 
0000818251 00000 n 
0000818382 00000 n 
0000818513 00000 n 
0000818644 00000 n 
0000818775 00000 n 
0000818906 00000 n 
0000819037 00000 n 
0000819168 00000 n 
0000819299 00000 n 
0000819430 00000 n 
0000819561 00000 n 
0000819692 00000 n 
0000819823 00000 n 
0000819954 00000 n 
0000820085 00000 n 
0000820216 00000 n 
0000820347 00000 n 
0000820478 00000 n 
0000820609 00000 n 
0000820740 00000 n 
0000820871 00000 n 
0000821002 00000 n 
0000821133 00000 n 
0000821264 00000 n 
0000821395 00000 n 
0000821526 00000 n 
0000821657 00000 n 
0000821788 00000 n 
0000821919 00000 n 
0000822050 00000 n 
0000822181 00000 n 
0000822312 00000 n 
0000822443 00000 n 
0000822574 00000 n 
0000822705 00000 n 
0000822836 00000 n 
0000822967 00000 n 
0000823098 00000 n 
0000823229 00000 n 
0000823360 00000 n 
0000823491 00000 n 
0000823622 00000 n 
0000823753 00000 n 
0000823884 00000 n 
0000824015 00000 n 
0000824146 00000 n 
0000824277 00000 n 
0000824408 00000 n 
0000824539 00000 n 
0000824670 00000 n 
0000824801 00000 n 
0000824932 00000 n 
0000825063 00000 n 
0000825194 00000 n 
0000825325 00000 n 
0000825456 00000 n 
0000825587 00000 n 
0000825718 00000 n 
0000825850 00000 n 
0000825982 00000 n 
0000826114 00000 n 
0000826246 00000 n 
0000826378 00000 n 
0000826510 00000 n 
0000826642 00000 n 
0000826774 00000 n 
0000826906 00000 n 
0000827038 00000 n 
0000827170 00000 n 
0000827302 00000 n 
0000827434 00000 n 
0000827566 00000 n 
0000827698 00000 n 
0000827830 00000 n 
0000827962 00000 n 
0000828094 00000 n 
0000828226 00000 n 
0000828358 00000 n 
0000828490 00000 n 
0000828622 00000 n 
0000828754 00000 n 
0000828886 00000 n 
0000829018 00000 n 
0000829150 00000 n 
0000829282 00000 n 
0000829414 00000 n 
0000829546 00000 n 
0000829678 00000 n 
0000829810 00000 n 
0000829942 00000 n 
0000830074 00000 n 
0000830206 00000 n 
0000830338 00000 n 
0000830470 00000 n 
0000830602 00000 n 
0000830734 00000 n 
0000830866 00000 n 
0000830998 00000 n 
0000831130 00000 n 
0000831262 00000 n 
0000831394 00000 n 
0000831526 00000 n 
0000831658 00000 n 
0000831790 00000 n 
0000831922 00000 n 
0000832054 00000 n 
0000832186 00000 n 
0000832318 00000 n 
0000832450 00000 n 
0000832582 00000 n 
0000832714 00000 n 
0000832846 00000 n 
0000832978 00000 n 
0000833110 00000 n 
0000833242 00000 n 
0000833374 00000 n 
0000833506 00000 n 
0000833638 00000 n 
0000833770 00000 n 
0000833902 00000 n 
0000834034 00000 n 
0000834166 00000 n 
0000834298 00000 n 
0000834430 00000 n 
0000834562 00000 n 
0000834694 00000 n 
0000834826 00000 n 
0000834958 00000 n 
0000835090 00000 n 
0000835222 00000 n 
0000835354 00000 n 
0000835486 00000 n 
0000835618 00000 n 
0000835750 00000 n 
0000835882 00000 n 
0000836014 00000 n 
0000836146 00000 n 
0000836278 00000 n 
0000836410 00000 n 
0000836542 00000 n 
0000836674 00000 n 
0000836806 00000 n 
0000836938 00000 n 
0000837070 00000 n 
0000837202 00000 n 
0000837334 00000 n 
0000837466 00000 n 
0000837598 00000 n 
0000837730 00000 n 
0000837862 00000 n 
0000837994 00000 n 
0000838126 00000 n 
0000838258 00000 n 
0000838390 00000 n 
0000838522 00000 n 
0000838654 00000 n 
0000838786 00000 n 
0000838918 00000 n 
0000839050 00000 n 
0000839182 00000 n 
0000839314 00000 n 
0000839446 00000 n 
0000839578 00000 n 
0000839710 00000 n 
0000839842 00000 n 
0000839974 00000 n 
0000840106 00000 n 
0000840238 00000 n 
0000840370 00000 n 
0000840502 00000 n 
0000840634 00000 n 
0000840766 00000 n 
0000840898 00000 n 
0000841030 00000 n 
0000841162 00000 n 
0000841294 00000 n 
0000841426 00000 n 
0000841558 00000 n 
0000841690 00000 n 
0000841822 00000 n 
0000841954 00000 n 
0000842086 00000 n 
0000842218 00000 n 
0000842350 00000 n 
0000842482 00000 n 
0000842614 00000 n 
0000842746 00000 n 
0000842878 00000 n 
0000843010 00000 n 
0000843142 00000 n 
0000843274 00000 n 
0000843406 00000 n 
0000843538 00000 n 
0000843670 00000 n 
0000843802 00000 n 
0000843934 00000 n 
0000844066 00000 n 
0000844198 00000 n 
0000844330 00000 n 
0000844462 00000 n 
0000844594 00000 n 
0000844726 00000 n 
0000844858 00000 n 
0000844990 00000 n 
0000845122 00000 n 
0000845254 00000 n 
0000845386 00000 n 
0000845518 00000 n 
0000845650 00000 n 
0000845782 00000 n 
0000845914 00000 n 
0000846046 00000 n 
0000846178 00000 n 
0000846310 00000 n 
0000846442 00000 n 
0000846574 00000 n 
0000846706 00000 n 
0000846838 00000 n 
0000846970 00000 n 
0000847102 00000 n 
0000847234 00000 n 
0000847366 00000 n 
0000847498 00000 n 
0000847630 00000 n 
0000847762 00000 n 
0000847894 00000 n 
0000848026 00000 n 
0000848158 00000 n 
0000848290 00000 n 
0000848422 00000 n 
0000848554 00000 n 
0000848686 00000 n 
0000848818 00000 n 
0000848950 00000 n 
0000849082 00000 n 
0000849214 00000 n 
0000849346 00000 n 
0000849478 00000 n 
0000849610 00000 n 
0000849742 00000 n 
0000849874 00000 n 
0000850006 00000 n 
0000850138 00000 n 
0000850270 00000 n 
0000850402 00000 n 
0000850534 00000 n 
0000850666 00000 n 
0000850798 00000 n 
0000850930 00000 n 
0000851062 00000 n 
0000851194 00000 n 
0000851326 00000 n 
0000851458 00000 n 
0000851590 00000 n 
0000851722 00000 n 
0000851854 00000 n 
0000851986 00000 n 
0000852118 00000 n 
0000852250 00000 n 
0000852382 00000 n 
0000852514 00000 n 
0000852646 00000 n 
0000852778 00000 n 
0000852910 00000 n 
0000853042 00000 n 
0000853174 00000 n 
0000853306 00000 n 
0000853438 00000 n 
0000853570 00000 n 
0000853702 00000 n 
0000853834 00000 n 
0000853966 00000 n 
0000854098 00000 n 
0000854230 00000 n 
0000854362 00000 n 
0000854494 00000 n 
0000854626 00000 n 
0000854758 00000 n 
0000854890 00000 n 
0000855022 00000 n 
0000855154 00000 n 
0000855286 00000 n 
0000855418 00000 n 
0000855550 00000 n 
0000855682 00000 n 
0000855814 00000 n 
0000855946 00000 n 
0000856078 00000 n 
0000856210 00000 n 
0000856342 00000 n 
0000856474 00000 n 
0000856606 00000 n 
0000856738 00000 n 
0000856870 00000 n 
trailer
<< /Size 672 /Root 671 0 R >>
startxref
856923
%%EOF