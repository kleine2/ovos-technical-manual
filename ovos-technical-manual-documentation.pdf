%PDF-1.4
%
1 0 obj
<< /Type /Catalog /Pages 2 0 R >>
endobj
2 0 obj
<< /Type /Pages /Count 368 /Kids [ 3 0 R 4 0 R 5 0 R 6 0 R 7 0 R 8 0 R 9 0 R 10 0 R 11 0 R 12 0 R 13 0 R 14 0 R 15 0 R 16 0 R 17 0 R 18 0 R 19 0 R 20 0 R 21 0 R 22 0 R 23 0 R 24 0 R 25 0 R 26 0 R 27 0 R 28 0 R 29 0 R 30 0 R 31 0 R 32 0 R 33 0 R 34 0 R 35 0 R 36 0 R 37 0 R 38 0 R 39 0 R 40 0 R 41 0 R 42 0 R 43 0 R 44 0 R 45 0 R 46 0 R 47 0 R 48 0 R 49 0 R 50 0 R 51 0 R 52 0 R 53 0 R 54 0 R 55 0 R 56 0 R 57 0 R 58 0 R 59 0 R 60 0 R 61 0 R 62 0 R 63 0 R 64 0 R 65 0 R 66 0 R 67 0 R 68 0 R 69 0 R 70 0 R 71 0 R 72 0 R 73 0 R 74 0 R 75 0 R 76 0 R 77 0 R 78 0 R 79 0 R 80 0 R 81 0 R 82 0 R 83 0 R 84 0 R 85 0 R 86 0 R 87 0 R 88 0 R 89 0 R 90 0 R 91 0 R 92 0 R 93 0 R 94 0 R 95 0 R 96 0 R 97 0 R 98 0 R 99 0 R 100 0 R 101 0 R 102 0 R 103 0 R 104 0 R 105 0 R 106 0 R 107 0 R 108 0 R 109 0 R 110 0 R 111 0 R 112 0 R 113 0 R 114 0 R 115 0 R 116 0 R 117 0 R 118 0 R 119 0 R 120 0 R 121 0 R 122 0 R 123 0 R 124 0 R 125 0 R 126 0 R 127 0 R 128 0 R 129 0 R 130 0 R 131 0 R 132 0 R 133 0 R 134 0 R 135 0 R 136 0 R 137 0 R 138 0 R 139 0 R 140 0 R 141 0 R 142 0 R 143 0 R 144 0 R 145 0 R 146 0 R 147 0 R 148 0 R 149 0 R 150 0 R 151 0 R 152 0 R 153 0 R 154 0 R 155 0 R 156 0 R 157 0 R 158 0 R 159 0 R 160 0 R 161 0 R 162 0 R 163 0 R 164 0 R 165 0 R 166 0 R 167 0 R 168 0 R 169 0 R 170 0 R 171 0 R 172 0 R 173 0 R 174 0 R 175 0 R 176 0 R 177 0 R 178 0 R 179 0 R 180 0 R 181 0 R 182 0 R 183 0 R 184 0 R 185 0 R 186 0 R 187 0 R 188 0 R 189 0 R 190 0 R 191 0 R 192 0 R 193 0 R 194 0 R 195 0 R 196 0 R 197 0 R 198 0 R 199 0 R 200 0 R 201 0 R 202 0 R 203 0 R 204 0 R 205 0 R 206 0 R 207 0 R 208 0 R 209 0 R 210 0 R 211 0 R 212 0 R 213 0 R 214 0 R 215 0 R 216 0 R 217 0 R 218 0 R 219 0 R 220 0 R 221 0 R 222 0 R 223 0 R 224 0 R 225 0 R 226 0 R 227 0 R 228 0 R 229 0 R 230 0 R 231 0 R 232 0 R 233 0 R 234 0 R 235 0 R 236 0 R 237 0 R 238 0 R 239 0 R 240 0 R 241 0 R 242 0 R 243 0 R 244 0 R 245 0 R 246 0 R 247 0 R 248 0 R 249 0 R 250 0 R 251 0 R 252 0 R 253 0 R 254 0 R 255 0 R 256 0 R 257 0 R 258 0 R 259 0 R 260 0 R 261 0 R 262 0 R 263 0 R 264 0 R 265 0 R 266 0 R 267 0 R 268 0 R 269 0 R 270 0 R 271 0 R 272 0 R 273 0 R 274 0 R 275 0 R 276 0 R 277 0 R 278 0 R 279 0 R 280 0 R 281 0 R 282 0 R 283 0 R 284 0 R 285 0 R 286 0 R 287 0 R 288 0 R 289 0 R 290 0 R 291 0 R 292 0 R 293 0 R 294 0 R 295 0 R 296 0 R 297 0 R 298 0 R 299 0 R 300 0 R 301 0 R 302 0 R 303 0 R 304 0 R 305 0 R 306 0 R 307 0 R 308 0 R 309 0 R 310 0 R 311 0 R 312 0 R 313 0 R 314 0 R 315 0 R 316 0 R 317 0 R 318 0 R 319 0 R 320 0 R 321 0 R 322 0 R 323 0 R 324 0 R 325 0 R 326 0 R 327 0 R 328 0 R 329 0 R 330 0 R 331 0 R 332 0 R 333 0 R 334 0 R 335 0 R 336 0 R 337 0 R 338 0 R 339 0 R 340 0 R 341 0 R 342 0 R 343 0 R 344 0 R 345 0 R 346 0 R 347 0 R 348 0 R 349 0 R 350 0 R 351 0 R 352 0 R 353 0 R 354 0 R 355 0 R 356 0 R 357 0 R 358 0 R 359 0 R 360 0 R 361 0 R 362 0 R 363 0 R 364 0 R 365 0 R 366 0 R 367 0 R 368 0 R 369 0 R 370 0 R ] >>
endobj
3 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 371 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
4 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 372 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
5 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 373 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
6 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 374 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
7 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 375 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
8 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 376 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
9 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 377 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
10 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 378 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
11 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 379 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
12 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 380 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
13 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 381 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
14 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 382 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
15 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 383 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
16 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 384 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
17 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 385 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
18 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 386 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
19 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 387 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
20 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 388 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
21 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 389 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
22 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 390 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
23 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 391 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
24 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 392 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
25 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 393 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
26 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 394 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
27 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 395 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
28 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 396 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
29 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 397 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
30 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 398 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
31 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 399 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
32 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 400 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
33 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 401 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
34 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 402 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
35 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 403 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
36 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 404 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
37 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 405 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
38 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 406 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
39 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 407 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
40 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 408 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
41 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 409 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
42 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 410 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
43 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 411 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
44 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 412 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
45 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 413 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
46 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 414 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
47 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 415 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
48 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 416 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
49 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 417 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
50 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 418 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
51 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 419 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
52 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 420 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
53 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 421 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
54 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 422 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
55 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 423 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
56 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 424 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
57 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 425 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
58 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 426 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
59 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 427 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
60 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 428 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
61 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 429 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
62 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 430 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
63 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 431 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
64 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 432 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
65 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 433 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
66 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 434 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
67 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 435 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
68 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 436 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
69 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 437 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
70 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 438 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
71 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 439 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
72 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 440 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
73 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 441 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
74 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 442 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
75 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 443 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
76 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 444 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
77 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 445 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
78 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 446 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
79 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 447 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
80 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 448 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
81 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 449 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
82 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 450 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
83 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 451 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
84 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 452 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
85 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 453 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
86 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 454 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
87 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 455 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
88 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 456 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
89 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 457 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
90 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 458 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
91 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 459 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
92 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 460 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
93 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 461 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
94 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 462 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
95 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 463 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
96 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 464 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
97 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 465 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
98 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 466 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
99 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 467 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
100 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 468 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
101 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 469 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
102 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 470 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
103 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 471 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
104 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 472 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
105 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 473 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
106 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 474 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
107 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 475 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
108 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 476 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
109 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 477 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
110 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 478 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
111 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 479 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
112 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 480 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
113 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 481 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
114 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 482 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
115 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 483 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
116 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 484 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
117 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 485 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
118 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 486 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
119 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 487 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
120 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 488 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
121 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 489 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
122 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 490 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
123 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 491 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
124 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 492 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
125 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 493 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
126 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 494 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
127 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 495 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
128 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 496 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
129 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 497 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
130 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 498 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
131 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 499 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
132 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 500 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
133 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 501 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
134 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 502 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
135 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 503 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
136 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 504 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
137 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 505 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
138 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 506 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
139 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 507 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
140 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 508 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
141 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 509 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
142 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 510 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
143 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 511 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
144 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 512 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
145 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 513 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
146 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 514 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
147 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 515 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
148 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 516 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
149 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 517 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
150 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 518 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
151 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 519 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
152 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 520 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
153 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 521 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
154 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 522 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
155 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 523 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
156 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 524 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
157 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 525 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
158 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 526 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
159 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 527 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
160 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 528 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
161 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 529 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
162 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 530 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
163 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 531 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
164 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 532 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
165 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 533 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
166 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 534 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
167 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 535 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
168 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 536 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
169 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 537 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
170 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 538 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
171 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 539 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
172 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 540 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
173 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 541 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
174 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 542 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
175 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 543 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
176 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 544 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
177 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 545 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
178 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 546 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
179 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 547 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
180 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 548 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
181 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 549 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
182 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 550 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
183 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 551 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
184 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 552 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
185 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 553 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
186 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 554 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
187 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 555 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
188 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 556 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
189 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 557 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
190 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 558 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
191 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 559 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
192 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 560 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
193 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 561 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
194 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 562 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
195 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 563 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
196 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 564 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
197 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 565 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
198 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 566 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
199 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 567 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
200 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 568 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
201 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 569 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
202 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 570 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
203 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 571 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
204 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 572 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
205 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 573 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
206 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 574 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
207 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 575 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
208 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 576 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
209 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 577 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
210 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 578 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
211 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 579 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
212 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 580 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
213 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 581 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
214 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 582 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
215 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 583 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
216 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 584 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
217 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 585 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
218 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 586 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
219 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 587 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
220 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 588 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
221 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 589 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
222 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 590 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
223 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 591 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
224 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 592 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
225 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 593 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
226 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 594 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
227 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 595 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
228 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 596 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
229 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 597 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
230 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 598 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
231 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 599 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
232 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 600 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
233 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 601 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
234 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 602 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
235 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 603 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
236 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 604 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
237 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 605 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
238 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 606 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
239 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 607 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
240 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 608 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
241 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 609 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
242 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 610 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
243 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 611 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
244 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 612 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
245 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 613 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
246 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 614 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
247 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 615 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
248 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 616 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
249 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 617 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
250 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 618 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
251 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 619 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
252 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 620 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
253 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 621 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
254 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 622 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
255 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 623 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
256 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 624 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
257 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 625 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
258 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 626 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
259 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 627 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
260 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 628 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
261 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 629 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
262 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 630 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
263 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 631 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
264 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 632 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
265 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 633 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
266 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 634 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
267 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 635 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
268 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 636 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
269 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 637 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
270 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 638 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
271 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 639 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
272 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 640 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
273 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 641 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
274 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 642 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
275 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 643 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
276 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 644 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
277 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 645 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
278 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 646 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
279 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 647 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
280 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 648 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
281 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 649 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
282 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 650 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
283 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 651 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
284 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 652 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
285 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 653 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
286 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 654 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
287 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 655 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
288 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 656 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
289 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 657 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
290 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 658 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
291 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 659 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
292 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 660 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
293 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 661 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
294 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 662 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
295 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 663 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
296 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 664 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
297 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 665 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
298 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 666 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
299 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 667 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
300 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 668 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
301 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 669 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
302 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 670 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
303 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 671 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
304 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 672 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
305 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 673 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
306 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 674 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
307 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 675 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
308 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 676 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
309 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 677 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
310 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 678 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
311 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 679 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
312 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 680 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
313 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 681 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
314 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 682 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
315 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 683 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
316 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 684 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
317 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 685 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
318 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 686 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
319 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 687 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
320 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 688 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
321 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 689 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
322 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 690 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
323 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 691 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
324 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 692 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
325 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 693 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
326 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 694 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
327 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 695 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
328 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 696 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
329 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 697 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
330 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 698 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
331 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 699 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
332 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 700 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
333 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 701 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
334 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 702 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
335 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 703 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
336 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 704 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
337 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 705 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
338 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 706 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
339 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 707 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
340 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 708 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
341 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 709 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
342 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 710 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
343 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 711 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
344 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 712 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
345 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 713 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
346 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 714 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
347 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 715 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
348 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 716 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
349 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 717 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
350 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 718 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
351 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 719 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
352 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 720 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
353 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 721 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
354 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 722 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
355 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 723 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
356 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 724 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
357 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 725 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
358 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 726 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
359 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 727 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
360 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 728 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
361 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 729 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
362 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 730 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
363 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 731 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
364 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 732 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
365 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 733 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
366 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 734 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
367 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 735 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
368 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 736 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
369 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 737 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
370 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 612 792] /Contents 738 0 R /Resources << /Font << /F1 739 0 R >> >> >>
endobj
371 0 obj
<< /Length 3031 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (# README.md) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (# The OpenVoiceOS Technical Manual) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (![]\(https://github.com/OpenVoiceOS/ovos_assets/blob/master/Logo/ovos-) Tj
1 0 0 1 50 672 Tm (logo-512.png?raw=true\)) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (the OVOS project documentation is written and maintained by users just like you! ) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (Think of these docs both as your starting point and also forever changing and incomplete) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (Please [open Issues and Pull Requests]\(https://github.com/OpenVoiceOS/ovos-technical-) Tj
1 0 0 1 50 574 Tm (manual\)!) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (User oriented docs are automatically published at https://openvoiceos.github.io/community-) Tj
1 0 0 1 50 532 Tm (docs) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (Dev oriented docs \(this repo\) are automatically published at ) Tj
1 0 0 1 50 490 Tm (https://openvoiceos.github.io/ovos-technical-manual) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (# docs/001-release_channels.md) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (# OVOS Release Channels & Installation Options) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (Open Voice OS \(OVOS\) is a **modular voice assistant platform** that lets you install only ) Tj
1 0 0 1 50 392 Tm (the components you need. Whether you're building a lightweight voice interface or a full-) Tj
1 0 0 1 50 378 Tm (featured smart assistant, OVOS gives you flexibility through modular packages and optional) Tj
1 0 0 1 50 364 Tm ( feature sets called **extras**.) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (To manage updates and ensure system stability, OVOS uses **release channels** and ) Tj
1 0 0 1 50 322 Tm (**constraints files**, allowing users to pin versions based on their desired stability ) Tj
1 0 0 1 50 308 Tm (level.) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (---) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (## Choosing a Release Channel) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (OVOS follows [**semantic versioning**]\(https://semver.org/\) \(SemVer\) with a **rolling ) Tj
1 0 0 1 50 210 Tm (release model** and supports three release channels  **stable**, **testing**, and ) Tj
1 0 0 1 50 196 Tm (**alpha**  so you can pick the right balance between cutting-edge features and system ) Tj
1 0 0 1 50 182 Tm (reliability.) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (These channels are managed via the [constraints ) Tj
1 0 0 1 50 140 Tm (files]\(https://pip.pypa.io/en/stable/user_guide/#constraints-files\) hosted in the [ovos-) Tj
1 0 0 1 50 126 Tm (releases]\(https://github.com/OpenVoiceOS/ovos-releases\) repository) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (### 1. Stable Channel \(Production-Ready\)) Tj
1 0 0 1 50 84 Tm (- ? Bug fixes only) Tj
1 0 0 1 50 70 Tm (- ? No new features or breaking changes) Tj
1 0 0 1 50 56 Tm (- ? Recommended for production or everyday use) Tj
ET
endstream

endobj
372 0 obj
<< /Length 2914 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (```bash) Tj
1 0 0 1 50 714 Tm (pip install ovos-core[mycroft] -c https://raw.githubusercontent.com/OpenVoiceOS/ovos-) Tj
1 0 0 1 50 700 Tm (releases/refs/heads/main/constraints-stable.txt) Tj
1 0 0 1 50 686 Tm (```) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (### 2. Testing Channel \(Feature Updates\)) Tj
1 0 0 1 50 644 Tm (- ? Bug fixes and new features) Tj
1 0 0 1 50 630 Tm (- ?? Not as thoroughly tested as stable) Tj
1 0 0 1 50 616 Tm (- ? Best for early adopters or development environments) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (```bash) Tj
1 0 0 1 50 574 Tm (pip install ovos-core[mycroft] -c https://raw.githubusercontent.com/OpenVoiceOS/ovos-) Tj
1 0 0 1 50 560 Tm (releases/refs/heads/main/constraints-testing.txt) Tj
1 0 0 1 50 546 Tm (```) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (### 3. Alpha Channel \(Bleeding Edge\)) Tj
1 0 0 1 50 504 Tm (- ? Experimental features) Tj
1 0 0 1 50 490 Tm (- ?? May include breaking changes) Tj
1 0 0 1 50 476 Tm (- ? Not suitable for production use) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (```bash) Tj
1 0 0 1 50 434 Tm (pip install ovos-core[mycroft] --pre -c ) Tj
1 0 0 1 50 420 Tm (https://raw.githubusercontent.com/OpenVoiceOS/ovos-releases/refs/heads/main/constraints-) Tj
1 0 0 1 50 406 Tm (alpha.txt) Tj
1 0 0 1 50 392 Tm (```) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (> ? `constraints.txt` files act like version "filters". They dont install packages ) Tj
1 0 0 1 50 350 Tm (directly, but ensure only approved versions get installed.) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (---) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (## OVOS From Scratch: Custom Installation) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (Rather than using a full distro, you can manually pick which components to install:) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (- [`ovos-messagebus`]\(https://github.com/OpenVoiceOS/ovos-messagebus\)  internal messaging) Tj
1 0 0 1 50 224 Tm ( between services) Tj
1 0 0 1 50 210 Tm (- [`ovos-core`]\(https://github.com/OpenVoiceOS/ovos-core\)  skill handling) Tj
1 0 0 1 50 196 Tm (- [`ovos-audio`]\(https://github.com/OpenVoiceOS/ovos-audio\)  text-to-speech \(TTS\), audio ) Tj
1 0 0 1 50 182 Tm (playback) Tj
1 0 0 1 50 168 Tm (- [`ovos-dinkum-listener`]\(https://github.com/OpenVoiceOS/ovos-dinkum-listener\)  wake ) Tj
1 0 0 1 50 154 Tm (word, voice activation) Tj
1 0 0 1 50 140 Tm (- [`ovos-gui`]\(https://github.com/OpenVoiceOS/ovos-gui\)  GUI integration) Tj
1 0 0 1 50 126 Tm (- [`ovos-PHAL`]\(https://github.com/OpenVoiceOS/ovos-PHAL\)  hardware abstraction layer) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (This is useful if youre building something like a **Hivemind node** or **headless ) Tj
1 0 0 1 50 84 Tm (device**, where you might not need audio output or a GUI.) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (---) Tj
ET
endstream

endobj
373 0 obj
<< /Length 2969 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (## What Are OVOS Extras?) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (OVOS uses Python extras \(e.g., `[mycroft]`\) to let you install predefined groups of ) Tj
1 0 0 1 50 686 Tm (components based on your use case.) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (| Extra Name           | Purpose) Tj
1 0 0 1 50 644 Tm (                                                                 |) Tj
1 0 0 1 50 630 Tm (|----------------------|------------------------------------------------------------------) Tj
1 0 0 1 50 616 Tm (-------|) Tj
1 0 0 1 50 602 Tm (| `mycroft`            | Core services for full voice assistant experience) Tj
1 0 0 1 50 588 Tm (                      |) Tj
1 0 0 1 50 574 Tm (| `lgpl`               | Adds optional LGPL-licensed tools like Padatious) Tj
1 0 0 1 50 560 Tm (                       |) Tj
1 0 0 1 50 546 Tm (| `plugins`            | Includes various plugin interfaces) Tj
1 0 0 1 50 532 Tm (                                     |) Tj
1 0 0 1 50 518 Tm (| `skills-essential`   | Must-have skills \(like system control, clock, weather\)) Tj
1 0 0 1 50 504 Tm (                 |) Tj
1 0 0 1 50 490 Tm (| `skills-audio`       | Audio I/O-based skills) Tj
1 0 0 1 50 476 Tm (                                                  |) Tj
1 0 0 1 50 462 Tm (| `skills-gui`         | GUI-dependent skills) Tj
1 0 0 1 50 448 Tm (                                                    |) Tj
1 0 0 1 50 434 Tm (| `skills-internet`    | Skills that require an internet connection) Tj
1 0 0 1 50 420 Tm (                             |) Tj
1 0 0 1 50 406 Tm (| `skills-media`       | OCP \(OpenVoiceOS Common Play\) media playback skills) Tj
1 0 0 1 50 392 Tm (                    |) Tj
1 0 0 1 50 378 Tm (| `skills-desktop`     | Desktop environment integrations) Tj
1 0 0 1 50 364 Tm (                                       |) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (### Full Installation Example) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (```bash) Tj
1 0 0 1 50 294 Tm (pip install ovos-core[mycroft,lgpl,plugins,skills-essential,skills-audio,skills-) Tj
1 0 0 1 50 280 Tm (gui,skills-internet,skills-media,skills-desktop]) Tj
1 0 0 1 50 266 Tm (```) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (### Minimal Installation Example) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (```bash) Tj
1 0 0 1 50 196 Tm (pip install ovos-core[mycroft,plugins,skills-essential]) Tj
1 0 0 1 50 182 Tm (```) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (---) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (## Technical Notes) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (- OVOS originally began as a fork of `mycroft-core`. Since version **0.0.8**, it has been ) Tj
1 0 0 1 50 70 Tm (**fully modularized**, with each major service in its own repository.) Tj
1 0 0 1 50 56 Tm (- All packages follow [Semantic Versioning \(SemVer\)]\(https://semver.org/\), so you can rely) Tj
ET
endstream

endobj
374 0 obj
<< /Length 3058 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm ( on versioning to understand stability and compatibility.) Tj
1 0 0 1 50 728 Tm (- Constraints files are a **work in progress** and wont be finalized until the first ) Tj
1 0 0 1 50 714 Tm (official [codename release]\(https://github.com/OpenVoiceOS/ovos-releases/issues/5\).) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (---) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (## ?? Tips & Caveats) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (- Using `--pre` installs pre-releases across all dependencies, not just OVOS-specific ones) Tj
1 0 0 1 50 616 Tm (  so use with caution.) Tj
1 0 0 1 50 602 Tm (- You can mix and match extras based on your hardware or use case, e.g., omit GUI skills ) Tj
1 0 0 1 50 588 Tm (on a headless server.) Tj
1 0 0 1 50 574 Tm (- When using constraints files, make sure all packages are pinned  it avoids installing ) Tj
1 0 0 1 50 560 Tm (incompatible versions.) Tj
1 0 0 1 50 546 Tm (- After installing you need to launch the individual ovos services, either manually or by ) Tj
1 0 0 1 50 532 Tm (creating a systemd service) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (---) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (## See Also) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (- [OVOS Releases repo]\(https://github.com/OpenVoiceOS/ovos-releases\)) Tj
1 0 0 1 50 434 Tm (- [Constraints files explanation \(pip ) Tj
1 0 0 1 50 420 Tm (docs\)]\(https://pip.pypa.io/en/stable/user_guide/#constraints-files\)) Tj
1 0 0 1 50 406 Tm (- [Semantic Versioning]\(https://semver.org/\)) Tj
1 0 0 1 50 392 Tm (- [OVOS Component Repos]\(https://github.com/OpenVoiceOS\)) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (# docs/002-license.md) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (# License) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (We have a universal donor policy, our code should be able to be used anywhere by anyone, ) Tj
1 0 0 1 50 266 Tm (no ifs or conditions attached.) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (OVOS is predominately Apache2 or BSD licensed. There are only a few exceptions to this, ) Tj
1 0 0 1 50 224 Tm (which are all licensed under other compatible open source licenses.) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (Individual plugins or skills may have their own license, for example mimic3 is AGPL, so we) Tj
1 0 0 1 50 182 Tm ( can not change the license of our plugin.) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (We are committed to maintain all core components fully free, any code that we have no ) Tj
1 0 0 1 50 140 Tm (control over the license will live in an optional plugin and be flagged as such.) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (This includes avoiding LGPL code for reasons explained ) Tj
1 0 0 1 50 98 Tm ([here]\(https://softwareengineering.stackexchange.com/questions/119436/what-does-gpl-with-) Tj
1 0 0 1 50 84 Tm (classpath-exception-mean-in-practice/326325#326325\).) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (Our license policy has the following properties:) Tj
ET
endstream

endobj
375 0 obj
<< /Length 3775 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (-  It gives you, the user of the software, complete and unrestrained access to the ) Tj
1 0 0 1 50 714 Tm (software, such that you may inspect, modify, and redistribute your changes) Tj
1 0 0 1 50 700 Tm (    - Inspection - Anyone may inspect the software for security vulnerabilities) Tj
1 0 0 1 50 686 Tm (    - Modification - Anyone may modify the software to fix issues or add features) Tj
1 0 0 1 50 672 Tm (    - Redistribution - Anyone may redistribute the software on their terms) Tj
1 0 0 1 50 658 Tm (- It is compatible with GPL licenses - Projects licensed as GPL can be distributed with ) Tj
1 0 0 1 50 644 Tm (OVOS) Tj
1 0 0 1 50 630 Tm (- It allows for the incorporation of GPL-incompatible free software, such as software that) Tj
1 0 0 1 50 616 Tm ( is CDDL licensed) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (The license does not restrict the software that may run on OVOS, however -- and thanks to ) Tj
1 0 0 1 50 574 Tm (the plugin architecture, even traditionally tightly-coupled components such as drivers can) Tj
1 0 0 1 50 560 Tm ( be distributed separately, so maintainers are free to choose whatever license they like ) Tj
1 0 0 1 50 546 Tm (for their projects.) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (### Notable licensing exceptions) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (The following repositories do not respect our universal donor policy, please ensure their ) Tj
1 0 0 1 50 462 Tm (licenses are compatible before you use them) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (| Repository) Tj
1 0 0 1 50 420 Tm (                                                                                  | ) Tj
1 0 0 1 50 406 Tm (License   | Reason                                                                        ) Tj
1 0 0 1 50 392 Tm (                             |) Tj
1 0 0 1 50 378 Tm (|-----------------------------------------------------------------------------------------) Tj
1 0 0 1 50 364 Tm (----|-----------|-------------------------------------------------------------------------) Tj
1 0 0 1 50 350 Tm (-----------------------------------|) Tj
1 0 0 1 50 336 Tm (| [ovos-intent-plugin-padatious]\(https://github.com/OpenVoiceOS/ovos-intent-plugin-) Tj
1 0 0 1 50 322 Tm (padatious\) | Apache2.0 | [padatious]\(https://github.com/MycroftAI/padatious\) license might) Tj
1 0 0 1 50 308 Tm ( not be valid, depends on libfann2 \(LGPL\) |) Tj
1 0 0 1 50 294 Tm (| [ovos-tts-plugin-mimic3]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-mimic3\)) Tj
1 0 0 1 50 280 Tm (             | AGPL      | depends on [mimic3]\(https://github.com/MycroftAI/mimic3\) \(AGPL\)) Tj
1 0 0 1 50 266 Tm (   |) Tj
1 0 0 1 50 252 Tm (| [ovos-tts-plugin-espeakng]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-espeakng\)) Tj
1 0 0 1 50 238 Tm (         | GPL       | depends on [espeak-ng]\(https://github.com/espeak-ng\) \(GPL\)    |) Tj
1 0 0 1 50 224 Tm (| [ovos-g2p-plugin-espeak]\(https://github.com/OpenVoiceOS/ovos-g2p-plugin-espeak\)) Tj
1 0 0 1 50 210 Tm (             | GPL       | depends on [espeak-) Tj
1 0 0 1 50 196 Tm (phonemizer]\(https://github.com/rhasspy/espeak-phonemizer\) \(GPL\)  |) Tj
1 0 0 1 50 182 Tm (| [ovos-tts-plugin-SAM]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-SAM\)) Tj
1 0 0 1 50 168 Tm (                   | ?         | reverse engineered abandonware              |) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (# docs/003-timeline.md) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (## Family Tree) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (![imagem]\(https://github.com/OpenVoiceOS/ovos-technical-) Tj
1 0 0 1 50 56 Tm (manual/assets/33701864/95db65ea-0aff-49f3-bd80-85919a3356e5\)) Tj
ET
endstream

endobj
376 0 obj
<< /Length 3839 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (- mycroft-core created) Tj
1 0 0 1 50 714 Tm (- neon-core forked from mycroft-core) Tj
1 0 0 1 50 700 Tm (- chatterbox forked from mycroft-core  \(closed source\)) Tj
1 0 0 1 50 686 Tm (- mycroft-lib forked from mycroft-core to become a library, it is only a properly packaged) Tj
1 0 0 1 50 672 Tm ( mycroft-core) Tj
1 0 0 1 50 658 Tm (- chatterbox rewritten to use mycroft-lib internally, no longer a hard fork) Tj
1 0 0 1 50 644 Tm (- neon-core rewritten to use mycroft-lib internally, no longer a hard fork) Tj
1 0 0 1 50 630 Tm (- mycroft-lib renamed to HolmesIV to avoid trademark issues) Tj
1 0 0 1 50 616 Tm (- HolmesV created to use HolmesIV internally, HolmesV gets features and HolmesIV bug fixes) Tj
1 0 0 1 50 602 Tm ( only) Tj
1 0 0 1 50 588 Tm (- chatterbox updated to HolmesV) Tj
1 0 0 1 50 574 Tm (- neon-core updated to HolmesV) Tj
1 0 0 1 50 560 Tm (- HolmesIV+HolmesV abandoned, chatterbox focus on closed source product) Tj
1 0 0 1 50 546 Tm (- ovos-core forked from HolmesV) Tj
1 0 0 1 50 532 Tm (- neon-core updated to ovos-core) Tj
1 0 0 1 50 518 Tm (- mycroft-dinkum forked from mycroft-core) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (## Events timeline) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (- Aug 2015 - [MycroftAI ) Tj
1 0 0 1 50 448 Tm (kickstarter]\(https://www.kickstarter.com/projects/aiforeveryone/mycroft-an-open-source-) Tj
1 0 0 1 50 434 Tm (artificial-intelligence-for\) launch) Tj
1 0 0 1 50 420 Tm (- Feb 2016 - MycroftAI [Mimic]\(https://github.com/MycroftAI/mimic1\) TTS released) Tj
1 0 0 1 50 406 Tm (- May 2016 - [mycroft-core]\(https://github.com/MycroftAI/mycroft-core\) repositories made ) Tj
1 0 0 1 50 392 Tm (public under GPL) Tj
1 0 0 1 50 378 Tm (- Jun 2016 - @Aix releases [MycroftAI gnome ) Tj
1 0 0 1 50 364 Tm (shell]\(https://extensions.gnome.org/extension/1197/mycroft-assistant/\) extension) Tj
1 0 0 1 50 350 Tm (- Jun 2016 - @Aix becomes a contributor on the desktop-integration team) Tj
1 0 0 1 50 336 Tm (- Aug 2016 - Steve Penrod becomes MycroftAI CTO) Tj
1 0 0 1 50 322 Tm (- ??? 2016 - NeonGecko begins working with Mycroft AI) Tj
1 0 0 1 50 308 Tm (- Jan 2017 - @Aix release [MycrofAI plasmoid]\(https://invent.kde.org/utilities/mycroft-) Tj
1 0 0 1 50 294 Tm (plasmoid\) for KDE Plasma desktop) Tj
1 0 0 1 50 280 Tm (- Mar 2017 - @Aix incubates Mycroft plasmoid project under KDE) Tj
1 0 0 1 50 266 Tm (- Apr 2017 - @JarbasAI forks `mycroft-core` as `jarbas-core`) Tj
1 0 0 1 50 252 Tm (- May 2017 - @JarbasAI becomes a `mycroft-core` contributor) Tj
1 0 0 1 50 238 Tm (- Sep 2017 - MycroftAI Mark 1 released / mycroft kickstarter campaign fullfilled) Tj
1 0 0 1 50 224 Tm (- Sep 2017 - @Aix joins Blue Systems to work on MycroftAI and Plasma integration projects) Tj
1 0 0 1 50 210 Tm (- Sep 2017 - `jarbas-core` tacotron TTS integration added) Tj
1 0 0 1 50 196 Tm (- Aug 2017 - MycroftAI starts supporting KDE plasmoid project and installers) Tj
1 0 0 1 50 182 Tm (- Oct 2017 - `mycroft-core` relicensed as Apache 2.0) Tj
1 0 0 1 50 168 Tm (- Nov 2017 - @Aix becomes a `mycroft-core` contributor) Tj
1 0 0 1 50 154 Tm (- Dec 2017 - `jarbas-core` abandoned) Tj
1 0 0 1 50 140 Tm (- ??? 2017 - Neon AI forks `mycroft-core` as `neon-core` to remove dependency on MycroftAI) Tj
1 0 0 1 50 126 Tm ( servers and work on other features) Tj
1 0 0 1 50 112 Tm (- Jan 2018 - initial release of [personal-backend]\(https://github.com/OpenVoiceOS/ovos-) Tj
1 0 0 1 50 98 Tm (personal-backend/tree/a457b03adc771783ec8714dfdabccdacb2482188\), reverse engineered ) Tj
1 0 0 1 50 84 Tm (MycroftAI backend by @JarbasAI, licensed as Apache 2.0) Tj
1 0 0 1 50 70 Tm (- Jan 2018 - MycroftAI [mark 2 ) Tj
1 0 0 1 50 56 Tm (kickstarter]\(https://www.kickstarter.com/projects/aiforeveryone/mycroft-mark-ii-the-open-) Tj
ET
endstream

endobj
377 0 obj
<< /Length 4309 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (voice-assistant\) launch) Tj
1 0 0 1 50 728 Tm (- Jul 2018 - personal-backend added to MycroftAI Roadmap) Tj
1 0 0 1 50 714 Tm (- Aug 2018 - MycroftAI Mimic2 TTS based on tacotron released) Tj
1 0 0 1 50 700 Tm (- Sep 2018 - [Mycroft-GUI]\(https://github.com/MycroftAI/mycroft-gui\) was created by ) Tj
1 0 0 1 50 686 Tm (collaboration between MycroftAI, Blue Systems based on KDE frameworks, maintained by @Aix) Tj
1 0 0 1 50 672 Tm (- Oct 2018 - @j1nx creates ) Tj
1 0 0 1 50 658 Tm (["MycroftOS"]\(https://community.openconversational.ai/t/openvoiceos-a-bare-minimal-) Tj
1 0 0 1 50 644 Tm (production-type-of-os-based-on-buildroot/4708\), the first version of what will eventually ) Tj
1 0 0 1 50 630 Tm (become the OpenVoiceOS smart speaker) Tj
1 0 0 1 50 616 Tm (- Jan 2019 - @JarbasAI [personal-backend]\(https://github.com/MycroftAI/personal-) Tj
1 0 0 1 50 602 Tm (backend/tree/31ee96a8189d96f8102276bf4b9073811ee9a9b2\) implementation adopted by MycroftAI) Tj
1 0 0 1 50 588 Tm (- Mar 2019 - MycroftAI mark 2 completely redesigned and based on different hardware) Tj
1 0 0 1 50 574 Tm (- Apr 2019 - Steve Penrod and @JarbasAI create [lingua-) Tj
1 0 0 1 50 560 Tm (franca]\(https://github.com/MycroftAI/lingua-) Tj
1 0 0 1 50 546 Tm (franca/tree/130c77026e22d9afb1d4d3a383a743483ea007d8\) under MycroftAI with @JarbasAI as ) Tj
1 0 0 1 50 532 Tm (maintainer) Tj
1 0 0 1 50 518 Tm (- ??? 2019 - @JarbasAI partners with NeonAI to maintain `neon-core`) Tj
1 0 0 1 50 504 Tm (- Jul 2019 - steve penrod leaves MycroftAI) Tj
1 0 0 1 50 490 Tm (- Jul 2019 - [Chatterbox ) Tj
1 0 0 1 50 476 Tm (kickstarter]\(https://www.kickstarter.com/projects/hellochatterbox/chatterbox-the-smart-) Tj
1 0 0 1 50 462 Tm (speaker-that-kids-build-and-p\) launched by @JarbasAI) Tj
1 0 0 1 50 448 Tm (- Sep 2019 - [Mycroft on Plasma Automobile ) Tj
1 0 0 1 50 434 Tm (Demo]\(https://conf.kde.org/en/akademy2019/public/events/141.html\) at Akademy 2019 by @aix) Tj
1 0 0 1 50 420 Tm (- Oct 2019 - Official MycroftAI backend open sourced, licensed as AGPL) Tj
1 0 0 1 50 406 Tm (- Dec 2019 - @Chance joins `lingua-franca` as a maintainer) Tj
1 0 0 1 50 392 Tm (- Dec 2019 - Chatterbox released \(closed source\) / kickstarter campaign fullfilled) Tj
1 0 0 1 50 378 Tm (- Dec 2019 - MycroftAI starts to work on Kivy based UI) Tj
1 0 0 1 50 364 Tm (- ??? 2020 - MycroftAI starts neglecting community contributions) Tj
1 0 0 1 50 350 Tm (- Mar 2020 - MycroftAI abandons [personal-backend]\(https://github.com/MycroftAI/personal-) Tj
1 0 0 1 50 336 Tm (backend\)) Tj
1 0 0 1 50 322 Tm (- Mar 2020 - Michael Lewis becomes MycroftAI CEO) Tj
1 0 0 1 50 308 Tm (- May 2020 - @JarbasAI and @AIX partner up to create a [VOIP ) Tj
1 0 0 1 50 294 Tm (skill]\(https://github.com/JarbasSkills/skill-voip\)) Tj
1 0 0 1 50 280 Tm (- Sep 2020 - Community takes stand against reimplementation of GUI using Kivy) Tj
1 0 0 1 50 266 Tm (- Oct 2020 - Kivy has been dropped in support for QT Mycroft-GUI) Tj
1 0 0 1 50 252 Tm (- Oct 2020 - @JarbasAI, @AIX and @j1nx form OpenVoiceOS community project around `mycroft-) Tj
1 0 0 1 50 238 Tm (core`) Tj
1 0 0 1 50 224 Tm (- Oct 2020 - [ovos-utils]\(https://github.com/OpenVoiceOS/ovos-utils\) transferred from ) Tj
1 0 0 1 50 210 Tm (@Jarbasai to OVOS and renamed from `jarbas-utils`) Tj
1 0 0 1 50 196 Tm (- ??? 2020 - Chatterbox forks `mycroft-core` as `mycroft-lib` \(open source\)) Tj
1 0 0 1 50 182 Tm (- ??? 2020 - `mycroft-lib` reorganizes `mycroft` imports cleanly separating each service) Tj
1 0 0 1 50 168 Tm (- ??? 2020 - Chatterbox \(closed source\) recreated on top of `mycroft-lib`) Tj
1 0 0 1 50 154 Tm (- ??? 2020 - `neon-core` recreated on top of `mycroft-lib`) Tj
1 0 0 1 50 140 Tm (- Oct 2020 - MycroftOS renamed to OpenVoiceOS - Mycroft Edition due to trademark issues) Tj
1 0 0 1 50 126 Tm (- ??? 2020 - @JarbasAI leaves `lingua-franca`) Tj
1 0 0 1 50 112 Tm (- ??? 2020 - @Chance joins OpenVoiceOS) Tj
1 0 0 1 50 98 Tm (- Nov 2020 - @Jarbas gives a talk about [translating ) Tj
1 0 0 1 50 84 Tm (mycroft]\(https://collectivat.cat/blog/2020-11-06-jornades-de-tecnologies-lliures-de-la-) Tj
1 0 0 1 50 70 Tm (parla/\) for [collectivat]\(https://collectivat.cat\) Jornades de tecnologies lingstiques ) Tj
1 0 0 1 50 56 Tm (lliures en catal) Tj
ET
endstream

endobj
378 0 obj
<< /Length 4089 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (- Dec 2020 - [ovos-ww-plugin-pocketsphinx]\(https://github.com/OpenVoiceOS/ovos-ww-plugin-) Tj
1 0 0 1 50 728 Tm (pocketsphinx\) released) Tj
1 0 0 1 50 714 Tm (- Dec 2020 - [ovos-ww-plugin-snowboy]\(https://github.com/OpenVoiceOS/ovos-ww-plugin-) Tj
1 0 0 1 50 700 Tm (snowboy\) released) Tj
1 0 0 1 50 686 Tm (- Dec 2020 - [ovos-ww-plugin-precise]\(https://github.com/OpenVoiceOS/ovos-ww-plugin-) Tj
1 0 0 1 50 672 Tm (precise\) released) Tj
1 0 0 1 50 658 Tm (- Dec 2020 - [ovos-stt-plugin-vosk]\(https://github.com/OpenVoiceOS/ovos-stt-plugin-vosk\) ) Tj
1 0 0 1 50 644 Tm (released) Tj
1 0 0 1 50 630 Tm (- Dec 2020 - [ovos-stt-plugin-chromium]\(https://github.com/OpenVoiceOS/ovos-stt-plugin-) Tj
1 0 0 1 50 616 Tm (chromium\) released) Tj
1 0 0 1 50 602 Tm (- Jan 2021 - [ovos-plugin-manager]\(https://github.com/OpenVoiceOS/ovos-plugin-manager\) ) Tj
1 0 0 1 50 588 Tm (released) Tj
1 0 0 1 50 574 Tm (- Jan 2021 - [personal-backend]\(https://github.com/OpenVoiceOS/ovos-personal-backend\) ) Tj
1 0 0 1 50 560 Tm (adopted by OpenVoiceOS, original repo unarchived and ownership transferred) Tj
1 0 0 1 50 546 Tm (- Jan 2021 - [Mycroft embedded shell]\(https://github.com/notmart/mycroft-embedded-shell\) ) Tj
1 0 0 1 50 532 Tm (adopted by OpenVoiceOS and renamed to [ovos-shell]\(https://github.com/OpenVoiceOS/ovos-) Tj
1 0 0 1 50 518 Tm (shell\)) Tj
1 0 0 1 50 504 Tm (- Jan 2021 - [skill-ovos-setup]\(https://github.com/OpenVoiceOS/skill-ovos-setup\) forked ) Tj
1 0 0 1 50 490 Tm (from Mycroft to replace pairing) Tj
1 0 0 1 50 476 Tm (- Jan 2021 - [ovos-skill-manager]\(https://github.com/OpenVoiceOS/ovos_skill_manager\) ) Tj
1 0 0 1 50 462 Tm (released to support more skill Marketplaces) Tj
1 0 0 1 50 448 Tm (- Feb 2021 - [skill-ovos-stop]\(https://github.com/OpenVoiceOS/skill-ovos-stop\) forked from) Tj
1 0 0 1 50 434 Tm ( Mycroft) Tj
1 0 0 1 50 420 Tm (- Mar 2021 - [skill-ovos-common-play]\(https://github.com/OpenVoiceOS/skill-ovos-common-) Tj
1 0 0 1 50 406 Tm (play\) forked from Mycroft) Tj
1 0 0 1 50 392 Tm (- Mar 2021 - MycroftAI mark 2 dev kits start shipping) Tj
1 0 0 1 50 378 Tm (- Apr 2021 - OpenVoiceOS adopts `mycroft-lib` instead of `mycroft-core`) Tj
1 0 0 1 50 364 Tm (- ??? 202? - `mycroft-lib` renamed to ) Tj
1 0 0 1 50 350 Tm ([HolmesIV]\(https://github.com/HelloChatterbox/HolmesIV\) to avoid trademark issues) Tj
1 0 0 1 50 336 Tm (- Apr 2021 - [ovos-workshop]\(https://github.com/OpenVoiceOS/ovos-workshop\) released, ) Tj
1 0 0 1 50 322 Tm (bringing OVOS features to individual skills) Tj
1 0 0 1 50 308 Tm (- May 2021 - chatterbox forks `lingua-franca` as `lingua-nostra`) Tj
1 0 0 1 50 294 Tm (- May 2021 . OpenVoiceOS deprecates `mycroft-lib` and adopts `HolmesIV`) Tj
1 0 0 1 50 280 Tm (- Jun 2021 - [ovos-tts-plugin-espeakNG]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-) Tj
1 0 0 1 50 266 Tm (espeakNG\) released) Tj
1 0 0 1 50 252 Tm (- Jun 2021 - [ovos-tts-plugin-mimic]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-mimic\)) Tj
1 0 0 1 50 238 Tm ( released) Tj
1 0 0 1 50 224 Tm (- Jun 2021 - [ovos-tts-plugin-mimic2]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-) Tj
1 0 0 1 50 210 Tm (mimic2\) released) Tj
1 0 0 1 50 196 Tm (- Jun 2021 - [ovos-tts-plugin-pico]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-pico\) ) Tj
1 0 0 1 50 182 Tm (released) Tj
1 0 0 1 50 168 Tm (- Aug 2021 - [ovos-tts-plugin-google-tx]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-) Tj
1 0 0 1 50 154 Tm (google-tx\) released) Tj
1 0 0 1 50 140 Tm (- Aug 2021 - [ovos-ww-plugin-vosk]\(https://github.com/OpenVoiceOS/ovos-ww-plugin-vosk\) ) Tj
1 0 0 1 50 126 Tm (released) Tj
1 0 0 1 50 112 Tm (- Aug 2021 - [precise-lite]\(https://github.com/OpenVoiceOS/precise-lite\) forked from ) Tj
1 0 0 1 50 98 Tm (Mycroft, adding tflite support) Tj
1 0 0 1 50 84 Tm (- Aug 2021 - [ovos-ww-plugin-precise-lite]\(https://github.com/OpenVoiceOS/ovos-ww-plugin-) Tj
1 0 0 1 50 70 Tm (precise-lite\) released) Tj
1 0 0 1 50 56 Tm (- Aug 2021 - [ovos-ww-plugin-nyumaya]\(https://github.com/OVOSHatchery/ovos-ww-plugin-) Tj
ET
endstream

endobj
379 0 obj
<< /Length 3881 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (nyumaya\) released) Tj
1 0 0 1 50 728 Tm (- Aug 2021 - [precise-lite-models]\(https://github.com/OpenVoiceOS/precise-lite-models\) ) Tj
1 0 0 1 50 714 Tm (start being shared) Tj
1 0 0 1 50 700 Tm (- Aug 2021 - [skill-ovos-volume]\(https://github.com/OpenVoiceOS/skill-ovos-volume\) ) Tj
1 0 0 1 50 686 Tm (released) Tj
1 0 0 1 50 672 Tm (- Sep 2021 - [VocalFusionDriver]\(https://github.com/OpenVoiceOS/VocalFusionDriver\) ) Tj
1 0 0 1 50 658 Tm (released by OVOS to support the mk2) Tj
1 0 0 1 50 644 Tm (- Sep 2021 - [ovos-tts-plugin-SAM]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-SAM\) ) Tj
1 0 0 1 50 630 Tm (released) Tj
1 0 0 1 50 616 Tm (- Sep 2021 - backend made optional in `HolmesIV`) Tj
1 0 0 1 50 602 Tm (- Sep 2021 - msm made optional in `HolmesIV`) Tj
1 0 0 1 50 588 Tm (- Oct 2021 - "instant_listen" introduced in `HolmesIV`) Tj
1 0 0 1 50 574 Tm (- Oct 2021 - `HolmesIV` abandoned by chatterbox) Tj
1 0 0 1 50 560 Tm (- Oct 2021 - `lingua-nostra` abandoned by chatterbox) Tj
1 0 0 1 50 546 Tm (- Oct 2021 - OpenVoiceOS forks `HolmesIV` as `ovos-core`) Tj
1 0 0 1 50 532 Tm (- Oct 2021 - `ovos-core` becomes XDG compliant) Tj
1 0 0 1 50 518 Tm (- Oct 2021 - `neon-core` deprecates `HolmesIV` and adopts `ovos-core`) Tj
1 0 0 1 50 504 Tm (- Oct 2021 - [skill-ovos-common-play]\(https://github.com/OpenVoiceOS/skill-ovos-common-) Tj
1 0 0 1 50 490 Tm (play\) deprecated in favor of [OCP]\(https://github.com/OpenVoiceOS/ovos-ocp-audio-plugin\)) Tj
1 0 0 1 50 476 Tm (- ??? 2021 - @Chance leaves `lingua-franca`) Tj
1 0 0 1 50 462 Tm (- Nov 2021 - [ovos-plugin-manager]\(https://github.com/OpenVoiceOS/ovos-plugin-manager\) ) Tj
1 0 0 1 50 448 Tm (released) Tj
1 0 0 1 50 434 Tm (- Nov 2021 - [skill-ovos-timer]\(https://github.com/OpenVoiceOS/skill-ovos-timer\) forked ) Tj
1 0 0 1 50 420 Tm (from Mycroft) Tj
1 0 0 1 50 406 Tm (- Nov 2021 - [skill-ovos-homescreen]\(https://github.com/OpenVoiceOS/skill-ovos-homescreen\)) Tj
1 0 0 1 50 392 Tm ( forked from Mycroft) Tj
1 0 0 1 50 378 Tm (- Nov 2021 - @JarbasAI leaves chatterbox) Tj
1 0 0 1 50 364 Tm (- Nov 2021 - `ovos-core` version **0.0.1** released) Tj
1 0 0 1 50 350 Tm (- Nov 2021 - [ovos-utils]\(https://github.com/OpenVoiceOS/ovos-utils\) adopted in `ovos-) Tj
1 0 0 1 50 336 Tm (core`) Tj
1 0 0 1 50 322 Tm (- Nov 2021 - [ovos-plugin-manager]\(https://github.com/OpenVoiceOS/ovos-plugin-manager\) ) Tj
1 0 0 1 50 308 Tm (adopted in `ovos-core`) Tj
1 0 0 1 50 294 Tm (- Nov 2021 - multiple wake words support added) Tj
1 0 0 1 50 280 Tm (- Nov 2021 - installable skills \(setup.py\) support added) Tj
1 0 0 1 50 266 Tm (- Nov 2021 - [ovos-PHAL]\(https://github.com/OpenVoiceOS/ovos-PHAL\) released \(mycroft ) Tj
1 0 0 1 50 252 Tm (compatible\)) Tj
1 0 0 1 50 238 Tm (- Nov 2021 - [skill-ovos-hello-world]\(https://github.com/OpenVoiceOS/skill-ovos-hello-) Tj
1 0 0 1 50 224 Tm (world\) forked from Mycroft) Tj
1 0 0 1 50 210 Tm (- Nov 2021 - [skill-ovos-naptime]\(https://github.com/OpenVoiceOS/skill-ovos-naptime\) ) Tj
1 0 0 1 50 196 Tm (forked from Mycroft) Tj
1 0 0 1 50 182 Tm (- ??? - @NeonDaniel joins OpenVoiceOS) Tj
1 0 0 1 50 168 Tm (- ??? 2021 - NeonAI adopts [ovos-shell]\(https://github.com/OpenVoiceOS/ovos-shell\)) Tj
1 0 0 1 50 154 Tm (- Dec 2021 - [ovos-PHAL-plugin-mk1]\(https://github.com/OpenVoiceOS/ovos-PHAL-plugin-mk1\) ) Tj
1 0 0 1 50 140 Tm (released) Tj
1 0 0 1 50 126 Tm (- Dec 2021 - [skill-ovos-fallback-unknown]\(https://github.com/OpenVoiceOS/skill-ovos-) Tj
1 0 0 1 50 112 Tm (fallback-unknown\) forked from Mycroft) Tj
1 0 0 1 50 98 Tm (- Dec 2021 - [skill-ovos-weather]\(https://github.com/OpenVoiceOS/skill-ovos-weather\) ) Tj
1 0 0 1 50 84 Tm (forked from Mycroft) Tj
1 0 0 1 50 70 Tm (- Dec 2021 - [skill-ovos-common-query]\(https://github.com/OpenVoiceOS/skill-ovos-common-) Tj
1 0 0 1 50 56 Tm (query\) forked from Mycroft) Tj
ET
endstream

endobj
380 0 obj
<< /Length 4058 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (- Dec 2021 - [skill-ovos-application-launcher]\(https://github.com/OpenVoiceOS/skill-ovos-) Tj
1 0 0 1 50 728 Tm (application-launcher\) released) Tj
1 0 0 1 50 714 Tm (- Jan 2022 - OpenVoiceOS forks [lingua-franca]\(https://github.com/OpenVoiceOS/ovos-lingua-) Tj
1 0 0 1 50 700 Tm (franca\)) Tj
1 0 0 1 50 686 Tm (- ??? 2022 - OpenVoiceOS starts development in the open via [matrix ) Tj
1 0 0 1 50 672 Tm (chat]\(https://matrix.to/#/!XFpdtmgyCoPDxOMPpH:matrix.org?via=matrix.org\)) Tj
1 0 0 1 50 658 Tm (- Feb 2022 - [OCP]\(https://github.com/OpenVoiceOS/ovos-ocp-audio-plugin\) released as an ) Tj
1 0 0 1 50 644 Tm (audio plugin \(mycroft compatible\)) Tj
1 0 0 1 50 630 Tm (- Feb 2022 - PHAL replaces `mycroft.client.enclosure` in `ovos-core`) Tj
1 0 0 1 50 616 Tm (- Feb 2022 - [skill-ovos-date-time]\(https://github.com/OpenVoiceOS/skill-ovos-date-time\) ) Tj
1 0 0 1 50 602 Tm (forked from Mycroft) Tj
1 0 0 1 50 588 Tm (- Mar 2022 - Fallback STT support added) Tj
1 0 0 1 50 574 Tm (- Mar 2022 - VAD plugins support added) Tj
1 0 0 1 50 560 Tm (- Mar 2022 - [ovos-vad-plugin-webrtcvad]\(https://github.com/OpenVoiceOS/ovos-vad-plugin-) Tj
1 0 0 1 50 546 Tm (webrtcvad\) released) Tj
1 0 0 1 50 532 Tm (- Mar 2022 - [ovos-vad-plugin-silero]\(https://github.com/OpenVoiceOS/ovos-vad-plugin-) Tj
1 0 0 1 50 518 Tm (silero\) released) Tj
1 0 0 1 50 504 Tm (- Mar 2022 - [OCP]\(https://github.com/OpenVoiceOS/ovos-ocp-audio-plugin/\) adopted in ) Tj
1 0 0 1 50 490 Tm (`ovos-core` as default media handler) Tj
1 0 0 1 50 476 Tm (- Mar 2022 - [ovos-PHAL-plugin-mk2]\(https://github.com/OpenVoiceOS/ovos-PHAL-plugin-mk2\) ) Tj
1 0 0 1 50 462 Tm (released) Tj
1 0 0 1 50 448 Tm (- Mar 2022 - [ovos-PHAL-plugin-respeaker-2mic]\(https://github.com/OpenVoiceOS/ovos-PHAL-) Tj
1 0 0 1 50 434 Tm (plugin-respeaker-2mic\) released) Tj
1 0 0 1 50 420 Tm (- Mar 2022 - [ovos-PHAL-plugin-respeaker-4mic]\(https://github.com/OpenVoiceOS/ovos-PHAL-) Tj
1 0 0 1 50 406 Tm (plugin-respeaker-4mic\) released) Tj
1 0 0 1 50 392 Tm (- ??? 2022 - OpenVoiceOS starts releasing buildroot images for rpi4 and Mark 2) Tj
1 0 0 1 50 378 Tm (- ??? 2022 - OpenVoiceOS starts releasing manjaro images for rpi4 and Mark 2) Tj
1 0 0 1 50 364 Tm (- Apr 2022 - [ovos-stt-http-server]\(https://github.com/OpenVoiceOS/ovos-stt-http-server\) ) Tj
1 0 0 1 50 350 Tm (released) Tj
1 0 0 1 50 336 Tm (- Apr 2022 - [ovos-stt-plugin-server]\(https://github.com/OpenVoiceOS/ovos-stt-plugin-) Tj
1 0 0 1 50 322 Tm (server\) released) Tj
1 0 0 1 50 308 Tm (- May 2022 - [ovos-tts-plugin-beepspeak]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-) Tj
1 0 0 1 50 294 Tm (beepspeak\) forked from chatterbox) Tj
1 0 0 1 50 280 Tm (- May 2022 - [ovos-tts-plugin-marytts]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-) Tj
1 0 0 1 50 266 Tm (marytts\) released) Tj
1 0 0 1 50 252 Tm (- May 2022 - [ovos-tts-plugin-polly]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-polly\)) Tj
1 0 0 1 50 238 Tm ( forked from chatterbox) Tj
1 0 0 1 50 224 Tm (- May 2022 - [ovos-translate-server]\(https://github.com/OpenVoiceOS/ovos-translate-server\)) Tj
1 0 0 1 50 210 Tm ( released) Tj
1 0 0 1 50 196 Tm (- May 2022 - `ovos-core` version **0.0.3** released) Tj
1 0 0 1 50 182 Tm (- May 2022 - MycroftAI founders resign) Tj
1 0 0 1 50 168 Tm (- Jun 2022 - [ovos-config]\(https://github.com/OpenVoiceOS/ovos-config\) adopted in `ovos-) Tj
1 0 0 1 50 154 Tm (core`) Tj
1 0 0 1 50 140 Tm (- Jun 2022 - [skill-ovos-alarm]\(https://github.com/OpenVoiceOS/skill-ovos-alarm\) forked ) Tj
1 0 0 1 50 126 Tm (from Mycroft) Tj
1 0 0 1 50 112 Tm (- Jun 2022 - [skill-ovos-qml-camera]\(https://github.com/OpenVoiceOS/skill-ovos-qml-camera\)) Tj
1 0 0 1 50 98 Tm ( forked from Mycroft) Tj
1 0 0 1 50 84 Tm (- Jun 2022 - Plasma Bigscreen [drops mycroft-core in favor of ovos-) Tj
1 0 0 1 50 70 Tm (core]\(https://gitlab.manjaro.org/packages/kde-unstable/bigscreen/mycroft-) Tj
1 0 0 1 50 56 Tm (bigscreen/-/commit/4fd27e3ea165c2b1d39ee354a9faaa40fad1435d\) version **0.0.4** \(alpha\)) Tj
ET
endstream

endobj
381 0 obj
<< /Length 4071 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (- Jul 2022 - MycroftAI starts work on [mycroft-) Tj
1 0 0 1 50 728 Tm (dinkum]\(https://github.com/MycroftAI/mycroft-dinkum\) behind the scenes, a ) Tj
1 0 0 1 50 714 Tm (replacement/rewrite of mycroft-core) Tj
1 0 0 1 50 700 Tm (- Jul 2022 - [ovos-tts-plugin-mimic3]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-) Tj
1 0 0 1 50 686 Tm (mimic3\) forked from Mycroft) Tj
1 0 0 1 50 672 Tm (- Jul 2022 - [skill-homescreen-lite]\(https://github.com/OpenVoiceOS/skill-homescreen-lite\)) Tj
1 0 0 1 50 658 Tm ( released) Tj
1 0 0 1 50 644 Tm (- Aug 2022 - [padacioso]\(https://github.com/OpenVoiceOS/padacioso\) transfered from ) Tj
1 0 0 1 50 630 Tm (@JarbasAi to OVOS) Tj
1 0 0 1 50 616 Tm (- Aug 2022 - adopt `padacioso` as a optional `padatious` alternative to avoid libfann ) Tj
1 0 0 1 50 602 Tm (\(LGPL\)) Tj
1 0 0 1 50 588 Tm (- Aug 2022 - `ovos-core` version **0.0.4** released) Tj
1 0 0 1 50 574 Tm (- Aug 2022 - experimental support for "continuous_listening" and "hybrid_listening" added) Tj
1 0 0 1 50 560 Tm (- Sep 2022 - MycroftAI [Mimic3]\(https://github.com/MycroftAI/mimic3\) TTS released, AGPL ) Tj
1 0 0 1 50 546 Tm (licensed) Tj
1 0 0 1 50 532 Tm (- Sep 2022 . MycroftAI Mark 2 starts shipping) Tj
1 0 0 1 50 518 Tm (- Sep 2022 - [skill-ovos-news]\(https://github.com/OpenVoiceOS/skill-ovos-news\) transferred) Tj
1 0 0 1 50 504 Tm ( from @JarbasAl to OVOS) Tj
1 0 0 1 50 490 Tm (- Oct 2022 - [ovos-backend-manager]\(https://github.com/OpenVoiceOS/ovos-backend-manager\) ) Tj
1 0 0 1 50 476 Tm (UI  released) Tj
1 0 0 1 50 462 Tm (- Oct 2022 - [ovos-stt-plugin-whispercpp]\(https://github.com/OpenVoiceOS/ovos-stt-plugin-) Tj
1 0 0 1 50 448 Tm (whispercpp\) released) Tj
1 0 0 1 50 434 Tm (- Oct 2022 - new `ask_yesno` parser added) Tj
1 0 0 1 50 420 Tm (- Oct 2022 - [ovos-backend-client]\(https://github.com/OpenVoiceOS/ovos-backend-client\) ) Tj
1 0 0 1 50 406 Tm (adopted by `ovos-core`, selectable backend support added \(offline, personal, selene\)) Tj
1 0 0 1 50 392 Tm (- Oct 2022 - [ovos-tts-plugin-mimic3-server]\(https://github.com/OpenVoiceOS/ovos-tts-) Tj
1 0 0 1 50 378 Tm (plugin-mimic3-server\) released) Tj
1 0 0 1 50 364 Tm (- Oct 2022 - [mycroft.blue-systems.com]\(http://mycroft.blue-systems.com\) mimic 3 public ) Tj
1 0 0 1 50 350 Tm (server added) Tj
1 0 0 1 50 336 Tm (- Oct 2022 - [mimic3.ziggyai.online]\(https://mimic3.ziggyai.online\) mimic 3 public server ) Tj
1 0 0 1 50 322 Tm (added) Tj
1 0 0 1 50 308 Tm (- Oct 2022 - @aix talks about [OVOS in KDE ) Tj
1 0 0 1 50 294 Tm (Akademy]\(https://www.youtube.com/watch?v=hCwdtZu7WqA\)) Tj
1 0 0 1 50 280 Tm (- Oct 2022 - [skill-ovos-soundcloud]\(https://github.com/OpenVoiceOS/skill-ovos-soundcloud\)) Tj
1 0 0 1 50 266 Tm ( transferred from @JarbasAl to OVOS) Tj
1 0 0 1 50 252 Tm (- Oct 2022 - [skill-ovos-youtube]\(https://github.com/OpenVoiceOS/skill-ovos-youtube\) ) Tj
1 0 0 1 50 238 Tm (transferred from @JarbasAl to OVOS) Tj
1 0 0 1 50 224 Tm (- ??? 2022 - [mycroft-dinkum]\(https://github.com/MycroftAI/mycroft-dinkum\) source code ) Tj
1 0 0 1 50 210 Tm (made public, Apache2 licensed) Tj
1 0 0 1 50 196 Tm (- ??? 2022 - Extremely negative feedback from developer community, several key members ) Tj
1 0 0 1 50 182 Tm (annouce no intention to support mycroft-dinkum) Tj
1 0 0 1 50 168 Tm (- ??? 2022 - NeonAI starts release NeonOS images for the Mark 2) Tj
1 0 0 1 50 154 Tm (- Nov 2022 - `ovos-core` version **0.0.5** released) Tj
1 0 0 1 50 140 Tm (- Nov 2022 - MycroftAI staff lay off, only a skeleton crew remaining) Tj
1 0 0 1 50 126 Tm (- Nov 2022 - [ovos-bus-client]\(https://github.com/OpenVoiceOS/ovos-bus-client\) forked from) Tj
1 0 0 1 50 112 Tm ( Mycroft) Tj
1 0 0 1 50 98 Tm (- Nov 2022 - [tts.smartgic.io/mimic3]\(https://tts.smartgic.io/mimic3\) public Mimic3 server) Tj
1 0 0 1 50 84 Tm ( added) Tj
1 0 0 1 50 70 Tm (- Dec 2022 - [Home Assistant PHAL]\(https://github.com/OpenVoiceOS/ovos-PHAL-plugin-) Tj
1 0 0 1 50 56 Tm (homeassistant\) plugin initial release by @AIX , exposes HA devices to the messagebus) Tj
ET
endstream

endobj
382 0 obj
<< /Length 4278 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (- Dec 2022 - [skill-ovos-youtube-music]\(https://github.com/OpenVoiceOS/skill-ovos-youtube-) Tj
1 0 0 1 50 728 Tm (music\) transferred from @JarbasAl to OVOS) Tj
1 0 0 1 50 714 Tm (- Dec 2022 - [skill-ovos-bandcamp]\(https://github.com/OpenVoiceOS/skill-ovos-bandcamp\) ) Tj
1 0 0 1 50 700 Tm (transferred from @JarbasAl to OVOS) Tj
1 0 0 1 50 686 Tm (- Jan 2023 - `ovos-core` version **0.0.6** released) Tj
1 0 0 1 50 672 Tm (- Jan 2023 - negative user feedback from the community for Mark 2, lots of bugs and ) Tj
1 0 0 1 50 658 Tm (missing features) Tj
1 0 0 1 50 644 Tm (- Jan 2023 - "fallback" wake word support added to `ovos-plugin-manager`) Tj
1 0 0 1 50 630 Tm (- Jan 2023 - [skill-ovos-local-media]\(https://github.com/OpenVoiceOS/skill-ovos-local-) Tj
1 0 0 1 50 616 Tm (media\) released) Tj
1 0 0 1 50 602 Tm (- Jan 2023 - [ChatGPT skill]\(https://github.com/OpenVoiceOS/skill-ovos-fallback-chatgpt/\) ) Tj
1 0 0 1 50 588 Tm (released) Tj
1 0 0 1 50 574 Tm (- Feb 2023 - `ovos-config` cli tool by community member @sgee released) Tj
1 0 0 1 50 560 Tm (- Feb 2023 - [ovos-solver-plugin-aiml]\(https://github.com/OpenVoiceOS/ovos-solver-plugin-) Tj
1 0 0 1 50 546 Tm (aiml\) released) Tj
1 0 0 1 50 532 Tm (- Feb 2023 - [ovos-solver-plugin-rivescript]\(https://github.com/OpenVoiceOS/ovos-solver-) Tj
1 0 0 1 50 518 Tm (plugin-rivescript\) released) Tj
1 0 0 1 50 504 Tm (- Feb 2023 - [skill-ovos-somafm]\(https://github.com/OpenVoiceOS/skill-ovos-somafm\) ) Tj
1 0 0 1 50 490 Tm (transferred from @JarbasAl to OVOS) Tj
1 0 0 1 50 476 Tm (- Feb 2023 - MycroftAI partners up with NeonAI to maintain mycroft-core\(?\)) Tj
1 0 0 1 50 462 Tm (- Mar 2023 - Mimic3 TTS public servers become default OVOS voice \(alan pope\)) Tj
1 0 0 1 50 448 Tm (- Mar 2023 - `ovos-core` version **0.0.7** released) Tj
1 0 0 1 50 434 Tm (- Mar 2023 - [Fundraiser to form OpenVoiceOS]\(https://www.gofundme.com/f/openvoiceos\) ) Tj
1 0 0 1 50 420 Tm (V.z.w. \(Dutch: "Vereninging zonder winstoogmerk"\) completed in a couple days) Tj
1 0 0 1 50 406 Tm (- Mar 2023 - First stretch goal of [fundraiser]\(https://www.gofundme.com/f/openvoiceos\) ) Tj
1 0 0 1 50 392 Tm (reached and second stretch goal announced) Tj
1 0 0 1 50 378 Tm (- Mar 2023 - [raspbian-ovos]\(https://github.com/OpenVoiceOS/raspbian-ovos\) images start ) Tj
1 0 0 1 50 364 Tm (being released, maintained by community member @builderjer) Tj
1 0 0 1 50 350 Tm (- Mar 2023 - [community docs]\(https://openvoiceos.github.io/community-docs/\) start being ) Tj
1 0 0 1 50 336 Tm (maintained by community members) Tj
1 0 0 1 50 322 Tm (- Mar 2023 - [ovos-ww-plugin-openWakeWord]\(https://github.com/OpenVoiceOS/ovos-ww-plugin-) Tj
1 0 0 1 50 308 Tm (openWakeWord\) released, maintained by author @dscripka) Tj
1 0 0 1 50 294 Tm (- Mar 2023 - [skill-ovos-icanhazdadjokes]\(https://github.com/OpenVoiceOS/skill-ovos-) Tj
1 0 0 1 50 280 Tm (icanhazdadjokes\) transferred from @JarbasAl to OVOS) Tj
1 0 0 1 50 266 Tm (- Mar 2023 - [ovos-skill-alerts]\(https://github.com/OpenVoiceOS/ovos-skill-alerts\) forked ) Tj
1 0 0 1 50 252 Tm (from Neon, maintained by community member @sgee) Tj
1 0 0 1 50 238 Tm (- Apr 2023 - `ovos-core` splits `ovos-audio`, `ovos-listener`, `ovos-gui` and `ovos-bus` ) Tj
1 0 0 1 50 224 Tm (into their own packages) Tj
1 0 0 1 50 210 Tm (- Apr 2023 - [@Aix leaves]\(https://community.mycroft.ai/t/aix-signing-off/13583\) ) Tj
1 0 0 1 50 196 Tm (OpenVoiceOS) Tj
1 0 0 1 50 182 Tm (- Apr 2023 - OpenVoiceOS stops releasing manjaro based images) Tj
1 0 0 1 50 168 Tm (- Apr 2023 - [ovos-stt-plugin-fasterwhisper]\(https://github.com/OpenVoiceOS/ovos-stt-) Tj
1 0 0 1 50 154 Tm (plugin-fasterwhisper\) released) Tj
1 0 0 1 50 140 Tm (- Apr 2023 - [ovos-tts-plugin-piper]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-piper\)) Tj
1 0 0 1 50 126 Tm ( released) Tj
1 0 0 1 50 112 Tm (- Apr 2023 - [precise-lite-trainer]\(https://github.com/OpenVoiceOS/precise-lite-trainer\) ) Tj
1 0 0 1 50 98 Tm (released) Tj
1 0 0 1 50 84 Tm (- Apr 2023 - [ovos-vad-plugin-precise]\(https://github.com/OpenVoiceOS/ovos-vad-plugin-) Tj
1 0 0 1 50 70 Tm (precise\) released) Tj
1 0 0 1 50 56 Tm (- Apr 2023 - [ovos-dinkum-listener]\(https://github.com/OpenVoiceOS/ovos-dinkum-listener\) ) Tj
ET
endstream

endobj
383 0 obj
<< /Length 4611 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (released) Tj
1 0 0 1 50 728 Tm (- Apr 2023 - [ovos-translate-plugin-deepl]\(https://github.com/OpenVoiceOS/ovos-translate-) Tj
1 0 0 1 50 714 Tm (plugin-deepl\) released, maintained by community member @sgee) Tj
1 0 0 1 50 700 Tm (- Apr 2023 - [mycroft-classic-listener]\(https://github.com/OpenVoiceOS/mycroft-classic-) Tj
1 0 0 1 50 686 Tm (listener\) released, to preserve original mark 1 listener) Tj
1 0 0 1 50 672 Tm (- Apr 2023 - [skill-ovos-tunein]\(https://github.com/OpenVoiceOS/skill-ovos-tunein\)  ) Tj
1 0 0 1 50 658 Tm (transferred from @JarbasAl to OVOS, maintained by community member @sgee) Tj
1 0 0 1 50 644 Tm (- Apr 2023 - [jurebes]\(https://github.com/OpenVoiceOS/jurebes\) intent parser released) Tj
1 0 0 1 50 630 Tm (- May 2023 - `mycroft` import deprecated in favor of `ovos_core` module for skills service) Tj
1 0 0 1 50 616 Tm (- May 2023 - [stt.openvoiceos.org]\(https://stt.openvoiceos.org\) moves to whisper \(small, ) Tj
1 0 0 1 50 602 Tm (cpu only\)) Tj
1 0 0 1 50 588 Tm (- May 2023 - [ovos-docker]\(https://github.com/openvoiceos/ovos-docker\) released, ) Tj
1 0 0 1 50 574 Tm (maintained by community member @goldyfruit) Tj
1 0 0 1 50 560 Tm (- May 2023 - Open Voice OS TTS/STT [status page]\(http://openvoiceos.github.io/status/\) ) Tj
1 0 0 1 50 546 Tm (released, maintained by community member @goldyfruit) Tj
1 0 0 1 50 532 Tm (- May 2023 - First successful run of OpenVoiceOS on Mac OS using containers with [ovos-) Tj
1 0 0 1 50 518 Tm (docker]\(https://github.com/openvoiceos/ovos-docker\)) Tj
1 0 0 1 50 504 Tm (- May 2023 - [ovos-docker-stt]\(https://github.com/openvoiceos/ovos-docker-stt\) STT ) Tj
1 0 0 1 50 490 Tm (containers released, maintained by community member @goldyfruit) Tj
1 0 0 1 50 476 Tm (- May 2023 - [ovos-microphone-plugin-sounddevice]\(https://github.com/openvoiceos/ovos-) Tj
1 0 0 1 50 462 Tm (microphone-plugin-sounddevice\) released, which provides native Mac OS suuport, maintained ) Tj
1 0 0 1 50 448 Tm (by community member @goldyfruit) Tj
1 0 0 1 50 434 Tm (- May 2023 - [ovos-persona]\(https://github.com/OpenVoiceOS/ovos-persona\) alpha release) Tj
1 0 0 1 50 420 Tm (- May 2023 - [ovos-audio-transformer-plugin-speechbrain-) Tj
1 0 0 1 50 406 Tm (langdetect]\(https://github.com/OpenVoiceOS/ovos-audio-transformer-plugin-speechbrain-) Tj
1 0 0 1 50 392 Tm (langdetect\) released) Tj
1 0 0 1 50 378 Tm (- May 2023 - [ovos-skill-easter-eggs]\(https://github.com/OpenVoiceOS/ovos-skill-easter-) Tj
1 0 0 1 50 364 Tm (eggs\) transferred from @JarbasAl to OVOS, maintained by community member @mikejgray) Tj
1 0 0 1 50 350 Tm (- May 2023 - [skill-ovos-dismissal]\(https://github.com/OpenVoiceOS/skill-ovos-dismissal\) ) Tj
1 0 0 1 50 336 Tm (transferred from @ChanceNCounter to OVOS) Tj
1 0 0 1 50 322 Tm (- May 2023 - [skill-ovos-dictation]\(https://github.com/OpenVoiceOS/skill-ovos-dictation\) ) Tj
1 0 0 1 50 308 Tm (transferred from @JarbasAl to OVOS) Tj
1 0 0 1 50 294 Tm (- Jun 2023 - Home Assistant plugin starts being maintained by community member @mikejgray) Tj
1 0 0 1 50 280 Tm (- Jun 2023 - [quebra_frases]\(https://github.com/OpenVoiceOS/quebra_frases\) transferred ) Tj
1 0 0 1 50 266 Tm (from @JarbasAl to OVOS) Tj
1 0 0 1 50 252 Tm (- Jun 2023 - [ovos-translate-plugin-nllb]\(https://github.com/OpenVoiceOS/ovos-translate-) Tj
1 0 0 1 50 238 Tm (plugin-nllb\) released) Tj
1 0 0 1 50 224 Tm (- Jun 2023 - [fasterwhisper.ziggyai.online]\(https://fasterwhisper.ziggyai.online/stt\) ) Tj
1 0 0 1 50 210 Tm (public STT server added \(large, GPU\)) Tj
1 0 0 1 50 196 Tm (- Jun 2023 - [Home Assistant Notify]\(https://blog.graywind.org/posts/ovos-homeassistant-) Tj
1 0 0 1 50 182 Tm (notify-integration/\) integration released by community member @mikejgray) Tj
1 0 0 1 50 168 Tm (- Jun 2023 - First \(and second!\) successful run of OpenVoiceOS on Windows, using WSL2 and ) Tj
1 0 0 1 50 154 Tm ([ovos-docker]\(https://github.com/openvoiceos/ovos-docker\)) Tj
1 0 0 1 50 140 Tm (- Jun 2023 - [ovos-docker-tts]\(https://github.com/OpenVoiceOS/ovos-docker-tts\) TTS ) Tj
1 0 0 1 50 126 Tm (containers released, maintained by community member @goldyfruit) Tj
1 0 0 1 50 112 Tm (- Jun 2023 - [ovos-tts-plugin-azure]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-azure\)) Tj
1 0 0 1 50 98 Tm ( released) Tj
1 0 0 1 50 84 Tm (- Jun 2023 - [ovos-utterance-corrections-plugin]\(https://github.com/OpenVoiceOS/ovos-) Tj
1 0 0 1 50 70 Tm (utterance-corrections-plugin\) released) Tj
1 0 0 1 50 56 Tm (- Jul 2023 - [mycroft-gui-qt6]\(https://github.com/OpenVoiceOS/mycroft-gui-qt6\) forked from) Tj
ET
endstream

endobj
384 0 obj
<< /Length 4230 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm ( mycroft-gui at last commit supporting QT6 before license change to GPL \(reverted shortly ) Tj
1 0 0 1 50 728 Tm (after\)) Tj
1 0 0 1 50 714 Tm (- Jul 2023 - [mycroft-gui-qt5]\(https://github.com/OpenVoiceOS/mycroft-gui-qt5\) forked from) Tj
1 0 0 1 50 700 Tm ( mycroft-gui at last commit supporting QT5) Tj
1 0 0 1 50 686 Tm (- Jul 2023 - [pipertts.ziggyai.online]\(https://pipertts.ziggyai.online\) public TTS server ) Tj
1 0 0 1 50 672 Tm (added) Tj
1 0 0 1 50 658 Tm (- Jul 2023 - [tts.smartgic.io/piper]\(https://tts.smartgic.io/piper\) public TTS server ) Tj
1 0 0 1 50 644 Tm (added) Tj
1 0 0 1 50 630 Tm (- Jul 2023 - piper TTS public servers become default OVOS voice \(alan pope\)) Tj
1 0 0 1 50 616 Tm (- Jul 2023 - [skill-ovos-spotify]\(https://github.com/OpenVoiceOS/skill-ovos-spotify\) port ) Tj
1 0 0 1 50 602 Tm (of the mycroft-spotify skill by community member and original author @forslund) Tj
1 0 0 1 50 588 Tm (- Aug 2023 - [ovos-translate-server-plugin]\(https://github.com/OpenVoiceOS/ovos-translate-) Tj
1 0 0 1 50 574 Tm (server-plugin\) released) Tj
1 0 0 1 50 560 Tm (- Aug 2023 - [ovos-docker-tx]\(https://github.com/OpenVoiceOS/ovos-docker-tx\) translation ) Tj
1 0 0 1 50 546 Tm (containers released, maintained by community member @goldyfruit) Tj
1 0 0 1 50 532 Tm (- Aug 2023 - [nllb.openvoiceos.org]\(https://nllb.openvoiceos.org\) public translation ) Tj
1 0 0 1 50 518 Tm (server added) Tj
1 0 0 1 50 504 Tm (- Aug 2023 - [translator.smartgic.io/nllb]\(https://translator.smartgic.io/nllb\) public ) Tj
1 0 0 1 50 490 Tm (translation server added) Tj
1 0 0 1 50 476 Tm (- Aug 2023 - adopt NLLB public servers as default translation plugin) Tj
1 0 0 1 50 462 Tm (- Aug 2023 - [skill-ovos-wolfie]\(https://github.com/OpenVoiceOS/skill-ovos-wolfie\) ) Tj
1 0 0 1 50 448 Tm (transferred from @JarbasAl to OVOS) Tj
1 0 0 1 50 434 Tm (- Aug 2023 - [skill-ovos-ddg]\(https://github.com/OpenVoiceOS/skill-ovos-ddg\) transferred ) Tj
1 0 0 1 50 420 Tm (from @JarbasAl to OVOS) Tj
1 0 0 1 50 406 Tm (- Aug 2023 - [skill-ovos-wikipedia]\(https://github.com/OpenVoiceOS/skill-ovos-wikipedia\) ) Tj
1 0 0 1 50 392 Tm (transferred from @JarbasAl to OVOS) Tj
1 0 0 1 50 378 Tm (- Aug 2023 - [ovos-stt-azure-plugin]\(https://github.com/OpenVoiceOS/ovos-stt-azure-plugin\)) Tj
1 0 0 1 50 364 Tm ( released) Tj
1 0 0 1 50 350 Tm (- Sep 2023 - [skill-ovos-parrot]\(https://github.com/OpenVoiceOS/skill-ovos-parrot\) ) Tj
1 0 0 1 50 336 Tm (transferred from @JarbasAl to OVOS) Tj
1 0 0 1 50 322 Tm (- Sep 2023 - [stt.smartgic.io/fasterwhisper]\(https://stt.smartgic.io/fasterwhisper\) public) Tj
1 0 0 1 50 308 Tm ( STT server \(large, GPU\)) Tj
1 0 0 1 50 294 Tm (- Sep 2023 - GUI fully functional with [ovos-docker]\(https://github.com/openvoiceos/ovos-) Tj
1 0 0 1 50 280 Tm (docker\) containers) Tj
1 0 0 1 50 266 Tm (- Sep 2023 - [persona-server]\(https://github.com/OpenVoiceOS/ovos-persona-server\) alpha ) Tj
1 0 0 1 50 252 Tm (version released) Tj
1 0 0 1 50 238 Tm (- Sep 2023 - [ovos-audio-transformer-plugin-ggwave]\(https://github.com/OpenVoiceOS/ovos-) Tj
1 0 0 1 50 224 Tm (audio-transformer-plugin-ggwave\) released) Tj
1 0 0 1 50 210 Tm (- Oct 2023 - [ovosnllb.ziggyai.online]\(https://ovosnllb.ziggyai.online\)  public ) Tj
1 0 0 1 50 196 Tm (translation server added) Tj
1 0 0 1 50 182 Tm (- Oct 2023 - [ovos-tts-plugin-mimic3-server]\(https://github.com/OpenVoiceOS/ovos-tts-) Tj
1 0 0 1 50 168 Tm (plugin-mimic3-server\) deprecated) Tj
1 0 0 1 50 154 Tm (- Oct 2023 - [ovos-PHAL-sensors]\(https://github.com/OpenVoiceOS/ovos-PHAL-sensors\) ) Tj
1 0 0 1 50 140 Tm (released, exposing OVOS sensors in Home Assistant) Tj
1 0 0 1 50 126 Tm (- Oct 2023 - [ovos-bidirectional-translation-plugin]\(https://github.com/OpenVoiceOS/ovos-) Tj
1 0 0 1 50 112 Tm (bidirectional-translation-plugin\) released) Tj
1 0 0 1 50 98 Tm (- Nov 2023 - Plasma Bigscreen [moves to QT6 and explicitly drops support for ) Tj
1 0 0 1 50 84 Tm (OVOS]\(https://invent.kde.org/plasma/plasma-) Tj
1 0 0 1 50 70 Tm (bigscreen/-/commit/05441d4b687950b6235ef466cbb9c777631618d8\)) Tj
1 0 0 1 50 56 Tm (- Dec 2023 - [ovos-installer]\(https://github.com/OpenVoiceOS/ovos-installer\) first ) Tj
ET
endstream

endobj
385 0 obj
<< /Length 4141 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (release! codename `Duke Nukem`, maintained by community member @goldyfruit) Tj
1 0 0 1 50 728 Tm (- Dec 2023 - `ovos-logs` cli tool by community member @sgee added to `ovos-utils`) Tj
1 0 0 1 50 714 Tm (- Dec 2023 - [ovos-docs-viewer]\(https://github.com/OpenVoiceOS/ovos-docs-viewer\) cli tool ) Tj
1 0 0 1 50 700 Tm (released) Tj
1 0 0 1 50 686 Tm (- Dec 2023 - [skill-ovos-spelling]\(https://github.com/OpenVoiceOS/skill-ovos-spelling\) ) Tj
1 0 0 1 50 672 Tm (forked from Mycroft) Tj
1 0 0 1 50 658 Tm (- Dec 2023 - [skill-ovos-ip]\(https://github.com/OpenVoiceOS/skill-ovos-ip\) forked from ) Tj
1 0 0 1 50 644 Tm (Mycroft) Tj
1 0 0 1 50 630 Tm (- Dec 2023 - [skill-ovos-wallpapers]\(https://github.com/OpenVoiceOS/skill-ovos-wallpapers\)) Tj
1 0 0 1 50 616 Tm ( transferred to OVOS) Tj
1 0 0 1 50 602 Tm (- Dec 2023 - [ovos-i2csound]\(https://github.com/OpenVoiceOS/ovos-i2csound\) released by ) Tj
1 0 0 1 50 588 Tm (community member @builderjer) Tj
1 0 0 1 50 574 Tm (- ??? 202? - [ovos-tts-plugin-mimic2]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-) Tj
1 0 0 1 50 560 Tm (mimic2\) deprecated) Tj
1 0 0 1 50 546 Tm (- Jan 2024 - [skill-ovos-boot-finished]\(https://github.com/OpenVoiceOS/skill-ovos-boot-) Tj
1 0 0 1 50 532 Tm (finished\) forked from Neon) Tj
1 0 0 1 50 518 Tm (- Jan 2024 - [skill-ovos-audio-recording]\(https://github.com/OpenVoiceOS/skill-ovos-audio-) Tj
1 0 0 1 50 504 Tm (recording\) forked from Neon) Tj
1 0 0 1 50 490 Tm (- Jan 2024 - [ovos-utterance-plugin-cancel]\(https://github.com/OpenVoiceOS/ovos-utterance-) Tj
1 0 0 1 50 476 Tm (plugin-cancel\) forked from Neon, deprecates dismissal skill) Tj
1 0 0 1 50 462 Tm (- Jan 2024 - [ovos-mark1-utils]\(https://github.com/OpenVoiceOS/ovos-mark1-utils\) released) Tj
1 0 0 1 50 448 Tm (- Jan 2024 - Mycroft forums move to [Open Conversational ) Tj
1 0 0 1 50 434 Tm (AI]\(https://community.openconversational.ai/\)) Tj
1 0 0 1 50 420 Tm (- Jan 2024 - [ovos-vad-plugin-noise]\(https://github.com/OpenVoiceOS/ovos-vad-plugin-noise\)) Tj
1 0 0 1 50 406 Tm ( released to support older platforms) Tj
1 0 0 1 50 392 Tm (- Feb 2024 - [ovos-tts-plugin-edge-tts]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-) Tj
1 0 0 1 50 378 Tm (edge-tts\) released) Tj
1 0 0 1 50 364 Tm (- Feb 2024 - Selene servers and Mycroft AI website [go ) Tj
1 0 0 1 50 350 Tm (down]\(https://community.openconversational.ai/t/mycroft-servers-down-any-quick-and-dirty-) Tj
1 0 0 1 50 336 Tm (trick/\)) Tj
1 0 0 1 50 322 Tm (- Feb 2024 - [skill-ovos-randomness]\(https://github.com/OpenVoiceOS/skill-ovos-randomness\)) Tj
1 0 0 1 50 308 Tm ( released, maintained by community member @mikejgray) Tj
1 0 0 1 50 294 Tm (- Feb 2024 - [OVOSHatchery]\(https://github.com/OVOSHatchery\) created to incubate new ) Tj
1 0 0 1 50 280 Tm (projects) Tj
1 0 0 1 50 266 Tm (- Feb 2024 - @Chance leaves OpenVoiceOS) Tj
1 0 0 1 50 252 Tm (- Feb 2024 - [skill-ovos-wordnet]\(https://github.com/OpenVoiceOS/skill-ovos-wordnet\) ) Tj
1 0 0 1 50 238 Tm (released) Tj
1 0 0 1 50 224 Tm (- Mar 2024 - Community Mycroft [skills updated to ) Tj
1 0 0 1 50 210 Tm (OVOS]\(https://github.com/orgs/OVOSHatchery/repositories?type=fork&q=skill\) under ) Tj
1 0 0 1 50 196 Tm (OVOSHatchery) Tj
1 0 0 1 50 182 Tm (- Mar 2024 - [OVOS Skill Store]\(https://openvoiceos.github.io/OVOS-skills-store\) released!) Tj
1 0 0 1 50 168 Tm (- Mar 2024 - [Hatchery Skill Store]\(https://ovoshatchery.github.io/OVOS-Hatchery-skills\) ) Tj
1 0 0 1 50 154 Tm (released!) Tj
1 0 0 1 50 140 Tm (- Mar 2024 - First successful run of OpenVoiceOS natively on Mac OS with Apple Silicon) Tj
1 0 0 1 50 126 Tm (- Mar 2024 - [ovos-installer]\(https://github.com/OpenVoiceOS/ovos-installer\) second ) Tj
1 0 0 1 50 112 Tm (release, codename `Doom` supports Mark II device, maintained by community member ) Tj
1 0 0 1 50 98 Tm (@goldyfruit) Tj
1 0 0 1 50 84 Tm (- Apr 2024 - [Mark 2 demo]\(https://community.openconversational.ai/t/open-voice-os-) Tj
1 0 0 1 50 70 Tm (running-on-a-mark-ii-with-its-local-ai-running-mistral/14572\) running Open Voice OS ) Tj
1 0 0 1 50 56 Tm (connected to a local A.I.) Tj
ET
endstream

endobj
386 0 obj
<< /Length 2723 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (- Apr 2024 - First successful run of [HiveMind ) Tj
1 0 0 1 50 728 Tm (Satellite]\(https://github.com/JarbasHiveMind/HiveMind-voice-sat\) on Mark 1 device) Tj
1 0 0 1 50 714 Tm (- Jun 2024 - [First successful run of OpenVoiceOS natively on ) Tj
1 0 0 1 50 700 Tm (Windows]\(https://github.com/mikejgray/ovos-windows\): ) Tj
1 0 0 1 50 686 Tm (https://drive.google.com/file/d/171801mbhbpG79BvlOlUCxVyMPcDGgnbM/view?usp=sharing) Tj
1 0 0 1 50 672 Tm (- Near Future - `ovos-core` version **0.0.8** released) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (# docs/100-bus_service.md) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (# Bus Service) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (The **Message Bus** is the internal communication layer used by OVOS to allow independent ) Tj
1 0 0 1 50 560 Tm (components to interact using structured messages. It acts as a central nervous system, ) Tj
1 0 0 1 50 546 Tm (coordinating everything from speech recognition to skill execution.) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (---) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (## Overview) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (In the OVOS ecosystem, the messagebus is implemented as a **WebSocket** interface. ) Tj
1 0 0 1 50 448 Tm (Messages follow a structured format containing:) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (- A `type`: identifying the intent or action) Tj
1 0 0 1 50 406 Tm (- An optional `data` payload \(JSON\)) Tj
1 0 0 1 50 392 Tm (- An optional `context` dictionary for session or routing metadata) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (Some messages trigger actions; others act as notifications or state broadcasts. Both core ) Tj
1 0 0 1 50 350 Tm (OVOS components and external systems \(e.g., ) Tj
1 0 0 1 50 336 Tm ([HiveMind]\(https://jarbashivemind.github.io/HiveMind-community-docs\)\) can interact with ) Tj
1 0 0 1 50 322 Tm (the bus.) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (---) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (## Configuration) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (The messagebus is configured in `mycroft.conf` under the `websocket` section:) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (```json) Tj
1 0 0 1 50 196 Tm ("websocket": {) Tj
1 0 0 1 50 182 Tm (    "host": "127.0.0.1",) Tj
1 0 0 1 50 168 Tm (    "port": 8181,) Tj
1 0 0 1 50 154 Tm (    "route": "/core",) Tj
1 0 0 1 50 140 Tm (    "shared_connection": true) Tj
1 0 0 1 50 126 Tm (}) Tj
1 0 0 1 50 112 Tm (```) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (> It is **strongly recommended** to keep the `host` set to `127.0.0.1` to prevent ) Tj
1 0 0 1 50 70 Tm (unauthorized remote access.) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
387 0 obj
<< /Length 2670 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (---) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (## Security) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (By default, all skills share a single bus connection. This can be exploited by malicious ) Tj
1 0 0 1 50 672 Tm (or poorly designed skills to interfere with others.) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (- To improve isolation, set `"shared_connection": false`. This ensures each skill uses a ) Tj
1 0 0 1 50 630 Tm (separate WebSocket connection.) Tj
1 0 0 1 50 616 Tm (- For a demonstration of potential vulnerabilities, see ) Tj
1 0 0 1 50 602 Tm ([BusBrickerSkill]\(https://github.com/EvilJarbas/BusBrickerSkill\).) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (Security concerns are further documented in [Nhoya/MycroftAI-) Tj
1 0 0 1 50 560 Tm (RCE]\(https://github.com/Nhoya/MycroftAI-RCE\).) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (> ?? Never expose the messagebus to the public internet. It provides full control over the) Tj
1 0 0 1 50 518 Tm ( OVOS instance and the host system.) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (> ? For remote interaction, use [HiveMind]\(https://openvoiceos.github.io/community-) Tj
1 0 0 1 50 476 Tm (docs/friends/#hivemind\), which offers secure proxy access to the bus.) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (---) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (## Message Structure) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (Each message sent on the bus consists of:) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (```json) Tj
1 0 0 1 50 350 Tm ({) Tj
1 0 0 1 50 336 Tm (    "type": "message.type",) Tj
1 0 0 1 50 322 Tm (    "data": { /* arbitrary JSON payload */ },) Tj
1 0 0 1 50 308 Tm (    "context": { /* optional metadata */ }) Tj
1 0 0 1 50 294 Tm (}) Tj
1 0 0 1 50 280 Tm (```) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (- `type`: Identifies the message \(e.g., `"recognizer_loop:utterance"`\)) Tj
1 0 0 1 50 238 Tm (- `data`: Carries command-specific information) Tj
1 0 0 1 50 224 Tm (- `context`: Session and routing information, used internally) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (For a complete index of known OVOS messages, refer to the [Message Spec ) Tj
1 0 0 1 50 182 Tm (documentation]\(https://openvoiceos.github.io/message_spec/\).) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (---) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (## Sessions) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (Messages can carry a `"session"` key inside their `context` to preserve request-specific ) Tj
1 0 0 1 50 84 Tm (state and user preferences. Sessions help enable:) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (- Multi-user support) Tj
ET
endstream

endobj
388 0 obj
<< /Length 2812 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (- Conversational context) Tj
1 0 0 1 50 728 Tm (- Remote device handling) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (Example session fields include:) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (- Language and location) Tj
1 0 0 1 50 658 Tm (- TTS/STT preferences) Tj
1 0 0 1 50 644 Tm (- Active skills and follow-up intents) Tj
1 0 0 1 50 630 Tm (- Pipeline settings) Tj
1 0 0 1 50 616 Tm (- Site or device ID) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (Sessions are typically auto-managed by `ovos-core` for local interactions using the ) Tj
1 0 0 1 50 574 Tm (default session ID \(`"default"`\). External clients \(e.g., HiveMind voice satellites\) are ) Tj
1 0 0 1 50 560 Tm (expected to manage their own sessions.) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (See the [Session-Aware Skills]\(https://openvoiceos.github.io/ovos-technical-) Tj
1 0 0 1 50 518 Tm (manual/session_skills/\) documentation for implementation guidelines.) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (> ?? Skills that are not session-aware may behave unexpectedly when used with external ) Tj
1 0 0 1 50 476 Tm (voice clients.) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (---) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (## Message Targeting and Routing) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (OVOS uses `context["source"]` and `context["destination"]` to enable smart message routing) Tj
1 0 0 1 50 364 Tm ( across components and external devices.) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (The `Message` object includes utility methods:) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (- `.forward\(\)`: Sends the message onward while preserving the current context) Tj
1 0 0 1 50 294 Tm (- `.reply\(\)`: Sends a response back to the original source \(swapping source/destination\)) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (Example:) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (```python) Tj
1 0 0 1 50 224 Tm (bus.emit\(Message\('recognizer_loop:utterance', data, ) Tj
1 0 0 1 50 210 Tm (    context={) Tj
1 0 0 1 50 196 Tm (        'destination': ['audio', 'kde'],) Tj
1 0 0 1 50 182 Tm (        'source': 'remote_service') Tj
1 0 0 1 50 168 Tm (    }\)\)) Tj
1 0 0 1 50 154 Tm (```) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (OVOS itself does not implement any actual routing, everything connected to the ovos ) Tj
1 0 0 1 50 112 Tm (messagebus receives every message, however this metadata enables 3rd party applications to) Tj
1 0 0 1 50 98 Tm ( fully manage these messages and decide if and where to send them) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (> ? [HiveMind]\(https://jarbashivemind.github.io/HiveMind-community-docs/\) uses these ) Tj
1 0 0 1 50 56 Tm (fields extensively to direct replies to the correct satellite.) Tj
ET
endstream

endobj
389 0 obj
<< /Length 2895 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (---) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (## Internal Routing Overview) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (![OVOS Message Flow Diagram]\(https://github.com/OpenVoiceOS/ovos-technical-) Tj
1 0 0 1 50 658 Tm (manual/assets/33701864/df9aa669-ce7f-430e-b4db-f57200e75332\)) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (- The Intent Service replies directly to utterance messages.) Tj
1 0 0 1 50 616 Tm (- Skill and intent interactions use `.forward\(\)` to retain context.) Tj
1 0 0 1 50 602 Tm (- Skills sending their own events should manually manage routing.) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (# docs/101-speech_service.md) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (# Listener Service) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (The listener service is responsible for handling audio input, it understands speech and ) Tj
1 0 0 1 50 490 Tm (converts it into `utterances` to) Tj
1 0 0 1 50 476 Tm (be handled by `ovos-core`) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (Different implementations of the listener service have been available during the years) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (- [mycroft-classic-listener]\(https://github.com/OpenVoiceOS/mycroft-classic-listener\) the ) Tj
1 0 0 1 50 406 Tm (original listener from mycroft) Tj
1 0 0 1 50 392 Tm (  mark1 extracted into a standalone component - **archived**) Tj
1 0 0 1 50 378 Tm (- [ovos-listener]\(https://github.com/OpenVoiceOS/ovos-listener\) - an updated version of ) Tj
1 0 0 1 50 364 Tm (the mycroft listener with VAD) Tj
1 0 0 1 50 350 Tm (  plugins and multiple hotwords support - **deprecated** in `ovos-core` version **0.0.8**) Tj
1 0 0 1 50 336 Tm (- [ovos-dinkum-listener]\(https://github.com/OpenVoiceOS/ovos-dinkum-listener\) - a listener) Tj
1 0 0 1 50 322 Tm ( rewrite based) Tj
1 0 0 1 50 308 Tm (  on [mycroft-dinkum]\(https://github.com/MycroftAI/mycroft-dinkum\) - **NEW** in `ovos-core) Tj
1 0 0 1 50 294 Tm ( `version **0.0.8**) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (## Listener) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (You can modify microphone settings and enable additional features under the listener ) Tj
1 0 0 1 50 224 Tm (section such as wake word /) Tj
1 0 0 1 50 210 Tm (utterance recording / uploading) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (```javascript) Tj
1 0 0 1 50 168 Tm ("listener": {) Tj
1 0 0 1 50 154 Tm (  // NOTE, multiple hotwords are supported, these fields define the main wake_word,) Tj
1 0 0 1 50 140 Tm (  // this is equivalent to setting "active": true in the "hotwords" section) Tj
1 0 0 1 50 126 Tm (  "wake_word": "hey_mycroft",) Tj
1 0 0 1 50 112 Tm (  "stand_up_word": "wake_up",) Tj
1 0 0 1 50 98 Tm (  ) Tj
1 0 0 1 50 84 Tm (  "microphone": {...},) Tj
1 0 0 1 50 70 Tm (  ) Tj
1 0 0 1 50 56 Tm (  "VAD": {...},) Tj
ET
endstream

endobj
390 0 obj
<< /Length 2642 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (  ) Tj
1 0 0 1 50 728 Tm (  // Seconds of speech before voice command has begun) Tj
1 0 0 1 50 714 Tm (  "speech_begin": 0.1,) Tj
1 0 0 1 50 700 Tm (  // Seconds of silence before a voice command has finished) Tj
1 0 0 1 50 686 Tm (  "silence_end": 0.5,) Tj
1 0 0 1 50 672 Tm (  // Settings used by microphone to set recording timeout with and without speech detected) Tj
1 0 0 1 50 658 Tm (  "recording_timeout": 10.0,) Tj
1 0 0 1 50 644 Tm (  // Settings used by microphone to set recording timeout without speech detected.) Tj
1 0 0 1 50 630 Tm (  "recording_timeout_with_silence": 3.0,) Tj
1 0 0 1 50 616 Tm (  ) Tj
1 0 0 1 50 602 Tm (  // Setting to remove all silence/noise from start and end of recorded speech \(only non-) Tj
1 0 0 1 50 588 Tm (streaming\)) Tj
1 0 0 1 50 574 Tm (  "remove_silence": true) Tj
1 0 0 1 50 560 Tm (}) Tj
1 0 0 1 50 546 Tm (```) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (## Microphone) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (**NEW** in `ovos-core` version **0.0.8**) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (Microphone plugins are responsible for feeding audio to the listener, different Operating ) Tj
1 0 0 1 50 448 Tm (Systems may require different) Tj
1 0 0 1 50 434 Tm (plugins or otherwise have performance benefits) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (```javascript) Tj
1 0 0 1 50 392 Tm ("listener": {) Tj
1 0 0 1 50 378 Tm (  "microphone": {) Tj
1 0 0 1 50 364 Tm (    "module": "ovos-microphone-plugin-alsa") Tj
1 0 0 1 50 350 Tm (  }) Tj
1 0 0 1 50 336 Tm (}) Tj
1 0 0 1 50 322 Tm (```) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (## Hotwords) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (By default the listener is waiting for a hotword to do something in response) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (the most common usage of a hotword is as the assistant's name, instead of continuously ) Tj
1 0 0 1 50 210 Tm (transcribing audio the listener) Tj
1 0 0 1 50 196 Tm (waits for a wake word, and then listens to the user speaking) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (OVOS allows you to load any number of hot words in parallel and trigger different actions ) Tj
1 0 0 1 50 154 Tm (when they are detected) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (each hotword can do one or more of the following:) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (- trigger listening, also called a **wake_word**) Tj
1 0 0 1 50 84 Tm (- play a sound) Tj
1 0 0 1 50 70 Tm (- emit a bus event) Tj
1 0 0 1 50 56 Tm (- take ovos-core out of sleep mode, also called a **wakeup_word** or **standup_word**) Tj
ET
endstream

endobj
391 0 obj
<< /Length 2762 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (- take ovos-core out of recording mode, also called a **stop_word**) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (To add a new hotword add its configuration under "hotwords" section.) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (By default, all hotwords are disabled unless you set `"active": true`.) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (Under the `"listener"` setting a main wake word and stand up word are defined, those will ) Tj
1 0 0 1 50 644 Tm (be automatically enabled) Tj
1 0 0 1 50 630 Tm (unless you set `"active": false`.) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (Users are expected to **only change** `listener.wake_word` if using a single wake word, ) Tj
1 0 0 1 50 588 Tm (setting `"active": true` is only) Tj
1 0 0 1 50 574 Tm (intended for **extra** hotwords) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (```javascript) Tj
1 0 0 1 50 532 Tm ("listener": {) Tj
1 0 0 1 50 518 Tm (    // Default wake_word and stand_up_word will be automatically set to active) Tj
1 0 0 1 50 504 Tm (    // unless explicitly disabled under "hotwords" section) Tj
1 0 0 1 50 490 Tm (    "wake_word": "hey mycroft",) Tj
1 0 0 1 50 476 Tm (    "stand_up_word": "wake up") Tj
1 0 0 1 50 462 Tm (},) Tj
1 0 0 1 50 448 Tm (// Hotword configurations) Tj
1 0 0 1 50 434 Tm ("hotwords": {) Tj
1 0 0 1 50 420 Tm (    "hey_mycroft": {) Tj
1 0 0 1 50 406 Tm (        "module": "ovos-ww-plugin-precise-lite",) Tj
1 0 0 1 50 392 Tm (        "model": "https://github.com/OpenVoiceOS/precise-lite-) Tj
1 0 0 1 50 378 Tm (models/raw/master/wakewords/en/hey_mycroft.tflite",) Tj
1 0 0 1 50 364 Tm (        "expected_duration": 3,) Tj
1 0 0 1 50 350 Tm (        "trigger_level": 3,) Tj
1 0 0 1 50 336 Tm (        "sensitivity": 0.5,) Tj
1 0 0 1 50 322 Tm (        "listen": true) Tj
1 0 0 1 50 308 Tm (    },) Tj
1 0 0 1 50 294 Tm (    // default wakeup word to take ovos out of SLEEPING mode,) Tj
1 0 0 1 50 280 Tm (    "wake_up": {) Tj
1 0 0 1 50 266 Tm (        "module": "ovos-ww-plugin-pocketsphinx",) Tj
1 0 0 1 50 252 Tm (        "phonemes": "W EY K . AH P",) Tj
1 0 0 1 50 238 Tm (        "threshold": 1e-20,) Tj
1 0 0 1 50 224 Tm (        "lang": "en-us",) Tj
1 0 0 1 50 210 Tm (        "wakeup": true,) Tj
1 0 0 1 50 196 Tm (        "fallback_ww": "wake_up_vosk") Tj
1 0 0 1 50 182 Tm (    }) Tj
1 0 0 1 50 168 Tm (}) Tj
1 0 0 1 50 154 Tm (```) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (### Sound Classifiers) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (hotwords can be used as generic sound classifiers that emit bus events for other systems ) Tj
1 0 0 1 50 84 Tm (to detect) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (Let's consider a model trained to recognize coughing, and a companion plugin to track how ) Tj
ET
endstream

endobj
392 0 obj
<< /Length 2431 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (often it happens, this can be used as an indicator of disease) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (```javascript) Tj
1 0 0 1 50 700 Tm ("hotwords": {) Tj
1 0 0 1 50 686 Tm (    "cough": {) Tj
1 0 0 1 50 672 Tm (        "module": "ovos-ww-plugin-precise",) Tj
1 0 0 1 50 658 Tm (        "version": "0.3",) Tj
1 0 0 1 50 644 Tm (        "model": "https://github.com/MycroftAI/precise-data/blob/models-dev/cough.tar.gz",) Tj
1 0 0 1 50 630 Tm (        "expected_duration": 3,) Tj
1 0 0 1 50 616 Tm (        "trigger_level": 3,) Tj
1 0 0 1 50 602 Tm (        "sensitivity": 0.5,) Tj
1 0 0 1 50 588 Tm (        "listen": false,) Tj
1 0 0 1 50 574 Tm (        "active": true,) Tj
1 0 0 1 50 560 Tm (        // on detection emit this msg_type) Tj
1 0 0 1 50 546 Tm (        "bus_event": "cough.detected") Tj
1 0 0 1 50 532 Tm (    }) Tj
1 0 0 1 50 518 Tm (}) Tj
1 0 0 1 50 504 Tm (```) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (### Multilingualism) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (In multilingual homes a wake word can be configured for each language, by giving the ) Tj
1 0 0 1 50 434 Tm (assistant a different name in each we can assign a language to be used by STT) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (```javascript) Tj
1 0 0 1 50 392 Tm ("listener": {) Tj
1 0 0 1 50 378 Tm (    "wake_word": "hey mycroft") Tj
1 0 0 1 50 364 Tm (},) Tj
1 0 0 1 50 350 Tm ("hotwords": {) Tj
1 0 0 1 50 336 Tm (  // default wake word, in global language) Tj
1 0 0 1 50 322 Tm (  "hey_mycroft": {...},   ) Tj
1 0 0 1 50 308 Tm (  // extra wake word with lang assigned) Tj
1 0 0 1 50 294 Tm (  "android": {) Tj
1 0 0 1 50 280 Tm (      "module": "...",) Tj
1 0 0 1 50 266 Tm (      "model": "...",) Tj
1 0 0 1 50 252 Tm (      // set to active as extra wake word) Tj
1 0 0 1 50 238 Tm (      "active": true,) Tj
1 0 0 1 50 224 Tm (      "listen": true,) Tj
1 0 0 1 50 210 Tm (      // assign a language) Tj
1 0 0 1 50 196 Tm (      "stt_lang": "pt-pt") Tj
1 0 0 1 50 182 Tm (  }) Tj
1 0 0 1 50 168 Tm (}) Tj
1 0 0 1 50 154 Tm (```) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (### Fallback Wake Words) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (**NEW** in `ovos-core` version **0.0.8**) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (hotword definitions can also include a `"fallback_ww"`, this indicates an alternative ) Tj
1 0 0 1 50 56 Tm (hotword config to load in case the) Tj
ET
endstream

endobj
393 0 obj
<< /Length 2927 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (original failed to load for any reason) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (```javascript) Tj
1 0 0 1 50 700 Tm ("listener": {) Tj
1 0 0 1 50 686 Tm (    // Default wake_word and stand_up_word will be automatically set to active) Tj
1 0 0 1 50 672 Tm (    // unless explicitly disabled under "hotwords" section) Tj
1 0 0 1 50 658 Tm (    "wake_word": "hey mycroft",) Tj
1 0 0 1 50 644 Tm (    "stand_up_word": "wake up") Tj
1 0 0 1 50 630 Tm (},) Tj
1 0 0 1 50 616 Tm (// Hotword configurations) Tj
1 0 0 1 50 602 Tm ("hotwords": {) Tj
1 0 0 1 50 588 Tm (    "hey_mycroft": {) Tj
1 0 0 1 50 574 Tm (        "module": "ovos-ww-plugin-precise-lite",) Tj
1 0 0 1 50 560 Tm (        "model": "https://github.com/OpenVoiceOS/precise-lite-) Tj
1 0 0 1 50 546 Tm (models/raw/master/wakewords/en/hey_mycroft.tflite",) Tj
1 0 0 1 50 532 Tm (        "expected_duration": 3,) Tj
1 0 0 1 50 518 Tm (        "trigger_level": 3,) Tj
1 0 0 1 50 504 Tm (        "sensitivity": 0.5,) Tj
1 0 0 1 50 490 Tm (        "listen": true,) Tj
1 0 0 1 50 476 Tm (        "fallback_ww": "hey_mycroft_precise") Tj
1 0 0 1 50 462 Tm (    },) Tj
1 0 0 1 50 448 Tm (    // in case precise-lite is not installed, attempt to use classic precise) Tj
1 0 0 1 50 434 Tm (    "hey_mycroft_precise": {) Tj
1 0 0 1 50 420 Tm (        "module": "ovos-ww-plugin-precise",) Tj
1 0 0 1 50 406 Tm (        "version": "0.3",) Tj
1 0 0 1 50 392 Tm (        "model": "https://github.com/MycroftAI/precise-data/raw/models-dev/hey-) Tj
1 0 0 1 50 378 Tm (mycroft.tar.gz",) Tj
1 0 0 1 50 364 Tm (        "expected_duration": 3,) Tj
1 0 0 1 50 350 Tm (        "trigger_level": 3,) Tj
1 0 0 1 50 336 Tm (        "sensitivity": 0.5,) Tj
1 0 0 1 50 322 Tm (        "listen": true,) Tj
1 0 0 1 50 308 Tm (        "fallback_ww": "hey_mycroft_vosk") Tj
1 0 0 1 50 294 Tm (    },) Tj
1 0 0 1 50 280 Tm (    // in case classic precise is not installed, attempt to use vosk) Tj
1 0 0 1 50 266 Tm (    "hey_mycroft_vosk": {) Tj
1 0 0 1 50 252 Tm (        "module": "ovos-ww-plugin-vosk",) Tj
1 0 0 1 50 238 Tm (        "samples": ["hey mycroft", "hey microsoft", "hey mike roft", "hey minecraft"],) Tj
1 0 0 1 50 224 Tm (        "rule": "fuzzy",) Tj
1 0 0 1 50 210 Tm (        "listen": true,) Tj
1 0 0 1 50 196 Tm (        "fallback_ww": "hey_mycroft_pocketsphinx") Tj
1 0 0 1 50 182 Tm (    },) Tj
1 0 0 1 50 168 Tm (    // in case vosk is not installed, attempt to use pocketsphinx) Tj
1 0 0 1 50 154 Tm (    "hey_mycroft_pocketsphinx": {) Tj
1 0 0 1 50 140 Tm (        "module": "ovos-ww-plugin-pocketsphinx",) Tj
1 0 0 1 50 126 Tm (        "phonemes": "HH EY . M AY K R AO F T",) Tj
1 0 0 1 50 112 Tm (        "threshold": 1e-90,) Tj
1 0 0 1 50 98 Tm (        "lang": "en-us",) Tj
1 0 0 1 50 84 Tm (        "listen": true) Tj
1 0 0 1 50 70 Tm (    },) Tj
1 0 0 1 50 56 Tm (    // default wakeup word to take ovos out of SLEEPING mode,) Tj
ET
endstream

endobj
394 0 obj
<< /Length 2501 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (    "wake_up": {) Tj
1 0 0 1 50 728 Tm (        "module": "ovos-ww-plugin-pocketsphinx",) Tj
1 0 0 1 50 714 Tm (        "phonemes": "W EY K . AH P",) Tj
1 0 0 1 50 700 Tm (        "threshold": 1e-20,) Tj
1 0 0 1 50 686 Tm (        "lang": "en-us",) Tj
1 0 0 1 50 672 Tm (        "wakeup": true,) Tj
1 0 0 1 50 658 Tm (        "fallback_ww": "wake_up_vosk") Tj
1 0 0 1 50 644 Tm (    },) Tj
1 0 0 1 50 630 Tm (    // in case pocketsphinx plugin is not installed, attempt to use vosk) Tj
1 0 0 1 50 616 Tm (    "wake_up_vosk": {) Tj
1 0 0 1 50 602 Tm (        "module": "ovos-ww-plugin-vosk",) Tj
1 0 0 1 50 588 Tm (        "rule": "fuzzy",) Tj
1 0 0 1 50 574 Tm (        "samples": ["wake up"],) Tj
1 0 0 1 50 560 Tm (        "lang": "en-us",) Tj
1 0 0 1 50 546 Tm (        // makes this a wakeup word for usage in SLEEPING mode) Tj
1 0 0 1 50 532 Tm (        "wakeup": true) Tj
1 0 0 1 50 518 Tm (    }) Tj
1 0 0 1 50 504 Tm (}) Tj
1 0 0 1 50 490 Tm (```) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (## VAD) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (Voice Activity Detection plugins have several functions under the listener service) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (- detect when user finished speaking) Tj
1 0 0 1 50 378 Tm (- remove silence before sending audio to `STT` - **NEW** in `ovos-core` version **0.0.8**) Tj
1 0 0 1 50 364 Tm (- detect when user is speaking during `continuous mode` \(read below\)) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (```javascript) Tj
1 0 0 1 50 294 Tm ("listener": {  ) Tj
1 0 0 1 50 280 Tm (  // Setting to remove all silence/noise from start and end of recorded speech \(only non-) Tj
1 0 0 1 50 266 Tm (streaming\)) Tj
1 0 0 1 50 252 Tm (  "remove_silence": true,) Tj
1 0 0 1 50 238 Tm (  ) Tj
1 0 0 1 50 224 Tm (  "VAD": {) Tj
1 0 0 1 50 210 Tm (     // recommended plugin: "ovos-vad-plugin-silero") Tj
1 0 0 1 50 196 Tm (     "module": "ovos-vad-plugin-silero",) Tj
1 0 0 1 50 182 Tm (     "ovos-vad-plugin-silero": {"threshold": 0.2},) Tj
1 0 0 1 50 168 Tm (     "ovos-vad-plugin-webrtcvad": {"vad_mode": 3}) Tj
1 0 0 1 50 154 Tm (  }) Tj
1 0 0 1 50 140 Tm (}) Tj
1 0 0 1 50 126 Tm (```) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (## STT) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (Two STT plugins may be loaded at once, if the primary plugin fails for some reason the ) Tj
1 0 0 1 50 56 Tm (second plugin will be used.) Tj
ET
endstream

endobj
395 0 obj
<< /Length 2675 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (This allows you to have a lower accuracy offline model as fallback to account for internet) Tj
1 0 0 1 50 714 Tm ( outages, this ensures your) Tj
1 0 0 1 50 700 Tm (device never becomes fully unusable) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (```javascript) Tj
1 0 0 1 50 658 Tm ("stt": {) Tj
1 0 0 1 50 644 Tm (    "module": "ovos-stt-plugin-server",) Tj
1 0 0 1 50 630 Tm (    "fallback_module": "ovos-stt-plugin-vosk",) Tj
1 0 0 1 50 616 Tm (    "ovos-stt-plugin-server": {"url": "https://stt.openvoiceos.com/stt"}) Tj
1 0 0 1 50 602 Tm (},) Tj
1 0 0 1 50 588 Tm (```) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (## Audio Transformers) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (**NEW** in `ovos-core` version **0.0.8**, originally developed for ) Tj
1 0 0 1 50 518 Tm ([Neon]\(https://github.com/NeonGeckoCom/neon-transformers\)) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (Similarly to utterance transformers in `ovos-core`, the listener exposes audio and ) Tj
1 0 0 1 50 476 Tm (message.`context` to a set of plugins) Tj
1 0 0 1 50 462 Tm (that can transform it before STT stage) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (Audio transformer plugins can either transform the audio binary data itself \(eg, denoise\) ) Tj
1 0 0 1 50 420 Tm (or the `context` \(eg, speaker) Tj
1 0 0 1 50 406 Tm (recognition\)) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (The audio is sent sequentially to all transformer plugins, ordered by priority \(developer ) Tj
1 0 0 1 50 364 Tm (defined\), until finally it is) Tj
1 0 0 1 50 350 Tm (sent to the STT stage) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (![imagem]\(https://github.com/OpenVoiceOS/ovos-technical-) Tj
1 0 0 1 50 308 Tm (manual/assets/33701864/ae428a90-fc7e-4ca7-81d5-fa1d9bbfb885\)) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (## Modes of Operation) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (There are 3 modes to run dinkum, wakeword, hybrid, or continuous \(VAD only\)) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (Additionally, there are 2 temporary modes that can be triggered via bus events / companion) Tj
1 0 0 1 50 196 Tm ( skills) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (### Wake Word mode) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (![imagem]\(https://github.com/OpenVoiceOS/ovos-dinkum-) Tj
1 0 0 1 50 126 Tm (listener/assets/33701864/c55388dc-a7fb-4857-9c35-f4a4223c4145\)) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (### Sleep mode) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (Can be used via [Naptime skill]\(https://github.com/OpenVoiceOS/skill-ovos-naptime\)) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
396 0 obj
<< /Length 2570 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (![imagem]\(https://github.com/OpenVoiceOS/ovos-dinkum-) Tj
1 0 0 1 50 728 Tm (listener/assets/33701864/24835210-2116-4080-8c2b-fc18eecd923a\)) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (Be sure to enable a wakeup word to get out of sleep!) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (```javascript) Tj
1 0 0 1 50 658 Tm ("listener": {) Tj
1 0 0 1 50 644 Tm (    "stand_up_word": "wake up") Tj
1 0 0 1 50 630 Tm (},) Tj
1 0 0 1 50 616 Tm ("hotwords": {) Tj
1 0 0 1 50 602 Tm (    "wake up": {) Tj
1 0 0 1 50 588 Tm (        "module": "ovos-ww-plugin-pocketsphinx",) Tj
1 0 0 1 50 574 Tm (        "phonemes": "W EY K . AH P",) Tj
1 0 0 1 50 560 Tm (        "threshold": 1e-20,) Tj
1 0 0 1 50 546 Tm (        "lang": "en-us",) Tj
1 0 0 1 50 532 Tm (        "wakeup": true) Tj
1 0 0 1 50 518 Tm (    }) Tj
1 0 0 1 50 504 Tm (}) Tj
1 0 0 1 50 490 Tm (```) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (### Continuous mode) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (**EXPERIMENTAL** - **NEW** in `ovos-core` version **0.0.8**) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (![imagem]\(https://github.com/OpenVoiceOS/ovos-dinkum-) Tj
1 0 0 1 50 392 Tm (listener/assets/33701864/c8820161-9cb8-433f-9380-6d07965c7fa5\)) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (```javascript) Tj
1 0 0 1 50 350 Tm ("listener": {) Tj
1 0 0 1 50 336 Tm (  // continuous listen is an experimental setting, it removes the need for) Tj
1 0 0 1 50 322 Tm (  // wake words and uses VAD only, a streaming STT is strongly recommended) Tj
1 0 0 1 50 308 Tm (  // NOTE: depending on hardware this may cause mycroft to hear its own TTS responses as ) Tj
1 0 0 1 50 294 Tm (questions) Tj
1 0 0 1 50 280 Tm (  "continuous_listen": false) Tj
1 0 0 1 50 266 Tm (}) Tj
1 0 0 1 50 252 Tm (```) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (### Hybrid mode) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (**EXPERIMENTAL** - **NEW** in `ovos-core` version **0.0.8**) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (![imagem]\(https://github.com/OpenVoiceOS/ovos-dinkum-) Tj
1 0 0 1 50 154 Tm (listener/assets/33701864/b9012663-4f00-47a9-bac4-8b08392da12c\)) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (```javascript) Tj
1 0 0 1 50 112 Tm ("listener": {) Tj
1 0 0 1 50 98 Tm (  // hybrid listen is an experimental setting,) Tj
1 0 0 1 50 84 Tm (  // it will not require a wake word for X seconds after a user interaction) Tj
1 0 0 1 50 70 Tm (  // this means you dont need to say "hey mycroft" for follow up questions) Tj
1 0 0 1 50 56 Tm (  "hybrid_listen": false,) Tj
ET
endstream

endobj
397 0 obj
<< /Length 2747 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (  // number of seconds to wait for an interaction before requiring wake word again) Tj
1 0 0 1 50 728 Tm (  "listen_timeout": 45) Tj
1 0 0 1 50 714 Tm (}) Tj
1 0 0 1 50 700 Tm (```) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (### Recording mode) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (**EXPERIMENTAL** - **NEW** in `ovos-core` version **0.0.8**) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (Can be used via [Recording skill]\(https://github.com/OpenVoiceOS/skill-ovos-audio-) Tj
1 0 0 1 50 602 Tm (recording\)) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (![imagem]\(https://github.com/OpenVoiceOS/ovos-dinkum-) Tj
1 0 0 1 50 560 Tm (listener/assets/33701864/0337b499-3175-4031-a83f-eda352d2197f\)) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (# docs/102-core.md) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (# ovos-core) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm ([OpenVoiceOS]\(https://openvoiceos.org\) is an open source platform for smart speakers and ) Tj
1 0 0 1 50 434 Tm (other voice-centric devices.) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (OpenVoiceOS is fully modular. Furthermore, common components have been repackaged as ) Tj
1 0 0 1 50 392 Tm (plugins. That means it isn't just a) Tj
1 0 0 1 50 378 Tm (great assistant on its own, but also a pretty small library!) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (`ovos-core` contains "the brains" of OpenVoiceOS, all the NLP components and skills are ) Tj
1 0 0 1 50 336 Tm (managed here) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (## Skills Service) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (The skills service is responsible for loading skills and intent parsers) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (All user queries are handled by the skills service, you can think of it as OVOS's brain) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (All Mycroft Skills should work normally with `ovos-core` until version **0.1.0**, after ) Tj
1 0 0 1 50 210 Tm (that modernization is required!) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (Under OpenVoiceOS skills are regular python packages, any installed skills will be loaded ) Tj
1 0 0 1 50 168 Tm (automatically by `ovos-core`) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (Since `ovos-core` **0.0.8** it is also possible to launch a skill standalone via `ovos-) Tj
1 0 0 1 50 126 Tm (workshop`, this enables individual skill containers in [ovos-) Tj
1 0 0 1 50 112 Tm (docker]\(https://openvoiceos.github.io/ovos-docker\)) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (This can be also be helpful during skill development for quick testing before the skill is) Tj
1 0 0 1 50 70 Tm ( packaged) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
398 0 obj
<< /Length 2827 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (```bash) Tj
1 0 0 1 50 728 Tm (ovos-skill-launcher {skill_id} [path/to/my/skill_id]) Tj
1 0 0 1 50 714 Tm (```) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (## Configuration) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (```javascript) Tj
1 0 0 1 50 644 Tm ("skills": {) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (    // blacklisted skills to not load) Tj
1 0 0 1 50 602 Tm (    // NB: This is the skill_id, usually the basename\(\) of the directory where the skill ) Tj
1 0 0 1 50 588 Tm (lives, so if) Tj
1 0 0 1 50 574 Tm (     // the skill you want to blacklist is in /usr/share/mycroft/skills/mycroft-) Tj
1 0 0 1 50 560 Tm (alarm.mycroftai/) Tj
1 0 0 1 50 546 Tm (    // then you should write `["mycroft-alarm.mycroftai"]` below.) Tj
1 0 0 1 50 532 Tm (    "blacklisted_skills": [],) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (    // fallback skill configuration \(see below\)) Tj
1 0 0 1 50 490 Tm (    "fallbacks": {...},) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (    // converse stage configuration \(see below\)) Tj
1 0 0 1 50 448 Tm (    "converse": {...}) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (},) Tj
1 0 0 1 50 406 Tm (```) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (## Utterance Transformers) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (**NEW** in `ovos-core` version **0.0.8**, originally developed for ) Tj
1 0 0 1 50 336 Tm ([Neon]\(https://github.com/NeonGeckoCom/neon-transformers\)) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (when `ovos-core` receives a natural language query/ `utterance` from a user it is sent to ) Tj
1 0 0 1 50 294 Tm (a "preprocessing stage") Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (The `utterance` transformers framework consists of any number of plugins ordered by ) Tj
1 0 0 1 50 252 Tm (priority \(developer defined\), the `utterance` and) Tj
1 0 0 1 50 238 Tm (message.`context` are sent sequentially to all transformer plugins, and can be mutated by ) Tj
1 0 0 1 50 224 Tm (any of those plugins) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (![imagem]\(https://github.com/OpenVoiceOS/ovos-technical-) Tj
1 0 0 1 50 182 Tm (manual/assets/33701864/75b67a91-dd8d-48cd-a146-91988bbbf374\)) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (to enable a utterance transformer simply add it to `mycroft.conf` after installing it) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (```javascript) Tj
1 0 0 1 50 112 Tm (// To enable a utterance transformer plugin just add it's name with any relevant config) Tj
1 0 0 1 50 98 Tm (// these plugins can mutate the utterance between STT and the Intent stage) Tj
1 0 0 1 50 84 Tm (// they may also modify message.context with metadata) Tj
1 0 0 1 50 70 Tm (// plugins only load if they are installed and enabled in this section) Tj
1 0 0 1 50 56 Tm ("utterance_transformers": {) Tj
ET
endstream

endobj
399 0 obj
<< /Length 2677 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm ( "ovos-utterance-normalizer": {},) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm ( // cancel utterances mid command) Tj
1 0 0 1 50 686 Tm ( "ovos-utterance-plugin-cancel": {},) Tj
1 0 0 1 50 672 Tm (  ) Tj
1 0 0 1 50 658 Tm ( // define utterance fixes via fuzzy match ~/.local/share/mycroft/corrections.json) Tj
1 0 0 1 50 644 Tm ( // define unconditional replacements at word level ) Tj
1 0 0 1 50 630 Tm (~/.local/share/mycroft/word_corrections.json) Tj
1 0 0 1 50 616 Tm ( "ovos-utterance-corrections-plugin": {},) Tj
1 0 0 1 50 602 Tm ( ) Tj
1 0 0 1 50 588 Tm ( // translation plugin) Tj
1 0 0 1 50 574 Tm ( "ovos-utterance-translation-plugin": {) Tj
1 0 0 1 50 560 Tm (   "bidirectional": true,) Tj
1 0 0 1 50 546 Tm (   "verify_lang": false,) Tj
1 0 0 1 50 532 Tm (   "ignore_invalid": true,) Tj
1 0 0 1 50 518 Tm (   "translate_secondary_langs": false) Tj
1 0 0 1 50 504 Tm ( }) Tj
1 0 0 1 50 490 Tm (},) Tj
1 0 0 1 50 476 Tm (```) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (## Metadata Transformers) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (**NEW** in `ovos-core` version **0.0.8**) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (Similar to utterance transformers, these plugins only transform the `message.context`) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (```javascript) Tj
1 0 0 1 50 350 Tm (// To enable a metadata transformer plugin just add it's name with any relevant config) Tj
1 0 0 1 50 336 Tm (// these plugins can mutate the message.context between STT and the Intent stage) Tj
1 0 0 1 50 322 Tm ("metadata_transformers": {},) Tj
1 0 0 1 50 308 Tm (```) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (## Intent Pipelines) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (**NEW** in `ovos-core` version **0.0.8**) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (after the `utterance` has been transformed it is sent to various OVOS components by ) Tj
1 0 0 1 50 210 Tm (priority order until one can handle) Tj
1 0 0 1 50 196 Tm (the query) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (Pipelines include intent parsers, converse framework, common query framework and fallback ) Tj
1 0 0 1 50 154 Tm (skill framework) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (```javascript) Tj
1 0 0 1 50 112 Tm (  // Intent Pipeline / plugins config) Tj
1 0 0 1 50 98 Tm (  "intents" : {) Tj
1 0 0 1 50 84 Tm (    // the pipeline is a ordered set of frameworks to send an utterance too) Tj
1 0 0 1 50 70 Tm (    // if one of the frameworks fails the next one is used, until an answer is found) Tj
1 0 0 1 50 56 Tm (    // NOTE: if padatious is not installed, it will be replaced with padacioso \(much ) Tj
ET
endstream

endobj
400 0 obj
<< /Length 2355 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (slower\)) Tj
1 0 0 1 50 728 Tm (    // in the future these will become plugins, and new pipeline stages can be added by ) Tj
1 0 0 1 50 714 Tm (end users) Tj
1 0 0 1 50 700 Tm (    "pipeline": [) Tj
1 0 0 1 50 686 Tm (        "ocp_high",) Tj
1 0 0 1 50 672 Tm (        "stop_high",) Tj
1 0 0 1 50 658 Tm (        "converse",) Tj
1 0 0 1 50 644 Tm (        "padatious_high",) Tj
1 0 0 1 50 630 Tm (        "adapt_high",) Tj
1 0 0 1 50 616 Tm (        "fallback_high",) Tj
1 0 0 1 50 602 Tm (        "stop_medium",) Tj
1 0 0 1 50 588 Tm (        "adapt_medium",) Tj
1 0 0 1 50 574 Tm (        "ovos-persona-pipeline-plugin-high",) Tj
1 0 0 1 50 560 Tm (        "adapt_low",) Tj
1 0 0 1 50 546 Tm (        "common_qa",) Tj
1 0 0 1 50 532 Tm (        "fallback_medium",) Tj
1 0 0 1 50 518 Tm (        "ovos-persona-pipeline-plugin-low",) Tj
1 0 0 1 50 504 Tm (        "fallback_low") Tj
1 0 0 1 50 490 Tm (    ]) Tj
1 0 0 1 50 476 Tm (  },) Tj
1 0 0 1 50 462 Tm (```) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (# docs/103-audio_service.md) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (# Audio Service) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (The audio service is responsible for handling TTS and simple sounds playback) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (## TTS) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (Two TTS plugins may be loaded at once, if the primary plugin fails for some reason the ) Tj
1 0 0 1 50 280 Tm (second plugin will be used.) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (This allows you to have a lower quality offline voice as fallback to account for internet ) Tj
1 0 0 1 50 238 Tm (outages, this ensures your) Tj
1 0 0 1 50 224 Tm (device can always give you feedback) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (```javascript) Tj
1 0 0 1 50 182 Tm ("tts": {) Tj
1 0 0 1 50 168 Tm (    "pulse_duck": false,) Tj
1 0 0 1 50 154 Tm (    ) Tj
1 0 0 1 50 140 Tm (    // plugins to load) Tj
1 0 0 1 50 126 Tm (    "module": "ovos-tts-plugin-server",) Tj
1 0 0 1 50 112 Tm (    "fallback_module": "ovos-tts-plugin-mimic",) Tj
1 0 0 1 50 98 Tm (    ) Tj
1 0 0 1 50 84 Tm (    // individual plugin configs) Tj
1 0 0 1 50 70 Tm (    "ovos-tts-plugin-server": {) Tj
1 0 0 1 50 56 Tm (        "host": "https://tts.smartgic.io/piper",) Tj
ET
endstream

endobj
401 0 obj
<< /Length 2772 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (        "v2": true,) Tj
1 0 0 1 50 728 Tm (        "verify_ssl": true,) Tj
1 0 0 1 50 714 Tm (        "tts_timeout": 5,) Tj
1 0 0 1 50 700 Tm (    }) Tj
1 0 0 1 50 686 Tm (}) Tj
1 0 0 1 50 672 Tm (```) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (## Skill Methods) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (skills can use `self.play_audio`, `self.acknowledge`, `self.speak` and `self.speak_dialog`) Tj
1 0 0 1 50 588 Tm ( methods to interact with `ovos-audio`) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (```python) Tj
1 0 0 1 50 546 Tm (def play_audio\(self, filename: str, instant: bool = False\):) Tj
1 0 0 1 50 532 Tm (    """) Tj
1 0 0 1 50 518 Tm (    Queue and audio file for playback) Tj
1 0 0 1 50 504 Tm (    @param filename: File to play) Tj
1 0 0 1 50 490 Tm (    @param instant: if True audio will be played instantly ) Tj
1 0 0 1 50 476 Tm (                    instead of queued with TTS) Tj
1 0 0 1 50 462 Tm (    """) Tj
1 0 0 1 50 448 Tm (```) Tj
1 0 0 1 50 434 Tm (```python) Tj
1 0 0 1 50 420 Tm (def acknowledge\(self\):) Tj
1 0 0 1 50 406 Tm (    """) Tj
1 0 0 1 50 392 Tm (    Acknowledge a successful request.) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (    This method plays a sound to acknowledge a request that does not) Tj
1 0 0 1 50 350 Tm (    require a verbal response. This is intended to provide simple feedback) Tj
1 0 0 1 50 336 Tm (    to the user that their request was handled successfully.) Tj
1 0 0 1 50 322 Tm (    """) Tj
1 0 0 1 50 308 Tm (```) Tj
1 0 0 1 50 294 Tm (```python) Tj
1 0 0 1 50 280 Tm (def speak\(self, utterance: str, expect_response: bool = False, wait: Union[bool, int] = ) Tj
1 0 0 1 50 266 Tm (False\):) Tj
1 0 0 1 50 252 Tm (    """Speak a sentence.) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (    Args:) Tj
1 0 0 1 50 210 Tm (        utterance \(str\):        sentence mycroft should speak) Tj
1 0 0 1 50 196 Tm (        expect_response \(bool\): set to True if Mycroft should listen) Tj
1 0 0 1 50 182 Tm (                                for a response immediately after) Tj
1 0 0 1 50 168 Tm (                                speaking the utterance.) Tj
1 0 0 1 50 154 Tm (        wait \(Union[bool, int]\): set to True to block while the text) Tj
1 0 0 1 50 140 Tm (                                 is being spoken for 15 seconds. Alternatively, set) Tj
1 0 0 1 50 126 Tm (                                 to an integer to specify a timeout in seconds.) Tj
1 0 0 1 50 112 Tm (    """) Tj
1 0 0 1 50 98 Tm (```) Tj
1 0 0 1 50 84 Tm (```python) Tj
1 0 0 1 50 70 Tm (def speak_dialog\(self, key: str, data: Optional[dict] = None,) Tj
1 0 0 1 50 56 Tm (                 expect_response: bool = False, wait: Union[bool, int] = False\):) Tj
ET
endstream

endobj
402 0 obj
<< /Length 3209 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (    """) Tj
1 0 0 1 50 728 Tm (    Speak a random sentence from a dialog file.) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (    Args:) Tj
1 0 0 1 50 686 Tm (        key \(str\): dialog file key \(e.g. "hello" to speak from the file) Tj
1 0 0 1 50 672 Tm (                                    "locale/en-us/hello.dialog"\)) Tj
1 0 0 1 50 658 Tm (        data \(dict\): information used to populate sentence) Tj
1 0 0 1 50 644 Tm (        expect_response \(bool\): set to True if Mycroft should listen) Tj
1 0 0 1 50 630 Tm (                                for a response immediately after) Tj
1 0 0 1 50 616 Tm (                                speaking the utterance.) Tj
1 0 0 1 50 602 Tm (        wait \(Union[bool, int]\): set to True to block while the text) Tj
1 0 0 1 50 588 Tm (                                 is being spoken for 15 seconds. Alternatively, set) Tj
1 0 0 1 50 574 Tm (                                 to an integer to specify a timeout in seconds.) Tj
1 0 0 1 50 560 Tm (    """) Tj
1 0 0 1 50 546 Tm (```) Tj
1 0 0 1 50 532 Tm (to play sounds via bus messages emit `"mycroft.audio.play_sound"` or ) Tj
1 0 0 1 50 518 Tm (`"mycroft.audio.queue"` with data `{"uri": "path/sound.mp3"}`) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (## PlaybackThread) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (`ovos-audio` implements a queue for sounds, any OVOS component can queue a sound for ) Tj
1 0 0 1 50 448 Tm (playback.) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (Usually only TTS speech is queue for playback, but sounds effects may also be queued for ) Tj
1 0 0 1 50 406 Tm (richer experiences, for example in a story telling skill) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (The PlaybackThread ensures sounds don't play over each other but instead sequentially, ) Tj
1 0 0 1 50 364 Tm (listening might be triggered after TTS finishes playing if requested in the `"speak"` ) Tj
1 0 0 1 50 350 Tm (message) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (shorts sounds can be played outside the PlaybackThread, usually when instant feedback is ) Tj
1 0 0 1 50 308 Tm (required, such as in the listening sound or on error sounds) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (You can configure default sounds and the playback commands under `mycroft.conf`) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (```javascript) Tj
1 0 0 1 50 238 Tm (  // File locations of sounds to play for default events) Tj
1 0 0 1 50 224 Tm (  "sounds": {) Tj
1 0 0 1 50 210 Tm (    "start_listening": "snd/start_listening.wav",) Tj
1 0 0 1 50 196 Tm (    "end_listening": "snd/end_listening.wav",) Tj
1 0 0 1 50 182 Tm (    "acknowledge": "snd/acknowledge.mp3",) Tj
1 0 0 1 50 168 Tm (    "error": "snd/error.mp3") Tj
1 0 0 1 50 154 Tm (  },) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (  // Mechanism used to play WAV audio files) Tj
1 0 0 1 50 112 Tm (  // by default ovos-utils will try to detect best player) Tj
1 0 0 1 50 98 Tm (  "play_wav_cmdline": "paplay %1 --stream-name=mycroft-voice",) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (  // Mechanism used to play MP3 audio files) Tj
1 0 0 1 50 56 Tm (  // by default ovos-utils will try to detect best player) Tj
ET
endstream

endobj
403 0 obj
<< /Length 2746 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (  "play_mp3_cmdline": "mpg123 %1",) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (  // Mechanism used to play OGG audio files) Tj
1 0 0 1 50 700 Tm (  // by default ovos-utils will try to detect best player) Tj
1 0 0 1 50 686 Tm (  "play_ogg_cmdline": "ogg123 -q %1",) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (```) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (> NOTE: by default the playback commands are not set and OVOS will try to determine the ) Tj
1 0 0 1 50 616 Tm (best way to play a sound automatically) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (## Transformer Plugins) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (**NEW** in `ovos-core` version **0.0.8**) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (Similarly to audio transformers in `ovos-dinkum-listener`, the utterance and audio data ) Tj
1 0 0 1 50 504 Tm (generated by TTS are exposed to a set) Tj
1 0 0 1 50 490 Tm (of plugins that can transform them before playback) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (![imagem]\(https://github.com/OpenVoiceOS/ovos-technical-) Tj
1 0 0 1 50 448 Tm (manual/assets/33701864/8269074a-8632-43b1-a2fc-89e829598669\)) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (### Dialog Transformers) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (Similarly to utterance transformers in core,  `ovos-audio` exposes `utterance` and ) Tj
1 0 0 1 50 378 Tm (message.`context` to a set) Tj
1 0 0 1 50 364 Tm (of plugins that can transform it before TTS stage) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (The `utterance` to be spoken is sent sequentially to all transformer plugins, ordered by ) Tj
1 0 0 1 50 322 Tm (priority \(developer defined\),) Tj
1 0 0 1 50 308 Tm (until finally it is sent to the TTS stage) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (To enable a transformer add it to `mycroft.conf`) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (```javascript) Tj
1 0 0 1 50 238 Tm (// To enable a dialog transformer plugin just add it's name with any relevant config) Tj
1 0 0 1 50 224 Tm (// these plugins can mutate utterances before TTS) Tj
1 0 0 1 50 210 Tm ("dialog_transformers": {) Tj
1 0 0 1 50 196 Tm (    "ovos-dialog-translation-plugin": {},) Tj
1 0 0 1 50 182 Tm (    "ovos-dialog-transformer-openai-plugin": {) Tj
1 0 0 1 50 168 Tm (        "rewrite_prompt": "rewrite the text as if you were explaining it to a 5 year old") Tj
1 0 0 1 50 154 Tm (    }) Tj
1 0 0 1 50 140 Tm (}) Tj
1 0 0 1 50 126 Tm (```) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (### TTS Transformers) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (The audio to be spoken is sent sequentially to all transformer plugins, ordered by ) Tj
1 0 0 1 50 56 Tm (priority \(developer defined\),) Tj
ET
endstream

endobj
404 0 obj
<< /Length 2481 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (until finally it played back to the user) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (> **NOTE**: Does not work with StreamingTTS) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (To enable a transformer add it to `mycroft.conf`) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (```javascript) Tj
1 0 0 1 50 644 Tm (// To enable a tts transformer plugin just add it's name with any relevant config) Tj
1 0 0 1 50 630 Tm (// these plugins can mutate audio after TTS) Tj
1 0 0 1 50 616 Tm ("tts_transformers": {) Tj
1 0 0 1 50 602 Tm (    "ovos-tts-transformer-sox-plugin": {) Tj
1 0 0 1 50 588 Tm (        "default_effects": {) Tj
1 0 0 1 50 574 Tm (            "speed": {"factor": 1.1}) Tj
1 0 0 1 50 560 Tm (        }) Tj
1 0 0 1 50 546 Tm (    }) Tj
1 0 0 1 50 532 Tm (}) Tj
1 0 0 1 50 518 Tm (```) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (# docs/104-gui_service.md) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (# GUI Service) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (OVOS devices with displays provide skill developers the opportunity to create skills that ) Tj
1 0 0 1 50 392 Tm (can be empowered by both voice) Tj
1 0 0 1 50 378 Tm (and screen interaction.) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (`ovos-gui`, aka, The GUI Service, is responsible for keeping track of what should be ) Tj
1 0 0 1 50 336 Tm (rendered, but does not perform the) Tj
1 0 0 1 50 322 Tm (rendering itself) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (The GUI service provides a websocket for gui clients to connect to, it is responsible for ) Tj
1 0 0 1 50 280 Tm (implementing the gui protocol) Tj
1 0 0 1 50 266 Tm (under `ovos-core`.) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (You can find indepth documentation of [the GUI ) Tj
1 0 0 1 50 224 Tm (protocol]\(https://openvoiceos.github.io/ovos-technical-manual/gui_protocol\) in the ) Tj
1 0 0 1 50 210 Tm (dedicated GUI section of these docs) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (## Architecture) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (The GUI state is defined by `namespaces`, usually corresponding to a `skill_id`, each with) Tj
1 0 0 1 50 126 Tm ( any number) Tj
1 0 0 1 50 112 Tm (of `pages`. ) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (users are expected to be able to "swipe left" and "swipe right" to switch between `pages` ) Tj
1 0 0 1 50 70 Tm (within a `namespace`) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
405 0 obj
<< /Length 3140 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (OpenVoiceOS components interact with the GUI by defining session data and active pages, ) Tj
1 0 0 1 50 728 Tm (gui-clients may also send back `events` to indicate interactions.) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (![imagem]\(https://github.com/OpenVoiceOS/ovos-technical-) Tj
1 0 0 1 50 686 Tm (manual/assets/33701864/69c653dc-9bad-4a3a-bd43-efefb938f650\)) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (`pages` are ordered and, usually, only 1 `page` is rendered at a time. ) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (If the screen size allows it platform specific gui client applications are free to render ) Tj
1 0 0 1 50 616 Tm (all `pages` into view.) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (The GUI clients may be implemented in any programming language, the default page templates) Tj
1 0 0 1 50 574 Tm ( provided to skills via [GUIInterface]\(https://openvoiceos.github.io/ovos-technical-) Tj
1 0 0 1 50 560 Tm (manual/skill_gui\) should be implemented and provided by all alternative clients.) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (> **QML tip**: - set `fillWidth: true` under `Mycroft.Delegate` to have a page always ) Tj
1 0 0 1 50 518 Tm (using the full screen) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (## Active Namespaces) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (In the context of a smartspeaker, when the GUI is idle a `homescreen` may be displayed, ) Tj
1 0 0 1 50 448 Tm (eg. an animated face or clock) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (![imagem]\(https://github.com/OpenVoiceOS/ovos-technical-) Tj
1 0 0 1 50 406 Tm (manual/assets/33701864/25a2725a-271b-469d-822a-148b4fdfa30e\)) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (Whenever a `page` is displayed by a skill, `ovos-gui` tracks it and sets it's `namespace` ) Tj
1 0 0 1 50 364 Tm (to active, then tells the gui clients to render it.) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (The active `namespace` and how long a page stays up are managed by `ovos-gui`, usually via) Tj
1 0 0 1 50 322 Tm ( platform specific plugins. ) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (`ovos-gui` will decide when a `namespace` is no longer active, and then the next ) Tj
1 0 0 1 50 280 Tm (`namespace` will be rendered, ) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (Skills using the [GUIInterface]\(https://openvoiceos.github.io/ovos-technical-) Tj
1 0 0 1 50 238 Tm (manual/skill_gui/\) can indicate how long they want a page to remain active) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (Example: ) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (- OVOS is idle - homescreen is the active `namespace`) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (- you ask OVOS to play music and the music page shows up - music player page is the active) Tj
1 0 0 1 50 140 Tm ( `namespace`) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (- you ask OVOS a question and wolfram alpha page shows up - wolfram page is the active ) Tj
1 0 0 1 50 98 Tm (`namespace`) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (- wolfram alpha times out - music player page is the active `namespace`) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
406 0 obj
<< /Length 4269 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (- music ends and page times out - homescreen is the active `namespace`) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (> **NOTE**: GUI does not yet support Session, in the future namespaces will be tracked per) Tj
1 0 0 1 50 700 Tm ( Session allowing remote clients to each have their own GUI state) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (## GUI Plugins) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (**NEW** in `ovos-core` version **0.0.8**) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (The active namespace is tracked by `ovos-gui` and manages) Tj
1 0 0 1 50 602 Tm (the [homescreen skill]\(https://github.com/OpenVoiceOS/skill-ovos-homescreen\), desktop ) Tj
1 0 0 1 50 588 Tm (implementations like Plasma) Tj
1 0 0 1 50 574 Tm (Bigscreen do not have a homescreen, instead they manage each skill in their own window) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (A single GUI plugin can be loaded in `ovos-gui` to handle bus events and provide companion) Tj
1 0 0 1 50 532 Tm ( python code to GUI clients,) Tj
1 0 0 1 50 518 Tm (this is usually done by your OS and specific to a use case.) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (| plugin                                                                                  ) Tj
1 0 0 1 50 476 Tm (          | description                                                                   ) Tj
1 0 0 1 50 462 Tm (                                                                    | notes               ) Tj
1 0 0 1 50 448 Tm (                                                                                          ) Tj
1 0 0 1 50 434 Tm (                                                                                          ) Tj
1 0 0 1 50 420 Tm (              |) Tj
1 0 0 1 50 406 Tm (|-----------------------------------------------------------------------------------------) Tj
1 0 0 1 50 392 Tm (----------|-------------------------------------------------------------------------------) Tj
1 0 0 1 50 378 Tm (--------------------------------------------------------------------|---------------------) Tj
1 0 0 1 50 364 Tm (------------------------------------------------------------------------------------------) Tj
1 0 0 1 50 350 Tm (------------------------------------------------------------------------------------------) Tj
1 0 0 1 50 336 Tm (--------------|) Tj
1 0 0 1 50 322 Tm (| [ovos-gui-plugin-shell-companion]\(https://github.com/OpenVoiceOS/ovos-gui-plugin-shell-) Tj
1 0 0 1 50 308 Tm (companion\) | extra functionality for ovos-shell                                           ) Tj
1 0 0 1 50 294 Tm (                                                                     | [message ) Tj
1 0 0 1 50 280 Tm (specs]\(https://openvoiceos.github.io/message_spec/shell\)                                  ) Tj
1 0 0 1 50 266 Tm (                                                                                          ) Tj
1 0 0 1 50 252 Tm (                         |) Tj
1 0 0 1 50 238 Tm (| [ovos-gui-plugin-bigscreen]\(https://github.com/OVOSHatchery/ovos-gui-plugin-bigscreen\)) Tj
1 0 0 1 50 224 Tm (            | window management for [Plasma ) Tj
1 0 0 1 50 210 Tm (Bigscreen]\(https://invent.kde.org/plasma/plasma-bigscreen\) [Voice Apps]\(https://plasma-) Tj
1 0 0 1 50 196 Tm (bigscreen.org/docs/develop/\) | **UNMAINTED** <br> [message ) Tj
1 0 0 1 50 182 Tm (specs]\(https://openvoiceos.github.io/message_spec/gui_bigscreen/\) <br> backup fork in life) Tj
1 0 0 1 50 168 Tm ( support [ovos-plasma-bigscreen-qt5]\(https://github.com/OVOSHatchery/ovos-plasma-) Tj
1 0 0 1 50 154 Tm (bigscreen-qt5\) |) Tj
1 0 0 1 50 140 Tm (| [ovos-gui-plugin-plasmoid]\(https://github.com/OVOSHatchery/ovos-gui-plugin-plasmoid\)) Tj
1 0 0 1 50 126 Tm (              | [Plasma integration of different Mycroft AI ) Tj
1 0 0 1 50 112 Tm (services]\(https://invent.kde.org/utilities/mycroft-plasmoid\)) Tj
1 0 0 1 50 98 Tm (                                          | **UNMAINTED** <br> never migrated to OVOS     ) Tj
1 0 0 1 50 84 Tm (                                                                                          ) Tj
1 0 0 1 50 70 Tm (                                                                              |) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
407 0 obj
<< /Length 2147 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (## Configuration) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (The gui service has a few sections in `mycroft.conf`) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (```javascript) Tj
1 0 0 1 50 658 Tm ("gui": {) Tj
1 0 0 1 50 644 Tm (    "idle_display_skill": "skill-ovos-homescreen.openvoiceos",) Tj
1 0 0 1 50 630 Tm (    "extension": "generic",) Tj
1 0 0 1 50 616 Tm (    "generic": {) Tj
1 0 0 1 50 602 Tm (        "homescreen_supported": false) Tj
1 0 0 1 50 588 Tm (    }) Tj
1 0 0 1 50 574 Tm (},) Tj
1 0 0 1 50 560 Tm (  ) Tj
1 0 0 1 50 546 Tm ("gui_websocket": {) Tj
1 0 0 1 50 532 Tm (    "host": "0.0.0.0",) Tj
1 0 0 1 50 518 Tm (    "base_port": 18181,) Tj
1 0 0 1 50 504 Tm (    "route": "/gui",) Tj
1 0 0 1 50 490 Tm (    "ssl": false) Tj
1 0 0 1 50 476 Tm (},) Tj
1 0 0 1 50 462 Tm (```) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (# docs/110-config.md) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (## Configuration Management) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (### Summary) Tj
1 0 0 1 50 350 Tm (The OVOS configuration loader merges settings from multiple sourcesdefault, system, ) Tj
1 0 0 1 50 336 Tm (remote, and userso you can customize only what you need without touching shipped files.) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (---) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (### Usage Guide) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (1. **Locate or create your user config**) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (```bash) Tj
1 0 0 1 50 210 Tm (mkdir -p ~/.config/mycroft) Tj
1 0 0 1 50 196 Tm (nano ~/.config/mycroft/mycroft.conf) Tj
1 0 0 1 50 182 Tm (```  ) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (Add only the keys you want to override; everything else falls back to defaults.) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (2. **Override via environment variables \(optional\)**) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (```bash) Tj
1 0 0 1 50 84 Tm (export OVOS_CONFIG_BASE_FOLDER="myfolder") Tj
1 0 0 1 50 70 Tm (export OVOS_CONFIG_FILENAME="myconfig.yaml") Tj
1 0 0 1 50 56 Tm (```  ) Tj
ET
endstream

endobj
408 0 obj
<< /Length 2471 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (This changes paths such as:) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (- `~/.config/mycroft/mycroft.conf` ? `~/.config/myfolder/mycroft.conf`) Tj
1 0 0 1 50 686 Tm (- `~/.config/mycroft/mycroft.conf` ? `~/.config/mycroft/myconfig.yaml`) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (3. **Use special flags \(in system config\)**) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (```json) Tj
1 0 0 1 50 616 Tm ({) Tj
1 0 0 1 50 602 Tm ( "disable_user_config": true,) Tj
1 0 0 1 50 588 Tm ( "disable_remote_config": true) Tj
1 0 0 1 50 574 Tm (}) Tj
1 0 0 1 50 560 Tm (```  ) Tj
1 0 0 1 50 546 Tm (   ) Tj
1 0 0 1 50 532 Tm (Place these in `/etc/mycroft/mycroft.conf` \(or your default package file\) to turn off ) Tj
1 0 0 1 50 518 Tm (loading of remote or user settings.) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (---) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (### Technical Explanation) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (**Load Order & Overrides**  ) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (OVOS loads **all** existing files in this sequence, with later files overriding earlier ) Tj
1 0 0 1 50 392 Tm (ones:) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (- **Default** \(`ovos-config` package\)) Tj
1 0 0 1 50 350 Tm (- **System** \(`/etc/mycroft/mycroft.conf`\)) Tj
1 0 0 1 50 336 Tm (- **Remote** \(`~/.config/<base>/web_cache.json`\)) Tj
1 0 0 1 50 322 Tm (- **User** \(`~/.config/<base>/<filename>`\)  ) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (> ? Keys repeated in multiple files are overridden by the last?loaded file containing ) Tj
1 0 0 1 50 280 Tm (them.) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (**File Locations & Formats**) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (- **Base folder**: Controlled by `OVOS_CONFIG_BASE_FOLDER` \(defaults to `mycroft`\).) Tj
1 0 0 1 50 210 Tm (- **Filename**: Controlled by `OVOS_CONFIG_FILENAME` \(defaults to `mycroft.conf`\).) Tj
1 0 0 1 50 196 Tm (- **Formats**: JSON \(`.json` or `.conf`\) or YAML \(`.yml` or `.yaml`\).) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (**Protected Keys**  ) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (Prevent certain settings from being overridden by remote or user configs.) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (```json) Tj
1 0 0 1 50 98 Tm ({) Tj
1 0 0 1 50 84 Tm ( "protected_keys": {) Tj
1 0 0 1 50 70 Tm (   "user": [) Tj
1 0 0 1 50 56 Tm (     "gui_websocket.host",) Tj
ET
endstream

endobj
409 0 obj
<< /Length 2581 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (     "websocket.host") Tj
1 0 0 1 50 728 Tm (   ]) Tj
1 0 0 1 50 714 Tm ( }) Tj
1 0 0 1 50 700 Tm (}) Tj
1 0 0 1 50 686 Tm (```) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (> ? this example block users from exposing the messagebus accidentally) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (**Disabling Layers**) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (- **disable_user_config**: If `true`, XDG user configs are ignored.) Tj
1 0 0 1 50 588 Tm (- **disable_remote_config**: If `true`, downloaded remote configs \(`web_cache.json`\) are ) Tj
1 0 0 1 50 574 Tm (ignored.) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (---) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (### Tips & Caveats) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (- **Always use your user file** \(`~/.config/.../mycroft.conf`\) to override defaultsnever ) Tj
1 0 0 1 50 462 Tm (edit system or package?shipped files.) Tj
1 0 0 1 50 448 Tm (- Ensure your JSON is valid; mixed file extensions may lead to load errors.) Tj
1 0 0 1 50 434 Tm (- Remember that setting `disable_user_config` or `disable_remote_config` will silently ) Tj
1 0 0 1 50 420 Tm (skip those layersuse with caution.) Tj
1 0 0 1 50 406 Tm (- Admin PHAL is a special service that runs as root, this means it can **only access ) Tj
1 0 0 1 50 392 Tm (`/etc/mycroft/mycroft.conf`**) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (---) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (### References) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (- [OVOS Config Loader \(GitHub\)]\(https://github.com/OpenVoiceOS/ovos-config\)) Tj
1 0 0 1 50 294 Tm (- [XDG Base Directory Specification]\(https://specifications.freedesktop.org/basedir-) Tj
1 0 0 1 50 280 Tm (spec/basedir-spec-latest.html\)) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (# docs/150-advanced_solvers.md) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (# Specialized Solver Plugins) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (Solver plugins also exist for specialized tasks, like regular question solvers these also ) Tj
1 0 0 1 50 168 Tm (benefit from automatic bidirectional translation for language support) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (---) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (## ReRankers / MultipleChoiceQuestionSolvers) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (A specialized kind of solver plugin that chooses the best answer out of several options) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (![Untitled-2025-04-15-2340\(1\)]\(https://github.com/user-) Tj
ET
endstream

endobj
410 0 obj
<< /Length 2751 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (attachments/assets/61c5034b-e54f-434a-8cbf-e967154af983\)) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (These specialized solvers are used internally by [ovos-common-query-pipeline-) Tj
1 0 0 1 50 700 Tm (plugin]\(https://github.com/OpenVoiceOS/ovos-common-query-pipeline-plugin\), some skills and) Tj
1 0 0 1 50 686 Tm ( even by other question solver plugins!) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (Example configuration of [ovos-flashrank-reranker-) Tj
1 0 0 1 50 644 Tm (plugin]\(https://github.com/TigreGotico/ovos-flashrank-reranker-plugin\) for usage with ) Tj
1 0 0 1 50 630 Tm (`ovos-common-query-pipeline-plugin`) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (```json) Tj
1 0 0 1 50 588 Tm ("intents": {) Tj
1 0 0 1 50 574 Tm (    "common_query": {) Tj
1 0 0 1 50 560 Tm (        "min_self_confidence": 0.5,) Tj
1 0 0 1 50 546 Tm (        "min_reranker_score": 0.5,) Tj
1 0 0 1 50 532 Tm (        "reranker": "ovos-flashrank-reranker-plugin",) Tj
1 0 0 1 50 518 Tm (        "ovos-flashrank-reranker-plugin": {) Tj
1 0 0 1 50 504 Tm (          "model": "ms-marco-TinyBERT-L-2-v2") Tj
1 0 0 1 50 490 Tm (        }) Tj
1 0 0 1 50 476 Tm (    }) Tj
1 0 0 1 50 462 Tm (}) Tj
1 0 0 1 50 448 Tm (```) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (---) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (## Evidence Solver) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (Evidence solvers accept not only a question but also a companion piece of text containing ) Tj
1 0 0 1 50 350 Tm (the answer.) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (Some question solver plugins like `ovos-solver-wikipedia-plugin` use evidence solvers ) Tj
1 0 0 1 50 308 Tm (internally, they are often helpful to generate a question out of a search result) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (![Untitled-2025-04-15-2340\(9\)]\(https://github.com/user-) Tj
1 0 0 1 50 266 Tm (attachments/assets/0c02a323-2098-4e4d-a577-0721e8326380\)) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (![Untitled-2025-04-15-2340\(10\)]\(https://github.com/user-) Tj
1 0 0 1 50 224 Tm (attachments/assets/d789d3ce-b425-405c-8ae1-3ff495817507\)) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (---) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (## Summarizer) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (Some question solver plugin use summarizers internally, they are often helpful to shorten ) Tj
1 0 0 1 50 126 Tm (long text from web search results) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (![Untitled-2025-04-15-2340\(11\)]\(https://github.com/user-) Tj
1 0 0 1 50 84 Tm (attachments/assets/1ae97ca9-e33e-4448-abec-311f99074bbd\)) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (![Untitled-2025-04-15-2340\(12\)]\(https://github.com/user-) Tj
ET
endstream

endobj
411 0 obj
<< /Length 3053 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (attachments/assets/416e0eb9-0da9-4515-9c69-7667fb878ba5\)) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (---) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (## Collaborative Agents via MoS \(Mixture of Solvers\)) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (One of the most powerful features of the OVOS solver architecture is its ability to ) Tj
1 0 0 1 50 630 Tm (**orchestrate multiple agents collaboratively** through specialized **Mixture of Solvers ) Tj
1 0 0 1 50 616 Tm (\(MoS\)** plugins.) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (![image]\(https://gist.github.com/user-) Tj
1 0 0 1 50 574 Tm (attachments/assets/a1ef9307-0680-4fb0-9616-0ecd8332ae73\)) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (These [MoS solvers]\(https://github.com/TigreGotico/ovos-MoS\) implement strategies that ) Tj
1 0 0 1 50 532 Tm (combine the strengths of various LLMs, rerankers, rule-based solvers, or even remote ) Tj
1 0 0 1 50 518 Tm (agents \(like HiveMind nodes\), allowing dynamic delegation and refinement of answers.) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (> ? **Flexible Plugin Design**: MoS strategies are implemented as standard solver plugins.) Tj
1 0 0 1 50 476 Tm ( This means they can be composed, nested, or swapped just like any other solverallowing ) Tj
1 0 0 1 50 462 Tm (advanced collaborative behavior with minimal integration effort.) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (### How It Works) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (Instead of relying on a single model or backend, a MoS solver delegates the query to ) Tj
1 0 0 1 50 392 Tm (several specialized solvers \(workers\) and uses strategies like voting, reranking, or even ) Tj
1 0 0 1 50 378 Tm (further generation to decide the best final response.) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (Examples include:) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (- **The King**: Uses a central "king" \(reranker or LLM\) to select or generate the best ) Tj
1 0 0 1 50 308 Tm (answer based on multiple solver outputs.) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (![Untitled-2025-04-15-2340\(25\)]\(https://github.com/user-) Tj
1 0 0 1 50 266 Tm (attachments/assets/733bb874-2ee1-4e98-a7c3-ab084edfe4d9\)) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (---) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (- **Democracy**: Implements a voting system among reranker solvers to choose the most ) Tj
1 0 0 1 50 196 Tm (agreed-upon response.) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (![Untitled-2025-04-15-2340\(23\)]\(https://github.com/user-) Tj
1 0 0 1 50 154 Tm (attachments/assets/088939db-08df-4a03-b194-e0e6a823ef51\)) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (---) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (- **Duopoly**: A pair of collaborating LLMs generate and discuss answers before passing ) Tj
1 0 0 1 50 84 Tm (them to a final decider \("the president" solver\).) Tj
1 0 0 1 50 70 Tm (  ) Tj
1 0 0 1 50 56 Tm (![Untitled-2025-04-15-2340\(24\)]\(https://github.com/user-) Tj
ET
endstream

endobj
412 0 obj
<< /Length 3058 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (attachments/assets/cf5a2d82-b768-42c4-9d44-068d5c2d2d42\)) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (---) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (Each strategy enables different dynamics between solversbe it a single judge, a voting ) Tj
1 0 0 1 50 672 Tm (panel, or a back-and-forth discussion between agents.) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (> ? **Recursive Composition**: Any MoS strategy can recursively use another MoS as a sub-) Tj
1 0 0 1 50 616 Tm (solver, allowing for arbitrarily deep collaboration trees.) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (# docs/150-personas.md) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (# AI Agents in OpenVoiceOS) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (OpenVoiceOS \(OVOS\) introduces a flexible and modular system for integrating AI agents into) Tj
1 0 0 1 50 490 Tm ( voice-first environments. This is made possible through a layered architecture built ) Tj
1 0 0 1 50 476 Tm (around **solvers**, **personas**, and **persona routing** components. This section ) Tj
1 0 0 1 50 462 Tm (explains how these parts work together to enable intelligent conversations with ) Tj
1 0 0 1 50 448 Tm (customizable behavior.) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (---) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (## Solver Plugins \(Low-Level AI\)) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (At the core of the AI agent system are [**solver ) Tj
1 0 0 1 50 350 Tm (plugins**]\(https://openvoiceos.github.io/ovos-technical-manual//360-solver_plugins/\). ) Tj
1 0 0 1 50 336 Tm (These are simple black-box components responsible for handling a single task: receiving a ) Tj
1 0 0 1 50 322 Tm (text input \(typically a question\) and returning a text output \(typically an answer\).) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (![Untitled-2025-04-15-2340]\(https://github.com/user-) Tj
1 0 0 1 50 280 Tm (attachments/assets/8a58417d-409e-4b87-94d0-0f2234064981\)) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (### Key Features:) Tj
1 0 0 1 50 224 Tm (- **Input/Output**: Plain text in, plain text out.) Tj
1 0 0 1 50 210 Tm (- **Functionality**: Usually question-answering, though more specialized solvers exist ) Tj
1 0 0 1 50 196 Tm (\(e.g., summarization, multiple choice\).) Tj
1 0 0 1 50 182 Tm (- **Language Adaptation**: Solvers are automatically wrapped with a translation layer if ) Tj
1 0 0 1 50 168 Tm (they don't support the user's language. For instance, the Wolfram Alpha solver is English-) Tj
1 0 0 1 50 154 Tm (only but can work with Portuguese through automatic bidirectional translation.) Tj
1 0 0 1 50 140 Tm (- **Fallback Behavior**: If a solver cannot produce a result \(returns `None`\), higher-) Tj
1 0 0 1 50 126 Tm (level systems will attempt fallback options.) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (---) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (## Personas \(Agent Definition Layer\)) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
413 0 obj
<< /Length 2992 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (A **persona** represents a higher-level abstraction over solver plugins. It behaves like ) Tj
1 0 0 1 50 728 Tm (an AI agent with a defined personality and behavior, built by combining one or more ) Tj
1 0 0 1 50 714 Tm (solvers in a specific order) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (### Key Features:) Tj
1 0 0 1 50 672 Tm (- **Composition**: Each persona consists of a name, a list of solver plugins, and optional) Tj
1 0 0 1 50 658 Tm ( configuration for each.) Tj
1 0 0 1 50 644 Tm (- **Chained Execution**: When a user question is received, the persona tries solvers one ) Tj
1 0 0 1 50 630 Tm (by one. If the first solver fails \(returns `None`\), the next one is tried until a response) Tj
1 0 0 1 50 616 Tm ( is generated.) Tj
1 0 0 1 50 602 Tm (- **Customizable Behavior**: Different personas can emulate different personalities or ) Tj
1 0 0 1 50 588 Tm (knowledge domains by varying their solver stack.) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (![Untitled-2025-04-15-2340\(7\)]\(https://github.com/user-) Tj
1 0 0 1 50 546 Tm (attachments/assets/453a906f-6d38-4878-ae7b-49b24270339f\)) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (![Untitled-2025-04-15-2340\(8\)]\(https://github.com/user-) Tj
1 0 0 1 50 504 Tm (attachments/assets/731835a3-44b1-463d-9fc6-085ca2658abc\)) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (```) Tj
1 0 0 1 50 448 Tm ({) Tj
1 0 0 1 50 434 Tm (  "name": "OldSchoolBot",) Tj
1 0 0 1 50 420 Tm (  "solvers": [) Tj
1 0 0 1 50 406 Tm (    "ovos-solver-wikipedia-plugin",) Tj
1 0 0 1 50 392 Tm (    "ovos-solver-ddg-plugin",) Tj
1 0 0 1 50 378 Tm (    "ovos-solver-plugin-wolfram-alpha",) Tj
1 0 0 1 50 364 Tm (    "ovos-solver-wordnet-plugin",) Tj
1 0 0 1 50 350 Tm (    "ovos-solver-rivescript-plugin",) Tj
1 0 0 1 50 336 Tm (    "ovos-solver-failure-plugin") Tj
1 0 0 1 50 322 Tm (  ],) Tj
1 0 0 1 50 308 Tm (  "ovos-solver-plugin-wolfram-alpha": {"appid": "Y7353-XXX"}) Tj
1 0 0 1 50 294 Tm (}) Tj
1 0 0 1 50 280 Tm (```) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (> ? personas don't need to use LLMs, you don't need a beefy GPU to use ovos-persona, any ) Tj
1 0 0 1 50 224 Tm (solver plugin can be used to define a persona) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (---) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (## Persona Pipeline \(Runtime Routing in OVOS-Core\)) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (Within `ovos-core`, the **[persona-pipeline]\(https://github.com/OpenVoiceOS/ovos-) Tj
1 0 0 1 50 126 Tm (persona\)** plugin handles all runtime logic for managing user interaction with AI agents.) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (### Key Features:) Tj
1 0 0 1 50 84 Tm (- **Persona Registry**: Supports multiple personas, defined by the user or discovered via ) Tj
1 0 0 1 50 70 Tm (installed plugins.) Tj
1 0 0 1 50 56 Tm (- **Session Control**: The user can say `"I want to talk with {persona_name}"` to route ) Tj
ET
endstream

endobj
414 0 obj
<< /Length 2732 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (their dialog to a specific persona.) Tj
1 0 0 1 50 728 Tm (- **Session End**: The user can disable the current persona at any time to return to ) Tj
1 0 0 1 50 714 Tm (normal assistant behavior.) Tj
1 0 0 1 50 700 Tm (- **Fallback Handling**: If OpenVoiceOS can't answer, the system can ask the default ) Tj
1 0 0 1 50 686 Tm (persona instead of speaking an error.) Tj
1 0 0 1 50 672 Tm (- **Extensible**: Potential for future enhancements via messagebus to adjust system ) Tj
1 0 0 1 50 658 Tm (behavior based on persona \(e.g., dynamic prompt rewriting\).) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (in your `mycroft.conf`) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (```json) Tj
1 0 0 1 50 588 Tm ({) Tj
1 0 0 1 50 574 Tm (  "intents": {) Tj
1 0 0 1 50 560 Tm (      "persona": {) Tj
1 0 0 1 50 546 Tm (        "handle_fallback":  true,) Tj
1 0 0 1 50 532 Tm (        "default_persona": "Remote Llama") Tj
1 0 0 1 50 518 Tm (      },) Tj
1 0 0 1 50 504 Tm (      "pipeline": [) Tj
1 0 0 1 50 490 Tm (          "stop_high",) Tj
1 0 0 1 50 476 Tm (          "converse",) Tj
1 0 0 1 50 462 Tm (          "ocp_high",) Tj
1 0 0 1 50 448 Tm (          "padatious_high",) Tj
1 0 0 1 50 434 Tm (          "adapt_high",) Tj
1 0 0 1 50 420 Tm (          "ovos-persona-pipeline-plugin-high",) Tj
1 0 0 1 50 406 Tm (          "ocp_medium",) Tj
1 0 0 1 50 392 Tm (          "...",) Tj
1 0 0 1 50 378 Tm (          "fallback_medium",) Tj
1 0 0 1 50 364 Tm (          "ovos-persona-pipeline-plugin-low",) Tj
1 0 0 1 50 350 Tm (          "fallback_low") Tj
1 0 0 1 50 336 Tm (    ]) Tj
1 0 0 1 50 322 Tm (  }) Tj
1 0 0 1 50 308 Tm (}) Tj
1 0 0 1 50 294 Tm (```) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (---) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (## OVOS as a Solver Plugin) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (An advanced trick: **`ovos-core` itself can act as a solver plugin**. This allows you to ) Tj
1 0 0 1 50 196 Tm (expose OVOS itself as an agent to other applications in localhost) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (![Untitled-2025-04-15-2340\(3\)]\(https://github.com/user-) Tj
1 0 0 1 50 154 Tm (attachments/assets/8022ff8a-5847-4bd7-93eb-316830ae7849\)) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (- ? Good for chaining OVOS instances in docker.) Tj
1 0 0 1 50 98 Tm (- ? Use skills in a collaborative AI / MoS \(mixture-of-solvers\) setup.) Tj
1 0 0 1 50 84 Tm (- ? `ovos-bus-solver-plugin` makes **no sense inside a local persona** \(infinite loop!\), ) Tj
1 0 0 1 50 70 Tm (but is **great for standalone usage**.) Tj
1 0 0 1 50 56 Tm (- ? Expose OVOS behind HTTP api via `ovos-persona-server` without exposing the messagebus ) Tj
ET
endstream

endobj
415 0 obj
<< /Length 2876 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (directly ) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (```json) Tj
1 0 0 1 50 700 Tm ({) Tj
1 0 0 1 50 686 Tm (  "name": "Open Voice OS",) Tj
1 0 0 1 50 672 Tm (  "solvers": [) Tj
1 0 0 1 50 658 Tm (    "ovos-solver-bus-plugin",) Tj
1 0 0 1 50 644 Tm (    "ovos-solver-failure-plugin") Tj
1 0 0 1 50 630 Tm (  ],) Tj
1 0 0 1 50 616 Tm (  "ovos-solver-bus-plugin": {) Tj
1 0 0 1 50 602 Tm (    "autoconnect": true,) Tj
1 0 0 1 50 588 Tm (    "host": "127.0.0.1",) Tj
1 0 0 1 50 574 Tm (    "port": 8181) Tj
1 0 0 1 50 560 Tm (  }) Tj
1 0 0 1 50 546 Tm (}) Tj
1 0 0 1 50 532 Tm (```) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (> ? if you are looking to access OVOS remotely or expose it as a service see [hivemind ) Tj
1 0 0 1 50 490 Tm (agents documentation]\(https://openvoiceos.github.io/ovos-technical-manual/152-hivemind-) Tj
1 0 0 1 50 476 Tm (agents/\) for a more secure alternative) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (---) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (## Summary Table) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (| Component            | Role                                                         |) Tj
1 0 0 1 50 378 Tm (|----------------------|--------------------------------------------------------------|) Tj
1 0 0 1 50 364 Tm (| **Solver Plugin**    | Stateless text-to-text inference \(e.g., Q&A, summarization\). |) Tj
1 0 0 1 50 350 Tm (| **Persona**          | Named agent composed of ordered solver plugins.              |) Tj
1 0 0 1 50 336 Tm (| **Persona Server**   | Expose personas to other Ollama/OpenAI compatible projects.  |) Tj
1 0 0 1 50 322 Tm (| **Persona Pipeline** | Handles persona activation and routing inside OVOS core.     |) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (By decoupling solvers, personas, and persona management, OVOS allows for powerful, ) Tj
1 0 0 1 50 266 Tm (customizable AI experiences, adaptable to both voice and text interactions across ) Tj
1 0 0 1 50 252 Tm (platforms.) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (# docs/151-llm-transformers.md) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (# Generative AI Transformer Plugins) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (**Transformer plugins** operate independently of personas and provide fine-grained control) Tj
1 0 0 1 50 140 Tm ( over OVOSs internal processing pipeline. They are not part of the persona framework but ) Tj
1 0 0 1 50 126 Tm (can synergize with it.) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (### Key Details:) Tj
1 0 0 1 50 84 Tm (- **Scope**: Transformers apply within the OVOS core pipelinenot inside personas \(though ) Tj
1 0 0 1 50 70 Tm (solver plugins can use them internally if desired\).) Tj
1 0 0 1 50 56 Tm (- **Independence**: Transformers and personas are separate systems. However, future ) Tj
ET
endstream

endobj
416 0 obj
<< /Length 2716 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (enhancements may allow dynamic interaction between the two \(e.g., a persona adjusting ) Tj
1 0 0 1 50 728 Tm (transformer settings\).) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (### Key Integration Points:) Tj
1 0 0 1 50 686 Tm (- **[Utterance Transformers]\(https://openvoiceos.github.io/ovos-technical-) Tj
1 0 0 1 50 672 Tm (manual//102-core/#utterance-transformers\)**: Operate between **STT \(Speech-to-Text\)** and ) Tj
1 0 0 1 50 658 Tm (**NLP \(Natural Language Processing\)**.) Tj
1 0 0 1 50 644 Tm (- **[Dialog Transformers]\(https://openvoiceos.github.io/ovos-technical-) Tj
1 0 0 1 50 630 Tm (manual//103-audio_service/#dialog-transformers\)**: Operate between **NLP** and **TTS ) Tj
1 0 0 1 50 616 Tm (\(Text-to-Speech\)**.) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (---) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (## Examples of Transformer Plugins Using AI Agents) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (#### ? OVOS Transcription Validator) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (This plugin validates the output of STT engines using a language model to filter out ) Tj
1 0 0 1 50 476 Tm (incorrect or incoherent transcriptions *before* they are passed to NLP.) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (**How It Works:**) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (1. Receives an STT transcript and its language code.) Tj
1 0 0 1 50 406 Tm (2. Sends both to an LLM prompt \(local or via Ollama\).) Tj
1 0 0 1 50 392 Tm (3. Gets a `True` or `False` response based on utterance validity.) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (**Configuration Snippet \(mycroft.conf\):**) Tj
1 0 0 1 50 350 Tm (```json) Tj
1 0 0 1 50 336 Tm ("utterance_transformers": {) Tj
1 0 0 1 50 322 Tm (  "ovos-transcription-validator-plugin": {) Tj
1 0 0 1 50 308 Tm (    "model": "gemma3:1b",) Tj
1 0 0 1 50 294 Tm (    "ollama_url": "http://192.168.1.200:11434",) Tj
1 0 0 1 50 280 Tm (    "prompt_template": "/path/to/template.txt",) Tj
1 0 0 1 50 266 Tm (    "error_sound": true,) Tj
1 0 0 1 50 252 Tm (    "mode": "reprompt") Tj
1 0 0 1 50 238 Tm (  }) Tj
1 0 0 1 50 224 Tm (}) Tj
1 0 0 1 50 210 Tm (```) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (**Use Case**: Prevent skills from being triggered by invalid STT output like `"Potato stop) Tj
1 0 0 1 50 168 Tm ( green light now yes."`) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (---) Tj
1 0 0 1 50 126 Tm (#### ?? Dialog Transformer) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (This plugin rewrites assistant responses based on a persona-style prompt, enabling tone or) Tj
1 0 0 1 50 70 Tm ( complexity adjustments.) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
417 0 obj
<< /Length 2879 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (**Example Prompt Use Cases:**) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (- `"Rewrite the text as if you were explaining it to a 5-year-old"`) Tj
1 0 0 1 50 700 Tm (- `"Explain it like you're teaching a child"`) Tj
1 0 0 1 50 686 Tm (- `"Make it sound like an angry old man"`) Tj
1 0 0 1 50 672 Tm (- `"Add more 'dude'ness to it"`) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (**Configuration Snippet \(mycroft.conf\):**) Tj
1 0 0 1 50 630 Tm (```json) Tj
1 0 0 1 50 616 Tm ("dialog_transformers": {) Tj
1 0 0 1 50 602 Tm (  "ovos-dialog-transformer-openai-plugin": {) Tj
1 0 0 1 50 588 Tm (    "rewrite_prompt": "rewrite the text as if you were explaining it to a 5-year-old") Tj
1 0 0 1 50 574 Tm (  }) Tj
1 0 0 1 50 560 Tm (}) Tj
1 0 0 1 50 546 Tm (```) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (This plugin often leverages LLMs through solver plugins but operates *after* the main ) Tj
1 0 0 1 50 504 Tm (dialog logic, adjusting the final output.) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (# docs/152-hivemind-agents.md) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (# Remote Agents with OpenVoiceOS) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (While OpenVoiceOS is designed primarily for **local-first usage**, more advanced ) Tj
1 0 0 1 50 378 Tm (deploymentslike hosting agents in the cloud, connecting multiple voice satellites, or ) Tj
1 0 0 1 50 364 Tm (enabling multi-user access through a web frontendare made possible via the **HiveMind** ) Tj
1 0 0 1 50 350 Tm (companion project.) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (---) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (## HiveMind Server) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (**HiveMind** is a distributed voice assistant framework that allows you to expose **AI ) Tj
1 0 0 1 50 252 Tm (Agents** \(either full ovos-core installs or just individual personas\) over a secure ) Tj
1 0 0 1 50 238 Tm (protocol.) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (> ? Unlike the lightweight `persona-server`, HiveMind is designed for trusted, networked ) Tj
1 0 0 1 50 196 Tm (setups.) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (**Key Features**:) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (- **Secure Access**: Communicates over the **HiveMind protocol**, which supports ) Tj
1 0 0 1 50 126 Tm (authentication, encryption and granular permissions  safe for exposing OVOS to remote ) Tj
1 0 0 1 50 112 Tm (clients or satellites.) Tj
1 0 0 1 50 98 Tm (- **Agent Plugins**: Agent plugins integrate the **HiveMind protocol** with various ) Tj
1 0 0 1 50 84 Tm (frameworks, including OpenVoiceOS. Keep your existing infrastructure even when you totally) Tj
1 0 0 1 50 70 Tm ( replaces the brains!) Tj
1 0 0 1 50 56 Tm (- **Multi-User Ready**: Great for use in **cloud hosting**, **web portals**, or ) Tj
ET
endstream

endobj
418 0 obj
<< /Length 2686 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (**enterprise environments** where access control is critical.) Tj
1 0 0 1 50 728 Tm (- **Composable**: Let **local personas delegate** questions to a smarter **remote OVOS ) Tj
1 0 0 1 50 714 Tm (instance**.) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (![]\(img/satellites.png\)) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (**Typical Use-cases**:) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (- ? Running OpenVoiceOS on a powerful server or in the cloud.) Tj
1 0 0 1 50 616 Tm (- ?? Connecting lightweight devices \(satellites\).) Tj
1 0 0 1 50 602 Tm (- ? Remote access to OpenVoiceOS.) Tj
1 0 0 1 50 588 Tm (- ????? Serving multiple users or applications concurrently.) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (Check out the [HiveMind documentation]\(https://jarbashivemind.github.io/HiveMind-) Tj
1 0 0 1 50 546 Tm (community-docs/\) for more info) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (---) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (## HiveMind Personas) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (The `hivemind-persona-agent-plugin` project allows you to **expose a single persona**not ) Tj
1 0 0 1 50 448 Tm (the full OVOS stackthrough hivemind) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (This enables you to deploy AI agents for external use without needing a full OVOS ) Tj
1 0 0 1 50 406 Tm (assistant.) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (![Untitled-2025-04-15-2340\(15\)]\(https://github.com/user-) Tj
1 0 0 1 50 364 Tm (attachments/assets/f71d24c2-8a12-472b-9a44-3034fe6595e3\)) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (### Why Use It?) Tj
1 0 0 1 50 308 Tm (- Minimal attack surface \(persona only, no full assistant features\).) Tj
1 0 0 1 50 294 Tm (- Can be queried remotely using the HiveMind protocol.) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (> ? This is **not** the same as `persona-server`. `hivemind-persona-agent-plugin` uses a ) Tj
1 0 0 1 50 252 Tm (**secure protocol** \(HiveMind\), while `ovos-persona-server` uses insecure HTTP.) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (### Server Configuration) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (in your hivemind config file `~/.config/hivemind-core/server.json`) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (```json) Tj
1 0 0 1 50 154 Tm ({) Tj
1 0 0 1 50 140 Tm (  "agent_protocol": {) Tj
1 0 0 1 50 126 Tm (    "module": "hivemind-persona-agent-plugin",) Tj
1 0 0 1 50 112 Tm (    "hivemind-persona-agent-plugin": {) Tj
1 0 0 1 50 98 Tm (      "persona": {) Tj
1 0 0 1 50 84 Tm (	  "name": "Llama",) Tj
1 0 0 1 50 70 Tm (	  "solvers": [) Tj
1 0 0 1 50 56 Tm (		"ovos-solver-openai-plugin") Tj
ET
endstream

endobj
419 0 obj
<< /Length 2464 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (	  ],) Tj
1 0 0 1 50 728 Tm (	  "ovos-solver-openai-plugin": {) Tj
1 0 0 1 50 714 Tm (		"api_url": "https://llama.smartgic.io/v1",) Tj
1 0 0 1 50 700 Tm (		"key": "sk-xxxx",) Tj
1 0 0 1 50 686 Tm (		"persona": "helpful, creative, clever, and very friendly.") Tj
1 0 0 1 50 672 Tm (	  }) Tj
1 0 0 1 50 658 Tm (	}) Tj
1 0 0 1 50 644 Tm (    }) Tj
1 0 0 1 50 630 Tm (  }) Tj
1 0 0 1 50 616 Tm (}) Tj
1 0 0 1 50 602 Tm (```) Tj
1 0 0 1 50 588 Tm (---) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (## HiveMind as a Solver Plugin) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (Want your local assistant to ask a remote one when it's stuck? You can!) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (The hivemind-bus-client can function as a solver plugin, allowing you to:) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (- ? Delegate processing to a more powerful/secure server for specific tasks.) Tj
1 0 0 1 50 462 Tm (- ? Handle outages: Handle intermitent local agent failures from other solver plugins in ) Tj
1 0 0 1 50 448 Tm (your persona definition) Tj
1 0 0 1 50 434 Tm (- ? Use remote hivemind agents in a collaborative AI / MoS \(mixture-of-solvers\) setup.) Tj
1 0 0 1 50 420 Tm (  ) Tj
1 0 0 1 50 406 Tm (![Untitled-2025-04-15-2340\(14\)]\(https://github.com/user-) Tj
1 0 0 1 50 392 Tm (attachments/assets/3222e4f3-ba75-4e95-9775-7a39c8e06381\)) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (> ? *When in doubt, ask a smarter OVOS.*) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (For usage with persona, use `"ovos-solver-hivemind-plugin"` for the solver id) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (```json) Tj
1 0 0 1 50 280 Tm ({) Tj
1 0 0 1 50 266 Tm (  "name": "HiveMind Agent",) Tj
1 0 0 1 50 252 Tm (  "solvers": [) Tj
1 0 0 1 50 238 Tm (    "ovos-solver-hivemind-plugin") Tj
1 0 0 1 50 224 Tm (  ],) Tj
1 0 0 1 50 210 Tm (  "ovos-solver-hivemind-plugin": {"autoconnect": true}) Tj
1 0 0 1 50 196 Tm (}) Tj
1 0 0 1 50 182 Tm (```) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (You can also use it in your own python projects) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (```python) Tj
1 0 0 1 50 112 Tm (from ovos_hivemind_solver import HiveMindSolver) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (bot = HiveMindSolver\(\)) Tj
1 0 0 1 50 70 Tm (bot.connect\(\)  # connection info from identity file) Tj
1 0 0 1 50 56 Tm (print\(bot.spoken_answer\("what is the speed of light?"\)\)) Tj
ET
endstream

endobj
420 0 obj
<< /Length 3434 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (```) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (---) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (## Chaining Components for Flexible Deployments) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (HiveMind and persona-server can be combined to bridge secure and insecure environments, ) Tj
1 0 0 1 50 630 Tm (depending on your needs:) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (- expose existing OpenAI/Ollama servers to hivemind satellites **securely**) Tj
1 0 0 1 50 588 Tm (    - connect hivemind satellites directly to existing LLM apps \(eg. ollama\)) Tj
1 0 0 1 50 574 Tm (- expose a remote `hivemind-core` to local **insecure** ollama/openai endpoints) Tj
1 0 0 1 50 560 Tm (    - eg. to integrate hivemind into HomeAssistant) Tj
1 0 0 1 50 546 Tm (-  expose a localhost `ovos-core`/`persona.json` to local **insecure** ollama/openai ) Tj
1 0 0 1 50 532 Tm (endpoints) Tj
1 0 0 1 50 518 Tm (    - half-way compromise, does not expose the full messagebus and does not require ) Tj
1 0 0 1 50 504 Tm (hivemind) Tj
1 0 0 1 50 490 Tm (    - easier to setup and configure) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (| Use Case                          | Tool                   | Secure? | API Type) Tj
1 0 0 1 50 434 Tm (              | Notes                                                | ) Tj
1 0 0 1 50 420 Tm (|----------------------------------|------------------------|---------|-------------------) Tj
1 0 0 1 50 406 Tm (-----|------------------------------------------------------|) Tj
1 0 0 1 50 392 Tm (| Local interface + Persona | `ovos-persona-server` + `persona.json`    | ?      | OpenAI-) Tj
1 0 0 1 50 378 Tm (compatible      | Great for quick setups, not public exposure`,HTTP, no auth |) Tj
1 0 0 1 50 364 Tm (| Local interface + OpenVoiceOS | `ovos-persona-server` + `ovos-solver-bus-plugin`      | ) Tj
1 0 0 1 50 350 Tm (?      | OpenAI-compatible    | OpenVoiceOS bus must be exposed to `ovos-persona-) Tj
1 0 0 1 50 336 Tm (server`,HTTP, no auth |) Tj
1 0 0 1 50 322 Tm (| Local interface + HiveMind Agent | `ovos-persona-server` + `ovos-solver-hivemind-plugin`) Tj
1 0 0 1 50 308 Tm (      | ?      | OpenAI-compatible      | Same as above, but for any remote hivemind ) Tj
1 0 0 1 50 294 Tm (agent,HTTP, no auth |) Tj
1 0 0 1 50 280 Tm (| Secure remote OpenVoiceOS agent  | `hivemind-core` + `hivemind-ovos-agent-plugin` + ) Tj
1 0 0 1 50 266 Tm (`ovos-core`    | ?      | HiveMind protocol      | Auth, encryption, granular permissions,) Tj
1 0 0 1 50 252 Tm ( HTTP or Websockets                   |) Tj
1 0 0 1 50 238 Tm (| Secure remote Persona agent      | `hivemind-core` + `hivemind-persona-agent-plugin` + ) Tj
1 0 0 1 50 224 Tm (`persona.json`    | ?      | HiveMind protocol      | Auth, encryption, granular ) Tj
1 0 0 1 50 210 Tm (permissions, HTTP or Websockets                       |) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (The first 3 examples allow us to integrate our Agents with HomeAssistant via the Ollama ) Tj
1 0 0 1 50 154 Tm (Integration) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (The last 2 examples allow us to integrate with HiveMind ecosystem and all the existing ) Tj
1 0 0 1 50 112 Tm (satellite implementations) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (---) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (## ?? Related \(Insecure\) Alternatives) Tj
ET
endstream

endobj
421 0 obj
<< /Length 2801 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (While useful for experimentation, some other persona access methods are **not secure** for) Tj
1 0 0 1 50 714 Tm ( remote use:) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (? `ovos-persona-server`:) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (- ? Compatible with **OpenAI/Ollama APIs**.) Tj
1 0 0 1 50 644 Tm (- ? **HTTP only**, not encrypted or authenticated.) Tj
1 0 0 1 50 630 Tm (- ? Useful to expose personas to **HomeAssistant**, **OpenWebUI**, and similar local ) Tj
1 0 0 1 50 616 Tm (network tools.) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (? HomeAssistant + `ovos-persona-server`:) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (- ?? Can route HomeAssistant **wyoming satellites** to an OVOS persona.) Tj
1 0 0 1 50 546 Tm (- ? Uses **Wyoming protocol**, which lacks hivemind's security features.) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (# docs/153-persona_pipeline.md) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (# Persona Pipeline) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (The **`ovos-persona-pipeline-plugin`** provides a dynamic way to integrate persona-based ) Tj
1 0 0 1 50 420 Tm (conversational behavior into the OVOS pipeline system. It allows you to route user ) Tj
1 0 0 1 50 406 Tm (utterances to AI personas instead of skill matchers, depending on context and ) Tj
1 0 0 1 50 392 Tm (configuration.) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (---) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (## Overview) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (The `persona-pipeline` is a plugin for the OVOS pipeline architecture. It dynamically ) Tj
1 0 0 1 50 294 Tm (delegates user utterances to a configured **Persona**, which attempts to resolve the ) Tj
1 0 0 1 50 280 Tm (intent using a sequence of **Solver Plugins** \(e.g., LLMs, search tools, knowledge bases\).) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (You can configure it to:) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (- ? Intercept all utterances and give full control to the persona.) Tj
1 0 0 1 50 210 Tm (- ? Fall back to the persona only if skills don't match.) Tj
1 0 0 1 50 196 Tm (- ?? Operate based on confidence tiers \(high/medium/low\).) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (---) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (## Plugin Structure) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (The plugin is composed of two components:) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (| Plugin Name                            | Usage                            |) Tj
1 0 0 1 50 70 Tm (|----------------------------------------|----------------------------------|) Tj
1 0 0 1 50 56 Tm (| `ovos-persona-pipeline-plugin-high`    | For active persona interactions  |) Tj
ET
endstream

endobj
422 0 obj
<< /Length 2475 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (| `ovos-persona-pipeline-plugin-low`     | Fallback persona handling        |) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (You must **insert these plugin IDs** in your `mycroft.conf` under the `intents.pipeline` ) Tj
1 0 0 1 50 700 Tm (key to activate persona handling at the appropriate tier.) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (---) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (## Configuration) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (```json) Tj
1 0 0 1 50 602 Tm ({) Tj
1 0 0 1 50 588 Tm (  "intents": {) Tj
1 0 0 1 50 574 Tm (    "persona": {) Tj
1 0 0 1 50 560 Tm (      "handle_fallback": true,) Tj
1 0 0 1 50 546 Tm (      "default_persona": "Remote Llama",) Tj
1 0 0 1 50 532 Tm (      "short-term-memory": true) Tj
1 0 0 1 50 518 Tm (    },) Tj
1 0 0 1 50 504 Tm (    "pipeline": [) Tj
1 0 0 1 50 490 Tm (      // Depending on strategy, insert plugin here) Tj
1 0 0 1 50 476 Tm (    ]) Tj
1 0 0 1 50 462 Tm (  }) Tj
1 0 0 1 50 448 Tm (}) Tj
1 0 0 1 50 434 Tm (```) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (### `persona` section options:) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (| Key                  | Description) Tj
1 0 0 1 50 364 Tm (                                                                 |) Tj
1 0 0 1 50 350 Tm (|----------------------|------------------------------------------------------------------) Tj
1 0 0 1 50 336 Tm (-----------|) Tj
1 0 0 1 50 322 Tm (| `handle_fallback`    | Enables fallback routing when no persona is active) Tj
1 0 0 1 50 308 Tm (                          |) Tj
1 0 0 1 50 294 Tm (| `default_persona`    | Sets a persona to use by default \(e.g., after boot or reset\)) Tj
1 0 0 1 50 280 Tm (                |) Tj
1 0 0 1 50 266 Tm (| `short-term-memory`  | Maintains conversation state within a session \(boolean\)) Tj
1 0 0 1 50 252 Tm (                     |) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (---) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (## Pipeline Strategies) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (### 1. **Full Control \(Persona-First\)**) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (In this mode, **personas override** all skills. The persona handles every utterance unless) Tj
1 0 0 1 50 126 Tm ( explicitly deactivated.) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (```jsonc) Tj
1 0 0 1 50 84 Tm ("pipeline": [) Tj
1 0 0 1 50 70 Tm (  "ovos-persona-pipeline-plugin-high",) Tj
1 0 0 1 50 56 Tm (  "stop_high",) Tj
ET
endstream

endobj
423 0 obj
<< /Length 2129 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (  "converse",) Tj
1 0 0 1 50 728 Tm (  "padatious_high",) Tj
1 0 0 1 50 714 Tm (  "adapt_high",) Tj
1 0 0 1 50 700 Tm (  ...) Tj
1 0 0 1 50 686 Tm (]) Tj
1 0 0 1 50 672 Tm (```) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (- ? Best for immersive chatbot experiences) Tj
1 0 0 1 50 630 Tm (- ?? Skills like music, alarms, and weather will not trigger unless persona is disabled) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (---) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (### 2. **Hybrid Mode \(Skills First\)**) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (Only unmatched or low-confidence utterances are routed to the persona.) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (```jsonc) Tj
1 0 0 1 50 504 Tm ("pipeline": [) Tj
1 0 0 1 50 490 Tm (  "stop_high",) Tj
1 0 0 1 50 476 Tm (  "converse",) Tj
1 0 0 1 50 462 Tm (  "padatious_high",) Tj
1 0 0 1 50 448 Tm (  "adapt_high",) Tj
1 0 0 1 50 434 Tm (  "ovos-persona-pipeline-plugin-high",) Tj
1 0 0 1 50 420 Tm (  "fallback_medium",) Tj
1 0 0 1 50 406 Tm (  ...) Tj
1 0 0 1 50 392 Tm (]) Tj
1 0 0 1 50 378 Tm (```) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (- ? Preserves traditional voice assistant behavior) Tj
1 0 0 1 50 336 Tm (- ? Persona fills in where skills fall short) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (---) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (### 3. **Fallback Mode Only**) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (Even when no persona is active, this mode allows the pipeline to fall back to a **default ) Tj
1 0 0 1 50 238 Tm (persona** for unmatched utterances.) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (```jsonc) Tj
1 0 0 1 50 196 Tm ("pipeline": [) Tj
1 0 0 1 50 182 Tm (  ...) Tj
1 0 0 1 50 168 Tm (  "fallback_medium",) Tj
1 0 0 1 50 154 Tm (  "ovos-persona-pipeline-plugin-low",) Tj
1 0 0 1 50 140 Tm (  "fallback_low") Tj
1 0 0 1 50 126 Tm (]) Tj
1 0 0 1 50 112 Tm (```) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (- ? Replaces `skill-ovos-fallback-chatgpt`) Tj
1 0 0 1 50 70 Tm (- ? Fallbacks to a default persona response for a consistent assistant feel) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
424 0 obj
<< /Length 2259 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (---) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (## Persona Resolution Flow) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (1. **Utterance Received**) Tj
1 0 0 1 50 672 Tm (2. Pipeline matchers are checked in order.) Tj
1 0 0 1 50 658 Tm (3. If `persona-pipeline` is reached:) Tj
1 0 0 1 50 644 Tm (    - If a persona is **active**, send utterance to that persona.) Tj
1 0 0 1 50 630 Tm (    - If no persona is active and `handle_fallback` is enabled, use the ) Tj
1 0 0 1 50 616 Tm (**default_persona**.) Tj
1 0 0 1 50 602 Tm (4. The persona delegates to its configured **solvers** until one returns a response.) Tj
1 0 0 1 50 588 Tm (5. The pipeline returns the matched response back to the user.) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (---) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (## Persona Configuration) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (Personas are defined in:) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (```) Tj
1 0 0 1 50 462 Tm (~/.config/ovos_persona/*.json) Tj
1 0 0 1 50 448 Tm (```) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (### Example:) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (```json) Tj
1 0 0 1 50 378 Tm ({) Tj
1 0 0 1 50 364 Tm (  "name": "Remote Llama",) Tj
1 0 0 1 50 350 Tm (  "solvers": [) Tj
1 0 0 1 50 336 Tm (    "ovos-solver-openai-plugin",) Tj
1 0 0 1 50 322 Tm (    "ovos-solver-failure-plugin") Tj
1 0 0 1 50 308 Tm (  ],) Tj
1 0 0 1 50 294 Tm (  "ovos-solver-openai-plugin": {) Tj
1 0 0 1 50 280 Tm (    "api_url": "https://llama.smartgic.io/v1",) Tj
1 0 0 1 50 266 Tm (    "key": "sk-xxx",) Tj
1 0 0 1 50 252 Tm (    "persona": "friendly and concise assistant") Tj
1 0 0 1 50 238 Tm (  }) Tj
1 0 0 1 50 224 Tm (}) Tj
1 0 0 1 50 210 Tm (```) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (Each persona defines a `solvers` list.) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (- Solvers are attempted **in order**.) Tj
1 0 0 1 50 140 Tm (- The first solver to return a valid result ends the search.) Tj
1 0 0 1 50 126 Tm (- Include a `"ovos-solver-failure-plugin"` as a final fallback for graceful error ) Tj
1 0 0 1 50 112 Tm (handling.) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (---) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (## Persona Intents) Tj
ET
endstream

endobj
425 0 obj
<< /Length 2378 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (`"ovos-persona-pipeline-plugin-high"` supports a set of core voice intents to manage ) Tj
1 0 0 1 50 714 Tm (persona interactions seamlessly. ) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (These intents provide **out-of-the-box functionality** for controlling the Persona ) Tj
1 0 0 1 50 672 Tm (Service, ensuring smooth integration with the conversational pipeline and enhancing user ) Tj
1 0 0 1 50 658 Tm (experience.) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (### **List Personas**) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (**Example Utterances**:) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (- "What personas are available?") Tj
1 0 0 1 50 560 Tm (- "Can you list the personas?") Tj
1 0 0 1 50 546 Tm (- "What personas can I use?") Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (### **Check Active Persona**) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (**Example Utterances**:) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (- "Who am I talking to right now?") Tj
1 0 0 1 50 448 Tm (- "Is there an active persona?") Tj
1 0 0 1 50 434 Tm (- "Which persona is in use?") Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (### **Activate a Persona**) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (**Example Utterances**:) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (- "Connect me to {persona}") Tj
1 0 0 1 50 336 Tm (- "Enable {persona}") Tj
1 0 0 1 50 322 Tm (- "Awaken the {persona} assistant") Tj
1 0 0 1 50 308 Tm (- "Start a conversation with {persona}") Tj
1 0 0 1 50 294 Tm (- "Let me chat with {persona}") Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (### **Single-Shot Persona Questions**) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (Enables users to query a persona directly without entering an interactive session.) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (**Example Utterances**:) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (- "Ask {persona} what they think about {utterance}") Tj
1 0 0 1 50 154 Tm (- "What does {persona} say about {utterance}?") Tj
1 0 0 1 50 140 Tm (- "Query {persona} for insights on {utterance}") Tj
1 0 0 1 50 126 Tm (- "Ask {persona} for their perspective on {utterance}") Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (### **Stop Conversation**) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (**Example Utterances**:) Tj
ET
endstream

endobj
426 0 obj
<< /Length 2145 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (- "Stop the interaction") Tj
1 0 0 1 50 714 Tm (- "Terminate persona") Tj
1 0 0 1 50 700 Tm (- "Deactivate the chatbot") Tj
1 0 0 1 50 686 Tm (- "Go dormant") Tj
1 0 0 1 50 672 Tm (- "Enough talking") Tj
1 0 0 1 50 658 Tm (- "Shut up") Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (---) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (# docs/199-WIP_ovos_media.md) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (# ovos-media  ) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (> **EXPERIMENTAL** - **NEW** `ovos-core` version **0.0.8**) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (ovos-media is a work in progress, it does not yet ship with OVOS by default, but it can be) Tj
1 0 0 1 50 462 Tm ( manually enabled) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (In order to use ovos-media you need to enable the OCP pipeline in ovos-core and to disable) Tj
1 0 0 1 50 420 Tm ( the old audio service ) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (disabling old audio service) Tj
1 0 0 1 50 378 Tm (```json) Tj
1 0 0 1 50 364 Tm ({) Tj
1 0 0 1 50 350 Tm (  "enable_old_audioservice": false) Tj
1 0 0 1 50 336 Tm (}) Tj
1 0 0 1 50 322 Tm (```) Tj
1 0 0 1 50 308 Tm (Enabling OCP pipeline) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (```javascript) Tj
1 0 0 1 50 266 Tm ({) Tj
1 0 0 1 50 252 Tm (  // Intent Pipeline / plugins config) Tj
1 0 0 1 50 238 Tm (  "intents" : {) Tj
1 0 0 1 50 224 Tm (    // the pipeline is a ordered set of frameworks to send an utterance too) Tj
1 0 0 1 50 210 Tm (    // if one of the frameworks fails the next one is used, until an answer is found) Tj
1 0 0 1 50 196 Tm (    "pipeline": [) Tj
1 0 0 1 50 182 Tm (        "converse",) Tj
1 0 0 1 50 168 Tm (        "ocp_high",) Tj
1 0 0 1 50 154 Tm (        "...",) Tj
1 0 0 1 50 140 Tm (        "common_qa",) Tj
1 0 0 1 50 126 Tm (        "ocp_medium",) Tj
1 0 0 1 50 112 Tm (        "...",) Tj
1 0 0 1 50 98 Tm (        "ocp_fallback",) Tj
1 0 0 1 50 84 Tm (        "fallback_low") Tj
1 0 0 1 50 70 Tm (    ]) Tj
1 0 0 1 50 56 Tm (  }) Tj
ET
endstream

endobj
427 0 obj
<< /Length 2616 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (}) Tj
1 0 0 1 50 728 Tm (```) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (## OCP) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (![]\(https://github.com/OpenVoiceOS/ovos_assets/blob/master/Logo/ocp.png?raw=true\)) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm ([OCP]\(https://github.com/OpenVoiceOS/ovos-ocp-audio-plugin\) stands for OpenVoiceOS Common ) Tj
1 0 0 1 50 616 Tm (Play, it is a full-fledged) Tj
1 0 0 1 50 602 Tm (media player service that can handle audio and video) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (> **DEPRECATION WARNING** OCP is in the process of migrating from a audio plugin to ovos-) Tj
1 0 0 1 50 560 Tm (media service, ) Tj
1 0 0 1 50 546 Tm (this documentation is not valid for `ovos-core` version **0.0.7**) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (OCP provides a pipeline component specialized in matching media queries.) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (The pipeline classifies the media type \(movie, music, podcast...\) and queries OCP skills ) Tj
1 0 0 1 50 476 Tm (for results, you can read more about the [OCP Pipeline docs]\(\)) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (## Architecture) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (![imagem]\(https://github.com/NeonJarbas/ovos-) Tj
1 0 0 1 50 392 Tm (media/assets/59943014/7dc1d635-4340-43db-a38d-294cfedab70f\)) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (## Media Intents) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (Before regular intent stage, taking into account current OCP state  \(media ready to play /) Tj
1 0 0 1 50 308 Tm ( playing\)) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (- `"play {query}"`) Tj
1 0 0 1 50 266 Tm (- `"previous"`  \(media needs to be loaded\)) Tj
1 0 0 1 50 252 Tm (- `"next"`  \(media needs to be loaded\)) Tj
1 0 0 1 50 238 Tm (- `"pause"`  \(media needs to be loaded\)) Tj
1 0 0 1 50 224 Tm (- `"play"` / `"resume"` \(media needs to be loaded\)) Tj
1 0 0 1 50 210 Tm (- `"stop"` \(media needs to be loaded\)) Tj
1 0 0 1 50 196 Tm (- `"I like that song"`  \(music needs to be playing\)) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (## MPRIS integration) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (OCP Integrates with MPRIS allows OCP to control external players) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (![imagem]\(https://github.com/NeonJarbas/ovos-) Tj
1 0 0 1 50 98 Tm (media/assets/33701864/856c0228-8fc5-4ee6-a19d-4290f2e07258\)) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (### Sync with external players) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
428 0 obj
<< /Length 2700 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (Via MPRIS OCP can control and display data from external players, ) Tj
1 0 0 1 50 728 Tm (if using KDEConnect this includes playback in connected devices) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (See a demo here) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm ([![demo video]\(https://img.youtube.com/vi/1KMFV0UVYEM/default.jpg\)]\(https://www.youtube.co) Tj
1 0 0 1 50 658 Tm (m/watch?v=1KMFV0UVYEM\)) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (This also includes voice intents, allowing you for example to voice control spotify) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (### Manage multiple players) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (If OCP is set to manage external players it will ensure only one of them is playing media ) Tj
1 0 0 1 50 560 Tm (at once, ) Tj
1 0 0 1 50 546 Tm (if using KDEConnect this includes playback in connected devices) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (See a demo here \(**warning**: contains black metal\)) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm ([![demo video]\(https://img.youtube.com/vi/YzC7oFYCcRE/default.jpg\)]\(https://www.youtube.co) Tj
1 0 0 1 50 476 Tm (m/watch?v=YzC7oFYCcRE\)) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (## Skills Menu) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (Some skills provide featured_media, you can access these from the OCP menu) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (![]\(https://github.com/OpenVoiceOS/ovos_assets/raw/master/Images/ocp/ocp_skills.gif\)) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (## Homescreen widget) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (The homescreen skill that comes pre-installed with OpenVoiceOS also comes with a widget ) Tj
1 0 0 1 50 308 Tm (for the OCP framework.) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (![]\(https://raw.githubusercontent.com/OpenVoiceOS/ovos_assets/master/Images/homescreen-) Tj
1 0 0 1 50 266 Tm (mediawidget.gif\)) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (## File Browser integration) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (selected files will be played in OCP) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (![]\(https://github.com/OpenVoiceOS/ovos_assets/raw/master/Images/ocp/ocp_file_browser.gif\)) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (folders are considered playlists) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (![]\(https://github.com/OpenVoiceOS/ovos_assets/raw/master/Images/ocp/folder_playlist.gif\)) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (## Favorite Songs) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (You can like a song that is currently playing via GUI and intent "I like that song") Tj
ET
endstream

endobj
429 0 obj
<< /Length 2852 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (![like]\(https://github.com/OpenVoiceOS/ovos-) Tj
1 0 0 1 50 714 Tm (media/assets/33701864/27aee29a-ca3b-4c73-992e-9fd5ef513f4d\)) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (Liked songs can be played via intent "play my favorite songs" or GUI) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (![favs]\(https://github.com/OpenVoiceOS/ovos-) Tj
1 0 0 1 50 644 Tm (media/assets/33701864/cdf7a682-c417-43f7-a4ae-589b07de55cf\)) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (## Configuration) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (under mycroft.conf) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (```javascript) Tj
1 0 0 1 50 532 Tm ({) Tj
1 0 0 1 50 518 Tm (  // Configure ovos-media service) Tj
1 0 0 1 50 504 Tm (  // similarly to wakewords, configure any number of playback handlers) Tj
1 0 0 1 50 490 Tm (  // playback handlers might be local applications or even remote devices) Tj
1 0 0 1 50 476 Tm (  "media": {) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (    // order of preference to try playback handlers) Tj
1 0 0 1 50 434 Tm (    // if unavailable or unable to handle a uri, the next in list is used) Tj
1 0 0 1 50 420 Tm (    // NB: users may request specific handlers in the utterance) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (    // keys are the strings defined in "audio_players") Tj
1 0 0 1 50 378 Tm (    "preferred_audio_services": ["gui", "vlc", "mplayer", "cli"],) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (    // keys are the strings defined in "web_players") Tj
1 0 0 1 50 336 Tm (    "preferred_web_services": ["gui", "browser"],) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (    // keys are the strings defined in "video_players") Tj
1 0 0 1 50 294 Tm (    "preferred_video_services": ["gui", "vlc"],) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (    // PlaybackType.AUDIO handlers) Tj
1 0 0 1 50 252 Tm (    "audio_players": {) Tj
1 0 0 1 50 238 Tm (        // vlc player uses a headless vlc instance to handle uris) Tj
1 0 0 1 50 224 Tm (        "vlc": {) Tj
1 0 0 1 50 210 Tm (            // the plugin name) Tj
1 0 0 1 50 196 Tm (            "module": "ovos-media-audio-plugin-vlc",) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (            // friendly names a user may use to refer to this playback handler) Tj
1 0 0 1 50 154 Tm (            // those will be parsed by OCP and used to initiate) Tj
1 0 0 1 50 140 Tm (            // playback in the request playback handler) Tj
1 0 0 1 50 126 Tm (            "aliases": ["VLC"],) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (            // deactivate a plugin by setting to false) Tj
1 0 0 1 50 84 Tm (            "active": true) Tj
1 0 0 1 50 70 Tm (        },) Tj
1 0 0 1 50 56 Tm (        // command line player uses configurable shell commands with file uris as ) Tj
ET
endstream

endobj
430 0 obj
<< /Length 2978 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (arguments) Tj
1 0 0 1 50 728 Tm (        "cli": {) Tj
1 0 0 1 50 714 Tm (            // the plugin name) Tj
1 0 0 1 50 700 Tm (            "module": "ovos-media-audio-plugin-cli",) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (            // friendly names a user may use to refer to this playback handler) Tj
1 0 0 1 50 658 Tm (            // those will be parsed by OCP and used to initiate) Tj
1 0 0 1 50 644 Tm (            // playback in the request playback handler) Tj
1 0 0 1 50 630 Tm (            "aliases": ["Command Line"],) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (            // deactivate a plugin by setting to false) Tj
1 0 0 1 50 588 Tm (            "active": true) Tj
1 0 0 1 50 574 Tm (        },) Tj
1 0 0 1 50 560 Tm (        // gui uses mycroft-gui natively to handle uris) Tj
1 0 0 1 50 546 Tm (        "gui": {) Tj
1 0 0 1 50 532 Tm (            // the plugin name) Tj
1 0 0 1 50 518 Tm (            "module": "ovos-media-audio-plugin-gui",) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (            // friendly names a user may use to refer to this playback handler) Tj
1 0 0 1 50 476 Tm (            // those will be parsed by OCP and used to initiate) Tj
1 0 0 1 50 462 Tm (            // playback in the request playback handler) Tj
1 0 0 1 50 448 Tm (            "aliases": ["GUI", "Graphical User Interface"],) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (            // deactivate a plugin by setting to false) Tj
1 0 0 1 50 406 Tm (            "active": true) Tj
1 0 0 1 50 392 Tm (        }) Tj
1 0 0 1 50 378 Tm (    },) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (    // PlaybackType.VIDEO handlers) Tj
1 0 0 1 50 336 Tm (    "video_players": {) Tj
1 0 0 1 50 322 Tm (        // vlc player uses a headless vlc instance to handle uris) Tj
1 0 0 1 50 308 Tm (        "vlc": {) Tj
1 0 0 1 50 294 Tm (            // the plugin name) Tj
1 0 0 1 50 280 Tm (            "module": "ovos-media-video-plugin-vlc",) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (            // friendly names a user may use to refer to this playback handler) Tj
1 0 0 1 50 238 Tm (            // those will be parsed by OCP and used to initiate) Tj
1 0 0 1 50 224 Tm (            // playback in the request playback handler) Tj
1 0 0 1 50 210 Tm (            "aliases": ["VLC"],) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (            // deactivate a plugin by setting to false) Tj
1 0 0 1 50 168 Tm (            "active": true) Tj
1 0 0 1 50 154 Tm (        },) Tj
1 0 0 1 50 140 Tm (        // gui uses mycroft-gui natively to handle uris) Tj
1 0 0 1 50 126 Tm (        "gui": {) Tj
1 0 0 1 50 112 Tm (            // the plugin name) Tj
1 0 0 1 50 98 Tm (            "module": "ovos-media-video-plugin-gui",) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (            // friendly names a user may use to refer to this playback handler) Tj
1 0 0 1 50 56 Tm (            // those will be parsed by OCP and used to initiate) Tj
ET
endstream

endobj
431 0 obj
<< /Length 2966 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (            // playback in the request playback handler) Tj
1 0 0 1 50 728 Tm (            "aliases": ["GUI", "Graphical User Interface"],) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (            // deactivate a plugin by setting to false) Tj
1 0 0 1 50 686 Tm (            "active": true) Tj
1 0 0 1 50 672 Tm (        }) Tj
1 0 0 1 50 658 Tm (    },) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (    // PlaybackType.WEBVIEW handlers) Tj
1 0 0 1 50 616 Tm (    "web_players": {) Tj
1 0 0 1 50 602 Tm (        // open url in the native browser) Tj
1 0 0 1 50 588 Tm (        "browser": {) Tj
1 0 0 1 50 574 Tm (            // the plugin name) Tj
1 0 0 1 50 560 Tm (            "module": "ovos-media-web-plugin-browser",) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (            // friendly names a user may use to refer to this playback handler) Tj
1 0 0 1 50 518 Tm (            // those will be parsed by OCP and used to initiate) Tj
1 0 0 1 50 504 Tm (            // playback in the request playback handler) Tj
1 0 0 1 50 490 Tm (            "aliases": ["Browser", "Local Browser", "Default Browser"],) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (            // deactivate a plugin by setting to false) Tj
1 0 0 1 50 448 Tm (            "active": true) Tj
1 0 0 1 50 434 Tm (        },) Tj
1 0 0 1 50 420 Tm (        // gui uses mycroft-gui natively to handle uris) Tj
1 0 0 1 50 406 Tm (        "gui": {) Tj
1 0 0 1 50 392 Tm (            // the plugin name) Tj
1 0 0 1 50 378 Tm (            "module": "ovos-media-web-plugin-gui",) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (            // friendly names a user may use to refer to this playback handler) Tj
1 0 0 1 50 336 Tm (            // those will be parsed by OCP and used to initiate) Tj
1 0 0 1 50 322 Tm (            // playback in the request playback handler) Tj
1 0 0 1 50 308 Tm (            "aliases": ["GUI", "Graphical User Interface"],) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (            // deactivate a plugin by setting to false) Tj
1 0 0 1 50 266 Tm (            "active": true) Tj
1 0 0 1 50 252 Tm (        }) Tj
1 0 0 1 50 238 Tm (    }) Tj
1 0 0 1 50 224 Tm (  }) Tj
1 0 0 1 50 210 Tm (}) Tj
1 0 0 1 50 196 Tm (```) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (## Troubleshooting) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (Having trouble getting OCP to run properly and be exposed as an MPRIS media player? Check ) Tj
1 0 0 1 50 126 Tm (the following:) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (- The `DBUS_SESSION_BUS_ADDRESS` environment variable is what OCP uses to try to connect ) Tj
1 0 0 1 50 84 Tm (to [`dbus`]\(https://www.freedesktop.org/wiki/Software/dbus/\). On an OVOS system it will ) Tj
1 0 0 1 50 70 Tm (look something like `unix:path=/run/user/1000/bus`. To get the right user ID, run `id -u`.) Tj
1 0 0 1 50 56 Tm (  - If `DBUS_SESSION_BUS_ADDRESS` is not set, the next place OCP checks is the `DISPLAY` ) Tj
ET
endstream

endobj
432 0 obj
<< /Length 2915 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (environment variable. If this is set and looks similar to the value above, then you can ) Tj
1 0 0 1 50 728 Tm (probably exclude `DBUS_SESSION_BUS_ADDRESS`, but if neither are set then use ) Tj
1 0 0 1 50 714 Tm (`DBUS_SESSION_BUS_ADDRESS`.) Tj
1 0 0 1 50 700 Tm (- Make sure your OCP settings in your config file like something like the following, ) Tj
1 0 0 1 50 686 Tm (taking note of the `dbus_type` value:) Tj
1 0 0 1 50 672 Tm (```json) Tj
1 0 0 1 50 658 Tm ("media": {) Tj
1 0 0 1 50 644 Tm (  "dbus_type": "session") Tj
1 0 0 1 50 630 Tm (}) Tj
1 0 0 1 50 616 Tm (```) Tj
1 0 0 1 50 602 Tm (  - If your `dbus_type` is set to `system` then OCP will still work, but since it requires) Tj
1 0 0 1 50 588 Tm ( root privileges to read from the system dbus, external systems or programs without root ) Tj
1 0 0 1 50 574 Tm (privileges cannot read the MPRIS data there.) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (You can confirm if the OCP player is registered with dbus using the following command: ) Tj
1 0 0 1 50 532 Tm (`dbus-send --session --dest=org.freedesktop.DBus --type=method_call --print-reply ) Tj
1 0 0 1 50 518 Tm (/org/freedesktop/DBus org.freedesktop.DBus.ListNames`) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (The output should look something like the following, if it is working:) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (```bash) Tj
1 0 0 1 50 448 Tm (method return time=1691467760.293397 sender=org.freedesktop.DBus -> destination=:1.10 ) Tj
1 0 0 1 50 434 Tm (serial=3 reply_serial=2) Tj
1 0 0 1 50 420 Tm (   array [) Tj
1 0 0 1 50 406 Tm (      string "org.freedesktop.DBus") Tj
1 0 0 1 50 392 Tm (      string "org.freedesktop.systemd1") Tj
1 0 0 1 50 378 Tm (      string ":1.10") Tj
1 0 0 1 50 364 Tm (      string "org.mpris.MediaPlayer2.OCP") Tj
1 0 0 1 50 350 Tm (      string ":1.9") Tj
1 0 0 1 50 336 Tm (      string ":1.1") Tj
1 0 0 1 50 322 Tm (   ]) Tj
1 0 0 1 50 308 Tm (```) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (The important part is the `org.mpris.MediaPlayer2.OCP` value.) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (If the above steps do not work, please reach out to the OVOS team on Matrix for ) Tj
1 0 0 1 50 238 Tm (assistance.) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (# docs/200-stt_server.md) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (# OpenVoiceOS STT HTTP Server) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (**Lightweight HTTP microservice for any OVOS speech?to?text plugin, with optional Gradio ) Tj
1 0 0 1 50 126 Tm (UI.**) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (The OpenVoiceOS STT HTTP Server wraps your chosen OVOS STT plugin inside a FastAPI service) Tj
1 0 0 1 50 84 Tm ( \(complete with automatic language detection\), making it easy to deploy on your local ) Tj
1 0 0 1 50 70 Tm (machine, in Docker, or behind a load balancer.) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
433 0 obj
<< /Length 1992 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (---) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (## Usage Guide) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (**Install the server** ) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (```bash) Tj
1 0 0 1 50 644 Tm (pip install ovos-stt-http-server) Tj
1 0 0 1 50 630 Tm (```) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (**Configure your STT plugin**  ) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (In your `mycroft.conf` \(or equivalent\) under the `stt` section:  ) Tj
1 0 0 1 50 560 Tm (```json) Tj
1 0 0 1 50 546 Tm ({) Tj
1 0 0 1 50 532 Tm ( "stt": {) Tj
1 0 0 1 50 518 Tm (   "module": "ovos-stt-plugin-xxx",) Tj
1 0 0 1 50 504 Tm (   "ovos-stt-plugin-xxx": {) Tj
1 0 0 1 50 490 Tm (     "model": "xxx") Tj
1 0 0 1 50 476 Tm (   }) Tj
1 0 0 1 50 462 Tm ( }) Tj
1 0 0 1 50 448 Tm (}) Tj
1 0 0 1 50 434 Tm (```) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (**Launch the server**  ) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (```bash) Tj
1 0 0 1 50 364 Tm (ovos-stt-server \\) Tj
1 0 0 1 50 350 Tm ( --engine ovos-stt-plugin-xxx \\) Tj
1 0 0 1 50 336 Tm ( --host 0.0.0.0 \\) Tj
1 0 0 1 50 322 Tm ( --port 9666) Tj
1 0 0 1 50 308 Tm (```) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (**Verify its running**  ) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (Visit [http://localhost:9666/status]\(http://localhost:9666/status\) in your browser or run:) Tj
1 0 0 1 50 238 Tm (  ) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (```bash) Tj
1 0 0 1 50 196 Tm (curl http://localhost:9666/status) Tj
1 0 0 1 50 182 Tm (```) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (---) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (## Command?Line Options) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (```bash) Tj
1 0 0 1 50 84 Tm ($ ovos-stt-server --help) Tj
1 0 0 1 50 70 Tm (usage: ovos-stt-server [-h] --engine ENGINE [--lang-engine LANG_ENGINE] [--port PORT] ) Tj
1 0 0 1 50 56 Tm ([--host HOST] [--lang LANG] [--multi] [--gradio] [--cache] [--title TITLE]) Tj
ET
endstream

endobj
434 0 obj
<< /Length 3146 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (                       [--description DESCRIPTION] [--info INFO] [--badge BADGE]) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (options:) Tj
1 0 0 1 50 700 Tm (  -h, --help            show this help message and exit) Tj
1 0 0 1 50 686 Tm (  --engine ENGINE       stt plugin to be used) Tj
1 0 0 1 50 672 Tm (  --lang-engine LANG_ENGINE) Tj
1 0 0 1 50 658 Tm (                        audio language detection plugin to be used) Tj
1 0 0 1 50 644 Tm (  --port PORT           port number) Tj
1 0 0 1 50 630 Tm (  --host HOST           host) Tj
1 0 0 1 50 616 Tm (  --lang LANG           default language supported by plugin) Tj
1 0 0 1 50 602 Tm (  --multi               Load a plugin instance per language \(force lang support\)) Tj
1 0 0 1 50 588 Tm (  --gradio              Enable Gradio Web UI) Tj
1 0 0 1 50 574 Tm (  --cache               Cache models for Gradio demo) Tj
1 0 0 1 50 560 Tm (  --title TITLE         Title for webUI) Tj
1 0 0 1 50 546 Tm (  --description DESCRIPTION) Tj
1 0 0 1 50 532 Tm (                        Text description to print in UI) Tj
1 0 0 1 50 518 Tm (  --info INFO           Text to display at end of UI) Tj
1 0 0 1 50 504 Tm (  --badge BADGE         URL of visitor badge) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (```) Tj
1 0 0 1 50 462 Tm (---) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (## Technical Explanation) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (- **FastAPI core**  ) Tj
1 0 0 1 50 392 Tm (  The server spins up a FastAPI app exposing REST endpoints.) Tj
1 0 0 1 50 378 Tm (- **Plugin wrapping**  ) Tj
1 0 0 1 50 364 Tm (  Any OVOS STT plugin \(Deepgram, Whisper, etc.\) is loaded dynamically via entry points.) Tj
1 0 0 1 50 350 Tm (- **Language detection**  ) Tj
1 0 0 1 50 336 Tm (  If you enable `--lang-engine`, incoming audio is passed through the detector, falling ) Tj
1 0 0 1 50 322 Tm (back to `--lang` or plugin defaults.) Tj
1 0 0 1 50 308 Tm (- **Scalability**  ) Tj
1 0 0 1 50 294 Tm (  Stateless design lets you run multiple instances behind a load balancer or in ) Tj
1 0 0 1 50 280 Tm (Kubernetes.) Tj
1 0 0 1 50 266 Tm (- **Optional Gradio UI**  ) Tj
1 0 0 1 50 252 Tm (  Launches a simple web demo for testing without writing any front?end code.) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (---) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (## HTTP API Endpoints) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (| Endpoint       | Method | Description                                                |) Tj
1 0 0 1 50 154 Tm (| -------------- | ------ | ---------------------------------------------------------- |) Tj
1 0 0 1 50 140 Tm (| `/status`      | GET    | Returns plugin names, versions, and Gradio status.        |) Tj
1 0 0 1 50 126 Tm (| `/stt`         | POST   | Transcribe audio ? plain?text transcript.                 |) Tj
1 0 0 1 50 112 Tm (| `/lang_detect` | POST   | Detect language ? JSON `{ "lang": "en", "conf": 0.83 }`.  |) Tj
1 0 0 1 50 98 Tm (| `/docs`        | GET    | Interactive FastAPI OpenAPI docs.                         |) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (---) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
435 0 obj
<< /Length 2099 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (## Companion Plugin) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (To point a OpenVoiceOS \(or compatible project\) to a STT server you can use the companion ) Tj
1 0 0 1 50 700 Tm (plugin) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (**Install**  ) Tj
1 0 0 1 50 658 Tm (```bash) Tj
1 0 0 1 50 644 Tm (pip install ovos-stt-plugin-server) Tj
1 0 0 1 50 630 Tm (```) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (**Configure**  ) Tj
1 0 0 1 50 588 Tm (```json) Tj
1 0 0 1 50 574 Tm (  "stt": {) Tj
1 0 0 1 50 560 Tm (    "module": "ovos-stt-plugin-server",) Tj
1 0 0 1 50 546 Tm (    "ovos-stt-plugin-server": {) Tj
1 0 0 1 50 532 Tm (      "urls": ["https://0.0.0.0:8080/stt"],) Tj
1 0 0 1 50 518 Tm (      "verify_ssl": true) Tj
1 0 0 1 50 504 Tm (    },) Tj
1 0 0 1 50 490 Tm ( }) Tj
1 0 0 1 50 476 Tm (```) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (for audio language detection) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (```json) Tj
1 0 0 1 50 406 Tm (  "listener": {) Tj
1 0 0 1 50 392 Tm (    "audio_transformers": {) Tj
1 0 0 1 50 378 Tm (        "ovos-audio-lang-server-plugin": {) Tj
1 0 0 1 50 364 Tm (          "urls": ["https://0.0.0.0:8080/lang_detect"],) Tj
1 0 0 1 50 350 Tm (          "verify_ssl": true) Tj
1 0 0 1 50 336 Tm (        }) Tj
1 0 0 1 50 322 Tm (    }) Tj
1 0 0 1 50 308 Tm (  }) Tj
1 0 0 1 50 294 Tm (```) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (---) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (## Docker Deployment) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (**Create a Dockerfile**) Tj
1 0 0 1 50 196 Tm (```dockerfile) Tj
1 0 0 1 50 182 Tm (FROM python:3.7-slim) Tj
1 0 0 1 50 168 Tm (RUN pip install ovos-stt-http-server==0.0.1) Tj
1 0 0 1 50 154 Tm (RUN pip install {YOUR_STT_PLUGIN}) Tj
1 0 0 1 50 140 Tm (ENTRYPOINT ["ovos-stt-http-server", "--engine", "{YOUR_STT_PLUGIN}"]) Tj
1 0 0 1 50 126 Tm (```) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (**Build & Run**) Tj
1 0 0 1 50 84 Tm (```bash) Tj
1 0 0 1 50 70 Tm (docker build -t my-ovos-stt .) Tj
1 0 0 1 50 56 Tm (docker run -p 8080:9666 my-ovos-stt) Tj
ET
endstream

endobj
436 0 obj
<< /Length 2486 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (```) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (Pre-built containers are also available via the [ovos-docker-) Tj
1 0 0 1 50 700 Tm (stt]\(https://github.com/OpenVoiceOS/ovos-docker-stt\) repository.) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (---) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (## Tips & Caveats) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (- **Audio Formats**: Ensure client sends PCM?compatible formats \(`.wav`, `.mp3` ) Tj
1 0 0 1 50 602 Tm (recommended\).) Tj
1 0 0 1 50 588 Tm (- **Securing Endpoints**: Consider putting a reverse proxy \(NGINX, Traefik\) in front for ) Tj
1 0 0 1 50 574 Tm (SSL or API keys.) Tj
1 0 0 1 50 560 Tm (- **Plugin Dependencies**: Some STT engines require heavy native librariesbake them into ) Tj
1 0 0 1 50 546 Tm (your Docker image.) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (---) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (## Links & References) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (- OVOS STT HTTP Server GitHub: https://github.com/OpenVoiceOS/ovos-stt-http-server) Tj
1 0 0 1 50 448 Tm (- Companion Plugin: https://github.com/OpenVoiceOS/ovos-stt-server-plugin) Tj
1 0 0 1 50 434 Tm (- Docker Images: https://github.com/OpenVoiceOS/ovos-docker-stt) Tj
1 0 0 1 50 420 Tm (- OVOS Plugin Manager: https://github.com/OpenVoiceOS/ovos-plugin-manager) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (# docs/201-tts_server.md) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (# OpenVoiceOS TTS Server) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (**Lightweight HTTP microservice for any OVOS text?to?speech plugin, with optional ) Tj
1 0 0 1 50 322 Tm (caching.**) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (Wrap your favorite OVOS TTS engine in a FastAPI serviceready to deploy locally, in ) Tj
1 0 0 1 50 280 Tm (Docker, or behind a load balancer.) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (The OpenVoiceOS TTS HTTP Server exposes any OVOS TTS plugin over a simple HTTP API. Send ) Tj
1 0 0 1 50 238 Tm (text, receive audiono extra) Tj
1 0 0 1 50 224 Tm (glue code required.) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (---) Tj
1 0 0 1 50 182 Tm (## Usage Guide) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (**Install the server**) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (```bash) Tj
1 0 0 1 50 112 Tm (pip install ovos-tts-server) Tj
1 0 0 1 50 98 Tm (```) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (**Configure your TTS plugin**) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
437 0 obj
<< /Length 2329 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (In your `mycroft.conf` \(or equivalent\) under the `tts` section:) Tj
1 0 0 1 50 728 Tm (```json) Tj
1 0 0 1 50 714 Tm ({) Tj
1 0 0 1 50 700 Tm ( "tts": {) Tj
1 0 0 1 50 686 Tm (   "module": "ovos-tts-plugin-xxx",) Tj
1 0 0 1 50 672 Tm (   "ovos-tts-plugin-xxx": {) Tj
1 0 0 1 50 658 Tm (     "voice": "xxx") Tj
1 0 0 1 50 644 Tm (   }) Tj
1 0 0 1 50 630 Tm ( }) Tj
1 0 0 1 50 616 Tm (}) Tj
1 0 0 1 50 602 Tm (```) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (**Launch the server**  ) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (```bash) Tj
1 0 0 1 50 532 Tm (ovos-stt-server \\) Tj
1 0 0 1 50 518 Tm ( --engine ovos-tts-plugin-xxx \\) Tj
1 0 0 1 50 504 Tm ( --host 0.0.0.0 \\) Tj
1 0 0 1 50 490 Tm ( --port 9666) Tj
1 0 0 1 50 476 Tm (```) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (**Verify its running**  ) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (Visit http://localhost:9666/status in your browser or run:) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (```bash) Tj
1 0 0 1 50 378 Tm (curl http://localhost:9666/status) Tj
1 0 0 1 50 364 Tm (```) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (---) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (## Command?Line Options) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (```bash) Tj
1 0 0 1 50 266 Tm ($ ovos-tts-server --help) Tj
1 0 0 1 50 252 Tm (usage: ovos-tts-server [-h] [--engine ENGINE] [--port PORT] [--host HOST] [--cache] ) Tj
1 0 0 1 50 238 Tm ([--lang LANG] [--gradio] [--title TITLE] [--description DESCRIPTION]) Tj
1 0 0 1 50 224 Tm (                       [--info INFO] [--badge BADGE]) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (options:) Tj
1 0 0 1 50 182 Tm (  -h, --help            show this help message and exit) Tj
1 0 0 1 50 168 Tm (  --engine ENGINE       tts plugin to be used) Tj
1 0 0 1 50 154 Tm (  --port PORT           port number) Tj
1 0 0 1 50 140 Tm (  --host HOST           host) Tj
1 0 0 1 50 126 Tm (  --cache               save every synth to disk) Tj
1 0 0 1 50 112 Tm (  --lang LANG           default language supported by plugin) Tj
1 0 0 1 50 98 Tm (  --gradio              Enable Gradio Web UI) Tj
1 0 0 1 50 84 Tm (  --title TITLE         Title for webUI) Tj
1 0 0 1 50 70 Tm (  --description DESCRIPTION) Tj
1 0 0 1 50 56 Tm (                        Text description to print in UI) Tj
ET
endstream

endobj
438 0 obj
<< /Length 2828 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (  --info INFO           Text to display at end of UI) Tj
1 0 0 1 50 728 Tm (  --badge BADGE         URL of visitor badge) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (```) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (---) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (## Technical Explanation) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (- **FastAPI Core**  ) Tj
1 0 0 1 50 602 Tm (  Spins up a FastAPI application exposing RESTful endpoints for synthesis and status ) Tj
1 0 0 1 50 588 Tm (checks.) Tj
1 0 0 1 50 574 Tm (- **Plugin Loading**  ) Tj
1 0 0 1 50 560 Tm (  Dynamically loads any OVOS TTS plugin via Python entry pointsno code changes needed ) Tj
1 0 0 1 50 546 Tm (when adding new voices.) Tj
1 0 0 1 50 532 Tm (- **Caching**  ) Tj
1 0 0 1 50 518 Tm (  When `--cache` is enabled, every synthesis request is stored as a WAV file for debugging) Tj
1 0 0 1 50 504 Tm ( or reuse.) Tj
1 0 0 1 50 490 Tm (- **Scalability**  ) Tj
1 0 0 1 50 476 Tm (  Stateless by designrun multiple instances behind NGINX, Traefik, or Kubernetes with ) Tj
1 0 0 1 50 462 Tm (round?robin or load?based) Tj
1 0 0 1 50 448 Tm (  routing.) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (---) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (## HTTP API Endpoints) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (| Endpoint                  | Method | Description                                       |) Tj
1 0 0 1 50 350 Tm (|---------------------------|--------|---------------------------------------------------|) Tj
1 0 0 1 50 336 Tm (| `/status`                 | GET    | Returns loaded plugin names and versions.         |) Tj
1 0 0 1 50 322 Tm (| `/synthesize/{utterance}` | GET    | URL?encoded text ? WAV audio bytes.               |) Tj
1 0 0 1 50 308 Tm (| `/v2/synthesize`          | GET    | JSON `{utterance: string, voice?: string}` ? WAV. |) Tj
1 0 0 1 50 294 Tm (| `/docs`                   | GET    | Interactive OpenAPI \(Swagger\) docs.               |) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (> any query parameters passed to `/v2/synthesize` will be forwarded to the individual ) Tj
1 0 0 1 50 252 Tm (plugins `get_tts` method if they are defined as kwargs there. ) Tj
1 0 0 1 50 238 Tm (> ? This allows `"voice"` and `"lang"` to be defined at runtime and not by plugin config ) Tj
1 0 0 1 50 224 Tm (at load time \(for plugins that support it\)) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (---) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (## Companion Plugin) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (Point your OVOS instance at this TTS server:) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (```bash) Tj
1 0 0 1 50 98 Tm (pip install ovos-tts-server-plugin) Tj
1 0 0 1 50 84 Tm (```) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (**Configuration** `mycroft.conf`:) Tj
ET
endstream

endobj
439 0 obj
<< /Length 2334 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (```json) Tj
1 0 0 1 50 714 Tm ({) Tj
1 0 0 1 50 700 Tm (  "tts": {) Tj
1 0 0 1 50 686 Tm (    "module": "ovos-tts-plugin-server",) Tj
1 0 0 1 50 672 Tm (    "ovos-tts-plugin-server": {) Tj
1 0 0 1 50 658 Tm (        "host": "http://localhost:9667",) Tj
1 0 0 1 50 644 Tm (        "voice": "xxx",) Tj
1 0 0 1 50 630 Tm (        "verify_ssl": false,) Tj
1 0 0 1 50 616 Tm (        "tts_timeout": 5) Tj
1 0 0 1 50 602 Tm (     }) Tj
1 0 0 1 50 588 Tm ( } ) Tj
1 0 0 1 50 574 Tm (}) Tj
1 0 0 1 50 560 Tm (```) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (---) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (## Docker Deployment) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (**Create a Dockerfile**) Tj
1 0 0 1 50 462 Tm (```dockerfile) Tj
1 0 0 1 50 448 Tm (FROM python:3.7-slim) Tj
1 0 0 1 50 434 Tm (RUN pip install ovos-tts-server) Tj
1 0 0 1 50 420 Tm (RUN pip install {YOUR_TTS_PLUGIN}) Tj
1 0 0 1 50 406 Tm (ENTRYPOINT ["ovos-tts-server", "--engine", "{YOUR_TTS_PLUGIN}"]) Tj
1 0 0 1 50 392 Tm (```) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (**Build & Run**) Tj
1 0 0 1 50 350 Tm (```bash) Tj
1 0 0 1 50 336 Tm (docker build -t my-ovos-tts .) Tj
1 0 0 1 50 322 Tm (docker run -p 8080:9666 my-ovos-tts) Tj
1 0 0 1 50 308 Tm (```) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (Pre-built containers are also available via the [ovos-docker-) Tj
1 0 0 1 50 266 Tm (tts]\(https://github.com/OpenVoiceOS/ovos-docker-tts\)) Tj
1 0 0 1 50 252 Tm (repository.) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (---) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (## Tips & Caveats) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (- **Audio Formats**: By default, outputs WAV \(PCM\). If you need MP3 or OGG, wrap with an ) Tj
1 0 0 1 50 154 Tm (external converter or check) Tj
1 0 0 1 50 140 Tm (  plugin support.) Tj
1 0 0 1 50 126 Tm (- **Disk Usage**: Caching every file can grow large; monitor `./cache/` or disable with ) Tj
1 0 0 1 50 112 Tm (`--no-cache`.) Tj
1 0 0 1 50 98 Tm (- **Security**: Consider adding API keys or putting a reverse proxy \(NGINX, Traefik\) in ) Tj
1 0 0 1 50 84 Tm (front for SSL termination and) Tj
1 0 0 1 50 70 Tm (  rate limiting.) Tj
1 0 0 1 50 56 Tm (- **Plugin Dependencies**: Some voices require native libraries \(e.g., TensorFlow\). Bake ) Tj
ET
endstream

endobj
440 0 obj
<< /Length 2666 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (them into your Docker image to) Tj
1 0 0 1 50 728 Tm (  avoid runtime surprises.) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (---) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (## Links & References) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (- **TTS Server GitHub**: https://github.com/OpenVoiceOS/ovos-tts-server) Tj
1 0 0 1 50 630 Tm (- **Companion Plugin**: https://github.com/OpenVoiceOS/ovos-tts-server-plugin) Tj
1 0 0 1 50 616 Tm (- **Docker Images**: https://github.com/OpenVoiceOS/ovos-docker-tts) Tj
1 0 0 1 50 602 Tm (- **OVOS Plugin Manager**: https://github.com/OpenVoiceOS/ovos-plugin-manager) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (# docs/202-persona_server.md) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (# OVOS Persona Server) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (The OVOS Persona Server makes any defined persona available through an API compatible with) Tj
1 0 0 1 50 490 Tm ( OpenAI and Ollama, allowing you to use OVOS personas as drop-in replacements for ) Tj
1 0 0 1 50 476 Tm (traditional large language models \(LLMs\) in other tools and platforms.) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (---) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (## Usage Guide) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (To start the Persona Server with a specific persona file:) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (```bash) Tj
1 0 0 1 50 350 Tm ($ ovos-persona-server --persona my_persona.json) Tj
1 0 0 1 50 336 Tm (```) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (This will launch a local server \(default: `http://localhost:8337`\) that exposes the ) Tj
1 0 0 1 50 294 Tm (persona via OpenAI and Ollama-compatible endpoints.) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (---) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (## Technical Explanation) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (A **persona** in OVOS is a predefined character or assistant configuration that can ) Tj
1 0 0 1 50 196 Tm (respond to user inputs, leveraging OVOSs conversational tools. The **Persona Server** ) Tj
1 0 0 1 50 182 Tm (acts as a gateway that translates external API requests \(like those from OpenAI or Ollama ) Tj
1 0 0 1 50 168 Tm (clients\) into interactions with this persona.) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (This enables seamless integration with a variety of existing tools that expect LLM-like ) Tj
1 0 0 1 50 126 Tm (behavior, including frameworks, bots, or smart home assistants.) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (---) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (## OpenAI-Compatible API Example) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
441 0 obj
<< /Length 2666 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (You can use the `openai` Python SDK to interact with the Persona Server:) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (```python) Tj
1 0 0 1 50 700 Tm (import openai) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (openai.api_key = ""  # No API key required for local use) Tj
1 0 0 1 50 658 Tm (openai.api_base = "http://localhost:8337") Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (response = openai.ChatCompletion.create\() Tj
1 0 0 1 50 616 Tm (    model="",  # Optional: some personas may define specific models) Tj
1 0 0 1 50 602 Tm (    messages=[{"role": "user", "content": "tell me a joke"}],) Tj
1 0 0 1 50 588 Tm (    stream=False,) Tj
1 0 0 1 50 574 Tm (\)) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (if isinstance\(response, dict\):) Tj
1 0 0 1 50 532 Tm (    # Non-streaming response) Tj
1 0 0 1 50 518 Tm (    print\(response.choices[0].message.content\)) Tj
1 0 0 1 50 504 Tm (else:) Tj
1 0 0 1 50 490 Tm (    # Streaming response) Tj
1 0 0 1 50 476 Tm (    for token in response:) Tj
1 0 0 1 50 462 Tm (        content = token["choices"][0]["delta"].get\("content"\)) Tj
1 0 0 1 50 448 Tm (        if content:) Tj
1 0 0 1 50 434 Tm (            print\(content, end="", flush=True\)) Tj
1 0 0 1 50 420 Tm (```) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (? **Note:** Some persona solvers are **not LLMs** and do **not** maintain chat history. ) Tj
1 0 0 1 50 378 Tm (Only the last message in the `messages` list is processed in some cases.) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (---) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (## Ollama-Compatible API) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (The server is also fully compatible with tools expecting an Ollama API.) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (For example, the [Home Assistant Ollama integration]\(https://www.home-) Tj
1 0 0 1 50 252 Tm (assistant.io/integrations/ollama/\) can connect directly to an OVOS Persona Server, ) Tj
1 0 0 1 50 238 Tm (treating it as a local LLM backend.) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (---) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (## Tips) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (- Make sure your persona file \(`.json`\) includes all the configuration details required by) Tj
1 0 0 1 50 140 Tm ( the solver or conversational backend.) Tj
1 0 0 1 50 126 Tm (- If using in a production setting, consider securing your endpoint and defining rate ) Tj
1 0 0 1 50 112 Tm (limits.) Tj
1 0 0 1 50 98 Tm (- Since personas can be highly customized, capabilities may vary depending on the persona ) Tj
1 0 0 1 50 84 Tm (used.) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (---) Tj
ET
endstream

endobj
442 0 obj
<< /Length 2478 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (## Related Links) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (- [OVOS Personas]\(https://openvoiceos.github.io/ovos-technical-manual/150-personas/\)) Tj
1 0 0 1 50 686 Tm (- [OpenAI Python SDK]\(https://github.com/openai/openai-python\)) Tj
1 0 0 1 50 672 Tm (- [Home Assistant Ollama Integration]\(https://www.home-assistant.io/integrations/ollama/\)) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (# docs/203-translate_server.md) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (# OpenVoiceOS Translate Server) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (**Expose OVOS language detection and translation plugins over HTTP.**) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (The OVOS Translate Server allows any OpenVoiceOS-compatible translation or language ) Tj
1 0 0 1 50 546 Tm (detection plugin to run as a lightweight web service. This makes it easy to integrate ) Tj
1 0 0 1 50 532 Tm (translation features into any application or device using simple HTTP requests.) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (Great for local or cloud deployments, and ideal for use with the OVOS companion plugin to ) Tj
1 0 0 1 50 490 Tm (provide translation capabilities to your voice assistant.) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (---) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (## Usage Guide) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (### Install the Server) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (```bash) Tj
1 0 0 1 50 364 Tm (pip install ovos-translate-server) Tj
1 0 0 1 50 350 Tm (```) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (### Run the Server) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (```bash) Tj
1 0 0 1 50 280 Tm (ovos-translate-server \\) Tj
1 0 0 1 50 266 Tm (  --tx-engine ovos-translate-plugin-nllb \\) Tj
1 0 0 1 50 252 Tm (  --detect-engine ovos-lang-detector-classics-plugin) Tj
1 0 0 1 50 238 Tm (```) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (### Make Requests) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (Once the server is running \(default on `http://0.0.0.0:9686`\), you can access endpoints ) Tj
1 0 0 1 50 168 Tm (like:) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (- Auto-detect source language:) Tj
1 0 0 1 50 126 Tm (  ```) Tj
1 0 0 1 50 112 Tm (  GET /translate/en/o meu nome  Casimiro) Tj
1 0 0 1 50 98 Tm (  ? "My name is Casimiro") Tj
1 0 0 1 50 84 Tm (  ```) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (- Specify source and target language:) Tj
ET
endstream

endobj
443 0 obj
<< /Length 2365 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (  ```) Tj
1 0 0 1 50 728 Tm (  GET /translate/pt/en/o meu nome  Casimiro) Tj
1 0 0 1 50 714 Tm (  ? "My name is Casimiro") Tj
1 0 0 1 50 700 Tm (  ```) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (- Language detection:) Tj
1 0 0 1 50 658 Tm (  ```) Tj
1 0 0 1 50 644 Tm (  GET /detect/o meu nome  Casimiro) Tj
1 0 0 1 50 630 Tm (  ? "pt") Tj
1 0 0 1 50 616 Tm (  ```) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (---) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (## Command-Line Options) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (```bash) Tj
1 0 0 1 50 518 Tm ($ ovos-translate-server --help) Tj
1 0 0 1 50 504 Tm (usage: ovos-translate-server [-h] [--tx-engine TX_ENGINE] [--detect-engine DETECT_ENGINE] ) Tj
1 0 0 1 50 490 Tm ([--port PORT] [--host HOST]) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (options:) Tj
1 0 0 1 50 448 Tm (  -h, --help            show this help message and exit) Tj
1 0 0 1 50 434 Tm (  --tx-engine TX_ENGINE) Tj
1 0 0 1 50 420 Tm (                        translate plugin to be used) Tj
1 0 0 1 50 406 Tm (  --detect-engine DETECT_ENGINE) Tj
1 0 0 1 50 392 Tm (                        lang detection plugin to be used) Tj
1 0 0 1 50 378 Tm (  --port PORT           port number) Tj
1 0 0 1 50 364 Tm (  --host HOST           host) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (```) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (---) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (## Technical Overview) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (- **Plugin-based**: Uses the OVOS Plugin Manager to dynamically load any compatible plugin) Tj
1 0 0 1 50 238 Tm ( by name.) Tj
1 0 0 1 50 224 Tm (- **RESTful API**: Simple HTTP endpoints allow you to send and receive translations from ) Tj
1 0 0 1 50 210 Tm (any app.) Tj
1 0 0 1 50 196 Tm (- **Language Detection Support**: Works with any OVOS lang-detection plugin.) Tj
1 0 0 1 50 182 Tm (- **Easy Deployment**: Perfect for running locally, inside Docker, or on a small server.) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (---) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (## Docker Deployment) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (### Use Prebuilt Images) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (Check out [ovos-docker-tx]\(https://github.com/OpenVoiceOS/ovos-docker-tx\) for prebuilt ) Tj
1 0 0 1 50 56 Tm (containers.) Tj
ET
endstream

endobj
444 0 obj
<< /Length 2101 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (### Build Your Own) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (Create a `Dockerfile`:) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (```dockerfile) Tj
1 0 0 1 50 658 Tm (FROM python:3.7) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (RUN pip install ovos-utils==0.0.15) Tj
1 0 0 1 50 616 Tm (RUN pip install ovos-plugin-manager==0.0.4) Tj
1 0 0 1 50 602 Tm (RUN pip install ovos-translate-server==0.0.1) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (# Install your plugins) Tj
1 0 0 1 50 560 Tm (RUN pip install {PLUGIN_HERE}) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (ENTRYPOINT ovos-translate-server --tx-engine {PLUGIN_HERE} --detect-engine {PLUGIN_HERE}) Tj
1 0 0 1 50 518 Tm (```) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (Build the image:) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (```bash) Tj
1 0 0 1 50 448 Tm (docker build . -t my_ovos_translate_plugin) Tj
1 0 0 1 50 434 Tm (```) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (Run the container:) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (```bash) Tj
1 0 0 1 50 364 Tm (docker run -p 8080:9686 my_ovos_translate_plugin) Tj
1 0 0 1 50 350 Tm (```) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (Each plugin can provide its own Dockerfile using `ovos-translate-server` as the ) Tj
1 0 0 1 50 308 Tm (entrypoint.) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (---) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (## Companion Plugin Integration) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (To use this server with an OVOS voice assistant instance, install:) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (```bash) Tj
1 0 0 1 50 182 Tm (pip install ovos-translate-server-plugin) Tj
1 0 0 1 50 168 Tm (```) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (Then configure your `mycroft.conf`:) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (```json) Tj
1 0 0 1 50 98 Tm ({) Tj
1 0 0 1 50 84 Tm (  "language": {) Tj
1 0 0 1 50 70 Tm (    "detection_module": "ovos-lang-detector-plugin-server",) Tj
1 0 0 1 50 56 Tm (    "translation_module": "ovos-translate-plugin-server",) Tj
ET
endstream

endobj
445 0 obj
<< /Length 2466 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (    "ovos-translate-plugin-server": {) Tj
1 0 0 1 50 728 Tm (      "host": "http://localhost:9686",) Tj
1 0 0 1 50 714 Tm (      "verify_ssl": false) Tj
1 0 0 1 50 700 Tm (    },) Tj
1 0 0 1 50 686 Tm (    "ovos-lang-detector-plugin-server": {) Tj
1 0 0 1 50 672 Tm (      "host": "http://localhost:9686",) Tj
1 0 0 1 50 658 Tm (      "verify_ssl": false) Tj
1 0 0 1 50 644 Tm (    }) Tj
1 0 0 1 50 630 Tm (  }) Tj
1 0 0 1 50 616 Tm (}) Tj
1 0 0 1 50 602 Tm (```) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (---) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (## Tips & Caveats) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (- Some translation plugins auto-detect language; others require you to specify ) Tj
1 0 0 1 50 504 Tm (`source_lang`.) Tj
1 0 0 1 50 490 Tm (- Network errors or unresponsive servers will trigger fallback plugins, if configured.) Tj
1 0 0 1 50 476 Tm (- For production, consider placing the service behind a reverse proxy with HTTPS enabled.) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (---) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (## Related Projects) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (- **Translate Server Plugin**:  ) Tj
1 0 0 1 50 378 Tm (  [ovos-translate-server-plugin]\(https://github.com/OpenVoiceOS/ovos-translate-server-) Tj
1 0 0 1 50 364 Tm (plugin\)) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (- **Translate Server Source**:  ) Tj
1 0 0 1 50 322 Tm (  [ovos-translate-server]\(https://github.com/OpenVoiceOS/ovos-translate-server\)) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (- **Docker Templates**:  ) Tj
1 0 0 1 50 280 Tm (  [ovos-docker-tx]\(https://github.com/OpenVoiceOS/ovos-docker-tx\)) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (- **Plugin Manager**:  ) Tj
1 0 0 1 50 238 Tm (  [ovos-plugin-manager]\(https://github.com/OpenVoiceOS/ovos-plugin-manager\)) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (---) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (With the OVOS Translate Server, adding multi-language support to your voice assistant is ) Tj
1 0 0 1 50 168 Tm (just an HTTP request away.) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (# docs/300-plugin-manager.md) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (# OVOS Plugin Manager \(OPM\)) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (![image]\(https://github.com/OpenVoiceOS/ovos-plugin-) Tj
1 0 0 1 50 70 Tm (manager/assets/33701864/8c939267-42fc-4377-bcdb-f7df65e73252\)) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
446 0 obj
<< /Length 2745 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (## Summary) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (The OVOS Plugin Manager \(OPM\) is a base package designed to provide arbitrary plugins to ) Tj
1 0 0 1 50 700 Tm (the OVOS ecosystem. It standardizes the interface for plugins, allowing them to be easily ) Tj
1 0 0 1 50 686 Tm (portable and configurable, whether integrated into OVOS projects or used in standalone ) Tj
1 0 0 1 50 672 Tm (applications.) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (---) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (## Usage Guide) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (To install a plugin using OPM, you can typically follow this process:) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (- **Install the plugin using pip:**) Tj
1 0 0 1 50 546 Tm (```bash) Tj
1 0 0 1 50 532 Tm (pip install ovos-plugin-name) Tj
1 0 0 1 50 518 Tm (```) Tj
1 0 0 1 50 504 Tm (- **Edit your configuration file \(e.g., `mycroft.conf`\) to enable and configure the ) Tj
1 0 0 1 50 490 Tm (plugin.**) Tj
1 0 0 1 50 476 Tm (- **Restart your OVOS service to apply the changes.**) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (> ? In some setups like `ovos-docker`, make sure you install plugins in the correct ) Tj
1 0 0 1 50 434 Tm (environment.) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (---) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (## Technical Explanation) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (OPM allows developers to create plugins that are decoupled from OVOS core functionality. ) Tj
1 0 0 1 50 336 Tm (By using OPM's standard interface, plugins can be easily integrated into a variety of OVOS) Tj
1 0 0 1 50 322 Tm ( services or other projects.) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (Each plugin can be classified according to its functionality, with its own entry point ) Tj
1 0 0 1 50 280 Tm (defined in `setup.py`. This approach ensures that plugins are portable and independent, ) Tj
1 0 0 1 50 266 Tm (allowing them to be reused in other projects.) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (---) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (## Plugin Types) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (OPM recognizes several plugin types, each serving a specific purpose within the OVOS ) Tj
1 0 0 1 50 168 Tm (ecosystem. These types help categorize plugins for easier integration and configuration:) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (```python) Tj
1 0 0 1 50 126 Tm (class PluginTypes\(str, Enum\):) Tj
1 0 0 1 50 112 Tm (    PHAL = "ovos.plugin.phal") Tj
1 0 0 1 50 98 Tm (    ADMIN = "ovos.plugin.phal.admin") Tj
1 0 0 1 50 84 Tm (    SKILL = "ovos.plugin.skill") Tj
1 0 0 1 50 70 Tm (    VAD = "ovos.plugin.VAD") Tj
1 0 0 1 50 56 Tm (    PHONEME = "ovos.plugin.g2p") Tj
ET
endstream

endobj
447 0 obj
<< /Length 2854 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (    AUDIO = 'mycroft.plugin.audioservice') Tj
1 0 0 1 50 728 Tm (    STT = 'mycroft.plugin.stt') Tj
1 0 0 1 50 714 Tm (    TTS = 'mycroft.plugin.tts') Tj
1 0 0 1 50 700 Tm (    WAKEWORD = 'mycroft.plugin.wake_word') Tj
1 0 0 1 50 686 Tm (    TRANSLATE = "neon.plugin.lang.translate") Tj
1 0 0 1 50 672 Tm (    LANG_DETECT = "neon.plugin.lang.detect") Tj
1 0 0 1 50 658 Tm (    UTTERANCE_TRANSFORMER = "neon.plugin.text") Tj
1 0 0 1 50 644 Tm (    METADATA_TRANSFORMER = "neon.plugin.metadata") Tj
1 0 0 1 50 630 Tm (    AUDIO_TRANSFORMER = "neon.plugin.audio") Tj
1 0 0 1 50 616 Tm (    QUESTION_SOLVER = "neon.plugin.solver") Tj
1 0 0 1 50 602 Tm (    COREFERENCE_SOLVER = "intentbox.coreference") Tj
1 0 0 1 50 588 Tm (    KEYWORD_EXTRACTION = "intentbox.keywords") Tj
1 0 0 1 50 574 Tm (    UTTERANCE_SEGMENTATION = "intentbox.segmentation") Tj
1 0 0 1 50 560 Tm (    TOKENIZATION = "intentbox.tokenization") Tj
1 0 0 1 50 546 Tm (    POSTAG = "intentbox.postag") Tj
1 0 0 1 50 532 Tm (```) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (Each plugin type has its own category, with the most common being `skill`, `stt` \(speech-) Tj
1 0 0 1 50 490 Tm (to-text\), `tts` \(text-to-speech\), and `wake_word`.) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (---) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (## Plugin Packaging) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (When creating a plugin, you need to define an entry point for the plugin type and class in) Tj
1 0 0 1 50 392 Tm ( your `setup.py`. Heres a typical `setup.py` structure for packaging a plugin:) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (```python) Tj
1 0 0 1 50 350 Tm (from setuptools import setup) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (PLUGIN_TYPE = "mycroft.plugin.stt"  # Adjust based on the plugin type) Tj
1 0 0 1 50 308 Tm (PLUGIN_NAME = "ovos-stt-plugin-name") Tj
1 0 0 1 50 294 Tm (PLUGIN_PKG = PLUGIN_NAME.replace\("-", "_"\)) Tj
1 0 0 1 50 280 Tm (PLUGIN_CLAZZ = "MyPlugin") Tj
1 0 0 1 50 266 Tm (PLUGIN_CONFIGS = "MyPluginConfig") Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (PLUGIN_ENTRY_POINT = f'{PLUGIN_NAME} = {PLUGIN_PKG}:{PLUGIN_CLAZZ}') Tj
1 0 0 1 50 224 Tm (CONFIG_ENTRY_POINT = f'{PLUGIN_NAME}.config = {PLUGIN_PKG}:{PLUGIN_CONFIGS}') Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (setup\() Tj
1 0 0 1 50 182 Tm (    name=PLUGIN_NAME,) Tj
1 0 0 1 50 168 Tm (    version='0.1.0',) Tj
1 0 0 1 50 154 Tm (    packages=[PLUGIN_PKG],) Tj
1 0 0 1 50 140 Tm (    install_requires=["speechrecognition>=3.8.1", "ovos-plugin-manager>=0.0.1"],) Tj
1 0 0 1 50 126 Tm (    keywords='mycroft ovos plugin',) Tj
1 0 0 1 50 112 Tm (    entry_points={PLUGIN_TYPE: PLUGIN_ENTRY_POINT, f'{PLUGIN_TYPE}.config': ) Tj
1 0 0 1 50 98 Tm (CONFIG_ENTRY_POINT}) Tj
1 0 0 1 50 84 Tm (\)) Tj
1 0 0 1 50 70 Tm (```) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
448 0 obj
<< /Length 2897 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (---) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (## ?? Voice Satellites) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (HiveMind setups allow you to configure which plugins run server-side or satellite-side. ) Tj
1 0 0 1 50 672 Tm (Here are two examples:) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (- **Skills Server**: In this setup, the HiveMind server runs only core services and ) Tj
1 0 0 1 50 630 Tm (skills, while the satellites handle their own STT/TTS.) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (  ![Server Profile]\(https://github.com/OpenVoiceOS/ovos-technical-) Tj
1 0 0 1 50 588 Tm (manual/assets/33701864/55694b82-69c9-4288-9a89-1d9716eb3c57\)) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (- **Audio Server**: Here, the HiveMind server runs a full OVOS core, handling STT/TTS for ) Tj
1 0 0 1 50 546 Tm (the satellites.) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (  ![Listener Profile]\(https://github.com/OpenVoiceOS/ovos-technical-) Tj
1 0 0 1 50 504 Tm (manual/assets/33701864/1455a488-af0f-44b4-a5e6-0418a7cd1f96\)) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (These profiles help balance the workload between the server and satellites, improving ) Tj
1 0 0 1 50 462 Tm (performance based on the setup.) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (---) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (## Projects Using OPM) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (Several OVOS projects and tools support OPM plugins, either as dependencies or directly ) Tj
1 0 0 1 50 364 Tm (within their ecosystem:) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (- [ovos-core]\(https://github.com/OpenVoiceOS/ovos-core\)) Tj
1 0 0 1 50 322 Tm (- [ovos-tts-server]\(https://github.com/OpenVoiceOS/ovos-tts-server\)) Tj
1 0 0 1 50 308 Tm (- [ovos-stt-http-server]\(https://github.com/OpenVoiceOS/ovos-stt-http-server\)) Tj
1 0 0 1 50 294 Tm (- [ovos-translate-server]\(https://github.com/OpenVoiceOS/ovos-translate-server\)) Tj
1 0 0 1 50 280 Tm (- [neon-core]\(https://github.com/NeonGeckoCom/NeonCore\)) Tj
1 0 0 1 50 266 Tm (- [HiveMind voice satellite]\(https://github.com/JarbasHiveMind/HiveMind-voice-sat\)) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (Additionally, some plugins like AudioService, WakeWord, TTS, and STT are backwards ) Tj
1 0 0 1 50 224 Tm (compatible with Mycroft-Core, ensuring broad compatibility.) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (--- ) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (## Related Links) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (- [OVOS Plugin Manager Repository]\(https://github.com/OpenVoiceOS/OVOS-plugin-manager\)) Tj
1 0 0 1 50 126 Tm (- [OVOS Installer]\(https://github.com/OpenVoiceOS/ovos-installer\)) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (# docs/310-mic_plugins.md) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (# Microphone Plugins in OVOS) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
449 0 obj
<< /Length 3288 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (Microphone plugins in Open Voice OS \(OVOS\) are responsible for capturing audio input and ) Tj
1 0 0 1 50 728 Tm (feeding it to the listener. Introduced in `ovos-core` version **0.0.8**, these plugins ) Tj
1 0 0 1 50 714 Tm (allow for flexible integration with different audio backends and platforms.) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (## Usage Guide) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (To use a microphone plugin in OVOS:) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (- Install the desired plugin with `pip`:) Tj
1 0 0 1 50 616 Tm (```bash) Tj
1 0 0 1 50 602 Tm (pip install ovos-microphone-plugin-<name>) Tj
1 0 0 1 50 588 Tm (```) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (- Update your `mycroft.conf` \(or `ovos.conf`\) to specify the plugin:) Tj
1 0 0 1 50 546 Tm (```json) Tj
1 0 0 1 50 532 Tm ({) Tj
1 0 0 1 50 518 Tm ( "listener": {) Tj
1 0 0 1 50 504 Tm (   "microphone": {) Tj
1 0 0 1 50 490 Tm (     "module": "ovos-microphone-plugin-alsa"  // or another plugin) Tj
1 0 0 1 50 476 Tm (   }) Tj
1 0 0 1 50 462 Tm ( }) Tj
1 0 0 1 50 448 Tm (}) Tj
1 0 0 1 50 434 Tm (```) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (- Restart OVOS to apply the new microphone plugin configuration.) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (## Supported Microphone Plugins) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (| Plugin | Description | OS Compatibility |) Tj
1 0 0 1 50 336 Tm (|--------|-------------|------------------|) Tj
1 0 0 1 50 322 Tm (| [ovos-microphone-plugin-alsa]\(https://github.com/OpenVoiceOS/ovos-microphone-plugin-) Tj
1 0 0 1 50 308 Tm (alsa\) | Based on [pyalsaaudio]\(http://larsimmisch.github.io/pyalsaaudio\). Offers low-) Tj
1 0 0 1 50 294 Tm (latency and high performance on ALSA-compatible devices. | Linux |) Tj
1 0 0 1 50 280 Tm (| [ovos-microphone-plugin-pyaudio]\(https://github.com/OpenVoiceOS/ovos-microphone-plugin-) Tj
1 0 0 1 50 266 Tm (pyaudio\) | Uses [PyAudio]\(https://people.csail.mit.edu/hubert/pyaudio/\). Good general-) Tj
1 0 0 1 50 252 Tm (purpose plugin for Linux. | Linux |) Tj
1 0 0 1 50 238 Tm (| [ovos-microphone-plugin-sounddevice]\(https://github.com/OpenVoiceOS/ovos-microphone-) Tj
1 0 0 1 50 224 Tm (plugin-sounddevice\) | Built on [python-) Tj
1 0 0 1 50 210 Tm (sounddevice]\(https://github.com/spatialaudio/python-sounddevice\). Offers cross-platform ) Tj
1 0 0 1 50 196 Tm (support. | Linux, macOS, Windows |) Tj
1 0 0 1 50 182 Tm (| [ovos-microphone-plugin-files]\(https://github.com/OpenVoiceOS/ovos-microphone-plugin-) Tj
1 0 0 1 50 168 Tm (files\) | Uses audio files as input instead of a live microphoneideal for testing and ) Tj
1 0 0 1 50 154 Tm (debugging. | Linux, macOS, Windows |) Tj
1 0 0 1 50 140 Tm (| [ovos-microphone-plugin-arecord]\(https://github.com/OVOSHatchery/ovos-microphone-plugin-) Tj
1 0 0 1 50 126 Tm (arecord\) | Wraps `arecord` using subprocess calls. Simple and effective on systems with ) Tj
1 0 0 1 50 112 Tm (ALSA. | Linux |) Tj
1 0 0 1 50 98 Tm (| [ovos-microphone-plugin-socket]\(https://github.com/OVOSHatchery/ovos-microphone-plugin-) Tj
1 0 0 1 50 84 Tm (socket\) | Receives audio over a socket connection. Useful for remote microphone setups. | ) Tj
1 0 0 1 50 70 Tm (Linux, macOS, Windows |) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
450 0 obj
<< /Length 2993 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (## Technical Explanation) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (OVOS uses a plugin architecture to decouple the audio input system from the rest of the ) Tj
1 0 0 1 50 700 Tm (voice stack. Microphone plugins implement a common interface, making it easy to swap ) Tj
1 0 0 1 50 686 Tm (between different audio sources or backends without changing application code.) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (Each plugin provides a stream of audio data that OVOS uses to detect wake words and ) Tj
1 0 0 1 50 644 Tm (perform speech-to-text \(STT\) processing. The `microphone` module is configured in the main) Tj
1 0 0 1 50 630 Tm ( listener settings, and the selected plugin is loaded dynamically at runtime.) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (## Tips & Caveats) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (- **Performance**: For best results on Linux, the ALSA plugin typically provides the ) Tj
1 0 0 1 50 560 Tm (lowest latency.) Tj
1 0 0 1 50 546 Tm (- **Cross-platform development**: Use the `sounddevice` or `files` plugin when developing ) Tj
1 0 0 1 50 532 Tm (on non-Linux systems.) Tj
1 0 0 1 50 518 Tm (- **Testing**: The `files` plugin is ideal for automated testing environments where live ) Tj
1 0 0 1 50 504 Tm (input isnt available.) Tj
1 0 0 1 50 490 Tm (- **Remote audio**: The `socket` plugin is a proof-of-concept for networked microphones ) Tj
1 0 0 1 50 476 Tm (and is not recommended for production use without customization.) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (---) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (**Coming Soon**) Tj
1 0 0 1 50 392 Tm (- Standalone usage examples) Tj
1 0 0 1 50 378 Tm (- How to create your own microphone plugin \(plugin template\)) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (# docs/311-vad_plugins.md) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (# VAD Plugins in OVOS) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (## Overview) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (Voice Activity Detection \(VAD\) helps determine when a user has *finished* speaking. In ) Tj
1 0 0 1 50 252 Tm (OVOS, VAD plugins are used **after** the wake word is detected to decide when to stop ) Tj
1 0 0 1 50 238 Tm (recording and send the audio to speech-to-text \(STT\) engines. This reduces latency and ) Tj
1 0 0 1 50 224 Tm (avoids sending unnecessary silence.) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (While wake word detection typically starts the recording, VAD ensures it ends cleanly  ) Tj
1 0 0 1 50 182 Tm (optimizing performance and responsiveness.) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (## Usage Guide) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (- Install the desired VAD plugin:) Tj
1 0 0 1 50 112 Tm (```bash) Tj
1 0 0 1 50 98 Tm (pip install ovos-vad-plugin-<name>) Tj
1 0 0 1 50 84 Tm (```) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (- Set your preferred plugin in the OVOS configuration file \(`mycroft.conf`\):) Tj
ET
endstream

endobj
451 0 obj
<< /Length 3177 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (```javascript) Tj
1 0 0 1 50 728 Tm ({) Tj
1 0 0 1 50 714 Tm ( "listener": {) Tj
1 0 0 1 50 700 Tm (   "VAD": {) Tj
1 0 0 1 50 686 Tm (     "module": "ovos-vad-plugin-silero") Tj
1 0 0 1 50 672 Tm (   },) Tj
1 0 0 1 50 658 Tm (  // Setting to remove all silence/noise from start and end of recorded speech before STT) Tj
1 0 0 1 50 644 Tm (  "remove_silence": true) Tj
1 0 0 1 50 630 Tm ( }) Tj
1 0 0 1 50 616 Tm (}) Tj
1 0 0 1 50 602 Tm (```) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (- Restart the OVOS service to apply changes.) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (> ? By default, VAD is only used **after** wake word activation. See below for optional ) Tj
1 0 0 1 50 532 Tm (continuous mode.) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (## Available VAD Plugins) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (| Plugin | Description |) Tj
1 0 0 1 50 462 Tm (|--------|-------------|) Tj
1 0 0 1 50 448 Tm (| [ovos-vad-plugin-silero]\(https://github.com/OpenVoiceOS/ovos-vad-plugin-silero\) | Uses ) Tj
1 0 0 1 50 434 Tm ([Silero VAD]\(https://github.com/snakers4/silero-vad\), a neural networkbased VAD offering ) Tj
1 0 0 1 50 420 Tm (excellent real-time accuracy. **Recommended.** |) Tj
1 0 0 1 50 406 Tm (| [ovos-vad-plugin-webrtcvad]\(https://github.com/OpenVoiceOS/ovos-vad-plugin-webrtcvad\) | ) Tj
1 0 0 1 50 392 Tm (Wraps Googles [WebRTC VAD]\(https://webrtc.org/\), lightweight and fast, suited for short ) Tj
1 0 0 1 50 378 Tm (audio frames. |) Tj
1 0 0 1 50 364 Tm (| [ovos-vad-plugin-noise]\(https://github.com/OpenVoiceOS/ovos-vad-plugin-noise\) | Simple ) Tj
1 0 0 1 50 350 Tm (threshold-based VAD using volume levels. Useful for constrained devices, but less ) Tj
1 0 0 1 50 336 Tm (accurate. |) Tj
1 0 0 1 50 322 Tm (| [ovos-vad-plugin-precise]\(https://github.com/OpenVoiceOS/ovos-vad-plugin-precise\) | Uses) Tj
1 0 0 1 50 308 Tm ( a custom-trained model with [Mycroft Precise]\(https://github.com/MycroftAI/mycroft-) Tj
1 0 0 1 50 294 Tm (precise\). Can be tailored for your environment. |) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (## Technical Explanation) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (In OVOS, VAD operates **after** the wake word engine triggers recording. Its main purpose ) Tj
1 0 0 1 50 224 Tm (is to detect **the end of the user's speech**. Without VAD, the system would use a fixed ) Tj
1 0 0 1 50 210 Tm (timeout \(e.g., 3 seconds of silence\), which can lead to premature cutoffs or excessive ) Tj
1 0 0 1 50 196 Tm (silence that slows down transcription.) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (VAD plugins continuously monitor the audio during recording and tell the listener when the) Tj
1 0 0 1 50 154 Tm ( user has stopped talking. Once silence is detected for a defined threshold, OVOS stops ) Tj
1 0 0 1 50 140 Tm (recording and forwards the result to the STT engine.) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (This flow looks like:) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (```text) Tj
1 0 0 1 50 70 Tm ([ Wake Word Detected ] ? [ Start Recording ] ? [ VAD detects end of speech ] ? [ Stop ) Tj
1 0 0 1 50 56 Tm (Recording ] ? [ Send to STT ]) Tj
ET
endstream

endobj
452 0 obj
<< /Length 2741 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (```) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (### Experimental Continuous Mode) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (OVOS also supports an **experimental continuous listening mode** in `ovos-dinkum-) Tj
1 0 0 1 50 672 Tm (listener`, where wake word detection is bypassed entirely. In this mode, the listener uses) Tj
1 0 0 1 50 658 Tm ( **VAD alone** to decide when someone is speaking and triggers STT automatically.) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (To enable this behavior:) Tj
1 0 0 1 50 616 Tm (```json) Tj
1 0 0 1 50 602 Tm ({) Tj
1 0 0 1 50 588 Tm (  "listener": {) Tj
1 0 0 1 50 574 Tm (    "continuous_listen": false,) Tj
1 0 0 1 50 560 Tm (    "VAD": {) Tj
1 0 0 1 50 546 Tm (      "module": "ovos-vad-plugin-silero") Tj
1 0 0 1 50 532 Tm (    }) Tj
1 0 0 1 50 518 Tm (  }) Tj
1 0 0 1 50 504 Tm (}) Tj
1 0 0 1 50 490 Tm (```) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (> ?? This mode is **experimental**, it is not the default and is **unstable or prone to ) Tj
1 0 0 1 50 448 Tm (false triggers**. Use with caution. This may also cause OVOS to hear its own TTS responses) Tj
1 0 0 1 50 434 Tm ( as questions) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (> ? [ovos-transcription-validator]\(https://openvoiceos.github.io/ovos-technical-) Tj
1 0 0 1 50 392 Tm (manual/151-llm-transformers/#ovos-transcription-validator\) is extremely recommend as a ) Tj
1 0 0 1 50 378 Tm (companion plugin for this mode) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (## Tips & Caveats) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (- **Silero** is the most accurate and works well across platforms.) Tj
1 0 0 1 50 308 Tm (- **Noise-based** VAD can be too sensitive in environments with background sound.) Tj
1 0 0 1 50 294 Tm (- VAD plugins may expose tunable settings like silence thresholds or sensitivity  refer ) Tj
1 0 0 1 50 280 Tm (to each plugin's documentation.) Tj
1 0 0 1 50 266 Tm (- Disabling the wake word and relying only on VAD is **experimental** and not recommended ) Tj
1 0 0 1 50 252 Tm (for production use \(yet\).) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (---) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (**Coming Soon**) Tj
1 0 0 1 50 168 Tm (- Standalone usage examples) Tj
1 0 0 1 50 154 Tm (- How to build a custom VAD plugin) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (# docs/312-wake_word_plugins.md) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (# Wake Word Plugins) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (Wake Word plugins allow Open Voice OS to detect specific words or sounds, typically the ) Tj
1 0 0 1 50 56 Tm (assistants name \(e.g., "Hey Mycroft"\), but can be customized for various use cases. These) Tj
ET
endstream

endobj
453 0 obj
<< /Length 2974 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm ( plugins enable the system to listen for and react to activation commands or phrases.) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (## Available Plugins) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (OVOS supports different wake word detection plugins, each with its own strengths and use ) Tj
1 0 0 1 50 672 Tm (cases) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (The default OVOS plugins are:) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (- **[ovos-ww-plugin-precise-lite]\(https://github.com/OpenVoiceOS/ovos-ww-plugin-precise-) Tj
1 0 0 1 50 602 Tm (lite\)**: A model-based plugin that uses a trained machine learning model to detect wake ) Tj
1 0 0 1 50 588 Tm (words.) Tj
1 0 0 1 50 574 Tm (- **[ovos-ww-plugin-vosk]\(https://github.com/OpenVoiceOS/ovos-ww-plugin-vosk\)**: A text-) Tj
1 0 0 1 50 560 Tm (based plugin leveraging Vosk, which allows you to define a wake word without requiring a ) Tj
1 0 0 1 50 546 Tm (trained model. This is useful during the initial stages of data collection.) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (Each plugin has its pros and cons, with Vosk offering a faster setup for simple wakeword ) Tj
1 0 0 1 50 504 Tm (recognition without model training.) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (## Wakeword Configuration) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (The `hotwords` section in your `mycroft.conf` allows you to configure the wakeword ) Tj
1 0 0 1 50 434 Tm (detection parameters for each plugin. For instance:) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (```json) Tj
1 0 0 1 50 392 Tm ("hotwords": {) Tj
1 0 0 1 50 378 Tm (  "hey_mycroft": {) Tj
1 0 0 1 50 364 Tm (    "module": "ovos-ww-plugin-precise-lite",) Tj
1 0 0 1 50 350 Tm (    "model": "https://github.com/OpenVoiceOS/precise-lite-) Tj
1 0 0 1 50 336 Tm (models/raw/master/wakewords/en/hey_mycroft.tflite",) Tj
1 0 0 1 50 322 Tm (    "expected_duration": 3,) Tj
1 0 0 1 50 308 Tm (    "trigger_level": 3,) Tj
1 0 0 1 50 294 Tm (    "sensitivity": 0.5,) Tj
1 0 0 1 50 280 Tm (    "listen": true) Tj
1 0 0 1 50 266 Tm (  }) Tj
1 0 0 1 50 252 Tm (}) Tj
1 0 0 1 50 238 Tm (```) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (> ? see the full docs for the [listener service]\(https://openvoiceos.github.io/ovos-) Tj
1 0 0 1 50 196 Tm (technical-manual/101-speech_service/#hotwords\)) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (## Tips and Caveats) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (- **Vosk Plugin**: The Vosk plugin is useful when you need a simple setup that doesnt ) Tj
1 0 0 1 50 112 Tm (require training a wake word model. Its great for quickly gathering data during the ) Tj
1 0 0 1 50 98 Tm (development stage.) Tj
1 0 0 1 50 84 Tm (- **Precision and Sensitivity**: Adjust the `sensitivity` and `trigger_level` settings ) Tj
1 0 0 1 50 70 Tm (carefully. Too high a sensitivity can lead to false positives, while too low may miss ) Tj
1 0 0 1 50 56 Tm (detection.) Tj
ET
endstream

endobj
454 0 obj
<< /Length 2822 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (## Plugin Development) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (### Key Methods) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (When developing a custom wake word plugin, the following methods are essential:) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (- **`found_wake_word\(frame_data\)`**: This method must be defined. It checks whether a wake) Tj
1 0 0 1 50 630 Tm ( word is found in the provided audio data.) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (- **`update\(chunk\)`**: An optional method for processing live audio chunks and making ) Tj
1 0 0 1 50 588 Tm (streaming predictions.) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (- **`stop\(\)`**: An optional method to shut down the plugin, like unloading data or halting) Tj
1 0 0 1 50 546 Tm ( external processes.) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (> ?? `found_wake_word\(frame_data\)` should ignore `frame_data`, this has been deprecated ) Tj
1 0 0 1 50 504 Tm (and is only provided for backwards-compatibility. Plugins are now expected to handle real ) Tj
1 0 0 1 50 490 Tm (time audio via `update` method) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (### Registering Your Plugin) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (To integrate your custom plugin, add it to OVOS via the following entry point:) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (```python) Tj
1 0 0 1 50 392 Tm (setup\([...], entry_points={'mycroft.plugin.wake_word': 'example_wake_word_plugin = ) Tj
1 0 0 1 50 378 Tm (my_example_ww:MyWakeWordEngine'}\)) Tj
1 0 0 1 50 364 Tm (```) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (### Example Plugin) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (Heres a simple implementation of a wake word plugin:) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (```python) Tj
1 0 0 1 50 266 Tm (from ovos_plugin_manager.templates.hotwords import HotWordEngine) Tj
1 0 0 1 50 252 Tm (from threading import Event) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (class MyWWPlugin\(HotWordEngine\):) Tj
1 0 0 1 50 210 Tm (    def __init__\(self, key_phrase="hey mycroft", config=None, lang="en-us"\):) Tj
1 0 0 1 50 196 Tm (        super\(\).__init__\(key_phrase, config, lang\)) Tj
1 0 0 1 50 182 Tm (        self.detection = Event\(\)) Tj
1 0 0 1 50 168 Tm (        self.engine = MyWW\(key_phrase\)) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (    def found_wake_word\(self, frame_data\):) Tj
1 0 0 1 50 126 Tm (        # NOTE: frame_data should be ignored, it is deprecated) Tj
1 0 0 1 50 112 Tm (        # inference happens via the self.update_method) Tj
1 0 0 1 50 98 Tm (        detected = self.detection.is_set\(\)) Tj
1 0 0 1 50 84 Tm (        if detected:) Tj
1 0 0 1 50 70 Tm (            self.detection.clear\(\)) Tj
1 0 0 1 50 56 Tm (        return detected) Tj
ET
endstream

endobj
455 0 obj
<< /Length 2639 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (    def update\(self, chunk\):) Tj
1 0 0 1 50 714 Tm (        if self.engine.found_it\(chunk\):) Tj
1 0 0 1 50 700 Tm (            self.detection.set\(\)) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (    def stop\(self\):) Tj
1 0 0 1 50 658 Tm (        self.engine.bye\(\)) Tj
1 0 0 1 50 644 Tm (```) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (# docs/313-stt_plugins.md) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (# STT Plugins) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (STT plugins are responsible for converting spoken audio into text) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (## `STT`) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (The base STT, this handles the audio in "batch mode" taking a complete audio file, and ) Tj
1 0 0 1 50 476 Tm (returning the complete transcription.) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (Each STT plugin class needs to define the `execute\(\)` method taking two arguments:) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (* `audio` ) Tj
1 0 0 1 50 406 Tm (\\\([AudioData]\(https://github.com/Uberi/speech_recognition/blob/master/reference/library-) Tj
1 0 0 1 50 392 Tm (reference.rst#audiodataframe_data-bytes-sample_rate-int-sample_width-int---audiodata\) ) Tj
1 0 0 1 50 378 Tm (object\\\) - the audio data to be transcribed.  ) Tj
1 0 0 1 50 364 Tm (* `lang` \\\(str\\\) - _optional_ - the BCP-47 language code) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (The bare minimum STT class will look something like) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (```python) Tj
1 0 0 1 50 294 Tm (from ovos_plugin_manager.templates.stt import STT) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (class MySTT\(STT\):) Tj
1 0 0 1 50 252 Tm (    def execute\(audio, language=None\):) Tj
1 0 0 1 50 238 Tm (        # Handle audio data and return transcribed text) Tj
1 0 0 1 50 224 Tm (        [...]) Tj
1 0 0 1 50 210 Tm (        return text) Tj
1 0 0 1 50 196 Tm (```) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (## `StreamingSTT`) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (A more advanced STT class for streaming data to the STT. This will receive chunks of audio) Tj
1 0 0 1 50 126 Tm ( data as they become available and they are streamed to an STT engine.) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (The plugin author needs to implement the `create_streaming_thread\(\)` method creating a ) Tj
1 0 0 1 50 84 Tm (thread for handling data sent through `self.queue`. ) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (The thread this method creates should be based on the [StreamThread class]\(\). ) Tj
ET
endstream

endobj
456 0 obj
<< /Length 4149 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (`handle_audio_data\(\)` method also needs to be implemented.) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (## Entry point) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (To make the class detectable as an STT plugin, the package needs to provide an entry point) Tj
1 0 0 1 50 672 Tm ( under the `mycroft.plugin.stt` namespace.) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (```python) Tj
1 0 0 1 50 630 Tm (setup\([...],) Tj
1 0 0 1 50 616 Tm (      entry_points = {'mycroft.plugin.stt': 'example_stt = my_stt:mySTT'}) Tj
1 0 0 1 50 602 Tm (      \)) Tj
1 0 0 1 50 588 Tm (```) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (Where `example_stt` is is the STT module name for the plugin, my\\_stt is the Python module) Tj
1 0 0 1 50 546 Tm ( and mySTT is the class in the module to return.) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (## List of STT plugins) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (| Plugin                                                                                  ) Tj
1 0 0 1 50 462 Tm (                                                                                          ) Tj
1 0 0 1 50 448 Tm (                                           | Offline | Streaming | Type              | ) Tj
1 0 0 1 50 434 Tm (|-----------------------------------------------------------------------------------------) Tj
1 0 0 1 50 420 Tm (------------------------------------------------------------------------------------------) Tj
1 0 0 1 50 406 Tm (-------------------------------------------|---------|-----------|-------------------|) Tj
1 0 0 1 50 392 Tm (| [ovos-stt-plugin-fasterwhisper]\(https://github.com/OpenVoiceOS/ovos-stt-plugin-) Tj
1 0 0 1 50 378 Tm (fasterwhisper\)                                                                            ) Tj
1 0 0 1 50 364 Tm (                                                    | ??      | ?         | FOSS) Tj
1 0 0 1 50 350 Tm (              |) Tj
1 0 0 1 50 336 Tm (| [ovos-stt-plugin-whispercpp]\(https://github.com/OpenVoiceOS/ovos-stt-plugin-whispercpp\) ) Tj
1 0 0 1 50 322 Tm (                                                                                          ) Tj
1 0 0 1 50 308 Tm (                                           | ??      | ?         | FOSS              |) Tj
1 0 0 1 50 294 Tm (| [ovos-stt-plugin-vosk]\(https://github.com/OpenVoiceOS/ovos-stt-plugin-vosk\)             ) Tj
1 0 0 1 50 280 Tm (                                                                                          ) Tj
1 0 0 1 50 266 Tm (                                           | ??      | ?         | FOSS              |) Tj
1 0 0 1 50 252 Tm (| [ovos-stt-plugin-chromium]\(https://github.com/OpenVoiceOS/ovos-stt-plugin-chromium\)     ) Tj
1 0 0 1 50 238 Tm (                                                                                          ) Tj
1 0 0 1 50 224 Tm (                                           | ?       | ?         | API \(free\)        |) Tj
1 0 0 1 50 210 Tm (| [ovos-stt-plugin-http-server]\(https://github.com/OpenVoiceOS/ovos-stt-plugin-http-) Tj
1 0 0 1 50 196 Tm (server\)                                                                                   ) Tj
1 0 0 1 50 182 Tm (                                                 | ?       | ?         | API \(self hosted\)) Tj
1 0 0 1 50 168 Tm ( |) Tj
1 0 0 1 50 154 Tm (| [ovos-stt-plugin-pocketsphinx]\(https://github.com/OpenVoiceOS/ovos-stt-plugin-) Tj
1 0 0 1 50 140 Tm (pocketsphinx\)                                                                             ) Tj
1 0 0 1 50 126 Tm (                                                     | ??      | ?         | FOSS) Tj
1 0 0 1 50 112 Tm (              |) Tj
1 0 0 1 50 98 Tm (| [ovos-stt-azure-plugin]\(https://github.com/OpenVoiceOS/ovos-stt-azure-plugin\)           ) Tj
1 0 0 1 50 84 Tm (                                                                                          ) Tj
1 0 0 1 50 70 Tm (                                           | ?       | ?         | API \(key\)         |) Tj
1 0 0 1 50 56 Tm (| ![imagem]\(https://github.com/OpenVoiceOS/ovos-) Tj
ET
endstream

endobj
457 0 obj
<< /Length 2866 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (media/assets/33701864/90f31b0a-dd56-457d-a3cf-7fc08b460038\) [neon-stt-plugin-) Tj
1 0 0 1 50 728 Tm (google_cloud_streaming]\(https://github.com/NeonGeckoCom/neon-stt-plugin-) Tj
1 0 0 1 50 714 Tm (google_cloud_streaming\)   | ?       | ?         | API \(key\)         |) Tj
1 0 0 1 50 700 Tm (| ![imagem]\(https://github.com/OpenVoiceOS/ovos-) Tj
1 0 0 1 50 686 Tm (media/assets/33701864/90f31b0a-dd56-457d-a3cf-7fc08b460038\) [neon-stt-plugin-) Tj
1 0 0 1 50 672 Tm (nemo]\(https://github.com/NeonGeckoCom/neon-stt-plugin-nemo\)) Tj
1 0 0 1 50 658 Tm (                                       | ??      | ??        | FOSS              | ) Tj
1 0 0 1 50 644 Tm (| ![imagem]\(https://github.com/OpenVoiceOS/ovos-) Tj
1 0 0 1 50 630 Tm (media/assets/33701864/90f31b0a-dd56-457d-a3cf-7fc08b460038\) [neon-stt-plugin-nemo-) Tj
1 0 0 1 50 616 Tm (remote]\(https://github.com/NeonGeckoCom/neon-stt-plugin-nemo-remote\)) Tj
1 0 0 1 50 602 Tm (                         | ??      | ?         | API \(self hosted\) | ) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (## Standalone Usage) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (STT plugins can be used in your owm projects as follows) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (```python) Tj
1 0 0 1 50 504 Tm (from speech_recognition import Recognizer, AudioFile) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (plug = STTPlug\(\)) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (# verify lang is supported) Tj
1 0 0 1 50 434 Tm (lang = "en-us") Tj
1 0 0 1 50 420 Tm (assert lang in plug.available_languages) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (# read file) Tj
1 0 0 1 50 378 Tm (with AudioFile\("test.wav"\) as source:) Tj
1 0 0 1 50 364 Tm (    audio = Recognizer\(\).record\(source\)) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (# transcribe AudioData object) Tj
1 0 0 1 50 322 Tm (transcript = plug.execute\(audio, lang\)) Tj
1 0 0 1 50 308 Tm (```) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (## Plugin Template) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (```python) Tj
1 0 0 1 50 238 Tm (from ovos_plugin_manager.templates.stt import STT) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (# base plugin class) Tj
1 0 0 1 50 182 Tm (class MySTTPlugin\(STT\):) Tj
1 0 0 1 50 168 Tm (    def __init__\(self, *args, **kwargs\):) Tj
1 0 0 1 50 154 Tm (        super\(\).__init__\(*args, **kwargs\)) Tj
1 0 0 1 50 140 Tm (        # read config settings for your plugin) Tj
1 0 0 1 50 126 Tm (        lm = self.config.get\("language-model"\)) Tj
1 0 0 1 50 112 Tm (        hmm = self.config.get\("acoustic-model"\)) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (    def execute\(self, audio, language=None\):) Tj
1 0 0 1 50 70 Tm (        # TODO - convert audio into text and return string) Tj
1 0 0 1 50 56 Tm (        transcript = "You said this") Tj
ET
endstream

endobj
458 0 obj
<< /Length 2572 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (        return transcript) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (    @property) Tj
1 0 0 1 50 700 Tm (    def available_languages\(self\):) Tj
1 0 0 1 50 686 Tm (        """Return languages supported by this STT implementation in this state) Tj
1 0 0 1 50 672 Tm (        This property should be overridden by the derived class to advertise) Tj
1 0 0 1 50 658 Tm (        what languages that engine supports.) Tj
1 0 0 1 50 644 Tm (        Returns:) Tj
1 0 0 1 50 630 Tm (            set: supported languages) Tj
1 0 0 1 50 616 Tm (        """) Tj
1 0 0 1 50 602 Tm (        # TODO - what langs can this STT handle?) Tj
1 0 0 1 50 588 Tm (        return {"en-us", "es-es"}) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (# sample valid configurations per language) Tj
1 0 0 1 50 532 Tm (# "display_name" and "offline" provide metadata for UI) Tj
1 0 0 1 50 518 Tm (# "priority" is used to calculate position in selection dropdown ) Tj
1 0 0 1 50 504 Tm (#       0 - top, 100-bottom) Tj
1 0 0 1 50 490 Tm (# all other keys represent an example valid config for the plugin ) Tj
1 0 0 1 50 476 Tm (MySTTConfig = {) Tj
1 0 0 1 50 462 Tm (    lang: [{"lang": lang,) Tj
1 0 0 1 50 448 Tm (            "display_name": f"MySTT \({lang}",) Tj
1 0 0 1 50 434 Tm (            "priority": 70,) Tj
1 0 0 1 50 420 Tm (            "offline": True}]) Tj
1 0 0 1 50 406 Tm (    for lang in ["en-us", "es-es"]) Tj
1 0 0 1 50 392 Tm (}) Tj
1 0 0 1 50 378 Tm (```) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (# docs/320-tts_plugins.md) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (# TTS Plugins) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (TTS plugins are responsible for converting text into audio for playback) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (## TTS) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (All Mycroft TTS plugins need to define a class based on the TTS base class from ) Tj
1 0 0 1 50 210 Tm (ovos_plugin_manager) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (```python) Tj
1 0 0 1 50 168 Tm (from ovos_plugin_manager.templates.tts import TTS) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (class myTTS\(TTS\):) Tj
1 0 0 1 50 126 Tm (    def __init__\(self, lang, config\):) Tj
1 0 0 1 50 112 Tm (        super\(\).__init__\(lang, config, validator, audio_ext='wav',) Tj
1 0 0 1 50 98 Tm (                         phonetic_spelling=False, ssml_tags=None\)) Tj
1 0 0 1 50 84 Tm (        # Any specific init code goes here) Tj
1 0 0 1 50 70 Tm (```) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
459 0 obj
<< /Length 3028 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (The `super\(\)` call does some setup adding specific options to how Mycroft will preprocess ) Tj
1 0 0 1 50 728 Tm (the sentence.) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (* `audio_ext`: filetype of output, possible options 'wav' and 'mp3'.) Tj
1 0 0 1 50 686 Tm (* `phonetec_spelling`, True if Mycroft should preprocess some difficult to pronounce words) Tj
1 0 0 1 50 672 Tm ( \\\(eg spotify\\\) or provide the raw text to the TTS.) Tj
1 0 0 1 50 658 Tm (* `ssml_tags`: list of valid SSML tags for the TTS if any, otherwise None.) Tj
1 0 0 1 50 644 Tm (* `validator`: a special class that verifies that the TTS is working in the current ) Tj
1 0 0 1 50 630 Tm (configuration.) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (The `get_tts\(\)` method will be called by Mycroft to generate audio and \\\(optionally\\\) ) Tj
1 0 0 1 50 588 Tm (phonemes. This is the main method that the plugin creator needs to implement. It is called) Tj
1 0 0 1 50 574 Tm ( with:) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (* `sentence` \\\(str\\\): a piece of text to turn into audio.) Tj
1 0 0 1 50 532 Tm (* `wav_file` \\\(str\\\): where the plugin should store the generated audio data.) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (This method should generate audio data and return a Tuple `\(wav_file, visemes\)`:) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (* `wav_file` \\\(str\\\): path to written data \\\(generally the input argument\\\)) Tj
1 0 0 1 50 462 Tm (* `phonemes` \\\(list\\\): phoneme list for synthesized audio) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (## TTS Validator) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (To check if the TTS can be used, a validator class is needed. This should inherit from ) Tj
1 0 0 1 50 378 Tm (`mycroft.tts.TTSValidaor`. ) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (It will be called with the TTS class as argument and will store it in `self.tts`.) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (The following is the bare minimum implementation:) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (```python) Tj
1 0 0 1 50 280 Tm (class MyValidator\(TTSValidator\):) Tj
1 0 0 1 50 266 Tm (    def get_tts_class\(self\):) Tj
1 0 0 1 50 252 Tm (        # Should return a reference to the TTS class it's inteded to validate.) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (    def validate_lang\(self\):) Tj
1 0 0 1 50 210 Tm (        # Raise exception if `self.tts.lang` is not supported.) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (    def validate_connection\(self\):) Tj
1 0 0 1 50 168 Tm (        # Check that the software needed for the TTS is reachable,) Tj
1 0 0 1 50 154 Tm (        # be it a local executable, python module or remote server and) Tj
1 0 0 1 50 140 Tm (        # if not available raise an exception.) Tj
1 0 0 1 50 126 Tm (```) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (> NOTE: TTSValidator is optional) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (## Entry point) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
460 0 obj
<< /Length 4597 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (To make the class detectable as an TTS plugin, the package needs to provide an entry point) Tj
1 0 0 1 50 728 Tm ( under the `mycroft.plugin.tts` namespace.) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (```python) Tj
1 0 0 1 50 686 Tm (setup\([...],) Tj
1 0 0 1 50 672 Tm (      entry_points = {'mycroft.plugin.tts': 'example_tts = my_tts:myTTS'}) Tj
1 0 0 1 50 658 Tm (      \)) Tj
1 0 0 1 50 644 Tm (```) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (Where `example_tts` is is the TTS module name for the plugin, `my_tts` is the Python ) Tj
1 0 0 1 50 602 Tm (module and `myTTS` is the class in the module to return.) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (## List of TTS plugins) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (| Plugin                                                                                  ) Tj
1 0 0 1 50 532 Tm (                                                                                          ) Tj
1 0 0 1 50 518 Tm (                       | Streaming | Offline | Type              |) Tj
1 0 0 1 50 504 Tm (|-----------------------------------------------------------------------------------------) Tj
1 0 0 1 50 490 Tm (------------------------------------------------------------------------------------------) Tj
1 0 0 1 50 476 Tm (-----------------------|-----------|---------|-------------------|) Tj
1 0 0 1 50 462 Tm (| [ovos-tts-plugin-mimic]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-mimic\)           ) Tj
1 0 0 1 50 448 Tm (                                                                                          ) Tj
1 0 0 1 50 434 Tm (                       | ?         | ??      | FOSS              |) Tj
1 0 0 1 50 420 Tm (| [ovos-tts-plugin-mimic3]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-mimic3\)         ) Tj
1 0 0 1 50 406 Tm (                                                                                          ) Tj
1 0 0 1 50 392 Tm (                       | ?         | ??      | FOSS              |) Tj
1 0 0 1 50 378 Tm (| [ovos-tts-plugin-piper]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-piper\)           ) Tj
1 0 0 1 50 364 Tm (                                                                                          ) Tj
1 0 0 1 50 350 Tm (                       | ?         | ??      | FOSS              |) Tj
1 0 0 1 50 336 Tm (| [ovos-tts-plugin-marytts]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-marytts\)       ) Tj
1 0 0 1 50 322 Tm (                                                                                          ) Tj
1 0 0 1 50 308 Tm (                       | ?         | ?       | API \(self hosted\) |) Tj
1 0 0 1 50 294 Tm (| [ovos-tts-server-plugin]\(https://github.com/OpenVoiceOS/ovos-tts-server-plugin\)         ) Tj
1 0 0 1 50 280 Tm (                                                                                          ) Tj
1 0 0 1 50 266 Tm (                       | ?         | ?       | API \(self hosted\) |) Tj
1 0 0 1 50 252 Tm (| [ovos-tts-plugin-pico]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-pico\)             ) Tj
1 0 0 1 50 238 Tm (                                                                                          ) Tj
1 0 0 1 50 224 Tm (                       | ?         | ??      | FOSS              |) Tj
1 0 0 1 50 210 Tm (| [ovos-tts-plugin-edge-tts]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-edge-tts\)     ) Tj
1 0 0 1 50 196 Tm (                                                                                          ) Tj
1 0 0 1 50 182 Tm (                       | ??        | ?       | API \(free\)        |) Tj
1 0 0 1 50 168 Tm (| [ovos-tts-plugin-polly]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-polly\)           ) Tj
1 0 0 1 50 154 Tm (                                                                                          ) Tj
1 0 0 1 50 140 Tm (                       | ?         | ?       | API \(key\)         |) Tj
1 0 0 1 50 126 Tm (| [ovos-tts-plugin-voicerss]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-voicerss\)     ) Tj
1 0 0 1 50 112 Tm (                                                                                          ) Tj
1 0 0 1 50 98 Tm (                       | ?         | ?       | API \(key\)         |) Tj
1 0 0 1 50 84 Tm (| [ovos-tts-plugin-google-TX]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-google-TX\)   ) Tj
1 0 0 1 50 70 Tm (                                                                                          ) Tj
1 0 0 1 50 56 Tm (                       | ?         | ?       | API \(free\)        |) Tj
ET
endstream

endobj
461 0 obj
<< /Length 3831 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (| [ovos-tts-plugin-responsivevoice]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-) Tj
1 0 0 1 50 728 Tm (responsivevoice\)                                                                          ) Tj
1 0 0 1 50 714 Tm (                              | ?         | ?       | API \(free\)        |) Tj
1 0 0 1 50 700 Tm (| [ovos-tts-plugin-espeakNG]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-espeakNG\)     ) Tj
1 0 0 1 50 686 Tm (                                                                                          ) Tj
1 0 0 1 50 672 Tm (                       | ?         | ??      | FOSS              |) Tj
1 0 0 1 50 658 Tm (| [ovos-tts-plugin-cotovia]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-cotovia\)       ) Tj
1 0 0 1 50 644 Tm (                                                                                          ) Tj
1 0 0 1 50 630 Tm (                       | ?         | ??      | FOSS              |) Tj
1 0 0 1 50 616 Tm (| [ovos-tts-plugin-SAM]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-SAM\)               ) Tj
1 0 0 1 50 602 Tm (                                                                                          ) Tj
1 0 0 1 50 588 Tm (                       | ?         | ??      | Abandonware       |) Tj
1 0 0 1 50 574 Tm (| [ovos-tts-plugin-beepspeak]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-beepspeak\)   ) Tj
1 0 0 1 50 560 Tm (                                                                                          ) Tj
1 0 0 1 50 546 Tm (                       | ?         | ??      | Fun               |) Tj
1 0 0 1 50 532 Tm (| ![imagem]\(https://github.com/OpenVoiceOS/ovos-) Tj
1 0 0 1 50 518 Tm (media/assets/33701864/90f31b0a-dd56-457d-a3cf-7fc08b460038\) [neon-tts-plugin-) Tj
1 0 0 1 50 504 Tm (larynx_server]\(https://github.com/NeonGeckoCom/neon-tts-plugin-larynx_server\) | ?         ) Tj
1 0 0 1 50 490 Tm (| ?       | API \(self hosted\) |) Tj
1 0 0 1 50 476 Tm (| ![imagem]\(https://github.com/OpenVoiceOS/ovos-) Tj
1 0 0 1 50 462 Tm (media/assets/33701864/90f31b0a-dd56-457d-a3cf-7fc08b460038\) [neon-tts-plugin-) Tj
1 0 0 1 50 448 Tm (coqui]\(https://github.com/NeonGeckoCom/neon-tts-plugin-coqui\)                 | ?         ) Tj
1 0 0 1 50 434 Tm (| ??       | FOSS              |) Tj
1 0 0 1 50 420 Tm (| ![imagem]\(https://github.com/OpenVoiceOS/ovos-) Tj
1 0 0 1 50 406 Tm (media/assets/33701864/90f31b0a-dd56-457d-a3cf-7fc08b460038\) [neon-tts-plugin-coqui-) Tj
1 0 0 1 50 392 Tm (remote]\(https://github.com/NeonGeckoCom/neon-tts-plugin-coqui-remote\)   | ?         | ?) Tj
1 0 0 1 50 378 Tm (       | API \(self hosted\) |) Tj
1 0 0 1 50 364 Tm (| ![imagem]\(https://github.com/OpenVoiceOS/ovos-) Tj
1 0 0 1 50 350 Tm (media/assets/33701864/90f31b0a-dd56-457d-a3cf-7fc08b460038\) [neon-tts-plugin-) Tj
1 0 0 1 50 336 Tm (glados]\(https://github.com/NeonGeckoCom/neon-tts-plugin-glados\)               | ?         ) Tj
1 0 0 1 50 322 Tm (| ??      | FOSS              |) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (## Standalone Usage) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (TODO) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (## Plugin Template) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (```python) Tj
1 0 0 1 50 168 Tm (from ovos_plugin_manager.templates.tts import TTS) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (# base plugin class) Tj
1 0 0 1 50 112 Tm (class MyTTSPlugin\(TTS\):) Tj
1 0 0 1 50 98 Tm (    def __init__\(self, *args, **kwargs\):) Tj
1 0 0 1 50 84 Tm (        # in here you should specify if your plugin return wav or mp3 files) Tj
1 0 0 1 50 70 Tm (        # you should also specify any valid ssml tags) Tj
1 0 0 1 50 56 Tm (        ssml_tags = ["speak", "s", "w", "voice", "prosody",) Tj
ET
endstream

endobj
462 0 obj
<< /Length 2832 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (                     "say-as", "break", "sub", "phoneme"]) Tj
1 0 0 1 50 728 Tm (        super\(\).__init__\(*args, **kwargs, audio_ext="wav", ssml_tags=ssml_tags\)) Tj
1 0 0 1 50 714 Tm (        # read config settings for your plugin if any) Tj
1 0 0 1 50 700 Tm (        self.pitch = self.config.get\("pitch", 0.5\)) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (    def get_tts\(self, sentence, wav_file\):) Tj
1 0 0 1 50 658 Tm (        # TODO - create TTS audio @ wav_file \(path\)) Tj
1 0 0 1 50 644 Tm (        return wav_file, None) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (    @property) Tj
1 0 0 1 50 602 Tm (    def available_languages\(self\):) Tj
1 0 0 1 50 588 Tm (        """Return languages supported by this TTS implementation in this state) Tj
1 0 0 1 50 574 Tm (        This property should be overridden by the derived class to advertise) Tj
1 0 0 1 50 560 Tm (        what languages that engine supports.) Tj
1 0 0 1 50 546 Tm (        Returns:) Tj
1 0 0 1 50 532 Tm (            set: supported languages) Tj
1 0 0 1 50 518 Tm (        """) Tj
1 0 0 1 50 504 Tm (        # TODO - what langs can this TTS handle?) Tj
1 0 0 1 50 490 Tm (        return {"en-us", "es-es"}) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (# sample valid configurations per language) Tj
1 0 0 1 50 434 Tm (# "display_name" and "offline" provide metadata for UI) Tj
1 0 0 1 50 420 Tm (# "priority" is used to calculate position in selection dropdown ) Tj
1 0 0 1 50 406 Tm (#       0 - top, 100-bottom) Tj
1 0 0 1 50 392 Tm (# all other keys represent an example valid config for the plugin ) Tj
1 0 0 1 50 378 Tm (MyTTSConfig = {) Tj
1 0 0 1 50 364 Tm (    lang: [{"lang": lang,) Tj
1 0 0 1 50 350 Tm (            "display_name": f"MyTTS \({lang}",) Tj
1 0 0 1 50 336 Tm (            "priority": 70,) Tj
1 0 0 1 50 322 Tm (            "offline": True}]) Tj
1 0 0 1 50 308 Tm (    for lang in ["en-us", "es-es"]) Tj
1 0 0 1 50 294 Tm (}) Tj
1 0 0 1 50 280 Tm (```) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (# docs/321-g2p_plugins.md) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (# Grapheme to Phoneme Plugins) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (Grapheme to Phoneme is the process of converting text into a set of "sound units" called ) Tj
1 0 0 1 50 168 Tm (phonemes) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (In `ovos-audio` these plugins are used to auto generate mouth movements / visemes in the ) Tj
1 0 0 1 50 126 Tm (TTS stage.) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (They can also be used to help configuring wake words or to facilitate training of TTS ) Tj
1 0 0 1 50 84 Tm (systems) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (These plugins can provide phonemes either in ARPA or IPA alphabets, an automatic ) Tj
ET
endstream

endobj
463 0 obj
<< /Length 3134 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (conversion will happen behind the) Tj
1 0 0 1 50 728 Tm (scenes when needed) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (## Visemes) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (Visemes are representations of the shape of a human mouth when speaking.) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (![visemes]\(http://www.web3.lu/wp-content/uploads/2014/09/visemes.jpg\)) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (Mouth movements are generated via a mapping of ARPA to VISEMES, TTS plugins may provide ) Tj
1 0 0 1 50 602 Tm (this natively, or a G2P plugin) Tj
1 0 0 1 50 588 Tm (may be used to estimate it directly from text) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (Visemes are predefined mouth positions, timing per phonemes is crucial for a natural mouth) Tj
1 0 0 1 50 546 Tm ( movement) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (The Mycroft Mark 1 uses this to make his "lips" match his speech.) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (OpenVoiceOS uses six basic visemes.) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (| viseme | mouth position   |) Tj
1 0 0 1 50 448 Tm (|--------|------------------|) Tj
1 0 0 1 50 434 Tm (| 0      | wide open        |) Tj
1 0 0 1 50 420 Tm (| 1      | pursed           |) Tj
1 0 0 1 50 406 Tm (| 2      | open             |) Tj
1 0 0 1 50 392 Tm (| 3      | narrow lips      |) Tj
1 0 0 1 50 378 Tm (| 4      | closed lips      |) Tj
1 0 0 1 50 364 Tm (| 5      | parted lips      |) Tj
1 0 0 1 50 350 Tm (| 6      | barely open lips |) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (Mapping based) Tj
1 0 0 1 50 308 Tm (on [Jeffers phoneme to viseme map, seen in table ) Tj
1 0 0 1 50 294 Tm (1]\(http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.221.6377&rep=rep1&type=pdf\),) Tj
1 0 0 1 50 280 Tm (partially based on the "12 mouth shapes visuals seen ) Tj
1 0 0 1 50 266 Tm ([here]\(https://wolfpaulus.com/journal/software/lipsynchronization/\)) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (## List of G2P plugins) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (| Plugin                                                                                  ) Tj
1 0 0 1 50 196 Tm (                                                                                          ) Tj
1 0 0 1 50 182 Tm (                      | Type | Duration |) Tj
1 0 0 1 50 168 Tm (|-----------------------------------------------------------------------------------------) Tj
1 0 0 1 50 154 Tm (------------------------------------------------------------------------------------------) Tj
1 0 0 1 50 140 Tm (----------------------|------|----------|) Tj
1 0 0 1 50 126 Tm (| [ovos-g2p-plugin-mimic]\(https://github.com/OpenVoiceOS/ovos-tts-plugin-) Tj
1 0 0 1 50 112 Tm (mimic/blob/dev/ovos_tts_plugin_mimic/__init__.py#L24\)) Tj
1 0 0 1 50 98 Tm (                                                                            | ARPA | ??) Tj
1 0 0 1 50 84 Tm (       |) Tj
1 0 0 1 50 70 Tm (| [ovos-g2p-plugin-heuristic-arpa]\(https://github.com/OpenVoiceOS/ovos-) Tj
1 0 0 1 50 56 Tm (classifiers/blob/dev/ovos_classifiers/opm/heuristics.py#L164\)) Tj
ET
endstream

endobj
464 0 obj
<< /Length 3090 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (                                                                      | ARPA | ?        |) Tj
1 0 0 1 50 728 Tm (| [ovos-g2p-plugin-espeak]\(https://github.com/OVOSHatchery/ovos-g2p-plugin-espeak\)        ) Tj
1 0 0 1 50 714 Tm (                                                                                          ) Tj
1 0 0 1 50 700 Tm (                      | IPA  | ?        |) Tj
1 0 0 1 50 686 Tm (| ![imagem]\(https://github.com/OpenVoiceOS/ovos-) Tj
1 0 0 1 50 672 Tm (media/assets/33701864/90f31b0a-dd56-457d-a3cf-7fc08b460038\) [neon-g2p-cmudict-) Tj
1 0 0 1 50 658 Tm (plugin]\(https://github.com/NeonGeckoCom/g2p-cmudict-plugin\)                 | ARPA | ?) Tj
1 0 0 1 50 644 Tm (        |) Tj
1 0 0 1 50 630 Tm (| ![imagem]\(https://github.com/OpenVoiceOS/ovos-) Tj
1 0 0 1 50 616 Tm (media/assets/33701864/90f31b0a-dd56-457d-a3cf-7fc08b460038\) [neon-g2p-phoneme-guesser-) Tj
1 0 0 1 50 602 Tm (plugin]\(https://github.com/NeonGeckoCom/g2p-phoneme-guesser-plugin\) | ARPA | ?        |) Tj
1 0 0 1 50 588 Tm (| ![imagem]\(https://github.com/OpenVoiceOS/ovos-) Tj
1 0 0 1 50 574 Tm (media/assets/33701864/90f31b0a-dd56-457d-a3cf-7fc08b460038\) [neon-g2p-gruut-) Tj
1 0 0 1 50 560 Tm (plugin]\(https://github.com/NeonGeckoCom/g2p-gruut-plugin\)                     | IPA  | ?) Tj
1 0 0 1 50 546 Tm (        |) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (## Standalone Usage) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (All G2P plugins can be used as follows) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (```python) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (utterance = "hello world") Tj
1 0 0 1 50 420 Tm (word = "hello") Tj
1 0 0 1 50 406 Tm (lang = "en-us") Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (plug = G2pPlugin\(\)) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (# convert a word into a list of phonemes) Tj
1 0 0 1 50 336 Tm (phones = plug.get_ipa\(word, lang\)) Tj
1 0 0 1 50 322 Tm (assert phones == ['h', '?', 'l', 'o?']) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (phones = plug.get_arpa\(word, lang\)) Tj
1 0 0 1 50 280 Tm (assert phones == ['HH', 'AH', 'L', 'OW']) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (# convert a utterance into a list of phonemes) Tj
1 0 0 1 50 238 Tm (phones = plug.utterance2arpa\(utterance, lang\)) Tj
1 0 0 1 50 224 Tm (assert phones == ['HH', 'AH', 'L', 'OW', '.', 'W', 'ER', 'L', 'D']) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (phones = plug.utterance2ipa\(utterance, lang\)) Tj
1 0 0 1 50 182 Tm (assert phones == ['h', '?', 'l', 'o?', '.', 'w', '?', 'l', 'd']) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (# convert a utterance into a list of viseme, duration pairs) Tj
1 0 0 1 50 140 Tm (visemes = plug.utterance2visemes\(utterance, lang\)) Tj
1 0 0 1 50 126 Tm (assert visemes == [\('0', 0.0775\), \('0', 0.155\), \('3', 0.2325\), \('2', 0.31\), \('2', 0.434\), ) Tj
1 0 0 1 50 112 Tm (\('2', 0.558\), \('3', 0.682\),) Tj
1 0 0 1 50 98 Tm (                   \('3', 0.806\)]) Tj
1 0 0 1 50 84 Tm (```) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (## Plugin Template) Tj
ET
endstream

endobj
465 0 obj
<< /Length 2867 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (```python) Tj
1 0 0 1 50 714 Tm (from ovos_plugin_manager.templates.g2p import Grapheme2PhonemePlugin) Tj
1 0 0 1 50 700 Tm (from ovos_utils.lang.visimes import VISIMES) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (# base plugin class) Tj
1 0 0 1 50 644 Tm (class MyARPAG2PPlugin\(Grapheme2PhonemePlugin\):) Tj
1 0 0 1 50 630 Tm (    def __init__\(self, config=None\):) Tj
1 0 0 1 50 616 Tm (        self.config = config or {}) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (    def get_arpa\(self, word, lang, ignore_oov=False\):) Tj
1 0 0 1 50 574 Tm (        phones = []  # TODO implement) Tj
1 0 0 1 50 560 Tm (        return phones) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (    def get_durations\(self, utterance, lang="en", default_dur=0.4\):) Tj
1 0 0 1 50 518 Tm (        words = utterance.split\(\)) Tj
1 0 0 1 50 504 Tm (        phones = [self.get_arpa\(w, lang\) for w in utterance.split\(\)]) Tj
1 0 0 1 50 490 Tm (        dur = default_dur  # TODO this is plugin specific) Tj
1 0 0 1 50 476 Tm (        return [\(pho, dur\) for pho in phones]) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (    def utterance2visemes\(self, utterance, lang="en", default_dur=0.4\):) Tj
1 0 0 1 50 434 Tm (        phonemes = self.get_durations\(utterance, lang, default_dur\)) Tj
1 0 0 1 50 420 Tm (        return [\(VISIMES.get\(pho[0].lower\(\), '4'\), float\(pho[1]\)\)) Tj
1 0 0 1 50 406 Tm (                for pho in phonemes]) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (```) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (If your plugin uses IPA instead of ARPA simply replace `get_arpa` with `get_ipa`) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (```python) Tj
1 0 0 1 50 308 Tm (from ovos_plugin_manager.templates.g2p import Grapheme2PhonemePlugin) Tj
1 0 0 1 50 294 Tm (from ovos_utils.lang.visimes import VISIMES) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (# base plugin class) Tj
1 0 0 1 50 238 Tm (class MyIPAG2PPlugin\(Grapheme2PhonemePlugin\):) Tj
1 0 0 1 50 224 Tm (    def __init__\(self, config=None\):) Tj
1 0 0 1 50 210 Tm (        self.config = config or {}) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (    def get_ipa\(self, word, lang, ignore_oov=False\):) Tj
1 0 0 1 50 168 Tm (        phones = []  # TODO implement) Tj
1 0 0 1 50 154 Tm (        return phones) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (    def get_durations\(self, utterance, lang="en", default_dur=0.4\):) Tj
1 0 0 1 50 112 Tm (        # auto converted to arpa if ipa is implemented) Tj
1 0 0 1 50 98 Tm (        phones = [self.get_arpa\(w, lang\) for w in utterance.split\(\)]) Tj
1 0 0 1 50 84 Tm (        dur = default_dur  # TODO this is plugin specific) Tj
1 0 0 1 50 70 Tm (        return [\(pho, dur\) for pho in phones]) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
466 0 obj
<< /Length 3531 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (    def utterance2visemes\(self, utterance, lang="en", default_dur=0.4\):) Tj
1 0 0 1 50 728 Tm (        phonemes = self.get_durations\(utterance, lang, default_dur\)) Tj
1 0 0 1 50 714 Tm (        return [\(VISIMES.get\(pho[0].lower\(\), '4'\), float\(pho[1]\)\)) Tj
1 0 0 1 50 700 Tm (                for pho in phonemes]) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (```) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (# docs/330-transformer_plugins.md) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (# Transformer Plugins) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (Transformer plugins in Open Voice OS \(OVOS\) provide a flexible way to modify and enhance ) Tj
1 0 0 1 50 546 Tm (various types of data during processing. These plugins can transform audio data, text, ) Tj
1 0 0 1 50 532 Tm (metadata, and even dialog content.) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (## Audio Transformers) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (Audio transformers are designed to process and modify audio data. They can be used to ) Tj
1 0 0 1 50 462 Tm (detect languages from audio input or even decode data embedded within the audio.) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (### Available Plugins) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (| Plugin                                                                                  ) Tj
1 0 0 1 50 392 Tm (                                                    | Description) Tj
1 0 0 1 50 378 Tm (                                                                                     |) Tj
1 0 0 1 50 364 Tm (|-----------------------------------------------------------------------------------------) Tj
1 0 0 1 50 350 Tm (----------------------------------------------------|-------------------------------------) Tj
1 0 0 1 50 336 Tm (------------------------------------------------------------|) Tj
1 0 0 1 50 322 Tm (| [ovos-audio-transformer-plugin-fasterwhisper]\(https://github.com/OpenVoiceOS/ovos-stt-) Tj
1 0 0 1 50 308 Tm (plugin-fasterwhisper\)                                 | Detects language from audio to ) Tj
1 0 0 1 50 294 Tm (inform Speech-to-Text \(STT\) processing.                          |) Tj
1 0 0 1 50 280 Tm (| [ovos-audio-transformer-plugin-speechbrain-) Tj
1 0 0 1 50 266 Tm (langdetect]\(https://github.com/OpenVoiceOS/ovos-audio-transformer-plugin-speechbrain-) Tj
1 0 0 1 50 252 Tm (langdetect\) | Detects language from audio to inform STT.) Tj
1 0 0 1 50 238 Tm (                                                     |) Tj
1 0 0 1 50 224 Tm (| [ovos-audio-transformer-plugin-ggwave]\(https://github.com/OpenVoiceOS/ovos-audio-) Tj
1 0 0 1 50 210 Tm (transformer-plugin-ggwave\)                                 | Decodes [data over ) Tj
1 0 0 1 50 196 Tm (audio]\(https://github.com/ggerganov/ggwave\) and emits bus events in response. |) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (These plugins help automate language detection and data interpretation, which are ) Tj
1 0 0 1 50 154 Tm (especially useful for multilingual environments or when integrating specialized data ) Tj
1 0 0 1 50 140 Tm (streams into your voice assistant.) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (## Utterance Transformers) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (Utterance transformers modify the textual representation of speech, improving the quality ) Tj
1 0 0 1 50 70 Tm (of transcriptions and allowing for more advanced processing.) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
467 0 obj
<< /Length 3905 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (### Available Plugins) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (| Plugin                            | Description                           | Source      ) Tj
1 0 0 1 50 700 Tm (                                                                                          ) Tj
1 0 0 1 50 686 Tm (                    |) Tj
1 0 0 1 50 672 Tm (|-----------------------------------|---------------------------------------|-------------) Tj
1 0 0 1 50 658 Tm (------------------------------------------------------------------------------------------) Tj
1 0 0 1 50 644 Tm (--------------------|) Tj
1 0 0 1 50 630 Tm (| ovos-utterance-normalizer         | Normalizes text before it reaches the pipeline ) Tj
1 0 0 1 50 616 Tm (stage. | [OpenVoiceOS/ovos-utterance-normalizer]\(https://github.com/OpenVoiceOS/ovos-) Tj
1 0 0 1 50 602 Tm (utterance-normalizer\)                         |) Tj
1 0 0 1 50 588 Tm (| ovos-utterance-plugin-cancel      | Cancels an utterance mid-transcription. | ) Tj
1 0 0 1 50 574 Tm ([OpenVoiceOS/ovos-utterance-plugin-cancel]\(https://github.com/OpenVoiceOS/ovos-utterance-) Tj
1 0 0 1 50 560 Tm (plugin-cancel\)                   |) Tj
1 0 0 1 50 546 Tm (| ovos-utterance-corrections-plugin | Manually corrects bad transcriptions.  | ) Tj
1 0 0 1 50 532 Tm ([OpenVoiceOS/ovos-utterance-corrections-plugin]\(https://github.com/OpenVoiceOS/ovos-) Tj
1 0 0 1 50 518 Tm (utterance-corrections-plugin\)         |) Tj
1 0 0 1 50 504 Tm (| ovos-utterance-translation-plugin | Automatically translates unsupported languages. | ) Tj
1 0 0 1 50 490 Tm ([OpenVoiceOS/ovos-bidirectional-translation-plugin]\(https://github.com/OpenVoiceOS/ovos-) Tj
1 0 0 1 50 476 Tm (bidirectional-translation-plugin\) |) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (These plugins enhance the quality of speech recognition and allow real-time intervention ) Tj
1 0 0 1 50 434 Tm (for handling special cases, such as language translation or manual corrections.) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (## Metadata Transformers) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (Metadata transformers handle the transformation of metadata associated with audio or ) Tj
1 0 0 1 50 364 Tm (utterances. They help in structuring or enriching metadata for further use.) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (### Available Plugins) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (*Currently, no specific plugins are listed for metadata transformers.*) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (## Dialog Transformers) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (Dialog transformers modify conversational content, allowing you to rewrite speech or ) Tj
1 0 0 1 50 238 Tm (translate it into a different language before execution. These plugins are particularly ) Tj
1 0 0 1 50 224 Tm (useful for improving the interactivity and flexibility of voice-based dialogues.) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (### Available Plugins) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (| Plugin                                | Description                                    |) Tj
1 0 0 1 50 154 Tm ( Source                                                                                   ) Tj
1 0 0 1 50 140 Tm (                                 |) Tj
1 0 0 1 50 126 Tm (|---------------------------------------|------------------------------------------------) Tj
1 0 0 1 50 112 Tm (|-----------------------------------------------------------------------------------------) Tj
1 0 0 1 50 98 Tm (----------------------------------|) Tj
1 0 0 1 50 84 Tm (| ovos-dialog-transformer-openai-plugin | Rewrites speech with a large language model ) Tj
1 0 0 1 50 70 Tm (\(LLM\) before executing Text-to-Speech \(TTS\). | [OpenVoiceOS/ovos-solver-plugin-openai-) Tj
1 0 0 1 50 56 Tm (persona]\(https://github.com/OpenVoiceOS/ovos-solver-plugin-openai-persona\)         |) Tj
ET
endstream

endobj
468 0 obj
<< /Length 3302 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (| ovos-dialog-translation-plugin        | Translates speech back into the user's language.) Tj
1 0 0 1 50 728 Tm ( | [OpenVoiceOS/ovos-bidirectional-translation-) Tj
1 0 0 1 50 714 Tm (plugin]\(https://github.com/OpenVoiceOS/ovos-bidirectional-translation-plugin\) |) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (Dialog transformers enable more dynamic interactions, such as generating personalized ) Tj
1 0 0 1 50 672 Tm (responses or translating dialogues into multiple languages.) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (## TTS Transformers) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (TTS \(Text-to-Speech\) transformers allow you to apply various effects or modifications to ) Tj
1 0 0 1 50 602 Tm (the speech output generated by the assistant, such as sound effects or audio filtering.) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (### Available Plugins) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (| Plugin                          | Description                   | Source                ) Tj
1 0 0 1 50 532 Tm (                                                                                        |) Tj
1 0 0 1 50 518 Tm (|---------------------------------|-------------------------------|-----------------------) Tj
1 0 0 1 50 504 Tm (----------------------------------------------------------------------------------------|) Tj
1 0 0 1 50 490 Tm (| ovos-tts-transformer-sox-plugin | Applies sound effects via `sox` \(Sound eXchange\). | ) Tj
1 0 0 1 50 476 Tm ([OpenVoiceOS/ovos-tts-transformer-sox-plugin]\(https://github.com/OpenVoiceOS/ovos-tts-) Tj
1 0 0 1 50 462 Tm (transformer-sox-plugin\) |) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (These plugins are helpful for modifying the final audio output, such as adding special ) Tj
1 0 0 1 50 420 Tm (effects, changing pitch, or applying filters.) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (## Standalone Usage) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (*Details on standalone usage are coming soon.*) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (## Plugin Templates) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (*Details on plugin templates are coming soon.*) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (## Conclusion) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (Transformer plugins in OVOS offer versatile tools for transforming data at various stages ) Tj
1 0 0 1 50 238 Tm (of processing. Whether you're working with audio, text, metadata, or dialog, these plugins) Tj
1 0 0 1 50 224 Tm ( allow for a high degree of customization and enhancement. OVOS's flexible plugin system ) Tj
1 0 0 1 50 210 Tm (empowers developers to create powerful, tailored experiences for users. Stay tuned for ) Tj
1 0 0 1 50 196 Tm (more updates and templates to help you create your own custom plugins.) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (# docs/340-PHAL.md) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (# PHAL  Platform/Hardware Abstraction Layer) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (The Platform/Hardware Abstraction Layer \(PHAL\) in OpenVoiceOS \(OVOS\) provides a flexible, ) Tj
1 0 0 1 50 84 Tm (plugin-based system for integrating hardware-specific and platform-level functionality. ) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (---) Tj
ET
endstream

endobj
469 0 obj
<< /Length 2768 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (## Usage Guide) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (PHAL plugins are loaded at runtime based on system compatibility and user configuration. ) Tj
1 0 0 1 50 686 Tm (You can:) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (- Install multiple PHAL plugins for system and hardware support.) Tj
1 0 0 1 50 644 Tm (- Rely on automatic hardware detection to load relevant plugins safely.) Tj
1 0 0 1 50 630 Tm (- Use AdminPHAL when elevated privileges are required.) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (---) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (## Technical Explanation) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (### PHAL Plugins) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (PHAL plugins dynamically extend your voice assistant's functionality by listening to ) Tj
1 0 0 1 50 490 Tm (events and integrating with system or hardware components. Examples include:) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (- **System control**: Restart, shutdown, or factory reset via `ovos-PHAL-plugin-system`.) Tj
1 0 0 1 50 448 Tm (- **Audio management**: Volume control with `ovos-PHAL-plugin-alsa`.) Tj
1 0 0 1 50 434 Tm (- **Hardware support**: Mark 1 and Mark 2 integrations using hardware detection.) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (Plugins are validated before loading. For example, the `ovos-PHAL-plugin-mk2` checks for ) Tj
1 0 0 1 50 392 Tm (the presence of the SJ201 HAT before activating.) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (### AdminPHAL) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (AdminPHAL is a specialized version of PHAL that loads plugins with root privileges. This ) Tj
1 0 0 1 50 322 Tm (allows for deeper OS integrationideal for tasks like system configuration or device ) Tj
1 0 0 1 50 308 Tm (control. However, all admin plugins must be:) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (- Marked as admin in their entry point.) Tj
1 0 0 1 50 266 Tm (- Explicitly enabled in the config \(`"enabled": true`\).) Tj
1 0 0 1 50 252 Tm (- Carefully audited, as they can modify system state.) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (AdminPHAL and PHAL will not load each other's plugins.) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (---) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (### Developing a PHAL Plugin) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (PHAL plugins usually consist of a validator \(to determine compatibility\) and an event ) Tj
1 0 0 1 50 126 Tm (listener. Here's a minimal example:) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (```python) Tj
1 0 0 1 50 84 Tm (from ovos_bus_client import Message) Tj
1 0 0 1 50 70 Tm (from ovos_plugin_manager.phal import PHALPlugin) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
470 0 obj
<< /Length 3136 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (class MyPHALPluginValidator:) Tj
1 0 0 1 50 728 Tm (    @staticmethod) Tj
1 0 0 1 50 714 Tm (    def validate\(config=None\):) Tj
1 0 0 1 50 700 Tm (        # Return False to prevent loading \(e.g., missing hardware\)) Tj
1 0 0 1 50 686 Tm (        return True) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (class MyPHALPlugin\(PHALPlugin\):) Tj
1 0 0 1 50 644 Tm (    validator = MyPHALPluginValidator) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (    def __init__\(self, bus=None, config=None\):) Tj
1 0 0 1 50 602 Tm (        super\(\).__init__\(bus=bus, name="ovos-PHAL-plugin-NAME", config=config\)) Tj
1 0 0 1 50 588 Tm (        self.bus.on\("my.event", self.handle_event\)) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (    def handle_event\(self, message\):) Tj
1 0 0 1 50 546 Tm (        self.bus.emit\(Message\("my.event.response"\)\)) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (    def shutdown\(self\):) Tj
1 0 0 1 50 504 Tm (        self.bus.remove\("my.event", self.handle_event\)) Tj
1 0 0 1 50 490 Tm (        super\(\).shutdown\(\)) Tj
1 0 0 1 50 476 Tm (```) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (More details on plugin packaging are available in the [OVOS Plugin Manager ) Tj
1 0 0 1 50 434 Tm (documentation]\(https://openvoiceos.github.io/ovos-technical-manual/300-plugin-manager\).) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (---) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (## Choosing Between a PHAL Plugin and a Skill) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (Not sure whether to build a skill or a PHAL plugin? Here's a quick guideline:) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (- Use **PHAL** for low-level system or hardware integration.) Tj
1 0 0 1 50 308 Tm (- Use **skills** for voice interactions and user-facing features.) Tj
1 0 0 1 50 294 Tm (- In some cases, both might be appropriatea PHAL plugin for backend support and a skill ) Tj
1 0 0 1 50 280 Tm (as a frontend interface.) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (![Should you use a skill or a PHAL plugin?]\(img/phal_or_skill.png\)) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (---) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (## Available Plugins) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (| Plugin                                                                                  ) Tj
1 0 0 1 50 154 Tm (                  | Description                            |) Tj
1 0 0 1 50 140 Tm (|-----------------------------------------------------------------------------------------) Tj
1 0 0 1 50 126 Tm (------------------|----------------------------------------|) Tj
1 0 0 1 50 112 Tm (| [ovos-PHAL-plugin-alsa]\(https://github.com/OpenVoiceOS/ovos-PHAL-plugin-alsa\)) Tj
1 0 0 1 50 98 Tm (                             | Volume control                         |) Tj
1 0 0 1 50 84 Tm (| [ovos-PHAL-plugin-system]\(https://github.com/OpenVoiceOS/ovos-PHAL-plugin-system\)) Tj
1 0 0 1 50 70 Tm (                         | Reboot, shutdown, and factory reset    |) Tj
1 0 0 1 50 56 Tm (| [ovos-PHAL-plugin-mk1]\(https://github.com/OpenVoiceOS/ovos-PHAL-plugin-mk1\)) Tj
ET
endstream

endobj
471 0 obj
<< /Length 3529 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (                               | Mycroft Mark 1 hardware integration    |) Tj
1 0 0 1 50 728 Tm (| [ovos-PHAL-plugin-respeaker-2mic]\(https://github.com/OpenVoiceOS/ovos-PHAL-plugin-) Tj
1 0 0 1 50 714 Tm (respeaker-2mic\)         | Respeaker 2-mic HAT support            |) Tj
1 0 0 1 50 700 Tm (| [ovos-PHAL-plugin-respeaker-4mic]\(https://github.com/OpenVoiceOS/ovos-PHAL-plugin-) Tj
1 0 0 1 50 686 Tm (respeaker-4mic\)         | Respeaker 4-mic HAT support            |) Tj
1 0 0 1 50 672 Tm (| [ovos-PHAL-plugin-wifi-setup]\(https://github.com/OpenVoiceOS/ovos-PHAL-plugin-wifi-) Tj
1 0 0 1 50 658 Tm (setup\)                 | Central Wi-Fi setup                    |) Tj
1 0 0 1 50 644 Tm (| [ovos-PHAL-plugin-gui-network-client]\(https://github.com/OpenVoiceOS/ovos-PHAL-plugin-) Tj
1 0 0 1 50 630 Tm (gui-network-client\) | GUI-based Wi-Fi setup                  |) Tj
1 0 0 1 50 616 Tm (| [ovos-PHAL-plugin-balena-wifi]\(https://github.com/OpenVoiceOS/ovos-PHAL-plugin-balena-) Tj
1 0 0 1 50 602 Tm (wifi\)               | Wi-Fi hotspot setup                    |) Tj
1 0 0 1 50 588 Tm (| [ovos-PHAL-plugin-network-manager]\(https://github.com/OpenVoiceOS/ovos-PHAL-plugin-) Tj
1 0 0 1 50 574 Tm (network-manager\)       | Network Manager integration            |) Tj
1 0 0 1 50 560 Tm (| [ovos-PHAL-plugin-ipgeo]\(https://github.com/OpenVoiceOS/ovos-PHAL-plugin-ipgeo\)) Tj
1 0 0 1 50 546 Tm (                           | Geolocation using IP address           |) Tj
1 0 0 1 50 532 Tm (| [ovos-PHAL-plugin-gpsd]\(https://github.com/OpenVoiceOS/ovos-PHAL-plugin-gpsd\)) Tj
1 0 0 1 50 518 Tm (                             | Geolocation using GPS                  |) Tj
1 0 0 1 50 504 Tm (| [neon-phal-plugin-linear_led]\(https://github.com/NeonGeckoCom/neon-phal-plugin-) Tj
1 0 0 1 50 490 Tm (linear_led\)                | LED control for Mycroft Mark 2         |) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (---) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (## Tips & Caveats) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (- **Safe Defaults**: Most plugins are hardware-aware and won't load if the required device) Tj
1 0 0 1 50 392 Tm ( isnt detected.) Tj
1 0 0 1 50 378 Tm (- **Admin Responsibility**: AdminPHAL plugins have full system access. Only use trusted ) Tj
1 0 0 1 50 364 Tm (sources and review their code.) Tj
1 0 0 1 50 350 Tm (- **Extensibility**: PHAL is designed to grow with your system. Don't hesitate to build ) Tj
1 0 0 1 50 336 Tm (your own plugins for unique hardware.) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (---) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (## Related Documentation) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (- [OVOS Plugin Manager \(OPM\) Docs  Packaging Plugins]\(https://openvoiceos.github.io/ovos-) Tj
1 0 0 1 50 238 Tm (technical-manual/300-plugin-manager\)) Tj
1 0 0 1 50 224 Tm (- [PHAL Plugins on GitHub]\(https://github.com/OpenVoiceOS?q=ovos-PHAL&type=all\)) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (---  ) Tj
1 0 0 1 50 182 Tm (By decoupling system and hardware features from core logic, PHAL makes OVOS more modular, ) Tj
1 0 0 1 50 168 Tm (secure, and adaptable to any platformfrom Raspberry Pi setups to full-featured smart ) Tj
1 0 0 1 50 154 Tm (assistants.) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (# docs/350-translation_plugins.md) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (# Language Detection and Translation Plugins) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
472 0 obj
<< /Length 5060 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (Language detection and translation plugins in Open Voice OS \(OVOS\) enable the system to ) Tj
1 0 0 1 50 728 Tm (identify the language of text and translate it between different languages. These plugins ) Tj
1 0 0 1 50 714 Tm (are particularly useful in the context of [Universal ) Tj
1 0 0 1 50 700 Tm (Skills]\(https://openvoiceos.github.io/ovos-technical-manual/universal_skills\) and can be ) Tj
1 0 0 1 50 686 Tm (integrated with external tools like [solvers]\(https://openvoiceos.github.io/ovos-) Tj
1 0 0 1 50 672 Tm (technical-manual/solvers/\).) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (## Available Language Plugins) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (OVOS supports a variety of language detection and translation plugins, each with different) Tj
1 0 0 1 50 602 Tm ( capabilities, such as language detection, text translation, offline functionality, and ) Tj
1 0 0 1 50 588 Tm (support for external APIs.) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (| Plugin                                                                                  ) Tj
1 0 0 1 50 546 Tm (                                                                                          ) Tj
1 0 0 1 50 532 Tm (                                | Detect | Translate | Offline | Type              |) Tj
1 0 0 1 50 518 Tm (|-----------------------------------------------------------------------------------------) Tj
1 0 0 1 50 504 Tm (------------------------------------------------------------------------------------------) Tj
1 0 0 1 50 490 Tm (--------------------------------|--------|-----------|---------|-------------------|) Tj
1 0 0 1 50 476 Tm (| [ovos-translate-plugin-server]\(https://github.com/OpenVoiceOS/ovos-translate-server-) Tj
1 0 0 1 50 462 Tm (plugin\)                                                                                   ) Tj
1 0 0 1 50 448 Tm (                                    | ??     | ??        | ?       | API \(self hosted\) |) Tj
1 0 0 1 50 434 Tm (| [ovos-translate-plugin-nllb]\(https://github.com/OpenVoiceOS/ovos-translate-plugin-nllb\) ) Tj
1 0 0 1 50 420 Tm (                                                                                          ) Tj
1 0 0 1 50 406 Tm (                                | ?     | ??        | ??      | FOSS              |) Tj
1 0 0 1 50 392 Tm (| [ovos-lang-detector-fasttext-plugin]\(https://github.com/OpenVoiceOS/ovos-lang-detector-) Tj
1 0 0 1 50 378 Tm (fasttext-plugin\)                                                                          ) Tj
1 0 0 1 50 364 Tm (                                 | ??     | ?        | ??      | FOSS              |) Tj
1 0 0 1 50 350 Tm (| [ovos-lang-detect-ngram-lm]\(https://github.com/OpenVoiceOS/ovos-classifiers\)            ) Tj
1 0 0 1 50 336 Tm (                                                                                          ) Tj
1 0 0 1 50 322 Tm (                                | ??     | ?        | ??      | FOSS              |) Tj
1 0 0 1 50 308 Tm (| [ovos-lang-detector-plugin-lingua-podre]\(https://github.com/OpenVoiceOS/lingua-podre\)   ) Tj
1 0 0 1 50 294 Tm (                                                                                          ) Tj
1 0 0 1 50 280 Tm (                                | ??     | ?        | ??      | FOSS              |) Tj
1 0 0 1 50 266 Tm (| [ovos-lang-detector-plugin-voter]\(https://github.com/OpenVoiceOS/ovos-lang-detector-) Tj
1 0 0 1 50 252 Tm (classics-plugin\)                                                                          ) Tj
1 0 0 1 50 238 Tm (                                    | ??     | ?        | ??      | FOSS              |) Tj
1 0 0 1 50 224 Tm (| [ovos-lang-detector-plugin-cld2]\(https://github.com/OpenVoiceOS/ovos-lang-detector-) Tj
1 0 0 1 50 210 Tm (classics-plugin\)                                                                          ) Tj
1 0 0 1 50 196 Tm (                                     | ??     | ?        | ??      | FOSS              |) Tj
1 0 0 1 50 182 Tm (| [ovos-lang-detector-plugin-cld3]\(https://github.com/OpenVoiceOS/ovos-lang-detector-) Tj
1 0 0 1 50 168 Tm (classics-plugin\)                                                                          ) Tj
1 0 0 1 50 154 Tm (                                     | ??     | ?        | ??      | FOSS              |) Tj
1 0 0 1 50 140 Tm (| [ovos-lang-detector-plugin-fastlang]\(https://github.com/OpenVoiceOS/ovos-lang-detector-) Tj
1 0 0 1 50 126 Tm (classics-plugin\)                                                                          ) Tj
1 0 0 1 50 112 Tm (                                 | ??     | ?        | ??      | FOSS              |) Tj
1 0 0 1 50 98 Tm (| [ovos-lang-detector-plugin-langdetect]\(https://github.com/OpenVoiceOS/ovos-lang-) Tj
1 0 0 1 50 84 Tm (detector-classics-plugin\)                                                                 ) Tj
1 0 0 1 50 70 Tm (                                        | ??     | ?        | ??      | FOSS              ) Tj
1 0 0 1 50 56 Tm (|) Tj
ET
endstream

endobj
473 0 obj
<< /Length 3499 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (| [ovos-google-translate-plugin]\(https://github.com/OpenVoiceOS/ovos-google-translate-) Tj
1 0 0 1 50 728 Tm (plugin\)                                                                                   ) Tj
1 0 0 1 50 714 Tm (                                    | ??     | ??        | ?       | API \(free\)        |) Tj
1 0 0 1 50 700 Tm (| [neon-lang-plugin-libretranslate]\(https://github.com/NeonGeckoCom/neon-lang-plugin-) Tj
1 0 0 1 50 686 Tm (libretranslate\)     | ??     | ??        | ?       | API \(self hosted\) |) Tj
1 0 0 1 50 672 Tm (| [neon-lang-plugin-amazon_translate]\(https://github.com/NeonGeckoCom/neon-lang-plugin-) Tj
1 0 0 1 50 658 Tm (amazon_translate\) | ??     | ??        | ?       | API \(key\)         |) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (### Key Features of Language Plugins:) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (- **Language Detection**: Plugins like `ovos-lang-detector-fasttext-plugin` automatically ) Tj
1 0 0 1 50 588 Tm (detect the language of the input text, which is crucial for multi-language support in ) Tj
1 0 0 1 50 574 Tm (voice assistants.) Tj
1 0 0 1 50 560 Tm (- **Translation**: Plugins like `ovos-translate-plugin-nllb` and `ovos-google-translate-) Tj
1 0 0 1 50 546 Tm (plugin` can translate text from one language to another, enabling multilingual ) Tj
1 0 0 1 50 532 Tm (capabilities for OVOS.) Tj
1 0 0 1 50 518 Tm (- **Offline Support**: Some plugins, such as `ovos-lang-detector-fasttext-plugin`, offer ) Tj
1 0 0 1 50 504 Tm (offline functionality, which is essential in environments where an internet connection may) Tj
1 0 0 1 50 490 Tm ( not be available.) Tj
1 0 0 1 50 476 Tm (- **API-based Plugins**: Plugins like `ovos-translate-plugin-server` and `neon-lang-) Tj
1 0 0 1 50 462 Tm (plugin-libretranslate` use external APIs and can be self-hosted or accessed with an API ) Tj
1 0 0 1 50 448 Tm (key for translation services.) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (## Standalone Usage) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (*TODO: Add standalone usage instructions for each plugin once ready.*) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (## Plugin Template) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (*TODO: Provide a template for developing custom language detection and translation ) Tj
1 0 0 1 50 322 Tm (plugins.*) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (By using these plugins, developers can easily integrate language detection and translation) Tj
1 0 0 1 50 280 Tm ( features into OVOS-based voice assistants, making it more versatile and capable of ) Tj
1 0 0 1 50 266 Tm (handling multiple languages.) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (# docs/360-solver_plugins.md) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (# Solver Plugins) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (Solver plugins solve natural language queries, they define a unified api around specific ) Tj
1 0 0 1 50 154 Tm (kinds of questions and provide) Tj
1 0 0 1 50 140 Tm (auto translation capabilities for language support) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (A plugin can define the language it works in, eg, wolfram alpha only accepts english input) Tj
1 0 0 1 50 98 Tm ( at the time of this writing) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (Bidirectional [translation]\(https://openvoiceos.github.io/ovos-technical-) Tj
1 0 0 1 50 56 Tm (manual/lang_plugins\) will be handled behind the scenes for other languages) Tj
ET
endstream

endobj
474 0 obj
<< /Length 3560 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (Solvers are used by individual skills and by the [Persona ) Tj
1 0 0 1 50 714 Tm (Framework]\(https://github.com/OpenVoiceOS/ovos-persona\)) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (## Question Solvers) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (**NEW** in `ovos-core` version **0.0.8**) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (Given a free form natural language question, return an answer) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (Originally implemented for [Neon]\(https://github.com/Neongeckocom/neon_solvers\)) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (non-exhaustive reference table of question solver plugins) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (| plugin                                                                                  ) Tj
1 0 0 1 50 532 Tm (                              | description                                      | native ) Tj
1 0 0 1 50 518 Tm (language |) Tj
1 0 0 1 50 504 Tm (|-----------------------------------------------------------------------------------------) Tj
1 0 0 1 50 490 Tm (------------------------------|--------------------------------------------------|--------) Tj
1 0 0 1 50 476 Tm (---------|) Tj
1 0 0 1 50 462 Tm (| [ovos-solver-plugin-ddg]\(https://github.com/OpenVoiceOS/skill-ovos-ddg\)) Tj
1 0 0 1 50 448 Tm (                                               | extract keywords from query and search ) Tj
1 0 0 1 50 434 Tm (duck duck | english         |) Tj
1 0 0 1 50 420 Tm (| [ovos-solver-plugin-wikipedia]\(https://github.com/OpenVoiceOS/skill-ovos-wikipedia\)) Tj
1 0 0 1 50 406 Tm (                                   | extract keywords from query and search wikipedia | ) Tj
1 0 0 1 50 392 Tm (english         |) Tj
1 0 0 1 50 378 Tm (| [ovos-solver-plugin-wolfram-alpha]\(https://github.com/OpenVoiceOS/skill-ovos-wolfie\)) Tj
1 0 0 1 50 364 Tm (                                  | wolfram alpha spoken answers api                 | ) Tj
1 0 0 1 50 350 Tm (english         |) Tj
1 0 0 1 50 336 Tm (| [ovos-question-solver-wordnet]\(https://github.com/OpenVoiceOS/ovos-) Tj
1 0 0 1 50 322 Tm (classifiers/blob/dev/ovos_classifiers/opm/nltk.py\) | answer "what is" questions via ) Tj
1 0 0 1 50 308 Tm (wordnet           | english         |) Tj
1 0 0 1 50 294 Tm (| [ovos-solver-plugin-aiml]\(https://github.com/OpenVoiceOS/ovos-solver-plugin-aiml\)) Tj
1 0 0 1 50 280 Tm (                                     | AIML chatbot                                     | ) Tj
1 0 0 1 50 266 Tm (english         |) Tj
1 0 0 1 50 252 Tm (| [ovos-solver-plugin-rivescript]\(https://github.com/OpenVoiceOS/ovos-solver-plugin-) Tj
1 0 0 1 50 238 Tm (rivescript\)                         | rivescript chatbot                               | ) Tj
1 0 0 1 50 224 Tm (english         |) Tj
1 0 0 1 50 210 Tm (| [ovos-solver-pandorabots-plugin]\(https://github.com/OVOSHatchery/ovos-solver-) Tj
1 0 0 1 50 196 Tm (pandorabots-plugin\)                      | old school chatbots hosted around the web) Tj
1 0 0 1 50 182 Tm (        | english         |) Tj
1 0 0 1 50 168 Tm (| [ovos-solver-plugin-openai-persona]\(https://github.com/OpenVoiceOS/ovos-solver-plugin-) Tj
1 0 0 1 50 154 Tm (openai-persona\)                 | OpenAI API compatible LLMs                       | ) Tj
1 0 0 1 50 140 Tm (english         |) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (**Example Usage - DuckDuckGo plugin**) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (single answer) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (```python) Tj
ET
endstream

endobj
475 0 obj
<< /Length 3086 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (from skill_ovos_ddg import DuckDuckGoSolver) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (d = DuckDuckGoSolver\(\)) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (query = "who is Isaac Newton") Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (# full answer) Tj
1 0 0 1 50 644 Tm (ans = d.spoken_answer\(query\)) Tj
1 0 0 1 50 630 Tm (print\(ans\)) Tj
1 0 0 1 50 616 Tm (# Sir Isaac Newton was an English mathematician, physicist, astronomer, alchemist, ) Tj
1 0 0 1 50 602 Tm (theologian, and author widely recognised as one of the greatest mathematicians and ) Tj
1 0 0 1 50 588 Tm (physicists of all time and among the most influential scientists. He was a key figure in ) Tj
1 0 0 1 50 574 Tm (the philosophical revolution known as the Enlightenment. His book Philosophi Naturalis ) Tj
1 0 0 1 50 560 Tm (Principia Mathematica, first published in 1687, established classical mechanics. Newton ) Tj
1 0 0 1 50 546 Tm (also made seminal contributions to optics, and shares credit with German mathematician ) Tj
1 0 0 1 50 532 Tm (Gottfried Wilhelm Leibniz for developing infinitesimal calculus. In the Principia, Newton ) Tj
1 0 0 1 50 518 Tm (formulated the laws of motion and universal gravitation that formed the dominant ) Tj
1 0 0 1 50 504 Tm (scientific viewpoint until it was superseded by the theory of relativity.) Tj
1 0 0 1 50 490 Tm (```) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (chunked answer, for conversational dialogs, ie "tell me more") Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (```python) Tj
1 0 0 1 50 420 Tm (from skill_ovos_ddg import DuckDuckGoSolver) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (d = DuckDuckGoSolver\(\)) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (query = "who is Isaac Newton") Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (# chunked answer) Tj
1 0 0 1 50 322 Tm (for sentence in d.long_answer\(query\):) Tj
1 0 0 1 50 308 Tm (    print\(sentence["title"]\)) Tj
1 0 0 1 50 294 Tm (    print\(sentence["summary"]\)) Tj
1 0 0 1 50 280 Tm (    print\(sentence.get\("img"\)\)) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (    # who is Isaac Newton) Tj
1 0 0 1 50 238 Tm (    # Sir Isaac Newton was an English mathematician, physicist, astronomer, alchemist, ) Tj
1 0 0 1 50 224 Tm (theologian, and author widely recognised as one of the greatest mathematicians and ) Tj
1 0 0 1 50 210 Tm (physicists of all time and among the most influential scientists.) Tj
1 0 0 1 50 196 Tm (    # https://duckduckgo.com/i/ea7be744.jpg) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (    # who is Isaac Newton) Tj
1 0 0 1 50 154 Tm (    # He was a key figure in the philosophical revolution known as the Enlightenment.) Tj
1 0 0 1 50 140 Tm (    # https://duckduckgo.com/i/ea7be744.jpg) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (    # who is Isaac Newton) Tj
1 0 0 1 50 98 Tm (    # His book Philosophi Naturalis Principia Mathematica, first published in 1687, ) Tj
1 0 0 1 50 84 Tm (established classical mechanics.) Tj
1 0 0 1 50 70 Tm (    # https://duckduckgo.com/i/ea7be744.jpg) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
476 0 obj
<< /Length 3281 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (    # who is Isaac Newton) Tj
1 0 0 1 50 728 Tm (    # Newton also made seminal contributions to optics, and shares credit with German ) Tj
1 0 0 1 50 714 Tm (mathematician Gottfried Wilhelm Leibniz for developing infinitesimal calculus.) Tj
1 0 0 1 50 700 Tm (    # https://duckduckgo.com/i/ea7be744.jpg) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (    # who is Isaac Newton) Tj
1 0 0 1 50 658 Tm (    # In the Principia, Newton formulated the laws of motion and universal gravitation ) Tj
1 0 0 1 50 644 Tm (that formed the dominant scientific viewpoint until it was superseded by the theory of ) Tj
1 0 0 1 50 630 Tm (relativity.) Tj
1 0 0 1 50 616 Tm (    # https://duckduckgo.com/i/ea7be744.jpg) Tj
1 0 0 1 50 602 Tm (```  ) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (Auto translation, pass user language in context) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (```python) Tj
1 0 0 1 50 532 Tm (from skill_ovos_ddg import DuckDuckGoSolver) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (d = DuckDuckGoSolver\(\)) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (# bidirectional auto translate by passing lang context) Tj
1 0 0 1 50 462 Tm (sentence = d.spoken_answer\("Quem  Isaac Newton", context={"lang": "pt"}\)) Tj
1 0 0 1 50 448 Tm (print\(sentence\)) Tj
1 0 0 1 50 434 Tm (# Sir Isaac Newton foi um matemtico ingls, fsico, astrnomo, alquimista, telogo e ) Tj
1 0 0 1 50 420 Tm (autor amplamente reconhecido como um dos maiores matemticos e fsicos de todos os tempos ) Tj
1 0 0 1 50 406 Tm (e entre os cientistas mais influentes. Ele era uma figura chave na revoluo filosfica ) Tj
1 0 0 1 50 392 Tm (conhecida como o Iluminismo. Seu livro Philosophi Naturalis Principia Mathematica, ) Tj
1 0 0 1 50 378 Tm (publicado pela primeira vez em 1687, estabeleceu a mecnica clssica. Newton tambm fez ) Tj
1 0 0 1 50 364 Tm (contribuies seminais para a ptica, e compartilha crdito com o matemtico alemo ) Tj
1 0 0 1 50 350 Tm (Gottfried Wilhelm Leibniz para desenvolver clculo infinitesimal. No Principia, Newton ) Tj
1 0 0 1 50 336 Tm (formulou as leis do movimento e da gravitao universal que formaram o ponto de vista ) Tj
1 0 0 1 50 322 Tm (cientfico dominante at ser superado pela teoria da relatividade) Tj
1 0 0 1 50 308 Tm (```) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (Plugins are expected to implement the `get_xxx` methods and leave the user facing ) Tj
1 0 0 1 50 266 Tm (equivalents alone) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (```python) Tj
1 0 0 1 50 224 Tm (from ovos_plugin_manager.templates.solvers import QuestionSolver) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (class MySolver\(QuestionSolver\):) Tj
1 0 0 1 50 168 Tm (    enable_tx = False  # if True enables bidirectional translation) Tj
1 0 0 1 50 154 Tm (    priority = 100) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (    def __init__\(self, config=None\):) Tj
1 0 0 1 50 112 Tm (        config = config or {}) Tj
1 0 0 1 50 98 Tm (        # set the "internal" language, defined by dev, not user) Tj
1 0 0 1 50 84 Tm (        # this plugin internally only accepts and outputs english) Tj
1 0 0 1 50 70 Tm (        config["lang"] = "en") Tj
1 0 0 1 50 56 Tm (        super\(\).__init__\(config\)) Tj
ET
endstream

endobj
477 0 obj
<< /Length 2589 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (    # expected solver methods to be implemented) Tj
1 0 0 1 50 714 Tm (    def get_data\(self, query, context\):) Tj
1 0 0 1 50 700 Tm (        """) Tj
1 0 0 1 50 686 Tm (        query assured to be in self.default_lang) Tj
1 0 0 1 50 672 Tm (        return a dict response) Tj
1 0 0 1 50 658 Tm (        """) Tj
1 0 0 1 50 644 Tm (        return {"error": "404 answer not found"}) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (    def get_image\(self, query, context=None\):) Tj
1 0 0 1 50 602 Tm (        """) Tj
1 0 0 1 50 588 Tm (        query assured to be in self.default_lang) Tj
1 0 0 1 50 574 Tm (        return path/url to a single image to acompany spoken_answer) Tj
1 0 0 1 50 560 Tm (        """) Tj
1 0 0 1 50 546 Tm (        return "http://stock.image.jpg") Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (    def get_spoken_answer\(self, query, context=None\):) Tj
1 0 0 1 50 504 Tm (        """) Tj
1 0 0 1 50 490 Tm (        query assured to be in self.default_lang) Tj
1 0 0 1 50 476 Tm (        return a single sentence text response) Tj
1 0 0 1 50 462 Tm (        """) Tj
1 0 0 1 50 448 Tm (        return "The full answer is XXX") Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (    def get_expanded_answer\(self, query, context=None\):) Tj
1 0 0 1 50 406 Tm (        """) Tj
1 0 0 1 50 392 Tm (        query assured to be in self.default_lang) Tj
1 0 0 1 50 378 Tm (        return a list of ordered steps to expand the answer, eg, "tell me more") Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (        {) Tj
1 0 0 1 50 336 Tm (            "title": "optional",) Tj
1 0 0 1 50 322 Tm (            "summary": "speak this",) Tj
1 0 0 1 50 308 Tm (            "img": "optional/path/or/url) Tj
1 0 0 1 50 294 Tm (        }) Tj
1 0 0 1 50 280 Tm (        :return:) Tj
1 0 0 1 50 266 Tm (        """) Tj
1 0 0 1 50 252 Tm (        steps = [) Tj
1 0 0 1 50 238 Tm (            {"title": "the question", "summary": "we forgot the question", "image": ) Tj
1 0 0 1 50 224 Tm ("404.jpg"},) Tj
1 0 0 1 50 210 Tm (            {"title": "the answer", "summary": "but the answer is 42", "image": "42.jpg"}) Tj
1 0 0 1 50 196 Tm (        ]) Tj
1 0 0 1 50 182 Tm (        return steps) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (```) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (## Multiple Choice Solvers) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (**NEW** in `ovos-core` version **0.0.8**) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (given a question and multiple answers, select the best answer) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
478 0 obj
<< /Length 3421 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (non-exhaustive reference table of multiple choice solver plugins) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (| plugin                                                                                  ) Tj
1 0 0 1 50 700 Tm (                               | description                                              ) Tj
1 0 0 1 50 686 Tm (                                                                                     | ) Tj
1 0 0 1 50 672 Tm (native language |) Tj
1 0 0 1 50 658 Tm (|-----------------------------------------------------------------------------------------) Tj
1 0 0 1 50 644 Tm (-------------------------------|----------------------------------------------------------) Tj
1 0 0 1 50 630 Tm (-------------------------------------------------------------------------------------|----) Tj
1 0 0 1 50 616 Tm (-------------|) Tj
1 0 0 1 50 602 Tm (| [ovos-choice-solver-bm25]\(https://github.com/OpenVoiceOS/ovos-) Tj
1 0 0 1 50 588 Tm (classifiers/blob/dev/ovos_classifiers/opm/heuristics.py\) | using [Okapi ) Tj
1 0 0 1 50 574 Tm (BM25]\(https://en.wikipedia.org/wiki/Okapi_BM25\)  ranking function to estimate the ) Tj
1 0 0 1 50 560 Tm (relevance of documents to a given search query |                 |) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (Implementation) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (```python) Tj
1 0 0 1 50 490 Tm (class MultipleChoiceSolver\(AbstractSolver\):) Tj
1 0 0 1 50 476 Tm (    """ select best answer from question + multiple choice) Tj
1 0 0 1 50 462 Tm (    handling automatic translation back and forth as needed""") Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (    # plugin methods to override) Tj
1 0 0 1 50 420 Tm (    @abc.abstractmethod) Tj
1 0 0 1 50 406 Tm (    def select_answer\(self, query: str, options: List[str],) Tj
1 0 0 1 50 392 Tm (                      context: Optional[dict] = None\) -> str:) Tj
1 0 0 1 50 378 Tm (        """) Tj
1 0 0 1 50 364 Tm (        query and options assured to be in self.default_lang) Tj
1 0 0 1 50 350 Tm (        return best answer from options list) Tj
1 0 0 1 50 336 Tm (        """) Tj
1 0 0 1 50 322 Tm (        raise NotImplementedError) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (```) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (## Evidence Solver) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (**NEW** in `ovos-core` version **0.0.8**) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (given a document and a question about it, select the best passage that answers the ) Tj
1 0 0 1 50 196 Tm (question) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (non-exhaustive reference table of evidence solver plugins) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (| plugin                                                                                  ) Tj
1 0 0 1 50 126 Tm (                                 | description                                            ) Tj
1 0 0 1 50 112 Tm (                                                                                       | ) Tj
1 0 0 1 50 98 Tm (native language |) Tj
1 0 0 1 50 84 Tm (|-----------------------------------------------------------------------------------------) Tj
1 0 0 1 50 70 Tm (---------------------------------|--------------------------------------------------------) Tj
1 0 0 1 50 56 Tm (---------------------------------------------------------------------------------------|--) Tj
ET
endstream

endobj
479 0 obj
<< /Length 2771 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (---------------|) Tj
1 0 0 1 50 728 Tm (| [ovos-evidence-solver-bm25]\(https://github.com/OpenVoiceOS/ovos-) Tj
1 0 0 1 50 714 Tm (classifiers/blob/dev/ovos_classifiers/opm/heuristics.py\) | using [Okapi ) Tj
1 0 0 1 50 700 Tm (BM25]\(https://en.wikipedia.org/wiki/Okapi_BM25\)  ranking function to estimate the ) Tj
1 0 0 1 50 686 Tm (relevance of documents to a given search query |                 |) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (Implementation) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (```python) Tj
1 0 0 1 50 616 Tm (class EvidenceSolver\(AbstractSolver\):) Tj
1 0 0 1 50 602 Tm (    """perform NLP reading comprehension task,) Tj
1 0 0 1 50 588 Tm (    handling automatic translation back and forth as needed""") Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (    # plugin methods to override) Tj
1 0 0 1 50 546 Tm (    @abc.abstractmethod) Tj
1 0 0 1 50 532 Tm (    def get_best_passage\(self, evidence: str, question: str,) Tj
1 0 0 1 50 518 Tm (                         context: Optional[dict] = None\) -> str:) Tj
1 0 0 1 50 504 Tm (        """) Tj
1 0 0 1 50 490 Tm (        evidence and question assured to be in self.default_lang) Tj
1 0 0 1 50 476 Tm (         returns summary of provided document) Tj
1 0 0 1 50 462 Tm (        """) Tj
1 0 0 1 50 448 Tm (        raise NotImplementedError) Tj
1 0 0 1 50 434 Tm (```) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (## Entailment Solver) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (**NEW** in `ovos-core` version **0.0.8**) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (Given a hypothesis and a premise, return True if the premise entails the hypothesis, False) Tj
1 0 0 1 50 336 Tm ( otherwise) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (```python) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (class EntailmentSolver\(AbstractSolver\):) Tj
1 0 0 1 50 266 Tm (    """ select best answer from question + multiple choice) Tj
1 0 0 1 50 252 Tm (    handling automatic translation back and forth as needed""") Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (    # plugin methods to override) Tj
1 0 0 1 50 210 Tm (    @abc.abstractmethod) Tj
1 0 0 1 50 196 Tm (    def check_entailment\(self, premise: str, hypothesis: str,) Tj
1 0 0 1 50 182 Tm (                         context: Optional[dict] = None\) -> bool:) Tj
1 0 0 1 50 168 Tm (        """) Tj
1 0 0 1 50 154 Tm (        premise and hyopithesis assured to be in self.default_lang) Tj
1 0 0 1 50 140 Tm (        return Bool, True if premise entails the hypothesis False otherwise) Tj
1 0 0 1 50 126 Tm (        """) Tj
1 0 0 1 50 112 Tm (        raise NotImplementedError) Tj
1 0 0 1 50 98 Tm (```) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (## Summarization Solver) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
480 0 obj
<< /Length 2734 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (**NEW** in `ovos-core` version **0.0.8**) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (Given a document, return it's summary) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (non-exhaustive reference table of multiple choice solver plugins) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (| plugin                                                                                  ) Tj
1 0 0 1 50 644 Tm (                                       | description                                      ) Tj
1 0 0 1 50 630 Tm (| native language |) Tj
1 0 0 1 50 616 Tm (|-----------------------------------------------------------------------------------------) Tj
1 0 0 1 50 602 Tm (---------------------------------------|--------------------------------------------------) Tj
1 0 0 1 50 588 Tm (|-----------------|) Tj
1 0 0 1 50 574 Tm (| [ovos-summarizer-solver-wordfreq]\(https://github.com/OpenVoiceOS/ovos-) Tj
1 0 0 1 50 560 Tm (classifiers/blob/dev/ovos_classifiers/opm/heuristics.py\) | using word frequencies select ) Tj
1 0 0 1 50 546 Tm (the top utterances |                 |) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (Implementation) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (```python) Tj
1 0 0 1 50 476 Tm (class TldrSolver\(AbstractSolver\):) Tj
1 0 0 1 50 462 Tm (    """perform NLP summarization task,) Tj
1 0 0 1 50 448 Tm (    handling automatic translation back and forth as needed""") Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (    # plugin methods to override) Tj
1 0 0 1 50 406 Tm (    @abc.abstractmethod) Tj
1 0 0 1 50 392 Tm (    def get_tldr\(self, document: str,) Tj
1 0 0 1 50 378 Tm (                 context: Optional[dict] = None\) -> str:) Tj
1 0 0 1 50 364 Tm (        """) Tj
1 0 0 1 50 350 Tm (        document assured to be in self.default_lang) Tj
1 0 0 1 50 336 Tm (         returns summary of provided document) Tj
1 0 0 1 50 322 Tm (        """) Tj
1 0 0 1 50 308 Tm (        raise NotImplementedError) Tj
1 0 0 1 50 294 Tm (```) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (# docs/361-nlp_plugins.md) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (# NLP plugins) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (Several NLP tasks are exposed as plugins, this allows to configure how to solve these ) Tj
1 0 0 1 50 168 Tm (tasks centrally) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (**NEW** in `ovos-core` version **0.0.8**) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (## Keyword Extraction) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (Extract keywords from utterances) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (| Plugin                                                                              | ) Tj
ET
endstream

endobj
481 0 obj
<< /Length 3293 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (Description                     |) Tj
1 0 0 1 50 728 Tm (|-------------------------------------------------------------------------------------|---) Tj
1 0 0 1 50 714 Tm (------------------------------|) Tj
1 0 0 1 50 700 Tm (| [ovos-keyword-extractor-heuristic]\(https://github.com/OpenVoiceOS/ovos-classifiers\) |) Tj
1 0 0 1 50 686 Tm (                                 |) Tj
1 0 0 1 50 672 Tm (| [ovos-keyword-extractor-rake]\(https://github.com/OpenVoiceOS/ovos-classifiers\)      | ) Tj
1 0 0 1 50 658 Tm (nltk data dependent \(stopwords\) |) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (## Tokenization) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (Split utterances into tokens) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (| Plugin) Tj
1 0 0 1 50 560 Tm (                                                                                      | ) Tj
1 0 0 1 50 546 Tm (Description               |) Tj
1 0 0 1 50 532 Tm (|-----------------------------------------------------------------------------------------) Tj
1 0 0 1 50 518 Tm (----|---------------------------|) Tj
1 0 0 1 50 504 Tm (| [ovos-tokenization-plugin-quebrafrases]\(https://github.com/OpenVoiceOS/ovos-plugin-) Tj
1 0 0 1 50 490 Tm (manager\) | heuristic based tokenizer |) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (## Sentence Segmentation) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (Split utterances into sub-commands) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (| Plugin) Tj
1 0 0 1 50 392 Tm (                                                                                      | ) Tj
1 0 0 1 50 378 Tm (Description                           |) Tj
1 0 0 1 50 364 Tm (|-----------------------------------------------------------------------------------------) Tj
1 0 0 1 50 350 Tm (----|---------------------------------------|) Tj
1 0 0 1 50 336 Tm (| [ovos-segmentation-plugin-quebrafrases]\(https://github.com/OpenVoiceOS/ovos-plugin-) Tj
1 0 0 1 50 322 Tm (manager\) | heuristic based sentence segmentation |) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (## Coreference Resolution) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (Replace coreferences \(pronouns\) with their entities) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (| Plugin                                                                           | ) Tj
1 0 0 1 50 224 Tm (Description                          |) Tj
1 0 0 1 50 210 Tm (|----------------------------------------------------------------------------------|------) Tj
1 0 0 1 50 196 Tm (--------------------------------|) Tj
1 0 0 1 50 182 Tm (| [ovos-coref-solver-heuristic]\(https://github.com/OpenVoiceOS/ovos-classifiers\)   | ) Tj
1 0 0 1 50 168 Tm (heuristic based coref solver         |) Tj
1 0 0 1 50 154 Tm (| [ovos-classifiers-coref-solver]\(https://github.com/OpenVoiceOS/ovos-classifiers\) | ) Tj
1 0 0 1 50 140 Tm (models trained with ovos-classifiers |) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (## Postag) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (| Plugin                                                                               | ) Tj
1 0 0 1 50 70 Tm (Description                          |) Tj
1 0 0 1 50 56 Tm (|--------------------------------------------------------------------------------------|--) Tj
ET
endstream

endobj
482 0 obj
<< /Length 3609 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (------------------------------------|) Tj
1 0 0 1 50 728 Tm (| [ovos-postag-plugin-nltk]\(https://github.com/OpenVoiceOS/ovos-plugin-manager\)        | ) Tj
1 0 0 1 50 714 Tm (using nltk default postag            |) Tj
1 0 0 1 50 700 Tm (| [ovos-classifiers-postag-plugin]\(https://github.com/OpenVoiceOS/ovos-plugin-manager\) | ) Tj
1 0 0 1 50 686 Tm (models trained with ovos-classifiers |) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (# docs/370-ocp_plugins.md) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (# OVOS Common Playback - Stream Extractor Plugins) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (OVOS Common Playback \(OCP\) Stream Extractor Plugins are designed to handle the extraction ) Tj
1 0 0 1 50 574 Tm (of playable streams and their associated metadata just before playback. This delegation ) Tj
1 0 0 1 50 560 Tm (allows skills to focus on their core functionality without having to worry about stream ) Tj
1 0 0 1 50 546 Tm (extraction, thus preventing additional latency during search or other operations. The ) Tj
1 0 0 1 50 532 Tm (relevant plugin is automatically invoked based on the **Stream Extractor Identifier ) Tj
1 0 0 1 50 518 Tm (\(SEI\)** or a matching URL pattern.) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (A SEI typically precedes the URI, which is used to access the stream. If the required ) Tj
1 0 0 1 50 476 Tm (plugin is missing, the corresponding request will be ignored.) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (## Available Plugins) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (Here are the key stream extractor plugins available in OVOS:) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (| Plugin | Description | Stream Extractor IDs \(SEIs\) | URL Pattern |) Tj
1 0 0 1 50 378 Tm (|--------|-------------|-----------------------------|-------------|) Tj
1 0 0 1 50 364 Tm (| **[ovos-ocp-rss-plugin]\(https://github.com/OpenVoiceOS/ovos-ocp-rss-plugin\)** | Handles ) Tj
1 0 0 1 50 350 Tm (RSS feed URLs | `rss//` | N/A |) Tj
1 0 0 1 50 336 Tm (| **[ovos-ocp-bandcamp-plugin]\(https://github.com/OpenVoiceOS/ovos-ocp-bandcamp-plugin\)** ) Tj
1 0 0 1 50 322 Tm (| Handles Bandcamp URLs | `bandcamp//` | `"bandcamp." in url` |) Tj
1 0 0 1 50 308 Tm (| **[ovos-ocp-youtube-plugin]\(https://github.com/OpenVoiceOS/ovos-ocp-youtube-plugin\)** | ) Tj
1 0 0 1 50 294 Tm (Handles YouTube URLs | `youtube//`, `ydl//`, `youtube.channel.live//` | `"youtube.com/" in) Tj
1 0 0 1 50 280 Tm ( url` or `"youtu.be/" in url` |) Tj
1 0 0 1 50 266 Tm (| **[ovos-ocp-m3u-plugin]\(https://github.com/OpenVoiceOS/ovos-ocp-m3u-plugin\)** | Handles ) Tj
1 0 0 1 50 252 Tm (`.pls` and `.m3u` file formats | `m3u//`, `pls//` | `".pls" in uri or ".m3u" in uri` |) Tj
1 0 0 1 50 238 Tm (| **[ovos-ocp-news-plugin]\(https://github.com/OpenVoiceOS/ovos-ocp-news-plugin\)** | ) Tj
1 0 0 1 50 224 Tm (Handles dedicated news websites | `news//` | `any\([uri.startswith\(url\) for url in ) Tj
1 0 0 1 50 210 Tm (URL_MAPPINGS]\)` |) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (Each plugin is designed to extract and process streams from specific types of content ) Tj
1 0 0 1 50 168 Tm (sources, ensuring seamless integration of services like YouTube, Bandcamp, RSS feeds, and ) Tj
1 0 0 1 50 154 Tm (more without introducing delays in skill interactions.) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (## Standalone Usage) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (*TODO: Instructions for using the plugins in a standalone setup*) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (## Plugin Template) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
483 0 obj
<< /Length 3036 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (*TODO: Template for creating a new stream extractor plugin*) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (### Summary) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (These plugins delegate the task of stream extraction to just before playback, relieving ) Tj
1 0 0 1 50 672 Tm (skills from the burden of handling it themselves and preventing latency during search or ) Tj
1 0 0 1 50 658 Tm (other tasks. They ensure OVOS can integrate various streaming services efficiently by ) Tj
1 0 0 1 50 644 Tm (using SEIs to identify the stream and process the corresponding URI automatically.) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (# docs/371-media_plugins.md) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (# Media Playback Plugins) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (OVOS Media Plugins handle media playback, enabling OVOS to interact with popular streaming) Tj
1 0 0 1 50 546 Tm ( services and media players for audio, video, and remote control.) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (## Available Plugins) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (Here are the key media plugins available in OVOS:) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (| Plugin | Audio | Video | Web | Remote | Notes |) Tj
1 0 0 1 50 448 Tm (|--------|-------|-------|-----|--------|-------|) Tj
1 0 0 1 50 434 Tm (| **[ovos-media-plugin-chromecast]\(https://github.com/OpenVoiceOS/ovos-media-plugin-) Tj
1 0 0 1 50 420 Tm (chromecast\)** | ?? | ?? | ? | ?? | Extra: ) Tj
1 0 0 1 50 406 Tm ([cast_control]\(https://github.com/alexdelorenzo/cast_control\) for MPRIS interface |) Tj
1 0 0 1 50 392 Tm (| **[ovos-media-plugin-spotify]\(https://github.com/OpenVoiceOS/ovos-media-plugin-) Tj
1 0 0 1 50 378 Tm (spotify\)** | ?? | ? | ? | ?? | Requires premium account<br>Extra: ) Tj
1 0 0 1 50 364 Tm ([spotifyd]\(https://github.com/Spotifyd/spotifyd\) for native Spotify player |) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (Each plugin is designed for specific media platforms and devices, allowing OVOS to ) Tj
1 0 0 1 50 322 Tm (interact with popular streaming services and media players.) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (> ?? `ovos-media` is a work in progress and has not yet been released, plugins support ) Tj
1 0 0 1 50 266 Tm (both `ovos-audio` and `ovos-media`) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (---) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (## ovos-media-plugin-spotify) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (The **ovos-media-plugin-spotify** allows OVOS to initiate playback on Spotify, enabling ) Tj
1 0 0 1 50 168 Tm (integration with OVOS systems.) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (> ?? The [companion skill]\(https://github.com/OpenVoiceOS/skill-ovos-spotify\) is needed ) Tj
1 0 0 1 50 126 Tm (for voice search integration.) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (### Installation) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (To install the plugin, use the following command:) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
484 0 obj
<< /Length 2846 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (```bash) Tj
1 0 0 1 50 728 Tm (pip install ovos-media-plugin-spotify) Tj
1 0 0 1 50 714 Tm (```) Tj
1 0 0 1 50 700 Tm (> ? If you want to make the OVOS device itself a Spotify player, we recommend using ) Tj
1 0 0 1 50 686 Tm ([spotifyd]\(https://github.com/Spotifyd/spotifyd\).) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (### OAuth Setup) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (Currently, OAuth needs to be performed manually. After installing the plugin, run the ) Tj
1 0 0 1 50 616 Tm (following command:) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (```bash) Tj
1 0 0 1 50 574 Tm ($ ovos-spotify-oauth) Tj
1 0 0 1 50 560 Tm (```) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (This will prompt you to enter your Spotify developer credentials after you have created an) Tj
1 0 0 1 50 518 Tm ( application on [Spotify Developer Dashboard]\(https://developer.spotify.com\). Follow the ) Tj
1 0 0 1 50 504 Tm (instructions and enter the provided information.) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (Example output:) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (```bash) Tj
1 0 0 1 50 434 Tm ($ ovos-spotify-oauth) Tj
1 0 0 1 50 420 Tm (This script creates the token information needed for running spotify) Tj
1 0 0 1 50 406 Tm (        with a set of personal developer credentials.) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (        It requires the user to go to developer.spotify.com and set up a) Tj
1 0 0 1 50 364 Tm (        developer account, create an "Application" and make sure to whitelist) Tj
1 0 0 1 50 350 Tm (        "https://localhost:8888".) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (        After you have done that enter the information when prompted and follow) Tj
1 0 0 1 50 308 Tm (        the instructions given.) Tj
1 0 0 1 50 294 Tm (        ) Tj
1 0 0 1 50 280 Tm (YOUR CLIENT ID: xxxxx) Tj
1 0 0 1 50 266 Tm (YOUR CLIENT SECRET: xxxxx) Tj
1 0 0 1 50 252 Tm (Go to the following URL: https://accounts.spotify.com/authorize?client_id=xxx&response_typ) Tj
1 0 0 1 50 238 Tm (e=code&redirect_uri=https%3A%2F%2Flocalhost%3A8888&scope=user-library-) Tj
1 0 0 1 50 224 Tm (read+streaming+playlist-read-private+user-top-read+user-read-playback-state) Tj
1 0 0 1 50 210 Tm (Enter the URL you were redirected to: https://localhost:8888/?code=.....) Tj
1 0 0 1 50 196 Tm (ocp_spotify oauth token saved) Tj
1 0 0 1 50 182 Tm (```) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (### Configuration) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (After OAuth setup, edit your `mycroft.conf` to expose your Spotify players. ) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (Use the provided `ovos-spotify-autoconfigure` script to automatically configure all ) Tj
1 0 0 1 50 84 Tm (Spotify devices under your `mycroft.conf`:) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (```bash) Tj
ET
endstream

endobj
485 0 obj
<< /Length 2767 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm ($ ovos-spotify-autoconfigure) Tj
1 0 0 1 50 728 Tm (This script will auto configure ALL spotify devices under your mycroft.conf) Tj
1 0 0 1 50 714 Tm (        ) Tj
1 0 0 1 50 700 Tm (        SPOTIFY PREMIUM is required!) Tj
1 0 0 1 50 686 Tm (        ) Tj
1 0 0 1 50 672 Tm (        If you have not yet authenticated your spotify account, run 'ovos-spotify-oauth' ) Tj
1 0 0 1 50 658 Tm (first!) Tj
1 0 0 1 50 644 Tm (        ) Tj
1 0 0 1 50 630 Tm (Found device: OpenVoiceOS-TV) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (mycroft.conf updated!) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (# Legacy Audio Service:) Tj
1 0 0 1 50 560 Tm ({'backends': {'spotify-OpenVoiceOS-TV': {'active': True,) Tj
1 0 0 1 50 546 Tm (                                         'identifier': 'OpenVoiceOS-TV',) Tj
1 0 0 1 50 532 Tm (                                         'type': 'ovos_spotify'}}}) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (# ovos-media Service:) Tj
1 0 0 1 50 490 Tm ({'audio_players': {'spotify-OpenVoiceOS-TV': {'active': True,) Tj
1 0 0 1 50 476 Tm (                                              'aliases': ['OpenVoiceOS-TV'],) Tj
1 0 0 1 50 462 Tm (                                              'identifier': 'OpenVoiceOS-TV',) Tj
1 0 0 1 50 448 Tm (                                              'module': 'ovos-media-audio-plugin-) Tj
1 0 0 1 50 434 Tm (spotify'}}}) Tj
1 0 0 1 50 420 Tm (```) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (---) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (## ovos-media-plugin-chromecast) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (The **ovos-media-plugin-chromecast** allows OVOS to initiate playback on Chromecast ) Tj
1 0 0 1 50 322 Tm (devices, enabling integration with OVOS systems.) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (### Installation) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (To install the plugin, use the following command:) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (```bash) Tj
1 0 0 1 50 224 Tm (pip install ovos-media-plugin-chromecast) Tj
1 0 0 1 50 210 Tm (```) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (![Chromecast Integration]\(https://github.com/OpenVoiceOS/ovos-media-plugin-) Tj
1 0 0 1 50 168 Tm (chromecast/assets/33701864/b1c7de47-750c-478a-9ebe-15d4076eb71c\)) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (> ? If you want to control Chromecast playback externally, you can install ) Tj
1 0 0 1 50 126 Tm ([cast_control]\(https://github.com/alexdelorenzo/cast_control\) to enable MPRIS interface ) Tj
1 0 0 1 50 112 Tm (integration.) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (### Configuration) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (Use the `ovos-chromecast-autoconfigure` script to automatically configure Chromecast ) Tj
ET
endstream

endobj
486 0 obj
<< /Length 2828 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (devices under your `mycroft.conf`:) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (```bash) Tj
1 0 0 1 50 700 Tm ($ ovos-chromecast-autoconfigure) Tj
1 0 0 1 50 686 Tm (```) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (This script will discover Chromecast devices on your network and update `mycroft.conf` ) Tj
1 0 0 1 50 644 Tm (with the necessary configuration.) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (Example output:) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (```bash) Tj
1 0 0 1 50 574 Tm ($ ovos-chromecast-autoconfigure) Tj
1 0 0 1 50 560 Tm (Scanning...) Tj
1 0 0 1 50 546 Tm (    - Found Chromecast: Bedroom TV - 192.168.1.17:8009) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (Found devices: ['Bedroom TV']) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (mycroft.conf updated!) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (# Legacy Audio Service:) Tj
1 0 0 1 50 448 Tm ({'backends': {'chromecast-bedroom-tv': {'active': True,) Tj
1 0 0 1 50 434 Tm (                                        'identifier': 'Bedroom TV',) Tj
1 0 0 1 50 420 Tm (                                        'type': 'ovos_chromecast'}}}) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (# ovos-media Service:) Tj
1 0 0 1 50 378 Tm ({'audio_players': {'chromecast-bedroom-tv': {'active': True,) Tj
1 0 0 1 50 364 Tm (                                             'aliases': ['Bedroom TV'],) Tj
1 0 0 1 50 350 Tm (                                             'identifier': 'Bedroom TV',) Tj
1 0 0 1 50 336 Tm (                                             'module': 'ovos-media-audio-plugin-) Tj
1 0 0 1 50 322 Tm (chromecast'}}},) Tj
1 0 0 1 50 308 Tm ( 'video_players': {'chromecast-bedroom-tv': {'active': True,) Tj
1 0 0 1 50 294 Tm (                                             'aliases': ['Bedroom TV'],) Tj
1 0 0 1 50 280 Tm (                                             'identifier': 'Bedroom TV',) Tj
1 0 0 1 50 266 Tm (                                             'module': 'ovos-media-video-plugin-) Tj
1 0 0 1 50 252 Tm (chromecast'}}}) Tj
1 0 0 1 50 238 Tm (```) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (---) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (### Summary) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (OVOS Media Plugins, like **ovos-media-plugin-spotify** and **ovos-media-plugin-) Tj
1 0 0 1 50 140 Tm (chromecast**, provide seamless integration with popular media platforms and devices, ) Tj
1 0 0 1 50 126 Tm (allowing you to control playback directly through OVOS. Whether it's streaming from ) Tj
1 0 0 1 50 112 Tm (Spotify, controlling Chromecast devices, or casting media, these plugins enhance the ) Tj
1 0 0 1 50 98 Tm (flexibility of the OVOS ecosystem for media playback.) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (# docs/399-intents.md) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
487 0 obj
<< /Length 2680 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (# Skills and Intents) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (At the heart of OVOS lies a powerful yet flexible **intent handling system** that enables ) Tj
1 0 0 1 50 700 Tm (voice-driven interaction. The system connects **user utterances** to **developer-defined ) Tj
1 0 0 1 50 686 Tm (behavior** through *intents*.) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (## Key Concept) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (**Skills register intent handlers.**) Tj
1 0 0 1 50 616 Tm (In practice, this means that:) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (* A **bus message** representing a user **intent** is **mapped to a specific piece of ) Tj
1 0 0 1 50 574 Tm (code**the **intent handler**within a skill.) Tj
1 0 0 1 50 560 Tm (* When the system detects that an utterance matches a registered intent, it emits the ) Tj
1 0 0 1 50 546 Tm (relevant bus message, and the corresponding handler is invoked.) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (## How Intents Are Defined) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (Skill developers have **two main ways** to define intents:) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (### 1. Example Utterances) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (* Developers write full example phrases that a user might say.) Tj
1 0 0 1 50 420 Tm (* The engine learns patterns from these to match similar user utterances.) Tj
1 0 0 1 50 406 Tm (* Example:) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (```text) Tj
1 0 0 1 50 364 Tm (["what's the weather", "tell me the weather", "how's the forecast"]) Tj
1 0 0 1 50 350 Tm (```) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (### 2. Keyword Rules) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (* Developers define combinations of required and optional **keywords**.) Tj
1 0 0 1 50 280 Tm (* Rules are defined in a more structured way.) Tj
1 0 0 1 50 266 Tm (* Example:) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (```python) Tj
1 0 0 1 50 224 Tm (IntentBuilder\("WeatherIntent"\)) Tj
1 0 0 1 50 210 Tm (.require\("weather_keyword"\)) Tj
1 0 0 1 50 196 Tm (.optionally\("location"\)) Tj
1 0 0 1 50 182 Tm (```) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (## How OVOS Handles This) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (The **OVOS Core** is responsible for interpreting user utterances and deciding **which \(if) Tj
1 0 0 1 50 112 Tm ( any\) intent** they match. This is done by comparing the input against the limited ) Tj
1 0 0 1 50 98 Tm (training data \(example phrases or keyword rules\) provided by skill developers.) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (### Modern Intent Pipelines) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
488 0 obj
<< /Length 2936 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (* Historically:) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (    * **Adapt** was used for keyword-based matching.) Tj
1 0 0 1 50 700 Tm (    * **Padatious** was used for example-based matching.) Tj
1 0 0 1 50 686 Tm (    * These were inherited from Mycroft.) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (* Now:) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (    * OVOS has evolved into a **highly configurable intent pipeline framework**.) Tj
1 0 0 1 50 616 Tm (    * Multiple intent engines can be used in **parallel or sequence**.) Tj
1 0 0 1 50 602 Tm (    * Skill developers and system integrators can choose or define:) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (        * Which engines to use) Tj
1 0 0 1 50 560 Tm (        * How to prioritize them) Tj
1 0 0 1 50 546 Tm (        * When to fall back or skip certain engines) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (### Example Flow:) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (1. User says: *"What's the weather like tomorrow in Lisbon?"*) Tj
1 0 0 1 50 476 Tm (2. OVOS pipelines the utterance through configured engines.) Tj
1 0 0 1 50 462 Tm (3. If an intent matches, a bus message like `intent:WeatherIntent` is emitted.) Tj
1 0 0 1 50 448 Tm (4. The matching skills handler for `WeatherIntent` is called with the parsed data.) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (## Summary) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (* **Intent = Message + Handler**) Tj
1 0 0 1 50 378 Tm (* Skills declare what they can handle; OVOS decides *when* to trigger them.) Tj
1 0 0 1 50 364 Tm (* Intents are defined either via:) Tj
1 0 0 1 50 350 Tm (    * Full utterance examples) Tj
1 0 0 1 50 336 Tm (    * Structured keyword rules) Tj
1 0 0 1 50 322 Tm (* Modern OVOS pipelines go beyond Padatious and Adapt, allowing advanced, modular ) Tj
1 0 0 1 50 308 Tm (configurations for intent parsing.) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (# docs/400-skill-design-guidelines.md) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (# Voice User Interface Design Guidelines) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (Through these guidelines you will learn how to use principles of Voice User Interface ) Tj
1 0 0 1 50 196 Tm (Design to build more effective) Tj
1 0 0 1 50 182 Tm (skills. These tools will help define and validate the features of the skill before diving ) Tj
1 0 0 1 50 168 Tm (deep into development.) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (This guide will cover some methods to use that can help plan, prototype and test your ) Tj
1 0 0 1 50 126 Tm (skill during the early design stages.) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (> **CREDITS** - Voice User Interface Design Guidelines based on the [original work of ) Tj
1 0 0 1 50 84 Tm (Derick Schweppe]\(https://derickschweppe.com/mycroft-ai-user-experience\)) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (## Interactions) Tj
ET
endstream

endobj
489 0 obj
<< /Length 2917 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (### Intents) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (Let's start with an example. A user in Melbourne, Australia might want to know about the ) Tj
1 0 0 1 50 686 Tm (weather. To ask for this) Tj
1 0 0 1 50 672 Tm (information, they might say:) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (> "Hey Mycroft, what's today's weather like?") Tj
1 0 0 1 50 630 Tm (>) Tj
1 0 0 1 50 616 Tm (> "Hey Mycroft, what's the weather like in Melbourne?") Tj
1 0 0 1 50 602 Tm (>) Tj
1 0 0 1 50 588 Tm (> "Hey Mycroft, weather") Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (Even though these are three different expressions, for most of us they probably have ) Tj
1 0 0 1 50 546 Tm (roughly the same meaning. In each) Tj
1 0 0 1 50 532 Tm (case we would assume the user expects OVOS to respond with today's weather for their ) Tj
1 0 0 1 50 518 Tm (current location.) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (It is up us as Skill creators to teach OVOS the variety of ways that a user might express ) Tj
1 0 0 1 50 476 Tm (the same intent. This is a key) Tj
1 0 0 1 50 462 Tm (part of the design process. It is the key difference between a Skill that kind of works if) Tj
1 0 0 1 50 448 Tm ( you know what to say, and a) Tj
1 0 0 1 50 434 Tm (Skill that feels intuitive and natural to talk to.) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (This is handled by an intent parser whose job it is to learn from your Skill what intents ) Tj
1 0 0 1 50 392 Tm (it can handle, and extract) Tj
1 0 0 1 50 378 Tm (from the user's speech and key information that might be useful for your Skill. In this ) Tj
1 0 0 1 50 364 Tm (case it might include the) Tj
1 0 0 1 50 350 Tm (specified date and location.) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (### Statements and Prompts) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (You can think of **Prompts** as questions and **Statements** as providing information to ) Tj
1 0 0 1 50 266 Tm (the user that does not need a) Tj
1 0 0 1 50 252 Tm (follow-up response. For example a weather forecast like this would be considered a ) Tj
1 0 0 1 50 238 Tm (statement:) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (> Todays forecast is sunny with a high of 60 and a low of 45.) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (#### Statements) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (For a lot of skills the conversation might end with a simple statement from OVOS, and no ) Tj
1 0 0 1 50 140 Tm (further action is necessary.) Tj
1 0 0 1 50 126 Tm (Try to imagine what the user is trying to accomplish, if a simple statement gets the job ) Tj
1 0 0 1 50 112 Tm (done there is no reason to keep) Tj
1 0 0 1 50 98 Tm (the conversation rolling, and in fact a follow-up might annoy the user with unnecessary ) Tj
1 0 0 1 50 84 Tm (interaction.) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (#### Prompts) Tj
ET
endstream

endobj
490 0 obj
<< /Length 3531 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (It may be tempting to always give users specific instructions like traditional automated ) Tj
1 0 0 1 50 714 Tm (phones systems \\\(Interactive) Tj
1 0 0 1 50 700 Tm (Voice Response\\\). Many phone systems are notorious for being too verbose and difficult to ) Tj
1 0 0 1 50 686 Tm (follow.) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (With OVOS were trying to break that mold and make the interaction natural. If you follow ) Tj
1 0 0 1 50 644 Tm (the phone system method you) Tj
1 0 0 1 50 630 Tm (may be giving the user the exact phrasing to say, but youre also taking up valuable time ) Tj
1 0 0 1 50 616 Tm (and training them to think the) Tj
1 0 0 1 50 602 Tm (system is very narrow in capability. In the event that the user does give a response that ) Tj
1 0 0 1 50 588 Tm (your skill can not handle,) Tj
1 0 0 1 50 574 Tm (create follow-up prompts that steer the user back on track.) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (Remember, there are no errors in a cooperative conversation.) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (**Avoid**) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (| Speaker     |                                                                    |) Tj
1 0 0 1 50 476 Tm (|:------------|:-------------------------------------------------------------------|) Tj
1 0 0 1 50 462 Tm (| **Mycroft** | _How many people are playing? For example, you can say 2 players._ |) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (**Better**) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (| Speaker     |                                              |) Tj
1 0 0 1 50 392 Tm (|:------------|:---------------------------------------------|) Tj
1 0 0 1 50 378 Tm (| **Mycroft** | _How many players?_                          |) Tj
1 0 0 1 50 364 Tm (| **User**    | _My Brother and Myself_                      |) Tj
1 0 0 1 50 350 Tm (| **Mycroft** | _Im sorry, what was the number of players?_ |) Tj
1 0 0 1 50 336 Tm (| **User**    | _Two_                                        |) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (In the first example the user is told explicitly what they can say, but the prompt is ) Tj
1 0 0 1 50 294 Tm (unnatural, we dont typically) Tj
1 0 0 1 50 280 Tm (suggest responses to a conversation partner in real life. These long-winded prompts can ) Tj
1 0 0 1 50 266 Tm (become tiresome if they are used) Tj
1 0 0 1 50 252 Tm (repeatedly throughout the skill. Remember the phone system example, typically poorly ) Tj
1 0 0 1 50 238 Tm (designed automated phone systems) Tj
1 0 0 1 50 224 Tm (inundate the user with many options and additional instructions at every step of the ) Tj
1 0 0 1 50 210 Tm (interaction.) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (In the second example we see a better prompt, although the user gives a response that is ) Tj
1 0 0 1 50 168 Tm (easy for a human to understand) Tj
1 0 0 1 50 154 Tm (it is more difficult to design a skill to understand. Instead, the skill designer can ) Tj
1 0 0 1 50 140 Tm (apply a re-prompt strategy that) Tj
1 0 0 1 50 126 Tm (steers the user back on track and doesn't require them to start the interaction over. In ) Tj
1 0 0 1 50 112 Tm (this case the re-prompt changes) Tj
1 0 0 1 50 98 Tm (the wording slightly to make it clear that the user needs to say a number. The next time ) Tj
1 0 0 1 50 84 Tm (the user interacts with this) Tj
1 0 0 1 50 70 Tm (Skill, they will likely say a number in their first interaction.) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
491 0 obj
<< /Length 4176 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (Determining whether to respond to the user with a statement or a prompt can be a bit ) Tj
1 0 0 1 50 728 Tm (tricky. When the user is) Tj
1 0 0 1 50 714 Tm (somewhat vague it is tempting to assume the users intent in order to speed along the ) Tj
1 0 0 1 50 700 Tm (interaction. Sometimes this is the) Tj
1 0 0 1 50 686 Tm (right approach and sometimes it is not. If you are very confident in the users input then) Tj
1 0 0 1 50 672 Tm ( it is alright to assume, and) Tj
1 0 0 1 50 658 Tm (respond with a statement. For example in the Wikipedia Skill the Wikipedia API is used to ) Tj
1 0 0 1 50 644 Tm (confidently select the best response.) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (**Wikipedia Skill**) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (| Speaker     |                                                                           ) Tj
1 0 0 1 50 574 Tm (                                                                                          ) Tj
1 0 0 1 50 560 Tm (                                                                              |) Tj
1 0 0 1 50 546 Tm (|:------------|:--------------------------------------------------------------------------) Tj
1 0 0 1 50 532 Tm (------------------------------------------------------------------------------------------) Tj
1 0 0 1 50 518 Tm (------------------------------------------------------------------------------|) Tj
1 0 0 1 50 504 Tm (| **User**    | _Tell me about Abraham Lincoln_                                           ) Tj
1 0 0 1 50 490 Tm (                                                                                          ) Tj
1 0 0 1 50 476 Tm (                                                                              |) Tj
1 0 0 1 50 462 Tm (| **Mycroft** | _Abraham Lincoln was an American statesman and lawyer who served as the ) Tj
1 0 0 1 50 448 Tm (16th president of the UnitedStates from 1861 to 1865. Lincoln led the nation through its ) Tj
1 0 0 1 50 434 Tm (greatest moral, constitutional, and political crisis in the American Civil War_. |) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (In contrast, lets look at an example of where a follow-up prompt is a better approach. ) Tj
1 0 0 1 50 392 Tm (Youre working on a skill that) Tj
1 0 0 1 50 378 Tm (gives important information about birds, such as wingspan, laden and unladen airspeed, ) Tj
1 0 0 1 50 364 Tm (etc..) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (**Avoid**) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (| Speaker     | \\*\\*\\*\\*                                                               |) Tj
1 0 0 1 50 294 Tm (|:------------|:-----------------------------------------------------------------------|) Tj
1 0 0 1 50 280 Tm (| **User**    | _what is the airspeed velocity of an unladen swallow?_                 |) Tj
1 0 0 1 50 266 Tm (| **Mycroft** | _The unladen airspeed of the european swallow is 20.1 miles per hour._ |) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (**Better**) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (| Speaker     |                                                                        |) Tj
1 0 0 1 50 196 Tm (|:------------|:-----------------------------------------------------------------------|) Tj
1 0 0 1 50 182 Tm (| **User**    | _What is the airspeed velocity of an unladen Swallow?_                 |) Tj
1 0 0 1 50 168 Tm (| **Mycroft** | _What do you mean, African or European Swallow?_                       |) Tj
1 0 0 1 50 154 Tm (| **User**    | European Swallow.                                                      |) Tj
1 0 0 1 50 140 Tm (| **Mycroft** | _The unladen airspeed of the European Swallow is 20.1 miles per hour._ |) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (In the first example Mycroft assumes the user is referring to the European Swallow, ) Tj
1 0 0 1 50 98 Tm (however there is nothing to give) Tj
1 0 0 1 50 84 Tm (confidence to that assumption. In this case its dangerous to assume the User meant the ) Tj
1 0 0 1 50 70 Tm (European Swallow since it is) Tj
1 0 0 1 50 56 Tm (just as likely they meant the African Swallow. When there is no confidence in one answer ) Tj
ET
endstream

endobj
492 0 obj
<< /Length 3107 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (versus another, OVOS should) Tj
1 0 0 1 50 728 Tm (follow up with a prompt as demonstrated in the second example.) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (Another approach to solving this problem is to offer the most likely answer and inform the) Tj
1 0 0 1 50 686 Tm ( user that there are other) Tj
1 0 0 1 50 672 Tm (answers available with a statement.) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (### Confirmations) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (Confirmation approaches can also be defined by Statements or Prompts , but when we talk ) Tj
1 0 0 1 50 602 Tm (about them in the context of) Tj
1 0 0 1 50 588 Tm (confirmations we call them Implicit and Explicit.) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (#### Implicit Confirmation) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (This type of confirmation is also a statement. The idea is to parrot the information back ) Tj
1 0 0 1 50 518 Tm (to the user to confirm that it) Tj
1 0 0 1 50 504 Tm (was correct, but not require additional input from the user. The implicit confirmation can) Tj
1 0 0 1 50 490 Tm ( be used in a majority of) Tj
1 0 0 1 50 476 Tm (situations. For example Mycrofts Timer Skill uses implicit confirmation when creating new) Tj
1 0 0 1 50 462 Tm ( timers.) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (**Timer Skill**) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (| Speaker     |                                          |) Tj
1 0 0 1 50 392 Tm (|:------------|:-----------------------------------------|) Tj
1 0 0 1 50 378 Tm (| **User**    | _Hey Mycroft set a timer for 5 minutes_  |) Tj
1 0 0 1 50 364 Tm (| **Mycroft** | _Alright, Im starting a 5 minute timer_ |) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (**Avoid**) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (| Speaker     |                                                |) Tj
1 0 0 1 50 294 Tm (|:------------|:-----------------------------------------------|) Tj
1 0 0 1 50 280 Tm (| **User**    | _Hey Mycroft, add bananas to my shopping list_ |) Tj
1 0 0 1 50 266 Tm (| **Mycroft** | _done_                                         |) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (**Better**) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (| Speaker     |                                                |) Tj
1 0 0 1 50 196 Tm (|:------------|:-----------------------------------------------|) Tj
1 0 0 1 50 182 Tm (| **User**    | _Hey Mycroft, add bananas to my shopping list_ |) Tj
1 0 0 1 50 168 Tm (| **Mycroft** | _Adding bananas_                               |) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (#### Explicit Confirmation) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (This type of confirmation requires an input from the user to verify everything is correct.) Tj
1 0 0 1 50 98 Tm ( Only use explicit) Tj
1 0 0 1 50 84 Tm (confirmation when needed as it can be tedious for the user to always confirm their input. ) Tj
1 0 0 1 50 70 Tm (This strategy is best when) Tj
1 0 0 1 50 56 Tm (there are multiple steps, and it would be difficult to fix a misstep without starting ) Tj
ET
endstream

endobj
493 0 obj
<< /Length 3316 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (over, or when deleting or) Tj
1 0 0 1 50 728 Tm (modifying an existing multistep input.) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (**Avoid**) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (| **Speaker** |                                                                |) Tj
1 0 0 1 50 658 Tm (|:------------|:---------------------------------------------------------------|) Tj
1 0 0 1 50 644 Tm (| **User**    | _Hey Mycroft, set an alarm for 9:00 am tomorrow_               |) Tj
1 0 0 1 50 630 Tm (| **Mycroft** | _Ok, Ive set an alarm for 9:00 am tomorrow, is that correct?_ |) Tj
1 0 0 1 50 616 Tm (| **User**    | _Yes_                                                          |) Tj
1 0 0 1 50 602 Tm (| **Mycroft** | _9:00 am alarm set_                                            |) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (**Better**) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (| Speaker     |                                                              |        ) Tj
1 0 0 1 50 532 Tm (|:------------|:-------------------------------------------------------------|) Tj
1 0 0 1 50 518 Tm (| **User**    | _Hey Mycroft, set an alarm for 9:00 am tomorrow_             |        ) Tj
1 0 0 1 50 504 Tm (| **Mycroft** | I've set an alarm for tomorrow at 9:00 am, 16 hours from now |        ) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (The first example requires the user to confirm the alarm. Since the interaction is quite ) Tj
1 0 0 1 50 462 Tm (short it isnt necessary to use) Tj
1 0 0 1 50 448 Tm (explicit confirmation.) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (**Avoid**) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (| **Speaker** |) Tj
1 0 0 1 50 378 Tm (                                                                               |) Tj
1 0 0 1 50 364 Tm (|:------------|:--------------------------------------------------------------------------) Tj
1 0 0 1 50 350 Tm (----|) Tj
1 0 0 1 50 336 Tm (| **User**    | _Hey Mycroft, set a calendar event for a meeting with Chris Stevens_) Tj
1 0 0 1 50 322 Tm (          |) Tj
1 0 0 1 50 308 Tm (| **Mycroft** | _When is the event?_) Tj
1 0 0 1 50 294 Tm (                                                          |) Tj
1 0 0 1 50 280 Tm (| **User**    | _Tomorrow at 11:00 am_) Tj
1 0 0 1 50 266 Tm (                                                        |) Tj
1 0 0 1 50 252 Tm (| **Mycroft** | _should I send an invite to Chris Stevens?_) Tj
1 0 0 1 50 238 Tm (                                   |) Tj
1 0 0 1 50 224 Tm (| **User**    | _Yes_) Tj
1 0 0 1 50 210 Tm (                                                                         |) Tj
1 0 0 1 50 196 Tm (| **Mycroft** | _Alright, I've created a meeting for Tomorrow_) Tj
1 0 0 1 50 182 Tm (                                |) Tj
1 0 0 1 50 168 Tm (| **Mycroft** | _Alright, Ive created a meeting for Tomorrow at 11:00 am with Chris ) Tj
1 0 0 1 50 154 Tm (Stevens_ |) Tj
1 0 0 1 50 140 Tm (| **User**    | _Cancel my 11:00 am meeting tomorrow_) Tj
1 0 0 1 50 126 Tm (                                         |) Tj
1 0 0 1 50 112 Tm (| **Mycroft** | _Done_) Tj
1 0 0 1 50 98 Tm (                                                                        |) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (**Better**) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
494 0 obj
<< /Length 3642 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (| Speaker     |) Tj
1 0 0 1 50 728 Tm (                                                                               |) Tj
1 0 0 1 50 714 Tm (|:------------|:--------------------------------------------------------------------------) Tj
1 0 0 1 50 700 Tm (----|) Tj
1 0 0 1 50 686 Tm (| **User**    | _Hey Mycroft, set a calendar event for a meeting with Chris Stevens_) Tj
1 0 0 1 50 672 Tm (          |) Tj
1 0 0 1 50 658 Tm (| **Mycroft** | _When is the event?_) Tj
1 0 0 1 50 644 Tm (                                                          |) Tj
1 0 0 1 50 630 Tm (| **User**    | _Tomorrow at 11:00 am_) Tj
1 0 0 1 50 616 Tm (                                                        |) Tj
1 0 0 1 50 602 Tm (| **Mycroft** | _should I send an invite to Chris Stevens?_) Tj
1 0 0 1 50 588 Tm (                                   |) Tj
1 0 0 1 50 574 Tm (| **User**    | Yes) Tj
1 0 0 1 50 560 Tm (                                                                           |) Tj
1 0 0 1 50 546 Tm (| **Mycroft** | _Alright, Ive created a meeting for Tomorrow at 11:00 am with Chris ) Tj
1 0 0 1 50 532 Tm (Stevens_ |) Tj
1 0 0 1 50 518 Tm (| **User**    | _Cancel my 11:00 am meeting tomorrow_) Tj
1 0 0 1 50 504 Tm (                                         |) Tj
1 0 0 1 50 490 Tm (| **Mycroft** | _Are you sure you want to delete your meeting tomorrow at 11:00 am?_) Tj
1 0 0 1 50 476 Tm (          |) Tj
1 0 0 1 50 462 Tm (| **User**    | _Yes_) Tj
1 0 0 1 50 448 Tm (                                                                         |) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (Both examples use explicit and implicit confirmation correctly until the end of the ) Tj
1 0 0 1 50 406 Tm (interaction when the user wants to) Tj
1 0 0 1 50 392 Tm (cancel the event. Unlike setting a simple timer or an alarm creating this calendar event ) Tj
1 0 0 1 50 378 Tm (requires multiple steps and) Tj
1 0 0 1 50 364 Tm (would require reasonable effort to recreate. There may also be significant consequences if) Tj
1 0 0 1 50 350 Tm ( the request was) Tj
1 0 0 1 50 336 Tm (misinterpreted and the meeting was cancelled unintentionally.) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (## Conversations) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (Any time the user needs to input a lot of information or the user needs to sort through a ) Tj
1 0 0 1 50 266 Tm (variety of options a conversation will be needed.) Tj
1 0 0 1 50 252 Tm (Users may be used to systems that require them to separate input into different chunks. ) Tj
1 0 0 1 50 238 Tm (For example, many personal navigation devices \\\(GPS units\\\) require users to input the ) Tj
1 0 0 1 50 224 Tm (street number, street name, city, and state separately, like this:) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (| Speaker               |                             |) Tj
1 0 0 1 50 182 Tm (|:----------------------|:----------------------------|) Tj
1 0 0 1 50 168 Tm (| **Navigation Device** | _What is the street number_ |) Tj
1 0 0 1 50 154 Tm (| **User**              | _123_                       |) Tj
1 0 0 1 50 140 Tm (| **Navigation Device** | _What is the street name_   |) Tj
1 0 0 1 50 126 Tm (| **User**              | _Main Street_               |) Tj
1 0 0 1 50 112 Tm (| **Navigation Device** | _What is the city_          |) Tj
1 0 0 1 50 98 Tm (| **User**              | _Springfield_               |) Tj
1 0 0 1 50 84 Tm (| **Navigation Device** | _Oregon_                    |) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (This was a limitation of the technology, both the STT and intent parser were not capable ) Tj
ET
endstream

endobj
495 0 obj
<< /Length 4047 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (of handling an entire address. ) Tj
1 0 0 1 50 728 Tm (With OVOS you do not need to separate the address into multiple inputs. ) Tj
1 0 0 1 50 714 Tm (Its also easy to think like a traditional GUI and translate what are typically separate ) Tj
1 0 0 1 50 700 Tm (fields into prompts for the user,) Tj
1 0 0 1 50 686 Tm (but that will only slow down the interaction. ) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (The best solution is to allow the user to input information both ways, all at once, or in ) Tj
1 0 0 1 50 644 Tm (pieces. ) Tj
1 0 0 1 50 630 Tm (For example the Alarm skill allows the user to set a complicated alarm all in one go, or ) Tj
1 0 0 1 50 616 Tm (in steps.) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (**In Steps:**) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (| Speaker     |                                                 |) Tj
1 0 0 1 50 546 Tm (|:------------|:------------------------------------------------|) Tj
1 0 0 1 50 532 Tm (| **User**    | _Hey Mycroft, set a recurring alarm_            |) Tj
1 0 0 1 50 518 Tm (| **Mycroft** | _For what day?_                                 |) Tj
1 0 0 1 50 504 Tm (| **User**    | _weekdays_                                      |) Tj
1 0 0 1 50 490 Tm (| **Mycroft** | _For what time?_                                |) Tj
1 0 0 1 50 476 Tm (| **User**    | _7 am_                                          |) Tj
1 0 0 1 50 462 Tm (| **Mycroft** | I've set a recurring Alarm for 7 am on weekdays |) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (**All at once:**) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (| Speaker  |                                                         |) Tj
1 0 0 1 50 392 Tm (|:---------|:--------------------------------------------------------|) Tj
1 0 0 1 50 378 Tm (| **User** | Hey Mycroft, set a recurring alarm for weekdays at 7 am |) Tj
1 0 0 1 50 364 Tm (| Mycroft  | I've set a recurring Alarm for 7 am on weekdays         |) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (### Context) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (Conversational context is a given when speaking to another person, but not always when ) Tj
1 0 0 1 50 294 Tm (interacting with a computer based system. Many skills are designed with only a quick back ) Tj
1 0 0 1 50 280 Tm (and forth interaction in mind, and can operate well without conversational context, but ) Tj
1 0 0 1 50 266 Tm (conversational context can be a powerful addition to a skill and can make the interaction ) Tj
1 0 0 1 50 252 Tm (much more life like. Here are some examples of how to use context in conversation. ) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (| Speaker     |                                                                           ) Tj
1 0 0 1 50 210 Tm (                                                                                          ) Tj
1 0 0 1 50 196 Tm (                                                                     |) Tj
1 0 0 1 50 182 Tm (|:------------|:--------------------------------------------------------------------------) Tj
1 0 0 1 50 168 Tm (------------------------------------------------------------------------------------------) Tj
1 0 0 1 50 154 Tm (---------------------------------------------------------------------|) Tj
1 0 0 1 50 140 Tm (| **User**    | _Who is Shaquille O'Neal_                                                 ) Tj
1 0 0 1 50 126 Tm (                                                                                          ) Tj
1 0 0 1 50 112 Tm (                                                                     |) Tj
1 0 0 1 50 98 Tm (| **Mycroft** | _Shaquille O'Neal is an American former professional basketball player who) Tj
1 0 0 1 50 84 Tm ( is a sports analyst on the television program Inside the NBA on TNT. He is considered one) Tj
1 0 0 1 50 70 Tm ( of the greatest players in National Basketball Association history_ |) Tj
1 0 0 1 50 56 Tm (| **User**    | _How tall is he?_                                                         ) Tj
ET
endstream

endobj
496 0 obj
<< /Length 3475 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (                                                                                          ) Tj
1 0 0 1 50 728 Tm (                                                                     |) Tj
1 0 0 1 50 714 Tm (| **Mycroft** | _seven foot 1 inches tall_                                                ) Tj
1 0 0 1 50 700 Tm (                                                                                          ) Tj
1 0 0 1 50 686 Tm (                                                                     |) Tj
1 0 0 1 50 672 Tm (| **User**    | _when did he retire_                                                      ) Tj
1 0 0 1 50 658 Tm (                                                                                          ) Tj
1 0 0 1 50 644 Tm (                                                                     |) Tj
1 0 0 1 50 630 Tm (| **Mycroft** | _2011_                                                                    ) Tj
1 0 0 1 50 616 Tm (                                                                                          ) Tj
1 0 0 1 50 602 Tm (                                                                     |) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (## Error Handling) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (Inevitably, the user will say something that your skill cant handle. Its best not to ) Tj
1 0 0 1 50 518 Tm (think of these as errors on the part of the user, remember there arent really errors in ) Tj
1 0 0 1 50 504 Tm (conversations. Conversations are naturally cooperative with both parties seeking to ) Tj
1 0 0 1 50 490 Tm (continue to a successful outcome. Keeping that in mind you should do your best to avoid ) Tj
1 0 0 1 50 476 Tm (Error Handling that is a dead-end.) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (**Avoid**) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (| Speaker     |                                        |) Tj
1 0 0 1 50 406 Tm (|:------------|:---------------------------------------|) Tj
1 0 0 1 50 392 Tm (| **User**    | _Timer_                                |) Tj
1 0 0 1 50 378 Tm (| **Mycroft** | _I'm sorry I can't help you with that_ |) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (**Better**) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (| **Speaker** |                         |) Tj
1 0 0 1 50 308 Tm (|:------------|:------------------------|) Tj
1 0 0 1 50 294 Tm (| **Use**r    | _Timer_                 |) Tj
1 0 0 1 50 280 Tm (| **Mycroft** | _A timer for how long?_ |) Tj
1 0 0 1 50 266 Tm (| **User**    | _5 minutes_             |) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (In the first example OVOS does not give the user any options to finish the job they set ) Tj
1 0 0 1 50 224 Tm (out to do. Try to avoid situations where the user has to start the conversation over.) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (# docs/401-skill_structure.md) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (## Anatomy of a Skill) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (### `vocab`, `dialog`, and `locale` directories) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (The `dialog`, `vocab`, and `locale` directories contain subdirectories for each spoken ) Tj
1 0 0 1 50 84 Tm (language the skill supports.) Tj
1 0 0 1 50 70 Tm (The subdirectories are named using the [IETF language ) Tj
1 0 0 1 50 56 Tm (tag]\(https://en.wikipedia.org/wiki/IETF\\_language\\_tag\) for the) Tj
ET
endstream

endobj
497 0 obj
<< /Length 2763 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (language.) Tj
1 0 0 1 50 728 Tm (For example, Brazilian Portuguese is 'pt-br', German is 'de-de', and Australian English is) Tj
1 0 0 1 50 714 Tm ( 'en-au'.) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (`dialog` and `vocab` have been **deprecated**, they are still supported, but we strongly ) Tj
1 0 0 1 50 672 Tm (recommend you use `locale` for new) Tj
1 0 0 1 50 658 Tm (skills) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (inside the `locale` folder you will find subfolders for each language \(e.g. `en-us`\), ) Tj
1 0 0 1 50 616 Tm (often all you need to do in order) Tj
1 0 0 1 50 602 Tm (to translate a skill is adding a new folder for your language here) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (each language folder can have the structure it wants, you may see files grouped by type in) Tj
1 0 0 1 50 560 Tm ( subfolder or all in the base) Tj
1 0 0 1 50 546 Tm (folder) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (You will find several unfamiliar file extensions in this folder, but these are simple text) Tj
1 0 0 1 50 504 Tm ( files) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (* `.dialog` files used for defining speech responses) Tj
1 0 0 1 50 462 Tm (* `.intent` files used for defining Padatious Intents) Tj
1 0 0 1 50 448 Tm (* `.voc` files define keywords primarily used in Adapt Intents) Tj
1 0 0 1 50 434 Tm (* `.entity` files define a named entity primarily used in Padatious Intents) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (### __init__.py) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (The `__init__.py` file is where most of the Skill is defined using Python code. ) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (#### Importing libraries) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (```python) Tj
1 0 0 1 50 308 Tm (from ovos_workshop.intents import IntentBuilder) Tj
1 0 0 1 50 294 Tm (from ovos_workshop.decorators import intent_handler) Tj
1 0 0 1 50 280 Tm (from ovos_workshop.skills import OVOSSkill) Tj
1 0 0 1 50 266 Tm (```) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (This section of code imports the required _libraries_. Some libraries will be required on ) Tj
1 0 0 1 50 224 Tm (every Skill, and your skill) Tj
1 0 0 1 50 210 Tm (may need to import additional libraries.) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (#### Class definition) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (The `class` definition extends the `OVOSSkill` class:) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (```python) Tj
1 0 0 1 50 112 Tm (class HelloWorldSkill\(OVOSSkill\):) Tj
1 0 0 1 50 98 Tm (```) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (The class should be named logically, for example "TimeSkill", "WeatherSkill", "NewsSkill",) Tj
1 0 0 1 50 56 Tm ( "IPaddressSkill". If you) Tj
ET
endstream

endobj
498 0 obj
<< /Length 2827 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (would like guidance on what to call your Skill, please join) Tj
1 0 0 1 50 728 Tm (the [skills Channel on OVOS Chat]\(https://matrix.to/#/#openvoiceos-skills:matrix.org\).) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (Inside the class, methods are then defined.) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (#### __init__\(\)) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (This method is the _constructor_. It is called when the Skill is first constructed. It is ) Tj
1 0 0 1 50 630 Tm (often used to declare state) Tj
1 0 0 1 50 616 Tm (variables or perform setup actions, however it cannot fully utilise OVOSSkill methods as ) Tj
1 0 0 1 50 602 Tm (the skill is not fully initialized yet at this point. ) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (**You usually don't have to include the constructor.**) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (An example `__init__` method might be:) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (```python) Tj
1 0 0 1 50 504 Tm (def __init__\(self, *args, **kwargs\):) Tj
1 0 0 1 50 490 Tm (    super\(\).__init__\(*args, **kwargs\)) Tj
1 0 0 1 50 476 Tm (    self.already_said_hello = False) Tj
1 0 0 1 50 462 Tm (    self.be_friendly = True) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (```) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (`__init__` method must accept at least `skill_id` and `bus` kwargs and pass them to ) Tj
1 0 0 1 50 378 Tm (`super\(\)`, we recommend passing `*args, **kwargs` like in example above instead) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (**NOTE**: `self.skill_id`, `self.filesystem`, `self.settings`, `self.bus` are only ) Tj
1 0 0 1 50 336 Tm (available after the call to `super\(\)`, if you need them consider using `initialize` ) Tj
1 0 0 1 50 322 Tm (instead) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (#### initialize\(\)) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (This method is called during `__init__`, if you implemented `__init__` in your skill it ) Tj
1 0 0 1 50 238 Tm (will be called during `super\(\)`) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (Perform any final setup needed for the skill here. This function is invoked after the ) Tj
1 0 0 1 50 196 Tm (skill is fully constructed and) Tj
1 0 0 1 50 182 Tm (registered with the system. Intents will be registered and Skill settings will be ) Tj
1 0 0 1 50 168 Tm (available.) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (If you need to access `self.skill_id`, `self.bus`, `self.settings` or `self.filesystem` ) Tj
1 0 0 1 50 126 Tm (you must do it here instead of `__init__`) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (```python) Tj
1 0 0 1 50 84 Tm (def initialize\(self\):) Tj
1 0 0 1 50 70 Tm (    my_setting = self.settings.get\('my_setting'\)) Tj
1 0 0 1 50 56 Tm (```) Tj
ET
endstream

endobj
499 0 obj
<< /Length 2859 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (#### @intent_handler) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (We can use the `initialize` function to manually register intents, however the ) Tj
1 0 0 1 50 686 Tm (`@intent_handler` decorator is a) Tj
1 0 0 1 50 672 Tm (cleaner way to achieve this. We will learn all about the different ) Tj
1 0 0 1 50 658 Tm ([Intents]\(../intents.md\) shortly. ) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (In skills we can see two different intent styles.) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (1. An Adapt handler, triggered by a keyword defined in a `ThankYouKeyword.voc` file.) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (```python) Tj
1 0 0 1 50 560 Tm (   @intent_handler\(IntentBuilder\('ThankYouIntent'\).require\('ThankYouKeyword'\)\)) Tj
1 0 0 1 50 546 Tm (   def handle_thank_you_intent\(self, message\):) Tj
1 0 0 1 50 532 Tm (       self.speak_dialog\("welcome"\)) Tj
1 0 0 1 50 518 Tm (```) Tj
1 0 0 1 50 504 Tm (2. A Padatious intent handler, triggered using a list of sample phrases.) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (```python) Tj
1 0 0 1 50 462 Tm (   @intent_handler\('HowAreYou.intent'\)) Tj
1 0 0 1 50 448 Tm (   def handle_how_are_you_intent\(self, message\):) Tj
1 0 0 1 50 434 Tm (       self.speak_dialog\("how.are.you"\)) Tj
1 0 0 1 50 420 Tm (```) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (In both cases, the function receives two _parameters_:) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (* `self` - a reference to the HelloWorldSkill object itself) Tj
1 0 0 1 50 350 Tm (* `message` - an incoming message from the `messagebus`.) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (Both intents call the `self.speak_dialog\(\)` method, passing the name of a dialog file to ) Tj
1 0 0 1 50 308 Tm (it. In this) Tj
1 0 0 1 50 294 Tm (case `welcome.dialog` and `how.are.you.dialog`.) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (#### stop\(\)) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (You will usually also have a `stop\(\)` method.) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (The `stop` method is called anytime a User says "Stop" or a similar command. It is useful ) Tj
1 0 0 1 50 196 Tm (for stopping any output or process that a User might want to end without needing to issue ) Tj
1 0 0 1 50 182 Tm (a Skill specific utterance such as media playback or an expired alarm notification.) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (In the following example, we call a method `stop_beeping` to end a notification that our ) Tj
1 0 0 1 50 140 Tm (Skill has created.) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (If the skill "consumed" the stop signal it should return True, else return False. ) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (```python) Tj
1 0 0 1 50 70 Tm (    def stop\(self\):) Tj
1 0 0 1 50 56 Tm (        if self.beeping:) Tj
ET
endstream

endobj
500 0 obj
<< /Length 2750 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (            self.stop_beeping\(\)) Tj
1 0 0 1 50 728 Tm (            return True) Tj
1 0 0 1 50 714 Tm (        return False) Tj
1 0 0 1 50 700 Tm (```) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (If a Skill has any active functionality, the stop\(\) method should terminate the ) Tj
1 0 0 1 50 658 Tm (functionality, leaving the Skill in a known good state.) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (When the skill returns True no other skill will be stopped, when it returns False the next) Tj
1 0 0 1 50 616 Tm ( active skill will attempt to stop and so on until something consumes the stop signal) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (#### shutdown\(\)) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (The `shutdown` method is called during the Skill process termination. ) Tj
1 0 0 1 50 546 Tm (It is used to perform any final actions to ensure all processes and operations in ) Tj
1 0 0 1 50 532 Tm (execution are stopped safely. ) Tj
1 0 0 1 50 518 Tm (This might be particularly useful for Skills that have scheduled future events, may be ) Tj
1 0 0 1 50 504 Tm (writing to a file or database, or that have initiated new processes.) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (In the following example we cancel a scheduled event and call a method in our Skill to ) Tj
1 0 0 1 50 462 Tm (stop a subprocess we initiated.) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (```python) Tj
1 0 0 1 50 420 Tm (    def shutdown\(self\):) Tj
1 0 0 1 50 406 Tm (        self.cancel_scheduled_event\('my_event'\)) Tj
1 0 0 1 50 392 Tm (        self.stop_my_subprocess\(\)) Tj
1 0 0 1 50 378 Tm (```) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (### settingsmeta.yaml) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (This file defines the settings UI that will be available to a User through a backend or ) Tj
1 0 0 1 50 308 Tm (companion app) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (Jump to [Skill Settings]\(skill-settings.md\) for more information on this file and handling) Tj
1 0 0 1 50 266 Tm ( of Skill settings.) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (### setup.py) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (This file allows a skill to be installed just like any other python package. This means ) Tj
1 0 0 1 50 182 Tm (you can publish your skill on pypi or favorite package manager and use it as a dependency) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (A typical setup.py file looks like this) Tj
1 0 0 1 50 140 Tm (```python) Tj
1 0 0 1 50 126 Tm (#!/usr/bin/env python3) Tj
1 0 0 1 50 112 Tm (from setuptools import setup) Tj
1 0 0 1 50 98 Tm (import os) Tj
1 0 0 1 50 84 Tm (from os import walk, path) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
501 0 obj
<< /Length 2991 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (# TODO update this info!) Tj
1 0 0 1 50 728 Tm (# Define package information) Tj
1 0 0 1 50 714 Tm (SKILL_CLAZZ = "MySkill"  # Make sure it matches __init__.py class name) Tj
1 0 0 1 50 700 Tm (VERSION = "0.0.1") Tj
1 0 0 1 50 686 Tm (URL = "https://github.com/authorName/ovos-skill-name") Tj
1 0 0 1 50 672 Tm (AUTHOR = "authorName") Tj
1 0 0 1 50 658 Tm (EMAIL = "") Tj
1 0 0 1 50 644 Tm (LICENSE = "Apache2.0") Tj
1 0 0 1 50 630 Tm (DESCRIPTION = "a skill for OVOS") Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (PYPI_NAME = URL.split\("/"\)[-1]  # pip install PYPI_NAME) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (# Construct entry point for plugin) Tj
1 0 0 1 50 560 Tm (SKILL_ID = f"{PYPI_NAME.lower\(\)}.{AUTHOR.lower\(\)}") Tj
1 0 0 1 50 546 Tm (SKILL_PKG = PYPI_NAME.lower\(\).replace\('-', '_'\)) Tj
1 0 0 1 50 532 Tm (PLUGIN_ENTRY_POINT = f"{SKILL_ID}={SKILL_PKG}:{SKILL_CLAZZ}") Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (def get_requirements\(requirements_filename: str\):) Tj
1 0 0 1 50 476 Tm (    """) Tj
1 0 0 1 50 462 Tm (    Parse requirements from a file.) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (    Args:) Tj
1 0 0 1 50 420 Tm (        requirements_filename \(str, optional\): The filename of the requirements file.) Tj
1 0 0 1 50 406 Tm (            Defaults to "requirements.txt".) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (    Returns:) Tj
1 0 0 1 50 364 Tm (        List[str]: A list of parsed requirements.) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (    Notes:) Tj
1 0 0 1 50 322 Tm (        If the environment variable MYCROFT_LOOSE_REQUIREMENTS is set, this function) Tj
1 0 0 1 50 308 Tm (        will modify the parsed requirements to use loose version requirements,) Tj
1 0 0 1 50 294 Tm (        replacing '==' with '>=' and '~=' with '>='.) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (    """) Tj
1 0 0 1 50 252 Tm (    requirements_file = path.join\(path.abspath\(path.dirname\(__file__\)\),) Tj
1 0 0 1 50 238 Tm (                                  requirements_filename\)) Tj
1 0 0 1 50 224 Tm (    with open\(requirements_file, 'r', encoding='utf-8'\) as r:) Tj
1 0 0 1 50 210 Tm (        requirements = r.readlines\(\)) Tj
1 0 0 1 50 196 Tm (    requirements = [r.strip\(\) for r in requirements if r.strip\(\)) Tj
1 0 0 1 50 182 Tm (                    and not r.strip\(\).startswith\("#"\)]) Tj
1 0 0 1 50 168 Tm (    if 'MYCROFT_LOOSE_REQUIREMENTS' in os.environ:) Tj
1 0 0 1 50 154 Tm (        print\('USING LOOSE REQUIREMENTS!'\)) Tj
1 0 0 1 50 140 Tm (        requirements = [r.replace\('==', '>='\).replace\('~=', '>='\) for r in requirements]) Tj
1 0 0 1 50 126 Tm (    return requirements) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (def find_resource_files\(\):) Tj
1 0 0 1 50 70 Tm (    """ensure all non-code resource files are included in the package""") Tj
1 0 0 1 50 56 Tm (    # add any folder with files your skill uses here! ) Tj
ET
endstream

endobj
502 0 obj
<< /Length 2836 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (    resource_base_dirs = \("locale", "ui", "vocab", "dialog", "regex"\)) Tj
1 0 0 1 50 728 Tm (    base_dir = path.dirname\(__file__\)) Tj
1 0 0 1 50 714 Tm (    package_data = ["*.json"]) Tj
1 0 0 1 50 700 Tm (    for res in resource_base_dirs:) Tj
1 0 0 1 50 686 Tm (        if path.isdir\(path.join\(base_dir, res\)\):) Tj
1 0 0 1 50 672 Tm (            for \(directory, _, files\) in walk\(path.join\(base_dir, res\)\):) Tj
1 0 0 1 50 658 Tm (                if files:) Tj
1 0 0 1 50 644 Tm (                    package_data.append\() Tj
1 0 0 1 50 630 Tm (                        path.join\(directory.replace\(base_dir, ""\).lstrip\('/'\),) Tj
1 0 0 1 50 616 Tm (                                  '*'\)\)) Tj
1 0 0 1 50 602 Tm (    return package_data) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (# Setup configuration) Tj
1 0 0 1 50 546 Tm (setup\() Tj
1 0 0 1 50 532 Tm (    name=PYPI_NAME,) Tj
1 0 0 1 50 518 Tm (    version=VERSION,) Tj
1 0 0 1 50 504 Tm (    description=DESCRIPTION,) Tj
1 0 0 1 50 490 Tm (    url=URL,) Tj
1 0 0 1 50 476 Tm (    author=AUTHOR,) Tj
1 0 0 1 50 462 Tm (    author_email=EMAIL,) Tj
1 0 0 1 50 448 Tm (    license=LICENSE,) Tj
1 0 0 1 50 434 Tm (    package_dir={SKILL_PKG: ""},) Tj
1 0 0 1 50 420 Tm (    package_data={SKILL_PKG: find_resource_files\(\)},) Tj
1 0 0 1 50 406 Tm (    packages=[SKILL_PKG],) Tj
1 0 0 1 50 392 Tm (    include_package_data=True,) Tj
1 0 0 1 50 378 Tm (    install_requires=get_requirements\("requirements.txt"\),) Tj
1 0 0 1 50 364 Tm (    keywords='ovos skill plugin',) Tj
1 0 0 1 50 350 Tm (    entry_points={'ovos.plugin.skill': PLUGIN_ENTRY_POINT}) Tj
1 0 0 1 50 336 Tm (\)) Tj
1 0 0 1 50 322 Tm (```) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (# docs/402-statements.md) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (# Statements) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (## Speaking a statement) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (One of OVOS's most important core capabilities is to convert text to speech, that is, to ) Tj
1 0 0 1 50 196 Tm (speak a statement.) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (Within a Skill's Intent handler, you may pass a string of text to OVOS and OVOS will speak) Tj
1 0 0 1 50 154 Tm ( it.  For example: `self.speak\('this is my statement'\)`.  That's cool and fun to ) Tj
1 0 0 1 50 140 Tm (experiment with, but passing strings of text to Mycroft doesn't help to make Mycroft a ) Tj
1 0 0 1 50 126 Tm (multilingual product. Rather than hard-coded strings of text, OVOS has a design pattern ) Tj
1 0 0 1 50 112 Tm (for multilingualism.) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (### Multilingualism) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (To support multilingualism, the text that OVOS speaks must come from a file. That file is ) Tj
ET
endstream

endobj
503 0 obj
<< /Length 3494 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (called a dialog file. The dialog file contains statements \(lines of text\) that a listener ) Tj
1 0 0 1 50 728 Tm (in a particular language would consider to be equivalent.  For instance, in USA English, ) Tj
1 0 0 1 50 714 Tm (the statements "I am okay" and "I am fine" are equivalent, and both of these statements ) Tj
1 0 0 1 50 700 Tm (might appear in a dialog file used for responding to the USA English question: "How are ) Tj
1 0 0 1 50 686 Tm (you?".) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (By convention, the dialog filename is formed by _dot connected_ _words_ and must end with ) Tj
1 0 0 1 50 644 Tm (".dialog".  The dialog filename should be descriptive of the contents as a whole.  ) Tj
1 0 0 1 50 630 Tm (Sometimes, the filename describes the question being answered, and other times, the ) Tj
1 0 0 1 50 616 Tm (filename describes the answer itself.  For the example above, the dialog filename might ) Tj
1 0 0 1 50 602 Tm (be: **how.are.you.dialog** or **i.am.fine.dialog**.) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (Multilingualism is accomplished by translating the dialog files into other languages, and ) Tj
1 0 0 1 50 560 Tm (storing them in their own directory named for the country and language. The filenames ) Tj
1 0 0 1 50 546 Tm (remain the same.  Using the same filenames in separate language dependent directories ) Tj
1 0 0 1 50 532 Tm (allows the Skills to be language agnostic; no hard-coded text strings.  Adjust the ) Tj
1 0 0 1 50 518 Tm (language setting for your Device **** and OVOS uses the corresponding set of dialog files.) Tj
1 0 0 1 50 504 Tm (  If the desired file does not exist in the directory for that language, Mycroft will use ) Tj
1 0 0 1 50 490 Tm (the file from the USA English directory.) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (As an example of the concept, the contents of **how.are.you.dialog** in the directory for ) Tj
1 0 0 1 50 448 Tm (the French language in France \(fr-fr\) might include the statement: "Je vais bien".) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (### The Tomato Skill Revisited) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (To demonstrate the multilingualism design pattern, we examine the usage of the ) Tj
1 0 0 1 50 378 Tm (`speak_dialog\(\)` method in the [Tomato Skill]\(intents/padatious-intents.md\) . &#x20;) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (The Tomato Skill has two Intents: one demonstrates simple, straightforward statements, and) Tj
1 0 0 1 50 336 Tm ( the other demonstrates the use of variables within a statement.) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (### Simple statement) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (The first Intent within the Tomato Skill, **what.is.a.tomato.intent**, handles inquiries ) Tj
1 0 0 1 50 266 Tm (about tomatoes, and the dialog file, **tomato.description.dialog**, provides the ) Tj
1 0 0 1 50 252 Tm (statements for OVOS to speak in reply to that inquiry.) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (Sample contents of the Intent and dialog files:) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (`what.is.a.tomato.intent`) Tj
1 0 0 1 50 168 Tm (```) Tj
1 0 0 1 50 154 Tm (what is a tomato) Tj
1 0 0 1 50 140 Tm (what would you say a tomato is) Tj
1 0 0 1 50 126 Tm (describe a tomato) Tj
1 0 0 1 50 112 Tm (what defines a tomato) Tj
1 0 0 1 50 98 Tm (```) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (`tomato.description.dialog`) Tj
ET
endstream

endobj
504 0 obj
<< /Length 3047 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (```) Tj
1 0 0 1 50 728 Tm (The tomato is a fruit of the nightshade family) Tj
1 0 0 1 50 714 Tm (A tomato is an edible berry of the plant Solanum lycopersicum) Tj
1 0 0 1 50 700 Tm (A tomato is a fruit but nutrionists consider it a vegetable) Tj
1 0 0 1 50 686 Tm (```) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (Observe the statements in the tomato.description.dialog file. They are all acceptable ) Tj
1 0 0 1 50 616 Tm (answers to the question: "What is a tomato?"  Providing more than one statement in a ) Tj
1 0 0 1 50 602 Tm (dialog file is one way to make OVOS to seem less robotic, more natural. ) Tj
1 0 0 1 50 588 Tm (OVOS will randomly select one of the statements.) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (The Tomato Skill code snippet:) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (```python) Tj
1 0 0 1 50 518 Tm (@intent_handler\('what.is.a.tomato.intent'\)) Tj
1 0 0 1 50 504 Tm (def handle_what_is\(self, message\):) Tj
1 0 0 1 50 490 Tm (    """Speaks a statement from the dialog file.""") Tj
1 0 0 1 50 476 Tm (    self.speak_dialog\('tomato.description'\)) Tj
1 0 0 1 50 462 Tm (```) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (With the Tomato Skill installed, if the User utters **** "Hey Mycroft, what is a tomato?",) Tj
1 0 0 1 50 420 Tm ( the Intent handler method `handle_what_is\(\)` will be called.) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (Inside `handle_what_is\(\)`, we find: `self.speak_dialog\('tomato.description'\)` &#x20;) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (As you can probably guess, the parameter `'tomato.description'` is the dialog filename ) Tj
1 0 0 1 50 350 Tm (without the ".dialog" extension. Calling this method opens the dialog file, selects one of) Tj
1 0 0 1 50 336 Tm ( the statements, and converts that text to speech. OVOS will speak a statement from the ) Tj
1 0 0 1 50 322 Tm (dialog file.  In this example, OVOS might say "The tomato is a fruit of the nightshade ) Tj
1 0 0 1 50 308 Tm (family". &#x20;) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (Remember, OVOS has a language setting that determines from which directory to find the ) Tj
1 0 0 1 50 266 Tm (dialog file.) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (#### File locations) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (The [Skill Structure]\(../skill-structure/\) section describes where to place the Intent ) Tj
1 0 0 1 50 196 Tm (file and dialog file.  Basically, there are two choices:) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (1. Put both files in `locale/en-us`) Tj
1 0 0 1 50 154 Tm (2. Put the dialog file in `dialog/en-us` , and put the Intent file in `vocab/en-us`) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (### Statements with variables) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (The second Padatious Intent, **do.you.like.intent**, demonstrates the use of variables in ) Tj
1 0 0 1 50 84 Tm (the Intent file and in one of the dialog files:) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
505 0 obj
<< /Length 2661 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (`do.you.like.intent`) Tj
1 0 0 1 50 728 Tm (```) Tj
1 0 0 1 50 714 Tm (do you like tomatoes) Tj
1 0 0 1 50 700 Tm (do you like {type} tomatoes) Tj
1 0 0 1 50 686 Tm (```) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (`like.tomato.type.dialog`) Tj
1 0 0 1 50 630 Tm (```) Tj
1 0 0 1 50 616 Tm (I do like {type} tomatoes) Tj
1 0 0 1 50 602 Tm ({type} tomatoes are my favorite) Tj
1 0 0 1 50 588 Tm (```) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (`like.tomato.generic.dialog`) Tj
1 0 0 1 50 532 Tm (```) Tj
1 0 0 1 50 518 Tm (I do like tomatoes) Tj
1 0 0 1 50 504 Tm (tomatoes are my favorite) Tj
1 0 0 1 50 490 Tm (```) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (Compare these two dialog files. The **like.tomato.generic.dialog** file contains only ) Tj
1 0 0 1 50 420 Tm (simple statements. The statements in the **like.tomato.type.dialog** file include a ) Tj
1 0 0 1 50 406 Tm (variable named `type`.  The variable is a placeholder in the statement specifying where ) Tj
1 0 0 1 50 392 Tm (text may be inserted. The `speak_dialog\(\)` method accepts a dictionary as an optional ) Tj
1 0 0 1 50 378 Tm (parameter. If that dictionary contains an entry for a variable named in the statement, ) Tj
1 0 0 1 50 364 Tm (then the value from the dictionary will be inserted at the placeholder's location.) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (Dialog file variables are formed by surrounding the variable's name with curly braces. ) Tj
1 0 0 1 50 308 Tm (In OVOS parlance, curly braces are known as a _mustache_.) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (For multi-line dialog files, be sure to include the **same** variable on **all** lines.) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (The Tomato Skill code snippet:) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (```python) Tj
1 0 0 1 50 196 Tm (    @intent_handler\('do.you.like.intent'\)) Tj
1 0 0 1 50 182 Tm (    def handle_do_you_like\(self, message\):) Tj
1 0 0 1 50 168 Tm (        tomato_type = message.data.get\('type'\)) Tj
1 0 0 1 50 154 Tm (        if tomato_type is not None:) Tj
1 0 0 1 50 140 Tm (            self.speak_dialog\('like.tomato.type',) Tj
1 0 0 1 50 126 Tm (                              {'type': tomato_type}\)) Tj
1 0 0 1 50 112 Tm (        else:) Tj
1 0 0 1 50 98 Tm (            self.speak_dialog\('like.tomato.generic'\)) Tj
1 0 0 1 50 84 Tm (```) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (When the User utters "Hey Mycroft, do you like RED tomatoes?", the second of the two ) Tj
ET
endstream

endobj
506 0 obj
<< /Length 3661 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (Intent lines "do you like {type} tomatoes" is recognized by Mycroft, and the value 'RED' ) Tj
1 0 0 1 50 728 Tm (is returned in the message dictionary assigned to the 'type' entry when ) Tj
1 0 0 1 50 714 Tm (`handle_do_you_like\(\)` is called. &#x20;) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (The line `tomato_type = message.data.get\('type'\)` extracts the value from the dictionary ) Tj
1 0 0 1 50 672 Tm (for the entry 'type'.  In this case,  the variable `tomato_type` will receive the value ) Tj
1 0 0 1 50 658 Tm ('RED', and `speak_dialog\(\)`will be called with the 'like.tomato.type' dialog file, and a ) Tj
1 0 0 1 50 644 Tm (dictionary with 'RED' assigned to 'type'.   The statement "I do like {type} tomatoes" ) Tj
1 0 0 1 50 630 Tm (might be randomly selected, and after insertion of the value 'RED' for the placeholder ) Tj
1 0 0 1 50 616 Tm (variable {type}, OVOS would say: "I do like RED tomatoes".) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (Should the User utter "Hey Mycroft, do you like tomatoes?", the first line in the Intent ) Tj
1 0 0 1 50 574 Tm (file "do you like tomatoes" is recognized. There is no variable in this line, and when ) Tj
1 0 0 1 50 560 Tm (`handle_do_you_like\(\)` is called, the dictionary in the message is empty. This means ) Tj
1 0 0 1 50 546 Tm (`tomato_type` is `None`,`speak_dialog\('like.tomato.generic'\)` would be called, and Mycroft) Tj
1 0 0 1 50 532 Tm ( might reply with "Yes, I do like tomatoes".) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (## Waiting for speech) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (By default, the `speak_dialog\(\)` method is non-blocking. That is any code following the ) Tj
1 0 0 1 50 462 Tm (call to `speak_dialog\(\)` will execute whilst OVOS is talking. This is useful to allow your) Tj
1 0 0 1 50 448 Tm ( Skill to perform actions while it is speaking.&#x20;) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (Rather than telling the User that we are fetching some data, then going out to fetch it, ) Tj
1 0 0 1 50 406 Tm (we can do the two things simultaneously providing a better experience.&#x20;) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (However, there are times when we need to wait until the statement has been spoken before ) Tj
1 0 0 1 50 364 Tm (doing something else. We have two options for this.) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (### Wait Parameter) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (We can pass a `wait=True` parameter to our `speak_dialog\(\)` method. This makes the method ) Tj
1 0 0 1 50 294 Tm (blocking and no other code will execute until the statement has been spoken.) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (```python) Tj
1 0 0 1 50 252 Tm (@intent_handler\('what.is.a.tomato.intent'\)) Tj
1 0 0 1 50 238 Tm (def handle_what_is\(self, message\):) Tj
1 0 0 1 50 224 Tm (    """Speaks a statement from the dialog file.) Tj
1 0 0 1 50 210 Tm (       Waits \(i.e. blocks\) within speak_dialog\(\) until) Tj
1 0 0 1 50 196 Tm (       the speaking has completed. """) Tj
1 0 0 1 50 182 Tm (    self.speak_dialog\('tomato.description', wait=True\)) Tj
1 0 0 1 50 168 Tm (    self.log.info\("I waited for you"\)) Tj
1 0 0 1 50 154 Tm (```) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (## Using translatable resources) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (There may be a situation where the dialog file and the `speak_dialog\(\)` method do not give) Tj
1 0 0 1 50 84 Tm ( the Skill enough flexibility. For instance, there may be a need to manipulate the ) Tj
1 0 0 1 50 70 Tm (statement from the dialog file before having it spoken by OVOS.) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
507 0 obj
<< /Length 3161 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (The OVOSSkill class provides four multilingual methods to address these needs.  Each ) Tj
1 0 0 1 50 728 Tm (method uses a file, and multilingualism is accomplished using the country/language ) Tj
1 0 0 1 50 714 Tm (directory system.) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (The `translate\(\)` method returns a random string from a ".dialog" file \(modified by a data) Tj
1 0 0 1 50 672 Tm ( dictionary\). &#x20;) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (The `translate_list\(\)` method returns a list of strings from a ".list" file \(each modified) Tj
1 0 0 1 50 630 Tm ( by the data dictionary\). Same as translate\\_template\(\) just with a different file ) Tj
1 0 0 1 50 616 Tm (extension.) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (The `translate_namedvalue\(\)` method returns a dictionary formed from CSV entries in a ) Tj
1 0 0 1 50 574 Tm (".value" file.) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (The `translate_template\(\)` method returns a list of strings from a ".template" file \(each ) Tj
1 0 0 1 50 532 Tm (modified by the data dictionary\). Same as translate\\_list\(\) just with a different file ) Tj
1 0 0 1 50 518 Tm (extension.) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (# docs/403-intents.md) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (# Intent Design) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (A user can accomplish the same task by expressing their intent in multiple ways. The role ) Tj
1 0 0 1 50 406 Tm (of the intent parser is to) Tj
1 0 0 1 50 392 Tm (extract from the user's speech key data elements that specify their intent in more detail.) Tj
1 0 0 1 50 378 Tm ( This data can then be passed) Tj
1 0 0 1 50 364 Tm (to other services, such as Skills to help the user accomplish their intended task.) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (_Example_: Julie wants to know about today's weather in her current location, which is ) Tj
1 0 0 1 50 322 Tm (Melbourne, Australia.) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (> "hey mycroft, what's today's weather like?") Tj
1 0 0 1 50 280 Tm (>) Tj
1 0 0 1 50 266 Tm (> "hey mycroft, what's the weather like in Melbourne?") Tj
1 0 0 1 50 252 Tm (>) Tj
1 0 0 1 50 238 Tm (> "hey mycroft, weather") Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (Even though these are three different expressions, for most of us they probably have ) Tj
1 0 0 1 50 196 Tm (roughly the same meaning. In each) Tj
1 0 0 1 50 182 Tm (case we would assume the user expects OVOS to respond with today's weather for their ) Tj
1 0 0 1 50 168 Tm (current location. The role of an) Tj
1 0 0 1 50 154 Tm (intent parser is to determine what this intent is.) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (In the example above, we might extract data elements like:) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (* **weather** - we know that Julie wants to know about the weather, but she has not been ) Tj
1 0 0 1 50 84 Tm (specific about the type of) Tj
1 0 0 1 50 70 Tm (  weather, such as _wind_, _precipitation_, _snowfall_ or the risk of _fire danger_ from ) Tj
1 0 0 1 50 56 Tm (bushfires. Melbourne, Australia) Tj
ET
endstream

endobj
508 0 obj
<< /Length 3528 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (  rarely experiences snowfall, but falls under bushfire risk every summer.) Tj
1 0 0 1 50 728 Tm (* **location** - Julie has stipulated her location as Melbourne, but she does not state ) Tj
1 0 0 1 50 714 Tm (that she means Melbourne,) Tj
1 0 0 1 50 700 Tm (  Australia. How do we distinguish this from Melbourne, Florida, United States?) Tj
1 0 0 1 50 686 Tm (* **date** - Julie has been specific about the _timeframe_ she wants weather data for - ) Tj
1 0 0 1 50 672 Tm (today. But how do we know what) Tj
1 0 0 1 50 658 Tm (  today means in Julie's timezone. Melbourne, Australia is between 14-18 hours ahead of ) Tj
1 0 0 1 50 644 Tm (the United States. We don't want) Tj
1 0 0 1 50 630 Tm (  to give Julie yesterday's weather, particularly as Melbourne is renowned for having ) Tj
1 0 0 1 50 616 Tm (changeable weather.) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (OVOS has two separate Intent parsing engines each with their own strengths. ) Tj
1 0 0 1 50 560 Tm (Each of these can be used in most situations, however they will process the utterance in ) Tj
1 0 0 1 50 546 Tm (different ways.) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (**Example based** intents are trained on whole phrases. These intents are generally more ) Tj
1 0 0 1 50 504 Tm (accurate however require you to include sample phrases that cover the) Tj
1 0 0 1 50 490 Tm (breadth of ways that a User may ask about something.) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (**Keyword / Rule based ** these intents look for specific required keywords. They are more) Tj
1 0 0 1 50 448 Tm ( flexible, but since these are essentially rule based this can result in a lot of false ) Tj
1 0 0 1 50 434 Tm (matches.) Tj
1 0 0 1 50 420 Tm (A badly designed intent may totally throw the intent parser off guard. The main advantage ) Tj
1 0 0 1 50 406 Tm (of keyword based intents is the integration with [conversational context]\(../context\), ) Tj
1 0 0 1 50 392 Tm (they facilitate continuous dialogs) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (OVOS is moving towards a plugin system for intent engines, currently only the default ) Tj
1 0 0 1 50 350 Tm (MycroftAI intent parsers are supported) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (- **Padatious** is a light-weight neural network that is trained on whole phrases. You can) Tj
1 0 0 1 50 308 Tm ( find the official documentation [here]\(https://mycroft-ai.gitbook.io/docs/mycroft-) Tj
1 0 0 1 50 294 Tm (technologies/padatious\)) Tj
1 0 0 1 50 280 Tm (- **Adapt** is a keyword based parser. You can find the official documentation ) Tj
1 0 0 1 50 266 Tm ([here]\(https://mycroft-ai.gitbook.io/docs/mycroft-technologies/adapt\)) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (> NOTE: Padatious doesnt handle numbers well, internally sees all digits as "#". If you ) Tj
1 0 0 1 50 224 Tm (need to use digits in your intents, it is recommended you use Adapt instead.) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (We will now look at each in more detail, including how to use them in a Skill.) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (## Keyword Intents) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (Keyword based intent parsers determine user intent based on a list of keywords or entities) Tj
1 0 0 1 50 112 Tm ( contained within a user's utterance.) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (### Defining keywords and entities) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (#### Vocab \(.voc\) Files) Tj
ET
endstream

endobj
509 0 obj
<< /Length 2655 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (Vocab files define keywords that the intent parser will look for in a Users utterance to ) Tj
1 0 0 1 50 714 Tm (determine their intent.) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (These files can be located in either the `vocab/lang-code/` or `locale/lang-code/` ) Tj
1 0 0 1 50 672 Tm (directories of a Skill. They can have one or more lines to list synonyms or terms that ) Tj
1 0 0 1 50 658 Tm (have the same meaning in the context of this Skill. ) Tj
1 0 0 1 50 644 Tm (OVOS will match _any_ of these keywords with the Intent.) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (Consider a simple `Potato.voc`. Within this file we might include:) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (```) Tj
1 0 0 1 50 574 Tm (potato) Tj
1 0 0 1 50 560 Tm (potatoes) Tj
1 0 0 1 50 546 Tm (spud) Tj
1 0 0 1 50 532 Tm (```) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (If the User speaks _either_:) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (> potato) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (or) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (> potatoes) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (or) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (> spud) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (OVOS will match this to any Keyword Intents that are using the `Potato` keyword.) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (#### Regular Expression \(.rx\) Files) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (Regular expressions \(or regex\) allow us to capture entities based on the structure of an ) Tj
1 0 0 1 50 266 Tm (utterance.) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (We strongly recommend you avoid using regex, it is very hard to make portable across ) Tj
1 0 0 1 50 224 Tm (languages, hard to translate and the reported confidence of the intents is not great.) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (We suggest using example based intents instead if you find yourself needing regex) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (These files can be located in either the `regex/lang-code/` or `locale/lang-code/` ) Tj
1 0 0 1 50 154 Tm (directories of a Skill. They can have one or more lines to provide different ways that an ) Tj
1 0 0 1 50 140 Tm (entity may be referenced. OVOS will execute these lines in the order they appear and ) Tj
1 0 0 1 50 126 Tm (return the first result as an entity to the Intent Handler.) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (Let's consider a `type.rx` file to extract the type of potato we are interested in. Within) Tj
1 0 0 1 50 84 Tm ( this file we might include:) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (```) Tj
ET
endstream

endobj
510 0 obj
<< /Length 2444 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (.* about \(?P<Type>.*\) potatoes) Tj
1 0 0 1 50 728 Tm (.* \(make|like\) \(?P<Type>.*\) potato) Tj
1 0 0 1 50 714 Tm (```) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (**What is this regex doing?** `.*` matches zero, one or more of any single character. ) Tj
1 0 0 1 50 672 Tm (`\(?P<Type>.*\)` is known as a Named Capturing Group. The variable name is defined between ) Tj
1 0 0 1 50 658 Tm (the "<>", and what is captured is defined after this name. In this case we use `.*` to ) Tj
1 0 0 1 50 644 Tm (capture anything.) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm ([Learn more about Regular Expressions]\(https://github.com/ziishaned/learn-) Tj
1 0 0 1 50 602 Tm (regex/blob/master/README.md\).) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (So our first line would match an utterance such as:) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (> Tell me about _sweet potatoes_) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (Whilst the second line will match either:) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (> Do you like _deep fried potato_) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (or) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (> How do I make _mashed potato_) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (From these three utterances, what will the extracted `Type` be:\\) Tj
1 0 0 1 50 378 Tm (1\\. `sweet`\\) Tj
1 0 0 1 50 364 Tm (2\\. `deep fried`\\) Tj
1 0 0 1 50 350 Tm (3\\. `mashed`) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (This `Type` will be available to use in your Skill's Intent Handler on the `message` ) Tj
1 0 0 1 50 308 Tm (object. We can access this using:) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (```) Tj
1 0 0 1 50 266 Tm (message.data.get\('Type'\)) Tj
1 0 0 1 50 252 Tm (```) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (### Using Keyword Intents in a Skill) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (Now that we have a Vocab and Regular Expression defined, let's look at how to use these in) Tj
1 0 0 1 50 182 Tm ( a simple Skill.) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (For the following example we will use the two files we outlined above:) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (* `Potato.voc`) Tj
1 0 0 1 50 112 Tm (* `Type.rx`) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (We will also add some new `.voc` files:) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (* `Like.voc` - containing a single line "like") Tj
ET
endstream

endobj
511 0 obj
<< /Length 2731 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (* `You.voc` - containing a single line "you") Tj
1 0 0 1 50 728 Tm (* `I.voc` - containing a single line "I") Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (#### Creating the Intent Handler) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (To construct a Keyword Intent, we use the intent_handler\(\) \\_decorator_ and pass in the ) Tj
1 0 0 1 50 658 Tm (IntentBuilder helper class.) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm ([Learn more about _decorators_ in ) Tj
1 0 0 1 50 616 Tm (Python]\(https://en.wikipedia.org/wiki/Python\\_syntax\\_and\\_semantics#Decorators\).) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (Both of these must be imported before we can use them:) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (```python) Tj
1 0 0 1 50 546 Tm (from ovos_workshop.intents import IntentBuilder) Tj
1 0 0 1 50 532 Tm (from ovos_workshop.decorators import intent_handler) Tj
1 0 0 1 50 518 Tm (```) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (The IntentBuilder is then passed the name of the Intent as a string, followed by one or ) Tj
1 0 0 1 50 476 Tm (more parameters that correspond with one of our `.voc` or `.rx` files.) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (```python) Tj
1 0 0 1 50 434 Tm (@intent_handler\(IntentBuilder\('IntentName'\)) Tj
1 0 0 1 50 420 Tm (                              .require\('Potato'\)) Tj
1 0 0 1 50 406 Tm (                              .require\('Like'\)) Tj
1 0 0 1 50 392 Tm (                              .optionally\('Type'\)) Tj
1 0 0 1 50 378 Tm (                              .one_of\('You', 'I'\)\)) Tj
1 0 0 1 50 364 Tm (```) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (In this example:) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (* the `Potato` and `Like` keywords are required. It must be present for the intent to ) Tj
1 0 0 1 50 294 Tm (match.) Tj
1 0 0 1 50 280 Tm (* the `Type` entity is optional. A stronger match will be made if this is found, but it is) Tj
1 0 0 1 50 266 Tm ( not required.) Tj
1 0 0 1 50 252 Tm (* we require at least one of the `You` or `I` keywords.) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (What are some utterances that would match this intent?) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (> Do you like potato? Do you like fried potato? Will I like mashed potato? Do you think I ) Tj
1 0 0 1 50 182 Tm (would like potato?) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (What are some utterances that would _not_ match the intent?) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (> How do I make mashed potato?) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (_The required `Like` keyword is not found._) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (> Is it like a potato?) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
512 0 obj
<< /Length 3094 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (_Neither the `You` nor `I` keyword is found._) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (#### Including it in a Skill) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (Now we can create our Potato Skill:) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (```python) Tj
1 0 0 1 50 644 Tm (from ovos_workshop.intents import IntentBuilder) Tj
1 0 0 1 50 630 Tm (from ovos_workshop.skills import OVOSSkill) Tj
1 0 0 1 50 616 Tm (from ovos_workshop.decorators import intent_handler) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (class PotatoSkill\(OVOSSkill\):) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (    @intent_handler\(IntentBuilder\('WhatIsPotato'\).require\('What'\)) Tj
1 0 0 1 50 532 Tm (                    .require\('Potato'\)\)) Tj
1 0 0 1 50 518 Tm (    def handle_what_is\(self, message\):) Tj
1 0 0 1 50 504 Tm (        self.speak_dialog\('potato.description'\)) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (    @intent_handler\(IntentBuilder\('DoYouLikePotato'\).require\('Potato'\)) Tj
1 0 0 1 50 462 Tm (                    .require\('Like'\).optionally\('Type'\).one_of\('You', 'I'\)\)) Tj
1 0 0 1 50 448 Tm (    def handle_do_you_like\(self, message\):) Tj
1 0 0 1 50 434 Tm (        potato_type = message.data.get\('Type'\)) Tj
1 0 0 1 50 420 Tm (        if potato_type is not None:) Tj
1 0 0 1 50 406 Tm (            self.speak_dialog\('like.potato.type',) Tj
1 0 0 1 50 392 Tm (                              {'type': potato_type}\)) Tj
1 0 0 1 50 378 Tm (        else:) Tj
1 0 0 1 50 364 Tm (            self.speak_dialog\('like.potato.generic'\)) Tj
1 0 0 1 50 350 Tm (```) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (You can [download this entire Potato Skill from ) Tj
1 0 0 1 50 308 Tm (Github]\(https://github.com/krisgesling/dev-ex-adapt-intents-) Tj
1 0 0 1 50 294 Tm (skill/blob/master/\\_\\_init\\_\\_.py\), or see another Keyword Intent handler example in the ) Tj
1 0 0 1 50 280 Tm ([Hello World Skill]\(https://github.com/MycroftAI/skill-hello-) Tj
1 0 0 1 50 266 Tm (world/blob/f3eb89be6d80e1834637a64566c707d05fb8e3fa/\\_\\_init\\_\\_.py#L37\)) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (### Common Problems) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (#### More vocab!) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (One of the most common mistakes when getting started with Skills is that the vocab file ) Tj
1 0 0 1 50 154 Tm (doesn't include all the keywords or terms that a User might use to trigger the intent. It ) Tj
1 0 0 1 50 140 Tm (is important to map out your Skill and test the interactions with others to see how they ) Tj
1 0 0 1 50 126 Tm (might ask questions differently.) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (#### I have added new phrases in the .voc file, but Mycroft isn't recognizing them) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (1. Compound words like "don't", "won't", "shouldn't" etc. are normalized by OVOS - so they) Tj
1 0 0 1 50 56 Tm ( become "do not", "will not", "should not". You should use the normalized words in your ) Tj
ET
endstream

endobj
513 0 obj
<< /Length 3365 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (`.voc` files. Similarly, definite articles like the word "the" are removed in the ) Tj
1 0 0 1 50 728 Tm (normalization process, so avoid using them in your `.voc` or `.rx` files as well.) Tj
1 0 0 1 50 714 Tm (2. Tab != 4 Spaces, sometimes your text editor or IDE automatically replaces tabs with ) Tj
1 0 0 1 50 700 Tm (spaces or vice versa. This may lead to an indentation error. So make sure there's no extra) Tj
1 0 0 1 50 686 Tm ( tabs and that your editor doesn't replace your spaces!) Tj
1 0 0 1 50 672 Tm (3. Wrong order of files directories is a very common mistake. You have to make a language ) Tj
1 0 0 1 50 658 Tm (sub-folder inside the dialog, vocab or locale folders such as `skill-dir/locale/en-) Tj
1 0 0 1 50 644 Tm (us/somefile.dialog`. So make sure that your `.voc` files and `.dialog` files inside a ) Tj
1 0 0 1 50 630 Tm (language subfolder.) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (#### I am unable to match against the utterance string) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (The utterance string received from the speech-to-text engine is received all lowercase. As) Tj
1 0 0 1 50 560 Tm ( such any string matching you are trying to do should also be converted to lowercase. For ) Tj
1 0 0 1 50 546 Tm (example:) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (```python) Tj
1 0 0 1 50 504 Tm (    @intent_handler\(IntentBuilder\('Example'\).require\('Example'\).require\('Intent'\)\)) Tj
1 0 0 1 50 490 Tm (    def handle_example\(self, message\):) Tj
1 0 0 1 50 476 Tm (        utterance = message.data.get\('utterance'\)) Tj
1 0 0 1 50 462 Tm (        if 'Proper Noun'.lower\(\) in utterance:) Tj
1 0 0 1 50 448 Tm (            self.speak\('Found it'\)) Tj
1 0 0 1 50 434 Tm (```) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (## Example based Intents) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (Example based parsers have a number of key benefits over other intent parsing ) Tj
1 0 0 1 50 350 Tm (technologies.) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (* Intents are easy to create) Tj
1 0 0 1 50 308 Tm (* You can easily extract entities and then use these in Skills. For example, "Find the ) Tj
1 0 0 1 50 294 Tm (nearest gas station" -&gt; `{ "place":"gas station"}`) Tj
1 0 0 1 50 280 Tm (* Disambiguation between intents is easier) Tj
1 0 0 1 50 266 Tm (* Harder to create a bad intent that throws the intent parser off) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (### Creating Intents) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (Most example based intent parsers use a series of example sentences to train a machine ) Tj
1 0 0 1 50 196 Tm (learning model to identify an intent. Regex can also be used behind the scenes for example) Tj
1 0 0 1 50 182 Tm ( to extract entities) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (The examples are stored in a Skill's `vocab/lang` or `local/lang` directory, in files ) Tj
1 0 0 1 50 140 Tm (ending in the file extension `.intent`. For example, if you were to create a _tomato_ ) Tj
1 0 0 1 50 126 Tm (Skill to respond to questions about a _tomato_, you would create the file) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (`vocab/en-us/what.is.a.tomato.intent`) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (This file would contain examples of questions asking what a _tomato_ is.) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
514 0 obj
<< /Length 2896 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (```text) Tj
1 0 0 1 50 728 Tm (what would you say a tomato is) Tj
1 0 0 1 50 714 Tm (what is a tomato) Tj
1 0 0 1 50 700 Tm (describe a tomato) Tj
1 0 0 1 50 686 Tm (what defines a tomato) Tj
1 0 0 1 50 672 Tm (```) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (These sample phrases do not require punctuation like a question mark. We can also leave ) Tj
1 0 0 1 50 630 Tm (out contractions such as "what's", as this will be automatically expanded to "what is" by ) Tj
1 0 0 1 50 616 Tm (OVOS before the utterance is parsed.) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (Each file should contain at least 4 examples for good modeling.) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (The above example allows us to map many phrases to a single intent, however often we need ) Tj
1 0 0 1 50 546 Tm (to extract specific data from an utterance. This might be a date, location, category, or ) Tj
1 0 0 1 50 532 Tm (some other `entity`.) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (#### Defining entities) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (Let's now find out OVOS's opinion on different types of tomatoes. To do this we will ) Tj
1 0 0 1 50 462 Tm (create a new intent file: `vocab/en-us/do.you.like.intent`) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (with examples of questions about mycroft's opinion about tomatoes:) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (```text) Tj
1 0 0 1 50 392 Tm (are you fond of tomatoes) Tj
1 0 0 1 50 378 Tm (do you like tomatoes) Tj
1 0 0 1 50 364 Tm (what are your thoughts on tomatoes) Tj
1 0 0 1 50 350 Tm (are you fond of {type} tomatoes) Tj
1 0 0 1 50 336 Tm (do you like {type} tomatoes) Tj
1 0 0 1 50 322 Tm (what are your thoughts on {type} tomatoes) Tj
1 0 0 1 50 308 Tm (```) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (Note the `{type}` in the above examples. These are wild-cards where matching content is ) Tj
1 0 0 1 50 266 Tm (forwarded to the skill's intent handler.) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (> **WARNING**: digits are not allowed for the entity name inside the `{}`, **do NOT** use ) Tj
1 0 0 1 50 224 Tm (`{room1}`, use `{room_one}`.) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (#### Specific Entities) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (In the above example, `{type}` will match anything. While this makes the intent flexible, ) Tj
1 0 0 1 50 154 Tm (it will also match if we say something like Do you like eating tomatoes?. It would think ) Tj
1 0 0 1 50 140 Tm (the type of tomato is `"eating"` which doesn't make much sense. Instead, we can specify ) Tj
1 0 0 1 50 126 Tm (what type of things the {type} of tomato should be. We do this by defining the type entity) Tj
1 0 0 1 50 112 Tm ( file here:) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (`vocab/en-us/type.entity`) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (which might contain something like:) Tj
ET
endstream

endobj
515 0 obj
<< /Length 2270 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (```text) Tj
1 0 0 1 50 714 Tm (red) Tj
1 0 0 1 50 700 Tm (reddish) Tj
1 0 0 1 50 686 Tm (green) Tj
1 0 0 1 50 672 Tm (greenish) Tj
1 0 0 1 50 658 Tm (yellow) Tj
1 0 0 1 50 644 Tm (yellowish) Tj
1 0 0 1 50 630 Tm (ripe) Tj
1 0 0 1 50 616 Tm (unripe) Tj
1 0 0 1 50 602 Tm (pale) Tj
1 0 0 1 50 588 Tm (```) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (This must be registered in the Skill before use - most commonly in the `initialize\(\)` ) Tj
1 0 0 1 50 546 Tm (method:) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (```python) Tj
1 0 0 1 50 504 Tm (from ovos_workshop.skills import OVOSSkill) Tj
1 0 0 1 50 490 Tm (from ovos_workshop.decorators import intent_handler) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (class TomatoSkill\(OVOSSkill\):) Tj
1 0 0 1 50 448 Tm (    def initialize\(self\):) Tj
1 0 0 1 50 434 Tm (        self.register_entity_file\('type.entity'\)) Tj
1 0 0 1 50 420 Tm (```) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (Now, we can say things like "do you like greenish tomatoes?" and it will tag type as: ) Tj
1 0 0 1 50 378 Tm (`"greenish"`. However, if we say "do you like eating tomatoes?" - the phrase will not ) Tj
1 0 0 1 50 364 Tm (match as `"eating"` is not included in our `type.entity` file.) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (#### Number matching) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (Let's say you are writing an Intent to call a phone number. You can make it only match ) Tj
1 0 0 1 50 294 Tm (specific formats of numbers by writing out possible arrangements using `#` where a number ) Tj
1 0 0 1 50 280 Tm (would go. For example, with the following intent:) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (```text) Tj
1 0 0 1 50 238 Tm (Call {number}.) Tj
1 0 0 1 50 224 Tm (Call the phone number {number}.) Tj
1 0 0 1 50 210 Tm (```) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (the number.entity could be written as:) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (```text) Tj
1 0 0 1 50 140 Tm (+### \(###\) ###-####) Tj
1 0 0 1 50 126 Tm (+## \(###\) ###-####) Tj
1 0 0 1 50 112 Tm (+# \(###\) ###-####) Tj
1 0 0 1 50 98 Tm (\(###\) ###-####) Tj
1 0 0 1 50 84 Tm (###-####) Tj
1 0 0 1 50 70 Tm (###-###-####) Tj
1 0 0 1 50 56 Tm (###.###.####) Tj
ET
endstream

endobj
516 0 obj
<< /Length 2508 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (### ### ####) Tj
1 0 0 1 50 728 Tm (##########) Tj
1 0 0 1 50 714 Tm (```) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (#### Entities with unknown tokens) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (Let's say you wanted to create an intent to match places:) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (```text) Tj
1 0 0 1 50 616 Tm (Directions to {place}.) Tj
1 0 0 1 50 602 Tm (Navigate me to {place}.) Tj
1 0 0 1 50 588 Tm (Open maps to {place}.) Tj
1 0 0 1 50 574 Tm (Show me how to get to {place}.) Tj
1 0 0 1 50 560 Tm (How do I get to {place}?) Tj
1 0 0 1 50 546 Tm (```) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (This alone will work, but it will still get a high confidence with a phrase like "How do I) Tj
1 0 0 1 50 504 Tm ( get to the boss in my game?". We can try creating a `.entity` file with things like:) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (```text) Tj
1 0 0 1 50 462 Tm (New York City) Tj
1 0 0 1 50 448 Tm (#### Georgia Street) Tj
1 0 0 1 50 434 Tm (San Francisco) Tj
1 0 0 1 50 420 Tm (```) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (The problem is, now anything that is not specifically a mix of New York City, San ) Tj
1 0 0 1 50 378 Tm (Francisco, or something on Georgia Street won't match. Instead, we can specify an unknown ) Tj
1 0 0 1 50 364 Tm (word with :0. This would be written as:) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (```text) Tj
1 0 0 1 50 322 Tm (:0 :0 City) Tj
1 0 0 1 50 308 Tm (#### :0 Street) Tj
1 0 0 1 50 294 Tm (:0 :0) Tj
1 0 0 1 50 280 Tm (```) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (Now, while this will still match quite a lot, it will match things like "Directions to ) Tj
1 0 0 1 50 238 Tm (Baldwin City" more than "How do I get to the boss in my game?") Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (_NOTE: Currently, the number of :0 words is not fully taken into consideration so the ) Tj
1 0 0 1 50 196 Tm (above might match quite liberally, but this will change in the future._) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (#### Parentheses Expansion) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (Sometimes you might find yourself writing a lot of variations of the same thing. For ) Tj
1 0 0 1 50 126 Tm (example, to write a skill that orders food, you might write the following intent:) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (```text) Tj
1 0 0 1 50 84 Tm (Order some {food}.) Tj
1 0 0 1 50 70 Tm (Order some {food} from {place}.) Tj
1 0 0 1 50 56 Tm (Grab some {food}.) Tj
ET
endstream

endobj
517 0 obj
<< /Length 2734 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (Grab some {food} from {place}.) Tj
1 0 0 1 50 728 Tm (```) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (Rather than writing out all combinations of possibilities, you can embed them into one or ) Tj
1 0 0 1 50 686 Tm (more lines by writing each possible option inside parentheses with \\| in between each ) Tj
1 0 0 1 50 672 Tm (part. For example, that same intent above could be written as:) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (```text) Tj
1 0 0 1 50 630 Tm (\(Order | Grab\) some {food}) Tj
1 0 0 1 50 616 Tm (\(Order | Grab\) some {food} from {place}) Tj
1 0 0 1 50 602 Tm (```) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (or even on a single-line:) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (```text) Tj
1 0 0 1 50 532 Tm (\(Order | Grab\) some {food} \(from {place} | \)) Tj
1 0 0 1 50 518 Tm (```) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (Nested parentheses are supported to create even more complex combinations, such as the ) Tj
1 0 0 1 50 476 Tm (following:) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (```text) Tj
1 0 0 1 50 434 Tm (\(Look \(at | for\) | Find\) {object}.) Tj
1 0 0 1 50 420 Tm (```) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (Which would expand to:) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (```text) Tj
1 0 0 1 50 350 Tm (Look at {object}) Tj
1 0 0 1 50 336 Tm (Look for {object}) Tj
1 0 0 1 50 322 Tm (Find {object}) Tj
1 0 0 1 50 308 Tm (```) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (There is no performance benefit to using parentheses expansion. When used appropriately, ) Tj
1 0 0 1 50 266 Tm (this syntax can be much clearer to read. However, more complex structures should be broken) Tj
1 0 0 1 50 252 Tm ( down into multiple lines to aid readability and reduce false utterances being included in) Tj
1 0 0 1 50 238 Tm ( the model. Overuse can even result in the model training timing out, rendering the Skill ) Tj
1 0 0 1 50 224 Tm (unusable.) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (### Using it in a Skill) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (The `intent_handler\(\)` _decorator_ can be used to create an examples based intent handler ) Tj
1 0 0 1 50 154 Tm (by passing in the filename of the `.intent` file as a string.) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (You may also see the `@intent_file_handler` decorator used in Skills. This has been ) Tj
1 0 0 1 50 112 Tm (deprecated and you can now replace any instance of this with the simpler `@intent_handler`) Tj
1 0 0 1 50 98 Tm ( decorator.) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (From our first example above, we created a file `vocab/en-us/what.is.a.tomato.intent`. To ) Tj
1 0 0 1 50 56 Tm (register an intent using this file we can use:) Tj
ET
endstream

endobj
518 0 obj
<< /Length 2660 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (```python) Tj
1 0 0 1 50 714 Tm (@intent_handler\('what.is.a.tomato.intent'\)) Tj
1 0 0 1 50 700 Tm (```) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (This _decorator_ must be imported before it is used:) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (```python) Tj
1 0 0 1 50 630 Tm (from ovos_workshop.decorators import intent_handler) Tj
1 0 0 1 50 616 Tm (```) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm ([Learn more about _decorators_ in ) Tj
1 0 0 1 50 574 Tm (Python]\(https://en.wikipedia.org/wiki/Python_syntax_and_semantics#Decorators\).) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (Now we can create our Tomato Skill:) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (```python) Tj
1 0 0 1 50 504 Tm (from ovos_workshop.skills import OVOSSkill) Tj
1 0 0 1 50 490 Tm (from ovos_workshop.decorators import intent_handler) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (class TomatoSkill\(OVOSSkill\):) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (    def initialize\(self\):) Tj
1 0 0 1 50 420 Tm (        self.register_entity_file\('type.entity'\)) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (    @intent_handler\('what.is.a.tomato.intent'\)) Tj
1 0 0 1 50 378 Tm (    def handle_what_is\(self, message\):) Tj
1 0 0 1 50 364 Tm (        self.speak_dialog\('tomato.description'\)) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (    @intent_handler\('do.you.like.intent'\)) Tj
1 0 0 1 50 322 Tm (    def handle_do_you_like\(self, message\):) Tj
1 0 0 1 50 308 Tm (        tomato_type = message.data.get\('type'\)) Tj
1 0 0 1 50 294 Tm (        if tomato_type is not None:) Tj
1 0 0 1 50 280 Tm (            self.speak_dialog\('like.tomato.type',) Tj
1 0 0 1 50 266 Tm (                              {'type': tomato_type}\)) Tj
1 0 0 1 50 252 Tm (        else:) Tj
1 0 0 1 50 238 Tm (            self.speak_dialog\('like.tomato.generic'\)) Tj
1 0 0 1 50 224 Tm (```) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (See a Padatious intent handler example in the [Hello World ) Tj
1 0 0 1 50 182 Tm (Skill]\(https://github.com/MycroftAI/skill-hello-) Tj
1 0 0 1 50 168 Tm (world/blob/67a972792a07da7e3406bf7f94acd54aa2674829/__init__.py#L42\)) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (### Common Problems) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (#### I am unable to match against the utterance string) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (The utterance string received from the speech-to-text engine is received all lowercase. As) Tj
1 0 0 1 50 70 Tm ( such any string matching you are trying to do should also be converted to lowercase. For ) Tj
1 0 0 1 50 56 Tm (example:) Tj
ET
endstream

endobj
519 0 obj
<< /Length 2956 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (```python) Tj
1 0 0 1 50 714 Tm (    @intent_handler\('example.intent'\)) Tj
1 0 0 1 50 700 Tm (    def handle_example\(self, message\):) Tj
1 0 0 1 50 686 Tm (        utterance = message.data.get\('utterance'\)) Tj
1 0 0 1 50 672 Tm (        if 'Proper Noun'.lower\(\) in utterance:) Tj
1 0 0 1 50 658 Tm (            self.speak\('Found it'\)) Tj
1 0 0 1 50 644 Tm (```) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (# docs/405-customization.md) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (# Customization) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (## Resource Files) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (Resource files are essential components of OVOS skills, containing data such as dialogs, ) Tj
1 0 0 1 50 504 Tm (intents, vocabularies, regular expressions, templates, and more. ) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (These files define how a skill interacts with the user and responds to queries.) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (> **RECAP**: the skill contains a `locale` folder with subfolders for each lang, eg `en-) Tj
1 0 0 1 50 434 Tm (us`, learn more in [skill structure docs]\(https://openvoiceos.github.io/ovos-technical-) Tj
1 0 0 1 50 420 Tm (manual/skill_structure/\)) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (### Customizing Dialogs) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (Users can personalize the behavior of skills by customizing dialogues to better suit their) Tj
1 0 0 1 50 336 Tm ( preferences. ) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (To give a unique twist and personality to your assistant you don't need to fork existing ) Tj
1 0 0 1 50 294 Tm (skills only to change dialogs) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (Here's a step-by-step guide on how to replace the dialog of an existing skill:) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (**Identify the Skill and Resource to Replace**:) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (   - Determine the ID of the skill whose dialog you want to replace. In this example, ) Tj
1 0 0 1 50 196 Tm (let's assume the skill ID is `skill-ovos-date-time.openvoiceos`.) Tj
1 0 0 1 50 182 Tm (   - Identify the specific dialog file you want to replace. For this example, let's say ) Tj
1 0 0 1 50 168 Tm (you want to replace the `time.current.dialog` file located in the `locale/en-us/dialog` ) Tj
1 0 0 1 50 154 Tm (directory of the skill.) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (**Create the Replacement Dialog File**:) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (   - Create a new dialog file with the same name \(`time.current.dialog`\) as the original ) Tj
1 0 0 1 50 84 Tm (file.) Tj
1 0 0 1 50 70 Tm (   - Customize the content of the dialog file according to your preferences. You can ) Tj
1 0 0 1 50 56 Tm (modify the existing dialogues, add new ones, or remove any that you don't want to use.) Tj
ET
endstream

endobj
520 0 obj
<< /Length 3339 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (**Locate the User-Specific Resource Directory**:) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (   - Use the provided skill ID \(`skill-ovos-date-time.openvoiceos`\) to locate the user-) Tj
1 0 0 1 50 686 Tm (specific resource directory.) Tj
1 0 0 1 50 672 Tm (   - The user-specific resource directory is located within the XDG data directory. It ) Tj
1 0 0 1 50 658 Tm (follows the path `XDG_DATA_HOME/mycroft/resources/skill-ovos-date-time.openvoiceos` \(where) Tj
1 0 0 1 50 644 Tm ( `XDG_DATA_HOME` is the user's data directory, usually `~/.local/share` on Linux\).) Tj
1 0 0 1 50 630 Tm (   - If it does not exist, create it, This can be done using file manager tools or ) Tj
1 0 0 1 50 616 Tm (command-line utilities such as `mkdir` on Unix-like systems.) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (**Copy the Replacement Dialog File to the User-Specific Directory**:) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (   - Copy or move the replacement dialog file \(`time.current.dialog`\) to the appropriate ) Tj
1 0 0 1 50 546 Tm (directory within the user-specific resource directory.) Tj
1 0 0 1 50 532 Tm (   - Place the file in the `locale/en-us/dialog` directory within the user-specific ) Tj
1 0 0 1 50 518 Tm (resource directory. This mirrors the directory structure of the original skill.) Tj
1 0 0 1 50 504 Tm (   - In this example the final path of the file would be ) Tj
1 0 0 1 50 490 Tm (`~/.local/share/mycroft/resources/skill-ovos-date-time.openvoiceos/locale/en-) Tj
1 0 0 1 50 476 Tm (us/dialog/time.current.dialog` ) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (**Verify the Replacement**:) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (   - Test the skill to ensure that the modified dialogues are being used instead of the ) Tj
1 0 0 1 50 406 Tm (original ones.) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (Customizing dialogues offers users flexibility in tailoring the behavior of skills to ) Tj
1 0 0 1 50 350 Tm (their specific needs and preferences.) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (### Local Language support) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (Adding support for additional languages to existing skills enables users to interact with ) Tj
1 0 0 1 50 266 Tm (OVOS in their preferred language. ) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (While developing or waiting for skills to support your language you might want to add it ) Tj
1 0 0 1 50 224 Tm (locally) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (Users can add language support for a skill by creating a new language folder in the user ) Tj
1 0 0 1 50 182 Tm (resources directory and copying the necessary files over:) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (**Identify the Skill and Language to Add**:) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (   - Determine the ID of the skill for which you want to add language support. Let's ) Tj
1 0 0 1 50 112 Tm (continue using the skill ID `skill-ovos-date-time.openvoiceos`.) Tj
1 0 0 1 50 98 Tm (   - Identify the language you want to add support for. For this example, let's say you ) Tj
1 0 0 1 50 84 Tm (want to add support for Spanish \(language code: `es-es`\).) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (**Create the New Language Folder**:) Tj
ET
endstream

endobj
521 0 obj
<< /Length 3369 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (   - Create a new directory with the name of the language code \(`es-es` for Spanish\) ) Tj
1 0 0 1 50 714 Tm (within the `locale` directory of the skill.) Tj
1 0 0 1 50 700 Tm (   - This can be done using file manager tools or command-line utilities such as `mkdir` ) Tj
1 0 0 1 50 686 Tm (on Unix-like systems.) Tj
1 0 0 1 50 672 Tm (   - Using the previous example, we would create `~/.local/share/mycroft/resources/skill-) Tj
1 0 0 1 50 658 Tm (ovos-date-time.openvoiceos/locale/es-es/`) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (**Copy the Required Files to the New Language Folder**:) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (   - Copy all the necessary resource files from an existing language folder \(e.g., `en-) Tj
1 0 0 1 50 588 Tm (us`\) to the newly created language folder \(`es-es`\).) Tj
1 0 0 1 50 574 Tm (   - This includes files such as dialogues, vocabularies, regex patterns, etc., depending ) Tj
1 0 0 1 50 560 Tm (on the resources used by the skill.) Tj
1 0 0 1 50 546 Tm (   - Ensure that all files are placed in the corresponding directories within the new ) Tj
1 0 0 1 50 532 Tm (language folder to maintain the directory structure of the original skill.) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (**Verify the Language Addition**:) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (   - Once the files are copied over, verify that the new language is supported by the ) Tj
1 0 0 1 50 462 Tm (skill.) Tj
1 0 0 1 50 448 Tm (   - Restart OpenVoiceOS to allow the skill to recognize the newly added language ) Tj
1 0 0 1 50 434 Tm (resources.) Tj
1 0 0 1 50 420 Tm (   - Test the skill using the newly added language to ensure that it functions correctly ) Tj
1 0 0 1 50 406 Tm (and uses the appropriate language-specific resources.) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (By following these steps, users can add support for additional languages to existing ) Tj
1 0 0 1 50 364 Tm (skills by creating new language folders and copying the required resource files.) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (> **NEXT STEPS**: consider sending a Pull Request to the skill to directly add language ) Tj
1 0 0 1 50 322 Tm (support!) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (This allows users to extend the language capabilities of skills beyond the languages ) Tj
1 0 0 1 50 280 Tm (provided by default.) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (# docs/406-messagebus.md) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (# OVOSSkill Bus Interaction) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (The base [OVOSSkill API]\(http://mycroft-core.readthedocs.io/en/stable/\) handles most of ) Tj
1 0 0 1 50 168 Tm (the Messagebus usage automatically. ) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (For example, the `mycroft.stop` message is caught by the skill framework, invoking an ) Tj
1 0 0 1 50 126 Tm (overridden `OVOSSkills.stop\(\)` method within a **Skill**. ) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (Similarly, the `OVOSSkill.speak\(\)` and `OVOSSkill.speak_dialog\(\)` methods generate `speak`) Tj
1 0 0 1 50 84 Tm ( messages to be conveyed to the text-to-speech \\\(TTS\\\) and audio systems.) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (You will really only need to know about the Mycroft Messagebus if you are developing ) Tj
ET
endstream

endobj
522 0 obj
<< /Length 2604 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (advanced **Skills**. ) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (The `OVOSSkill.add_event\(\)` method allows you to attach a handler which will be triggered ) Tj
1 0 0 1 50 700 Tm (when the message is seen on the Messagebus.) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (## Connecting Message handlers) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (```python) Tj
1 0 0 1 50 630 Tm (class ListenForMessageSkill\(OVOSSkill\):) Tj
1 0 0 1 50 616 Tm (  def initialize\(self\):  ) Tj
1 0 0 1 50 602 Tm (      self.add_event\('recognizer_loop:record_begin',  ) Tj
1 0 0 1 50 588 Tm (                    self.handle_listener_started\)  ) Tj
1 0 0 1 50 574 Tm (      self.add_event\('recognizer_loop:record_end',  ) Tj
1 0 0 1 50 560 Tm (                    self.handle_listener_ended\)) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (  def handle_listener_started\(self, message\):  ) Tj
1 0 0 1 50 518 Tm (      # code to excecute when active listening begins...) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (  def handle_listener_ended\(self, message\):  ) Tj
1 0 0 1 50 476 Tm (      # code to excecute when active listening begins...) Tj
1 0 0 1 50 462 Tm (```) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (## Generating Messages) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (```python) Tj
1 0 0 1 50 392 Tm (from ovos_bus_client import Message) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (class GenerateMessageSkill\(OVOSSkill\):) Tj
1 0 0 1 50 350 Tm (  def some_method\(self\):  ) Tj
1 0 0 1 50 336 Tm (    self.bus.emit\(Message\("recognizer_loop:utterance",  ) Tj
1 0 0 1 50 322 Tm (                          {'utterances': ["the injected utterance"],  ) Tj
1 0 0 1 50 308 Tm (                            'lang': 'en-us'}\)\)  ) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (```) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (# docs/407-skill_filesystem.md) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (# Filesystem access) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (Many Skills may want access to parts of the filesystem. To account for the many different ) Tj
1 0 0 1 50 168 Tm (platforms that can run OVOS there are three locations that a Skill can utilize.) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (* Persistent filesystem) Tj
1 0 0 1 50 126 Tm (* Temporary cache) Tj
1 0 0 1 50 112 Tm (* Skill's own root directory) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (## Persistent Files) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (When your Skill needs to store some data that will persist over time and cannot easily be ) Tj
ET
endstream

endobj
523 0 obj
<< /Length 2752 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (rebuilt, there is a persistent filesystem namespaced to your Skill.) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (### Reading and writing to files) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (This uses the standard Python `open\(\)` method to read and write files. It takes two ) Tj
1 0 0 1 50 672 Tm (parameters:) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (* file\\_name \\\(str\\\) - a path relative to the namespace. subdirs not currently supported.) Tj
1 0 0 1 50 630 Tm (* mode \\\(str\\\)  a file handle mode \\[r, r+, w, w+, rb, rb+, wb+, a, ab, a+, ab+, x\\]) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (Example:) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (```python) Tj
1 0 0 1 50 560 Tm (    def write_line_to_file\(self, file_name, line\):) Tj
1 0 0 1 50 546 Tm (        """Write a single line to a file in the Skills persistent filesystem.""") Tj
1 0 0 1 50 532 Tm (        with self.file_system.open\(file_name, "w"\) as my_file:) Tj
1 0 0 1 50 518 Tm (            my_file.write\(line\)) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (    def read_file\(self, file_name\):) Tj
1 0 0 1 50 476 Tm (        """Read the contents of a file in the Skills persistent filesystem.""") Tj
1 0 0 1 50 462 Tm (        with self.file_system.open\(file_name, "r"\) as my_file:) Tj
1 0 0 1 50 448 Tm (            return my_file.read\(\)) Tj
1 0 0 1 50 434 Tm (```) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (### Check if a file exists) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (Quick method to see if some file exists in the namespaced directory.) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (Example:) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (```python) Tj
1 0 0 1 50 308 Tm (        file_name = "example.txt") Tj
1 0 0 1 50 294 Tm (        with self.file_system.open\(file_name, "w"\) as my_file:) Tj
1 0 0 1 50 280 Tm (            my_file.write\("Hello world"\)) Tj
1 0 0 1 50 266 Tm (        self.log.info\(self.file_system.exists\(file_name\)\)) Tj
1 0 0 1 50 252 Tm (        # True) Tj
1 0 0 1 50 238 Tm (        self.log.info\(self.file_system.exists\("new.txt"\)\)) Tj
1 0 0 1 50 224 Tm (        # False) Tj
1 0 0 1 50 210 Tm (```) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (### Get the path of the namespaced directory.) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (`self.file_system.path` is a member value containing the root path of the namespace. ) Tj
1 0 0 1 50 140 Tm (However, it is recommended that you use the `self.file_system.open\(\)` method to read and ) Tj
1 0 0 1 50 126 Tm (write files.) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (Example:) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (```python) Tj
1 0 0 1 50 56 Tm (from ovos_workshop.skills import OVOSSkill) Tj
ET
endstream

endobj
524 0 obj
<< /Length 2546 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (class FileSystemSkill\(OVOSSkill\):) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (    def initialize\(self\):) Tj
1 0 0 1 50 686 Tm (        """Log the path of this Skills persistent namespace.""") Tj
1 0 0 1 50 672 Tm (        self.log.info\(self.file_system.path\)) Tj
1 0 0 1 50 658 Tm (```) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (### Create subdirectories) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (Now that we have the path of our namespaced filesystem, we can organize our files however ) Tj
1 0 0 1 50 588 Tm (we like within that directory.) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (In this example, we create a subdirectory called "cache", then write to a text file inside) Tj
1 0 0 1 50 546 Tm ( of it.) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (```python) Tj
1 0 0 1 50 504 Tm (from os import mkdir) Tj
1 0 0 1 50 490 Tm (from os.path import join) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (from ovos_workshop.skills import OVOSSkill) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (class FileSystemSkill\(OVOSSkill\):) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (    def initialize\(self\):) Tj
1 0 0 1 50 392 Tm (        """Create a cache subdirectory and write to a file inside it""") Tj
1 0 0 1 50 378 Tm (        cache_dir = "cache") Tj
1 0 0 1 50 364 Tm (        file_name = "example.txt") Tj
1 0 0 1 50 350 Tm (        if not self.file_system.exists\(cache_dir\):) Tj
1 0 0 1 50 336 Tm (            mkdir\(join\(self.file_system.path, cache_dir\)\)) Tj
1 0 0 1 50 322 Tm (        with self.file_system.open\(join\(cache_dir, file_name\), "w"\) as my_file:) Tj
1 0 0 1 50 308 Tm (            my_file.write\('hello'\)) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (```) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (### Example Skill) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (```python) Tj
1 0 0 1 50 210 Tm (from ovos_workshop.skills import OVOSSkill) Tj
1 0 0 1 50 196 Tm (from ovos_workshop.decorators import intent_handler) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (class FileSystemSkill\(OVOSSkill\):) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (    def initialize\(self\):) Tj
1 0 0 1 50 126 Tm (        """Perform initial setup for the Skill.) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (        For this example we do four things:) Tj
1 0 0 1 50 84 Tm (        1. Log the path of this directory.) Tj
1 0 0 1 50 70 Tm (        2. Write to a file in the directory.) Tj
1 0 0 1 50 56 Tm (        3. Check that our file exists.) Tj
ET
endstream

endobj
525 0 obj
<< /Length 2979 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (        4. Read the contents of our file from disk.) Tj
1 0 0 1 50 728 Tm (        """) Tj
1 0 0 1 50 714 Tm (        file_name = "example.txt") Tj
1 0 0 1 50 700 Tm (        self.log.info\(self.file_system.path\)) Tj
1 0 0 1 50 686 Tm (        self.write_line_to_file\(file_name, "hello world"\)) Tj
1 0 0 1 50 672 Tm (        self.log.info\(self.file_system.exists\(file_name\)\)) Tj
1 0 0 1 50 658 Tm (        self.log.info\(self.read_file\(file_name\)\)) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (    def write_line_to_file\(self, file_name, line\):) Tj
1 0 0 1 50 616 Tm (        """Write a single line to a file in the Skills persistent filesystem.""") Tj
1 0 0 1 50 602 Tm (        with self.file_system.open\(file_name, "w"\) as my_file:) Tj
1 0 0 1 50 588 Tm (            my_file.write\(line\)) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (    def read_file\(self, file_name\):) Tj
1 0 0 1 50 546 Tm (        """Read the contents of a file in the Skills persistent filesystem.""") Tj
1 0 0 1 50 532 Tm (        with self.file_system.open\(file_name, "r"\) as my_file:) Tj
1 0 0 1 50 518 Tm (            return my_file.read\(\)) Tj
1 0 0 1 50 504 Tm (```) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (## Temporary Cache) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (Skills can create a directory for caching temporary data to speed up performance.) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (This directory will likely be part of a small RAM disk and may be cleared at any time. So ) Tj
1 0 0 1 50 406 Tm (code that uses these cached files must be able to fall back and regenerate the file.) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (### Example Skill) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (```python) Tj
1 0 0 1 50 336 Tm (from os.path import join) Tj
1 0 0 1 50 322 Tm (from ovos_workshop.skills import OVOSSkill) Tj
1 0 0 1 50 308 Tm (from ovos_workshop.decorators import intent_handler) Tj
1 0 0 1 50 294 Tm (from ovos_utils.file_utils import get_cache_directory) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (class CachingSkill\(OVOSSkill\):) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (    def initialize\(self\):) Tj
1 0 0 1 50 210 Tm (        """Perform initial setup for the Skill.) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (        For this example we do four things:) Tj
1 0 0 1 50 168 Tm (        1. Get a cache directory namespaced for our Skill.) Tj
1 0 0 1 50 154 Tm (        2. Define a file path for the cache_file.) Tj
1 0 0 1 50 140 Tm (        3. Write some data to the cache_file) Tj
1 0 0 1 50 126 Tm (        4. Log the path of the cache_file) Tj
1 0 0 1 50 112 Tm (        4. Log the contents of the cache_file.) Tj
1 0 0 1 50 98 Tm (        """) Tj
1 0 0 1 50 84 Tm (        cache_dir = get_cache_directory\('CachingSkill'\)) Tj
1 0 0 1 50 70 Tm (        self.cache_file = join\(cache_dir, "myfile.txt"\)) Tj
1 0 0 1 50 56 Tm (        self.cache_data\(\)) Tj
ET
endstream

endobj
526 0 obj
<< /Length 2755 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (        self.log.info\(self.cache_file\)) Tj
1 0 0 1 50 728 Tm (        self.log.info\(self.read_cached_data\(\)\)) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (    def cache_data\(self\):) Tj
1 0 0 1 50 686 Tm (        with open\(self.cache_file, "w"\) as cache_file: ) Tj
1 0 0 1 50 672 Tm (            cache_file.write\("Some cached data"\) ) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (    def read_cached_data\(self\):) Tj
1 0 0 1 50 630 Tm (        with open\(self.cache_file, "r"\) as cache_file: ) Tj
1 0 0 1 50 616 Tm (            return cache_file.read\(\)) Tj
1 0 0 1 50 602 Tm (```) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (## Skill Root Directory) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (```python) Tj
1 0 0 1 50 532 Tm (self.root_dir) Tj
1 0 0 1 50 518 Tm (```) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (This member variable contains the absolute path of a Skills root directory e.g. ) Tj
1 0 0 1 50 476 Tm (`~.local/share/mycroft/skills/my-skill.me/`.) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (Generally Skills should not modify anything within this directory.) Tj
1 0 0 1 50 434 Tm (Modifying anything in the Skill directory will reload the Skill.  ) Tj
1 0 0 1 50 420 Tm (It is also not guaranteed that the Skill will have permission to write to this directory.) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (# docs/408-skill_settings.md) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (# Skill Settings) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (Skill settings in OVOS allow users to configure and personalize the behavior of ) Tj
1 0 0 1 50 280 Tm (Skillseither through the command line, configuration files, or a web-based interface. ) Tj
1 0 0 1 50 266 Tm (This enables advanced customization and support for external integrations, while remaining) Tj
1 0 0 1 50 252 Tm ( completely optional for basic usage.) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (## Common Use Cases) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (- Changing default behaviors \(e.g. alarm sounds, display preferences\)) Tj
1 0 0 1 50 182 Tm (- Authenticating with third-party services \(e.g. Spotify\)) Tj
1 0 0 1 50 168 Tm (- Entering longer or complex data \(e.g. IP addresses, API keys\)) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (---) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (## Using Skill Settings in Your Skill) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (Settings are managed through a dictionary-like object available on the `OVOSSkill` base ) Tj
1 0 0 1 50 70 Tm (class. They are persisted to disk and can be updated locally by the Skill or remotely by ) Tj
1 0 0 1 50 56 Tm (the user via a frontend.) Tj
ET
endstream

endobj
527 0 obj
<< /Length 2563 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (Settings are stored in your Skill's configuration directory, usually:) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (```) Tj
1 0 0 1 50 686 Tm (~/.config/mycroft/skills/<your_skill_id>/settings.json) Tj
1 0 0 1 50 672 Tm (```) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (### Accessing Settings) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (You can read settings like a standard Python dictionary, but it's recommended to use ) Tj
1 0 0 1 50 602 Tm (`.get\(\)` to avoid `KeyError` exceptions:) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (```python) Tj
1 0 0 1 50 560 Tm (# Safely read the 'show_time' setting with a default fallback) Tj
1 0 0 1 50 546 Tm (show_time = self.settings.get\("show_time", False\)) Tj
1 0 0 1 50 532 Tm (```) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (> ?? Avoid using `self.settings['show_time']` directly, as it will raise a `KeyError` if ) Tj
1 0 0 1 50 490 Tm (the setting is not defined.) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (Also, do not access `self.settings` in your `__init__\(\)` methodwait until the ) Tj
1 0 0 1 50 448 Tm (`initialize\(\)` method to ensure the settings are fully loaded.) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (---) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (## Handling Settings Updates) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (OVOS automatically checks for setting changes, either locally or from a remote backend. ) Tj
1 0 0 1 50 350 Tm (You can register a callback to react when settings change:) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (```python) Tj
1 0 0 1 50 308 Tm (def initialize\(self\):) Tj
1 0 0 1 50 294 Tm (    self.settings_change_callback = self.on_settings_changed) Tj
1 0 0 1 50 280 Tm (    self.on_settings_changed\(\)  # Also run immediately on start) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (def on_settings_changed\(self\):) Tj
1 0 0 1 50 238 Tm (    show_time = self.settings.get\('show_time', False\)) Tj
1 0 0 1 50 224 Tm (    self.trigger_time_display\(show_time\)) Tj
1 0 0 1 50 210 Tm (```) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (This ensures your Skill responds to user configuration changes dynamically.) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (---) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (## Writing to Settings) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (You can update and persist values to the settings file simply by assigning them:) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (```python) Tj
1 0 0 1 50 56 Tm (self.settings['show_time'] = True) Tj
ET
endstream

endobj
528 0 obj
<< /Length 2202 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (```) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (Changes will persist across restarts unless overridden remotely via a backend or web ) Tj
1 0 0 1 50 700 Tm (interface.) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (---) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (## Web-Based Skill Settings \(Optional UI\)) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (A **community-built** web interface, [OVOS Skill Config ) Tj
1 0 0 1 50 602 Tm (Tool]\(https://github.com/OscillateLabsLLC/ovos-skill-config-tool\), provides a modern, ) Tj
1 0 0 1 50 588 Tm (user-friendly way to configure OVOS skills.) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (### Features) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (- Clean UI for managing skill-specific settings) Tj
1 0 0 1 50 518 Tm (- Grouping and organization of Skills) Tj
1 0 0 1 50 504 Tm (- Dark mode support) Tj
1 0 0 1 50 490 Tm (- Built-in Basic Authentication for security) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (![Skill Config Interface]\(https://github.com/OscillateLabsLLC/ovos-skill-config-) Tj
1 0 0 1 50 448 Tm (tool/raw/main/skills-interface.webp\)) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (### Installation) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (Install via pip:) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (```bash) Tj
1 0 0 1 50 350 Tm (pip install ovos-skill-config-tool) Tj
1 0 0 1 50 336 Tm (```) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (Run the tool:) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (```bash) Tj
1 0 0 1 50 266 Tm (ovos-skill-config-tool) Tj
1 0 0 1 50 252 Tm (```) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (Access it in your browser at [http://0.0.0.0:8000]\(http://0.0.0.0:8000\)) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (#### Default Login) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (- **Username**: `ovos`) Tj
1 0 0 1 50 154 Tm (- **Password**: `ovos`) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (To customize credentials:) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (```bash) Tj
1 0 0 1 50 84 Tm (export OVOS_CONFIG_USERNAME=myuser) Tj
1 0 0 1 50 70 Tm (export OVOS_CONFIG_PASSWORD=mypassword) Tj
1 0 0 1 50 56 Tm (ovos-skill-config-tool) Tj
ET
endstream

endobj
529 0 obj
<< /Length 2547 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (```) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (---) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (## Tips) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (- Always use `.get\(key, default\)` for safe reads.) Tj
1 0 0 1 50 644 Tm (- Use `initialize\(\)` instead of `__init__\(\)` for anything that depends on settings.) Tj
1 0 0 1 50 630 Tm (- Use settings callbacks to keep your Skill reactive to user changes.) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (---) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (## See Also) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (- [OVOS Skill Config Tool on GitHub]\(https://github.com/OscillateLabsLLC/ovos-skill-) Tj
1 0 0 1 50 532 Tm (config-tool\)) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (# docs/408-skill_settings_meta.md) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (# settingsmeta.json) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (## Define settings UI for a Skill) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (To define our Skills settings UI we use a `settingsmeta.json` or `settingsmeta.yaml` file.) Tj
1 0 0 1 50 406 Tm ( ) Tj
1 0 0 1 50 392 Tm (This file must be in the root directory of the Skill and must follow a specific structure.) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (Once settings have been defined using a `settingsmeta` file, they will be presented to the) Tj
1 0 0 1 50 350 Tm ( user in the configured backend or helper application) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (### Example settingsmeta file) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (To see it in action, lets look at a simple example from the [Date-Time ) Tj
1 0 0 1 50 280 Tm (Skill]\(https://github.com/MycroftAI/skill-date-time\). First using the JSON syntax as a ) Tj
1 0 0 1 50 266 Tm (`settingsmeta.json` file:) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (```javascript) Tj
1 0 0 1 50 224 Tm ({) Tj
1 0 0 1 50 210 Tm (    "skillMetadata": {) Tj
1 0 0 1 50 196 Tm (        "sections": [) Tj
1 0 0 1 50 182 Tm (            {) Tj
1 0 0 1 50 168 Tm (                "name": "Display",) Tj
1 0 0 1 50 154 Tm (                "fields": [) Tj
1 0 0 1 50 140 Tm (                    {) Tj
1 0 0 1 50 126 Tm (                        "name": "show_time",) Tj
1 0 0 1 50 112 Tm (                        "type": "checkbox",) Tj
1 0 0 1 50 98 Tm (                        "label": "Show digital clock when idle",) Tj
1 0 0 1 50 84 Tm (                        "value": "true") Tj
1 0 0 1 50 70 Tm (                    }) Tj
1 0 0 1 50 56 Tm (                ]) Tj
ET
endstream

endobj
530 0 obj
<< /Length 2865 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (            }) Tj
1 0 0 1 50 728 Tm (        ]) Tj
1 0 0 1 50 714 Tm (    }) Tj
1 0 0 1 50 700 Tm (}) Tj
1 0 0 1 50 686 Tm (```) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (Now, here is the same settings, as it would be defined with YAML in a `settingsmeta.yaml` ) Tj
1 0 0 1 50 644 Tm (file:) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (```yaml) Tj
1 0 0 1 50 602 Tm (skillMetadata:) Tj
1 0 0 1 50 588 Tm (   sections:) Tj
1 0 0 1 50 574 Tm (      - name: Display) Tj
1 0 0 1 50 560 Tm (        fields:) Tj
1 0 0 1 50 546 Tm (          - name: show_time) Tj
1 0 0 1 50 532 Tm (            type: checkbox) Tj
1 0 0 1 50 518 Tm (            label: Show digital clock when idle) Tj
1 0 0 1 50 504 Tm (            value: "true") Tj
1 0 0 1 50 490 Tm (```) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (Notice that the value of `false` is surrounded by "quotation marks". This is because OVOS ) Tj
1 0 0 1 50 448 Tm (expects a string of `"true"` or `"false"` rather than a Boolean.) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (Both of these files would result in the same settings block.) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (![]\(https://3867939753-files.gitbook.io/~/files/v0/b/gitbook-legacy-files/o/assets%2F-) Tj
1 0 0 1 50 378 Tm (LocrEaSe-) Tj
1 0 0 1 50 364 Tm (b3SJ4H87SC%2Fsync%2F1535fed57a285e48b63090cb9e6c82591f3aacc0.png?generation=15990087780250) Tj
1 0 0 1 50 350 Tm (54&alt=media\)) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (It is up to your personal preference which syntax you choose.) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (### Structure of the settingsmeta file) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (Whilst the syntax differs, the structure of these two filetypes is the same. This starts ) Tj
1 0 0 1 50 252 Tm (at the top level of the file by defining a `skillMetadata` object. This object must ) Tj
1 0 0 1 50 238 Tm (contain one or more `sections` elements.) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (#### Sections) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (Each section represents a group of settings that logically sit together. This enables us ) Tj
1 0 0 1 50 168 Tm (to display the settings more clearly in the web interface for users.) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (In the simple example above we have just one section. However, the [Spotify Skill ) Tj
1 0 0 1 50 126 Tm (settings]\(https://github.com/forslund/spotify-skill/blob/19.08/settingsmeta.json\) contains) Tj
1 0 0 1 50 112 Tm ( two sections. The first is for Spotify Account authentication, and the second section ) Tj
1 0 0 1 50 98 Tm (contains settings to define your default playback device.) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (Each section must contain a `name` attribute that is used as the heading for that section,) Tj
1 0 0 1 50 56 Tm ( and an Array of `fields`.) Tj
ET
endstream

endobj
531 0 obj
<< /Length 2444 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (#### Fields) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (Each section has one or more `fields`. Each field is a setting available to the user. Each) Tj
1 0 0 1 50 686 Tm ( field takes four properties:) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (*   `name` \(String\)) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (    The `name` of the `field` is used by the Skill to get and set the value of the ) Tj
1 0 0 1 50 616 Tm (`field`. It will not usually be displayed to the user, unless the `label` property has not) Tj
1 0 0 1 50 602 Tm ( been set.) Tj
1 0 0 1 50 588 Tm (*   `type` \(Enum\)) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (    The data type of this field. The supported types are:) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (    * `text`: any kind of text) Tj
1 0 0 1 50 518 Tm (    * `email`: text validated as an email address) Tj
1 0 0 1 50 504 Tm (    * `checkbox`: boolean, True or False) Tj
1 0 0 1 50 490 Tm (    * `number`: text validated as a number) Tj
1 0 0 1 50 476 Tm (    * `password`: text hidden from view by default) Tj
1 0 0 1 50 462 Tm (    * `select`: a drop-down menu of options) Tj
1 0 0 1 50 448 Tm (    * `label`: special field to display text for information purposes only. No name or ) Tj
1 0 0 1 50 434 Tm (value is required for a `label` field.) Tj
1 0 0 1 50 420 Tm (*   `label` \(String\)) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (    The text to be displayed above the setting field.) Tj
1 0 0 1 50 378 Tm (*   `value` \(String\)) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (    The initial value of the field.) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (Examples for each type of field are provided in JSON and YAML at the end of this page.) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (## SettingsMeta Examples) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (### Label Field) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (```yaml) Tj
1 0 0 1 50 210 Tm (skillMetadata:) Tj
1 0 0 1 50 196 Tm (   sections:) Tj
1 0 0 1 50 182 Tm (      - name: Label Field Example) Tj
1 0 0 1 50 168 Tm (        fields:) Tj
1 0 0 1 50 154 Tm (          - type: label) Tj
1 0 0 1 50 140 Tm (            label: This is descriptive text.) Tj
1 0 0 1 50 126 Tm (```) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (### Text Field) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (```yaml) Tj
1 0 0 1 50 56 Tm (skillMetadata:) Tj
ET
endstream

endobj
532 0 obj
<< /Length 2040 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (   sections:) Tj
1 0 0 1 50 728 Tm (      - name: Text Field Example) Tj
1 0 0 1 50 714 Tm (        fields:) Tj
1 0 0 1 50 700 Tm (          - name: my_string) Tj
1 0 0 1 50 686 Tm (            type: text) Tj
1 0 0 1 50 672 Tm (            label: Enter any text) Tj
1 0 0 1 50 658 Tm (            value:) Tj
1 0 0 1 50 644 Tm (```) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (### Email) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (```yaml) Tj
1 0 0 1 50 574 Tm (skillMetadata:) Tj
1 0 0 1 50 560 Tm (   sections:) Tj
1 0 0 1 50 546 Tm (      - name: Email Field Example) Tj
1 0 0 1 50 532 Tm (        fields:) Tj
1 0 0 1 50 518 Tm (          - name: my_email_address) Tj
1 0 0 1 50 504 Tm (            type: email) Tj
1 0 0 1 50 490 Tm (            label: Enter your email address) Tj
1 0 0 1 50 476 Tm (            value:) Tj
1 0 0 1 50 462 Tm (```) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (### Checkbox) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (```yaml) Tj
1 0 0 1 50 378 Tm (skillMetadata:) Tj
1 0 0 1 50 364 Tm (   sections:) Tj
1 0 0 1 50 350 Tm (      - name: Checkbox Field Example) Tj
1 0 0 1 50 336 Tm (        fields:) Tj
1 0 0 1 50 322 Tm (          - name: my_boolean) Tj
1 0 0 1 50 308 Tm (            type: checkbox) Tj
1 0 0 1 50 294 Tm (            label: This is an example checkbox. It creates a Boolean value.) Tj
1 0 0 1 50 280 Tm (            value: "false") Tj
1 0 0 1 50 266 Tm (```) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (### Number) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (```yaml) Tj
1 0 0 1 50 196 Tm (skillMetadata:) Tj
1 0 0 1 50 182 Tm (   sections:) Tj
1 0 0 1 50 168 Tm (      - name: Number Field Example) Tj
1 0 0 1 50 154 Tm (        fields:) Tj
1 0 0 1 50 140 Tm (          - name: my_number) Tj
1 0 0 1 50 126 Tm (            type: number) Tj
1 0 0 1 50 112 Tm (            label: Enter any number) Tj
1 0 0 1 50 98 Tm (            value: 7) Tj
1 0 0 1 50 84 Tm (```) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
533 0 obj
<< /Length 2375 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (### Password) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (```yaml) Tj
1 0 0 1 50 700 Tm (skillMetadata:) Tj
1 0 0 1 50 686 Tm (   sections:) Tj
1 0 0 1 50 672 Tm (      - name: Password Field Example) Tj
1 0 0 1 50 658 Tm (        fields:) Tj
1 0 0 1 50 644 Tm (          - name: my_password) Tj
1 0 0 1 50 630 Tm (            type: password) Tj
1 0 0 1 50 616 Tm (            label: Enter your password) Tj
1 0 0 1 50 602 Tm (            value:) Tj
1 0 0 1 50 588 Tm (```) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (### Select) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (```yaml) Tj
1 0 0 1 50 518 Tm (skillMetadata:) Tj
1 0 0 1 50 504 Tm (   sections:) Tj
1 0 0 1 50 490 Tm (      - name: Select Field Example) Tj
1 0 0 1 50 476 Tm (        fields:) Tj
1 0 0 1 50 462 Tm (          - name: my_selected_option) Tj
1 0 0 1 50 448 Tm (            type: select) Tj
1 0 0 1 50 434 Tm (            label: Select an option) Tj
1 0 0 1 50 420 Tm (            options: Option 1|option_one;Option 2|option_two;Option 3|option_three) Tj
1 0 0 1 50 406 Tm (            value: option_one) Tj
1 0 0 1 50 392 Tm (```) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (# docs/409-skill_api.md) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (# Skill API) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (The Skill API uses the Message Bus to communicate between Skills and wraps the interaction) Tj
1 0 0 1 50 280 Tm ( in simple Python objects making them easy to use.) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (## Making a method available through the Skill API) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (A method can be tagged with the `skill_api_method` decorator. This will handle all the ) Tj
1 0 0 1 50 210 Tm (basics of making the method available to other Skills over the Message Bus.) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (```python) Tj
1 0 0 1 50 168 Tm (    @skill_api_method) Tj
1 0 0 1 50 154 Tm (    def my_exported_method\(self, my_arg, my_other_arg\):) Tj
1 0 0 1 50 140 Tm (    """My skill api method documentation) Tj
1 0 0 1 50 126 Tm (    """) Tj
1 0 0 1 50 112 Tm (```) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (The decorator will generate everything needed for accessing the method over the Message ) Tj
1 0 0 1 50 70 Tm (Bus and extract the associated docstring.) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
534 0 obj
<< /Length 2789 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (### Limitations) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (The Skill API works over the Message Bus. This requires that the return values are json ) Tj
1 0 0 1 50 700 Tm (serializable. All common Python builtin types \\\(such as List, String, None, etc.\\\) work ) Tj
1 0 0 1 50 686 Tm (well, however custom classes are not currently supported.) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (### Example) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (```python) Tj
1 0 0 1 50 616 Tm (from ovos_workshop.skills import OVOSSkill) Tj
1 0 0 1 50 602 Tm (from ovos_workshop.decorators import intent_handler, skill_api_method) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (class RobberSkill\(OVOSSkill\):) Tj
1 0 0 1 50 560 Tm (    @skill_api_method) Tj
1 0 0 1 50 546 Tm (    def robber_lang\(self, sentence\):) Tj
1 0 0 1 50 532 Tm (        """Encode a sentence to "Rvarsprket".) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (        Each consonant gets converted to consonant + "o" + consonant,) Tj
1 0 0 1 50 490 Tm (        vowels are left as is.) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (        Returns: \(str\) sentence in the robber language.) Tj
1 0 0 1 50 448 Tm (        """) Tj
1 0 0 1 50 434 Tm (        wovels = "aeiouy") Tj
1 0 0 1 50 420 Tm (        tokens = []) Tj
1 0 0 1 50 406 Tm (        for char in sentence.lower\(\) and char.isalpha\(\):) Tj
1 0 0 1 50 392 Tm (            if char not in wovels:) Tj
1 0 0 1 50 378 Tm (                tokens.append\(char + 'o' + char\)) Tj
1 0 0 1 50 364 Tm (            else:) Tj
1 0 0 1 50 350 Tm (                tokens.append\(char\)) Tj
1 0 0 1 50 336 Tm (        return ' '.join\(tokens\)) Tj
1 0 0 1 50 322 Tm (```) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (## Using another Skill's API) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (If you want to make use of exported functionality from another Skill, you must fetch that ) Tj
1 0 0 1 50 252 Tm (Skill's `SkillApi`. This will give you a small class with the target Skill's exported ) Tj
1 0 0 1 50 238 Tm (methods. These methods are nothing special and can be called like any other class's ) Tj
1 0 0 1 50 224 Tm (methods.) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (To access the `robber_lang\(\)` method we created above, we could write:) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (```python) Tj
1 0 0 1 50 154 Tm (from ovos_workshop.skills.api import SkillApi) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (class NewRobberSkill\(OVOSSkill\):) Tj
1 0 0 1 50 112 Tm (    def initialize\(self\):) Tj
1 0 0 1 50 98 Tm (        self.robber = SkillApi.get\('robber-skill.forslund'\)) Tj
1 0 0 1 50 84 Tm (        self.speak\(self.robber.robber_lang\('hello world'\)\)) Tj
1 0 0 1 50 70 Tm (```) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
535 0 obj
<< /Length 2795 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (When the `NewRobberSkill` is initialized, it will assign the API from the Skill `robber-) Tj
1 0 0 1 50 728 Tm (skill.forslund` to `self.robber`. We then run the exported method `robber_lang\(\)` passing ) Tj
1 0 0 1 50 714 Tm (the argument `'hello world'`.) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (Our `NewRobberSkill` will therefore speak something like "hoh e lol lol o wow o ror lol ) Tj
1 0 0 1 50 672 Tm (dod".) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (# docs/410-skill_runtime_requirements.md) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (# Runtime Requirements in OVOS) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (OVOS \(Open Voice OS\) introduces advanced runtime management to ensure skills are only ) Tj
1 0 0 1 50 560 Tm (loaded and active when the system is ready. This improves performance, avoids premature ) Tj
1 0 0 1 50 546 Tm (skill activation, and enables greater flexibility across different system setups \(offline,) Tj
1 0 0 1 50 532 Tm ( headless, GUI-enabled, etc.\).) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (This guide covers how to control when OVOS declares readiness, how dynamic skill loading ) Tj
1 0 0 1 50 490 Tm (works, and how developers can use `RuntimeRequirements` to specify resource dependencies ) Tj
1 0 0 1 50 476 Tm (for their skills.) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (---) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (## Usage Guide) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (### Step 1: Customize `ready_settings` \(in your configuration\)) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (You can specify what the system must wait for before emitting the `mycroft.ready` message:) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (```json) Tj
1 0 0 1 50 322 Tm ({) Tj
1 0 0 1 50 308 Tm (  "ready_settings": [) Tj
1 0 0 1 50 294 Tm (    "skills",) Tj
1 0 0 1 50 280 Tm (    "network_skills",) Tj
1 0 0 1 50 266 Tm (    "internet_skills",) Tj
1 0 0 1 50 252 Tm (    "audio",) Tj
1 0 0 1 50 238 Tm (    "speech") Tj
1 0 0 1 50 224 Tm (  ]) Tj
1 0 0 1 50 210 Tm (}) Tj
1 0 0 1 50 196 Tm (```) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (In this example, the `ready_settings` are configured to wait for network and internet ) Tj
1 0 0 1 50 154 Tm (connectivity before emitting) Tj
1 0 0 1 50 140 Tm (the `'mycroft.ready'` message. Each setup can customize these settings based on their ) Tj
1 0 0 1 50 126 Tm (needs, a offline install won't) Tj
1 0 0 1 50 112 Tm (want internet skills, a server wont want a audio stack etc.) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (### Step 2: Define `RuntimeRequirements` in your skill) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (Use the `runtime_requirements` class property to control when and how your skill should ) Tj
ET
endstream

endobj
536 0 obj
<< /Length 2834 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (load based on system resources like internet, network, or GUI.) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (Example:) Tj
1 0 0 1 50 700 Tm (```python) Tj
1 0 0 1 50 686 Tm (from ovos_utils import classproperty) Tj
1 0 0 1 50 672 Tm (from ovos_workshop.skills import OVOSSkill) Tj
1 0 0 1 50 658 Tm (from ovos_utils.process_utils import RuntimeRequirements) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (class MySkill\(OVOSSkill\):) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (    @classproperty) Tj
1 0 0 1 50 588 Tm (    def runtime_requirements\(self\):) Tj
1 0 0 1 50 574 Tm (        return RuntimeRequirements\() Tj
1 0 0 1 50 560 Tm (            requires_internet=True) Tj
1 0 0 1 50 546 Tm (        \)) Tj
1 0 0 1 50 532 Tm (```) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (---) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (## Technical Explanation) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (### `ready_settings`) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (The `ready_settings` config controls when OVOS emits `mycroft.ready`, which signals that ) Tj
1 0 0 1 50 406 Tm (the system is ready for use. Each entry in this list waits for a different component:) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (- **"skills"**  Waits for offline skills to load.) Tj
1 0 0 1 50 364 Tm (- **"network_skills"**  Waits for the system to detect a network connection ) Tj
1 0 0 1 50 350 Tm (\(`mycroft.network.connected`\).) Tj
1 0 0 1 50 336 Tm (- **"internet_skills"**  Waits for an internet connection \(`mycroft.internet.connected`\).) Tj
1 0 0 1 50 322 Tm (- **"setup"**  Waits for an external setup process \(e.g., pairing or configuration\).) Tj
1 0 0 1 50 308 Tm (- **"audio"**  Waits for the audio playback and capture systems to be initialized.) Tj
1 0 0 1 50 294 Tm (- **"speech"**  Waits for the STT \(speech-to-text\) engine to be ready.) Tj
1 0 0 1 50 280 Tm (- **{skill_id}** - Waits for a specific skill to be available) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (> ?? **Note**: By default, OVOS only waits for offline skills. Unlike Mycroft-core, OVOS ) Tj
1 0 0 1 50 238 Tm (supports dynamic loading, so timing can impact skills that depend on the `mycroft.ready` ) Tj
1 0 0 1 50 224 Tm (message.) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (---) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (## Dynamic Loading and Unloading) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (Introduced in `ovos-core 0.0.8`, dynamic skill management improves system performance and ) Tj
1 0 0 1 50 126 Tm (reliability by:) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (- **Only loading skills when their requirements are met.**) Tj
1 0 0 1 50 84 Tm (- **Unloading skills when they become unusable due to lost resources.**) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (### Benefits:) Tj
ET
endstream

endobj
537 0 obj
<< /Length 3204 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (- Reduces memory and CPU usage.) Tj
1 0 0 1 50 728 Tm (- Avoids unnecessary skill activations.) Tj
1 0 0 1 50 714 Tm (- Simplifies skill logic \(e.g., no need to check for connectivity manually\).) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (Skills are loaded only when their specific requirements are met. This optimization ) Tj
1 0 0 1 50 672 Tm (prevents unnecessary loading, conserving system resources and ensuring a more efficient ) Tj
1 0 0 1 50 658 Tm (skill environment.) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (**Reducing Unintended Activations**) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (Dynamic unloading of skills based on specific conditions significantly reduces the chance ) Tj
1 0 0 1 50 588 Tm (of unintentional activations. In scenarios where required conditions are not met, skills ) Tj
1 0 0 1 50 574 Tm (are gracefully unloaded, enhancing the user experience by avoiding unintended skill ) Tj
1 0 0 1 50 560 Tm (triggers.) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (This approach aligns with resource-conscious design, providing a more responsive and ) Tj
1 0 0 1 50 518 Tm (reliable voice assistant environment. Developers can focus on skill functionality, knowing) Tj
1 0 0 1 50 504 Tm ( that OVOS efficiently manages skill loading and unloading based on runtime requirements.) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (---) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (## RuntimeRequirements \(`@classproperty`\)) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (Also introduced in `ovos-core 0.0.8`, the `RuntimeRequirements` class property allows ) Tj
1 0 0 1 50 406 Tm (skill developers to declare when a skill should be loaded or unloaded based on runtime ) Tj
1 0 0 1 50 392 Tm (conditions.) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (> ?? Replaces the deprecated `"priority_skills"` config.) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (### Key fields:) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (| Field                 | Description |) Tj
1 0 0 1 50 294 Tm (|----------------------|-------------|) Tj
1 0 0 1 50 280 Tm (| `internet_before_load` | Wait for internet before loading |) Tj
1 0 0 1 50 266 Tm (| `requires_internet`     | Unload if internet is lost \(unless fallback enabled\) |) Tj
1 0 0 1 50 252 Tm (| `no_internet_fallback` | If true, do **not** unload when internet is lost |) Tj
1 0 0 1 50 238 Tm (| `network_before_load`  | Wait for network before loading |) Tj
1 0 0 1 50 224 Tm (| `requires_network`     | Unload if network is lost \(unless fallback enabled\) |) Tj
1 0 0 1 50 210 Tm (| `gui_before_load`      | Wait for GUI before loading |) Tj
1 0 0 1 50 196 Tm (| `requires_gui`         | Unload if GUI is lost \(unless fallback enabled\) |) Tj
1 0 0 1 50 182 Tm (| `no_gui_fallback`      | If true, do **not** unload when GUI is lost |) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (> ? Uses `@classproperty` so the system can evaluate the requirements without loading the ) Tj
1 0 0 1 50 140 Tm (skill.) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (---) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (## Examples) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (### 1. Fully Offline Skill) Tj
ET
endstream

endobj
538 0 obj
<< /Length 2867 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (In this example, a fully offline skill is defined. The skill does not require internet or ) Tj
1 0 0 1 50 714 Tm (network connectivity during) Tj
1 0 0 1 50 700 Tm (loading or runtime. If the network or internet is unavailable, the skill can still ) Tj
1 0 0 1 50 686 Tm (operate.) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (Defining this will ensure your skill loads as soon as possible; otherwise, the ) Tj
1 0 0 1 50 644 Tm (`SkillManager` will wait for internet before loading the skill.) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (```python) Tj
1 0 0 1 50 602 Tm (from ovos_utils import classproperty) Tj
1 0 0 1 50 588 Tm (from ovos_workshop.skills import OVOSSkill) Tj
1 0 0 1 50 574 Tm (from ovos_utils.process_utils import RuntimeRequirements) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (class MyOfflineSkill\(OVOSSkill\):) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (    @classproperty) Tj
1 0 0 1 50 490 Tm (    def runtime_requirements\(self\):) Tj
1 0 0 1 50 476 Tm (        return RuntimeRequirements\(internet_before_load=False,) Tj
1 0 0 1 50 462 Tm (                                   network_before_load=False,) Tj
1 0 0 1 50 448 Tm (                                   requires_internet=False,) Tj
1 0 0 1 50 434 Tm (                                   requires_network=False,) Tj
1 0 0 1 50 420 Tm (                                   no_internet_fallback=True,) Tj
1 0 0 1 50 406 Tm (                                   no_network_fallback=True\)) Tj
1 0 0 1 50 392 Tm (```) Tj
1 0 0 1 50 378 Tm (Loads immediately, runs without internet or network.) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (---) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (### 2. Internet-Dependent Skill \(with fallback\)) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (In this example, an online search skill with a local cache is defined. The skill requires ) Tj
1 0 0 1 50 280 Tm (internet connectivity during) Tj
1 0 0 1 50 266 Tm (both loading and runtime. If the internet is not available, the skill won't load. Once ) Tj
1 0 0 1 50 252 Tm (loaded, the skill continues to) Tj
1 0 0 1 50 238 Tm (require internet connectivity.) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (However, our skill keeps a cache of previous results; therefore, it declares it can handle) Tj
1 0 0 1 50 196 Tm ( internet outages and will not) Tj
1 0 0 1 50 182 Tm (be unloaded when the internet goes down.) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (```python) Tj
1 0 0 1 50 140 Tm (from ovos_utils import classproperty) Tj
1 0 0 1 50 126 Tm (from ovos_workshop.skills import OVOSSkill) Tj
1 0 0 1 50 112 Tm (from ovos_utils.process_utils import RuntimeRequirements) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (class MyInternetSkill\(OVOSSkill\):) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
539 0 obj
<< /Length 2918 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (    @classproperty) Tj
1 0 0 1 50 728 Tm (    def runtime_requirements\(self\):) Tj
1 0 0 1 50 714 Tm (        # our skill can answer cached results when the internet goes down) Tj
1 0 0 1 50 700 Tm (        return RuntimeRequirements\() Tj
1 0 0 1 50 686 Tm (            internet_before_load=True,  # only load once we have internet) Tj
1 0 0 1 50 672 Tm (            requires_internet=True,  # indicate we need internet to work) Tj
1 0 0 1 50 658 Tm (            no_internet_fallback=True  # do NOT unload if internet goes down) Tj
1 0 0 1 50 644 Tm (        \)) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (    def initialize\(self\):) Tj
1 0 0 1 50 602 Tm (        ...  # do something that requires internet connectivity) Tj
1 0 0 1 50 588 Tm (```) Tj
1 0 0 1 50 574 Tm (Loads only when internet is available. Stays loaded even if internet is lost, using a ) Tj
1 0 0 1 50 560 Tm (cached fallback.) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (---) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (### 3. LAN-Controlled IOT Skill) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (Consider a skill that should only load once we have a network connection.) Tj
1 0 0 1 50 462 Tm (By specifying that requirement, we can ensure that the skill is only loaded once the ) Tj
1 0 0 1 50 448 Tm (requirements are met, and it is) Tj
1 0 0 1 50 434 Tm (safe to utilize network resources on initialization.) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (In this example, an IOT skill controlling devices via LAN is defined. The skill requires ) Tj
1 0 0 1 50 392 Tm (network connectivity during) Tj
1 0 0 1 50 378 Tm (loading, and if the network is not available, it won't load.) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (Once loaded, the skill continues to require network connectivity and will unload if the ) Tj
1 0 0 1 50 336 Tm (network is lost.) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (```python) Tj
1 0 0 1 50 294 Tm (from ovos_utils import classproperty) Tj
1 0 0 1 50 280 Tm (from ovos_workshop.skills import OVOSSkill) Tj
1 0 0 1 50 266 Tm (from ovos_utils.process_utils import RuntimeRequirements) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (class MyIOTSkill\(OVOSSkill\):) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (    @classproperty) Tj
1 0 0 1 50 182 Tm (    def runtime_requirements\(self\):) Tj
1 0 0 1 50 168 Tm (        return RuntimeRequirements\() Tj
1 0 0 1 50 154 Tm (            network_before_load=True,  # only load once network available) Tj
1 0 0 1 50 140 Tm (            requires_network=True,  # we need network to work) Tj
1 0 0 1 50 126 Tm (            no_network_fallback=False  # unload if network goes down) Tj
1 0 0 1 50 112 Tm (        \)) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (    def initialize\(self\):) Tj
1 0 0 1 50 70 Tm (        ...  # do something that needs LAN connectivity) Tj
1 0 0 1 50 56 Tm (```) Tj
ET
endstream

endobj
540 0 obj
<< /Length 3017 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (Loads when the local network is connected. Unloads if the network is lost.) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (---) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (### 4. GUI + Internet Skill \(Unloads without GUI\)) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (Consider a skill with both graphical user interface \(GUI\) and internet dependencies is ) Tj
1 0 0 1 50 644 Tm (defined.) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (The skill requires both GUI availability and internet connectivity during loading.) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (If either the GUI or the internet is not available, the skill won't load. Once loaded, the) Tj
1 0 0 1 50 574 Tm ( skill continues to require) Tj
1 0 0 1 50 560 Tm (both GUI availability, but internet connectivity is optional.) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (If the user asks "show me the picture of the day" and we have both internet and a GUI, our) Tj
1 0 0 1 50 518 Tm ( skill will match the intent.) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (If we do not have internet but have a GUI, the skill will still operate, using a cached ) Tj
1 0 0 1 50 476 Tm (picture. If no GUI is available then the skill will unload regardless of internet status) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (```python) Tj
1 0 0 1 50 434 Tm (from ovos_utils import classproperty) Tj
1 0 0 1 50 420 Tm (from ovos_workshop.skills import OVOSSkill) Tj
1 0 0 1 50 406 Tm (from ovos_utils.process_utils import RuntimeRequirements) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (class MyGUIAndInternetSkill\(OVOSSkill\):) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (    @classproperty) Tj
1 0 0 1 50 322 Tm (    def runtime_requirements\(self\):) Tj
1 0 0 1 50 308 Tm (        return RuntimeRequirements\() Tj
1 0 0 1 50 294 Tm (            gui_before_load=True,  # only load if GUI is available) Tj
1 0 0 1 50 280 Tm (            requires_gui=True,  # continue requiring GUI once loaded) Tj
1 0 0 1 50 266 Tm (            internet_before_load=True,  # only load if internet is available) Tj
1 0 0 1 50 252 Tm (            requires_internet=True,  # continue requiring internet once loaded) Tj
1 0 0 1 50 238 Tm (            no_gui_fallback=False,  # unload if GUI becomes unavailable) Tj
1 0 0 1 50 224 Tm (            no_internet_fallback=True  # do NOT unload if internet becomes unavailable, ) Tj
1 0 0 1 50 210 Tm (use cached picture) Tj
1 0 0 1 50 196 Tm (        \)) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (    def initialize\(self\):) Tj
1 0 0 1 50 154 Tm (        ...  # do something that requires both GUI and internet connectivity) Tj
1 0 0 1 50 140 Tm (```) Tj
1 0 0 1 50 126 Tm (Requires GUI and internet to load. Will stay loaded if internet is lost \(e.g., to show a ) Tj
1 0 0 1 50 112 Tm (cached picture\), but unloads if GUI becomes unavailable.) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (---) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (## Tips and Caveats) Tj
ET
endstream

endobj
541 0 obj
<< /Length 2839 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (- If `runtime_requirements` is not defined, OVOS assumes **internet is required** but ) Tj
1 0 0 1 50 714 Tm (**GUI is optional**.) Tj
1 0 0 1 50 700 Tm (- You can combine different requirements to handle a wide range of usage patterns \(e.g., ) Tj
1 0 0 1 50 686 Tm (headless servers, embedded devices, smart displays\).) Tj
1 0 0 1 50 672 Tm (- Consider defining graceful fallbacks to avoid unnecessary unloading.) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (# docs/411-skill_json.md) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (# Skill Metadata File) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (The `skill.json` file is an optional but powerful way to describe your Open Voice OS ) Tj
1 0 0 1 50 560 Tm (\(OVOS\) skill. It provides metadata used for installation, discovery, and display in GUIs ) Tj
1 0 0 1 50 546 Tm (or app stores.) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (## Purpose) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (- Helps OVOS identify and install your skill.) Tj
1 0 0 1 50 476 Tm (- Enhances GUI experiences with visuals and usage examples.) Tj
1 0 0 1 50 462 Tm (- Lays the foundation for future help dialogs and skill documentation features.) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (---) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (## Usage Guide) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (1. Create a `skill.json` file inside your skill's `locale/<language-code>` folder.) Tj
1 0 0 1 50 364 Tm (2. Fill in the metadata fields as needed \(see below\).) Tj
1 0 0 1 50 350 Tm (3. If your skill supports multiple languages, include a separate `skill.json` in each ) Tj
1 0 0 1 50 336 Tm (corresponding `locale` subfolder.) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (> ?? **Avoid using old `skill.json` formats** found in some legacy skills where the file ) Tj
1 0 0 1 50 294 Tm (exists at the root level. These are deprecated.) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (---) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (## Example `skill.json`) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (```json) Tj
1 0 0 1 50 196 Tm ({) Tj
1 0 0 1 50 182 Tm (  "skill_id": "skill-xxx.exampleauthor",) Tj
1 0 0 1 50 168 Tm (  "source": "https://github.com/ExampleAuthor/skill-xxx",) Tj
1 0 0 1 50 154 Tm (  "package_name": "ovos-skill-xxx",) Tj
1 0 0 1 50 140 Tm (  "pip_spec": "git+https://github.com/ExampleAuthor/skill-xxx@main",) Tj
1 0 0 1 50 126 Tm (  "license": "Apache-2.0",) Tj
1 0 0 1 50 112 Tm (  "author": "ExampleAuthor",) Tj
1 0 0 1 50 98 Tm (  "extra_plugins": {) Tj
1 0 0 1 50 84 Tm (    "core": ["ovos-utterance-transformer-xxx"],) Tj
1 0 0 1 50 70 Tm (    "PHAL": ["ovos-PHAL-xxx"],) Tj
1 0 0 1 50 56 Tm (    "listener": ["ovos-audio-transformer-xxx", "ovos-ww-plugin-xxx", "ovos-vad-plugin-) Tj
ET
endstream

endobj
542 0 obj
<< /Length 3254 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (xxx", "ovos-stt-plugin-xxx"],) Tj
1 0 0 1 50 728 Tm (    "audio": ["ovos-dialog-transformer-xxx", "ovos-tts-transformer-xxx", "ovos-tts-plugin-) Tj
1 0 0 1 50 714 Tm (xxx"],) Tj
1 0 0 1 50 700 Tm (    "media": ["ovos-ocp-xxx", "ovos-media-xxx"],) Tj
1 0 0 1 50 686 Tm (    "gui": ["ovos-gui-extension-xxx"]) Tj
1 0 0 1 50 672 Tm (  },) Tj
1 0 0 1 50 658 Tm (  "icon": "http://example.com/icon.svg",) Tj
1 0 0 1 50 644 Tm (  "images": ["http://example.com/logo.png", "http://example.com/screenshot.png"],) Tj
1 0 0 1 50 630 Tm (  "name": "My Skill",) Tj
1 0 0 1 50 616 Tm (  "description": "Does awesome skill stuff!",) Tj
1 0 0 1 50 602 Tm (  "examples": [) Tj
1 0 0 1 50 588 Tm (    "do the thing",) Tj
1 0 0 1 50 574 Tm (    "say this to use the skill") Tj
1 0 0 1 50 560 Tm (  ],) Tj
1 0 0 1 50 546 Tm (  "tags": ["productivity", "entertainment", "aliens"]) Tj
1 0 0 1 50 532 Tm (}) Tj
1 0 0 1 50 518 Tm (```) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (---) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (## Field Reference) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (| Field            | Type     | Required | Description |) Tj
1 0 0 1 50 420 Tm (|------------------|----------|----------|-------------|) Tj
1 0 0 1 50 406 Tm (| `skill_id`       | string   | ? Yes    | Unique ID, typically `repo.author` style ) Tj
1 0 0 1 50 392 Tm (\(lowercase\). |) Tj
1 0 0 1 50 378 Tm (| `source`         | string   | ? Optional | Git URL to install from source. |) Tj
1 0 0 1 50 364 Tm (| `package_name`   | string   | ? Yes    | Python package name \(e.g., for PyPI installs\). ) Tj
1 0 0 1 50 350 Tm (|) Tj
1 0 0 1 50 336 Tm (| `pip_spec`       | string   | ? Optional | [PEP 508]\(https://peps.python.org/pep-0508/\) ) Tj
1 0 0 1 50 322 Tm (install spec. |) Tj
1 0 0 1 50 308 Tm (| `license`        | string   | ? Optional | License ID \(see [SPDX ) Tj
1 0 0 1 50 294 Tm (list]\(https://spdx.org/licenses/\)\). |) Tj
1 0 0 1 50 280 Tm (| `author`         | string   | ? Optional | Display name of the skill author. |) Tj
1 0 0 1 50 266 Tm (| `extra_plugins`  | object   | ? Optional | Dependencies to be installed in other OVOS ) Tj
1 0 0 1 50 252 Tm (services \(not this skill\). |) Tj
1 0 0 1 50 238 Tm (| `icon`           | string   | ? Optional | URL to a skill icon \(SVG recommended\). |) Tj
1 0 0 1 50 224 Tm (| `images`         | list     | ? Optional | Screenshots or promotional images. |) Tj
1 0 0 1 50 210 Tm (| `name`           | string   | ? Optional | User-facing skill name. |) Tj
1 0 0 1 50 196 Tm (| `description`    | string   | ? Optional | Short, one-line summary of the skill. |) Tj
1 0 0 1 50 182 Tm (| `examples`       | list     | ? Optional | Example utterances your skill handles. |) Tj
1 0 0 1 50 168 Tm (| `tags`           | list     | ? Optional | Keywords for searchability. |) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (---) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (## Language Support) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (To support multiple languages, place a `skill.json` file in each corresponding ) Tj
1 0 0 1 50 70 Tm (`locale/<lang>` folder. Fields like `name`, `description`, `examples`, and `tags` can be ) Tj
1 0 0 1 50 56 Tm (translated for that locale.) Tj
ET
endstream

endobj
543 0 obj
<< /Length 2769 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (---) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (## Installation Behavior) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (When installing a skill, OVOS will try the following methods in order:) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (1. `pip_spec` \(if present\)) Tj
1 0 0 1 50 630 Tm (2. `package_name` \(from PyPI\)) Tj
1 0 0 1 50 616 Tm (3. `source` \(from Git\)) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (At least **one valid installation path is required**.) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (---) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (## Tips & Caveats) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (- This metadata format is **experimental** and may evolvecheck for updates regularly.) Tj
1 0 0 1 50 490 Tm (- `extra_plugins` allows for declaring companion plugins your skill may require, but that ) Tj
1 0 0 1 50 476 Tm (aren't direct Python dependencies.) Tj
1 0 0 1 50 462 Tm (- The [Skill store]\(https://store.openvoiceos.org\) and GUI tools like `ovos-shell` use ) Tj
1 0 0 1 50 448 Tm (`icon`, `images`, `examples`, and `description` to present the skill visually.) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (---) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (## See Also) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (- [PEP 508  Dependency specification]\(https://peps.python.org/pep-0508/\)) Tj
1 0 0 1 50 350 Tm (- [SPDX License List]\(https://spdx.org/licenses/\)) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (# docs/420-ssml.md) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (# SSMLBuilder ) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (## What is SSML?) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (Speech Synthesis Markup Language \(SSML\) is a markup language used to enhance synthesized ) Tj
1 0 0 1 50 210 Tm (speech output. It provides developers with a way to control various aspects of speech ) Tj
1 0 0 1 50 196 Tm (synthesis, such as pronunciation, intonation, volume, and speed, by using predefined tags ) Tj
1 0 0 1 50 182 Tm (and attributes.) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (SSML allows developers to create more natural and expressive speech output, making ) Tj
1 0 0 1 50 140 Tm (interactions with voice-based applications more engaging and user-friendly.) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (These use cases demonstrate how SSML can be applied in various contexts to improve the ) Tj
1 0 0 1 50 98 Tm (quality, expressiveness, and accessibility of synthesized speech output, ultimately ) Tj
1 0 0 1 50 84 Tm (enhancing the overall user experience.) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (1. **Narration with Emphasis**: In storytelling applications or audiobooks, developers can) Tj
ET
endstream

endobj
544 0 obj
<< /Length 3355 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm ( use SSML to emphasize specific words or phrases to convey emotions or highlight key ) Tj
1 0 0 1 50 728 Tm (points in the narrative. For example, during a suspenseful moment in a story, the ) Tj
1 0 0 1 50 714 Tm (narrator's voice could be slowed down for dramatic effect using SSML.) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (2. **Interactive Voice Responses**: In voice-based applications such as virtual assistants) Tj
1 0 0 1 50 672 Tm ( or customer service bots, SSML can be used to provide more natural and engaging ) Tj
1 0 0 1 50 658 Tm (interactions with users. For instance, developers can use SSML to insert pauses between ) Tj
1 0 0 1 50 644 Tm (sentences to mimic natural speech patterns or adjust the pitch and volume of the voice to ) Tj
1 0 0 1 50 630 Tm (convey empathy or urgency.) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (3. **Educational Content**: SSML can be valuable in educational applications where ) Tj
1 0 0 1 50 588 Tm (synthesized speech is used to deliver instructional content or quizzes. Developers can use) Tj
1 0 0 1 50 574 Tm ( SSML to modify the speaking rate to accommodate different learning paces or employ ) Tj
1 0 0 1 50 560 Tm (phonetic pronunciation tags to ensure correct pronunciation of specialized terms or ) Tj
1 0 0 1 50 546 Tm (foreign words.) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (4. **Accessibility Features**: For applications designed to assist users with visual ) Tj
1 0 0 1 50 504 Tm (impairments or reading difficulties, SSML can play a crucial role in enhancing ) Tj
1 0 0 1 50 490 Tm (accessibility. Developers can use SSML to provide auditory cues, such as tone changes or ) Tj
1 0 0 1 50 476 Tm (speech emphasis, to indicate important information or user interface elements.) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (## SSMLBuilder) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (The `SSMLBuilder` class simplifies the creation of SSML strings by providing intuitive ) Tj
1 0 0 1 50 392 Tm (methods to control various aspects of speech synthesis. It offers a range of methods for ) Tj
1 0 0 1 50 378 Tm (manipulating text, adjusting timing and prosody, specifying voice and phoneme ) Tj
1 0 0 1 50 364 Tm (characteristics, and more.) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (```python) Tj
1 0 0 1 50 322 Tm (from ovos_utils.ssml import SSMLBuilder) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (class MySkill:) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (    def handle_intent\(self, message\):) Tj
1 0 0 1 50 252 Tm (        # Create an instance of SSMLBuilder) Tj
1 0 0 1 50 238 Tm (        ssml_builder = SSMLBuilder\(\)) Tj
1 0 0 1 50 224 Tm (        ) Tj
1 0 0 1 50 210 Tm (        # Generate SSML) Tj
1 0 0 1 50 196 Tm (        ssml_text = ssml_builder.sentence\("Hello, world!"\).pause\(500, "ms"\).say_slow\("How ) Tj
1 0 0 1 50 182 Tm (are you today?"\).build\(\)) Tj
1 0 0 1 50 168 Tm (        ) Tj
1 0 0 1 50 154 Tm (        # Output:) Tj
1 0 0 1 50 140 Tm (        # '<speak>\\n<s>Hello, world!</s> <break time=500ms/><prosody rate='0.4'>How are ) Tj
1 0 0 1 50 126 Tm (you today?</prosody>\\n</speak>') Tj
1 0 0 1 50 112 Tm (        ) Tj
1 0 0 1 50 98 Tm (        # Speak the SSML text) Tj
1 0 0 1 50 84 Tm (        self.speak\(ssml_text\)) Tj
1 0 0 1 50 70 Tm (```) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
545 0 obj
<< /Length 3635 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (### Text Manipulation) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (1. `sub\(alias, word\)`: Replaces a word with a specified alias.) Tj
1 0 0 1 50 700 Tm (2. `emphasis\(level, word\)`: Emphasizes a word with a specified level.) Tj
1 0 0 1 50 686 Tm (3. `parts_of_speech\(word, role\)`: Specifies the usage or role of a word.) Tj
1 0 0 1 50 672 Tm (4. `pause_by_strength\(strength\)`: Inserts a pause with a specified strength.) Tj
1 0 0 1 50 658 Tm (5. `sentence\(text\)`: Wraps text with `<s>` tags to denote a sentence.) Tj
1 0 0 1 50 644 Tm (6. `say_emphasis\(text\)`: Emphasizes the text strongly.) Tj
1 0 0 1 50 630 Tm (7. `say_strong\(text\)`: Modifies the vocal-tract length to increase speech intensity.) Tj
1 0 0 1 50 616 Tm (8. `say_weak\(text\)`: Modifies the vocal-tract length to decrease speech intensity.) Tj
1 0 0 1 50 602 Tm (9. `say_softly\(text\)`: Modifies the phonation to produce softer speech.) Tj
1 0 0 1 50 588 Tm (10. `say_auto_breaths\(text\)`: Adds automatic breaths to the speech.) Tj
1 0 0 1 50 574 Tm (11. `paragraph\(text\)`: Wraps text with `<p>` tags to denote a paragraph.) Tj
1 0 0 1 50 560 Tm (12. `audio\(audio_file, text\)`: Embeds audio with specified text.) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (### Timing and Prosody) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (1. `pause\(time, unit\)`: Inserts a pause for a specified duration.) Tj
1 0 0 1 50 490 Tm (2. `prosody\(attribute, text\)`: Modifies prosodic attributes of the text such as pitch, ) Tj
1 0 0 1 50 476 Tm (rate, or volume.) Tj
1 0 0 1 50 462 Tm (3. `pitch\(pitch, text\)`: Changes the pitch of the text.) Tj
1 0 0 1 50 448 Tm (4. `volume\(volume, text\)`: Modifies the volume of the text.) Tj
1 0 0 1 50 434 Tm (5. `rate\(rate, text\)`: Adjusts the speaking rate of the text.) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (### Voice and Phoneme) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (1. `say\(text\)`: Adds normal speed text to SSML.) Tj
1 0 0 1 50 364 Tm (2. `say_loud\(text\)`: Increases the volume of the text.) Tj
1 0 0 1 50 350 Tm (3. `say_slow\(text\)`: Slows down the speaking rate of the text.) Tj
1 0 0 1 50 336 Tm (4. `say_fast\(text\)`: Speeds up the speaking rate of the text.) Tj
1 0 0 1 50 322 Tm (5. `say_low_pitch\(text\)`: Lowers the pitch of the text.) Tj
1 0 0 1 50 308 Tm (6. `say_high_pitch\(text\)`: Raises the pitch of the text.) Tj
1 0 0 1 50 294 Tm (7. `say_whispered\(text\)`: Converts text into whispered speech.) Tj
1 0 0 1 50 280 Tm (8. `phoneme\(ph, text\)`: Specifies the phonetic pronunciation of the text.) Tj
1 0 0 1 50 266 Tm (9. `voice\(voice, text\)`: Specifies the voice to use for the text.) Tj
1 0 0 1 50 252 Tm (10. `whisper\(text\)`: Converts text into whispered speech.) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (### Build and Utility) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (1. `build\(\)`: Constructs the final SSML string.) Tj
1 0 0 1 50 182 Tm (2. `remove_ssml\(text\)`: Removes SSML tags from the given text.) Tj
1 0 0 1 50 168 Tm (3. `extract_ssml_tags\(text\)`: Extracts SSML tags from the given text.) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (## SSML Support in TTS Plugins) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (OVOS TTS plugins implement support for SSML, ensuring that SSML content is processed ) Tj
1 0 0 1 50 98 Tm (accurately during speech synthesis. Let's take a closer look at how SSML handling works ) Tj
1 0 0 1 50 84 Tm (within the `TTS` abstract class:) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (- **SSML Validation**: The `validate_ssml\(\)` method checks if the TTS engine supports ) Tj
ET
endstream

endobj
546 0 obj
<< /Length 2732 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (SSML. Unsupported or invalid SSML tags are removed from the input text to ensure proper ) Tj
1 0 0 1 50 728 Tm (processing.) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (- **SSML Tag Handling**: Supported SSML tags are processed by the TTS engine during ) Tj
1 0 0 1 50 686 Tm (synthesis. Unsupported tags are removed, while supported tags are modified or retained ) Tj
1 0 0 1 50 672 Tm (based on the implementation of the `modify_tag\(\)` method.) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (```python) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (# default handling of ssml, advanced plugins may override this method) Tj
1 0 0 1 50 602 Tm (def modify_tag\(self, tag\):) Tj
1 0 0 1 50 588 Tm (    """Override to modify each supported ssml tag.) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (    Arguments:) Tj
1 0 0 1 50 546 Tm (        tag \(str\): SSML tag to check and possibly transform.) Tj
1 0 0 1 50 532 Tm (    """) Tj
1 0 0 1 50 518 Tm (    return tag) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (def validate_ssml\(self, utterance\):) Tj
1 0 0 1 50 476 Tm (    """Check if engine supports ssml, if not remove all tags.) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (    Remove unsupported / invalid tags) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (    Arguments:) Tj
1 0 0 1 50 406 Tm (        utterance \(str\): Sentence to validate) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (    Returns:) Tj
1 0 0 1 50 364 Tm (        str: validated_sentence) Tj
1 0 0 1 50 350 Tm (    """) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (    # Validate speak tags) Tj
1 0 0 1 50 308 Tm (    if not self.ssml_tags or "speak" not in self.ssml_tags:) Tj
1 0 0 1 50 294 Tm (        self.format_speak_tags\(utterance, False\)) Tj
1 0 0 1 50 280 Tm (    elif self.ssml_tags and "speak" in self.ssml_tags:) Tj
1 0 0 1 50 266 Tm (        self.format_speak_tags\(utterance\)) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (    # if ssml is not supported by TTS engine remove all tags) Tj
1 0 0 1 50 224 Tm (    if not self.ssml_tags:) Tj
1 0 0 1 50 210 Tm (        return self.remove_ssml\(utterance\)) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (    # find ssml tags in string) Tj
1 0 0 1 50 168 Tm (    tags = SSML_TAGS.findall\(utterance\)) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (    for tag in tags:) Tj
1 0 0 1 50 126 Tm (        if any\(supported in tag for supported in self.ssml_tags\):) Tj
1 0 0 1 50 112 Tm (            utterance = utterance.replace\(tag, self.modify_tag\(tag\)\)) Tj
1 0 0 1 50 98 Tm (        else:) Tj
1 0 0 1 50 84 Tm (            # remove unsupported tag) Tj
1 0 0 1 50 70 Tm (            utterance = utterance.replace\(tag, ""\)) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
547 0 obj
<< /Length 3478 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (    # return text with supported ssml tags only) Tj
1 0 0 1 50 728 Tm (    return utterance.replace\("  ", " "\)) Tj
1 0 0 1 50 714 Tm (```) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (### Platform-Specific SSML Handling) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (Some TTS plugins, like the PollyTTS plugin, may support platform-specific SSML tags that ) Tj
1 0 0 1 50 644 Tm (are not part of the standard specification. For example, Amazon Polly supports additional ) Tj
1 0 0 1 50 630 Tm (SSML tags specific to Amazon's speech synthesis service.) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (Let's take a closer look at how SSML support is implemented in the `PollyTTS` plugin:) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (```python) Tj
1 0 0 1 50 560 Tm (class PollyTTS\(TTS\):) Tj
1 0 0 1 50 546 Tm (    def __init__\(self, *args, **kwargs\):) Tj
1 0 0 1 50 532 Tm (        ssml_tags = ["speak", "say-as", "voice", "prosody", "break",) Tj
1 0 0 1 50 518 Tm (                     "emphasis", "sub", "lang", "phoneme", "w", "whisper",) Tj
1 0 0 1 50 504 Tm (                     "amazon:auto-breaths", "p", "s", "amazon:effect", "mark"]) Tj
1 0 0 1 50 490 Tm (        super\(\).__init__\(*args, **kwargs, audio_ext="mp3",) Tj
1 0 0 1 50 476 Tm (                         ssml_tags=ssml_tags, validator=PollyTTSValidator\(self\)\)) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (    def get_tts\(self, sentence, wav_file, lang=None, voice=None\):) Tj
1 0 0 1 50 434 Tm (        # SSML handling specific to PollyTTS) Tj
1 0 0 1 50 420 Tm (        # Replace custom SSML tags for Amazon Polly) Tj
1 0 0 1 50 406 Tm (        sentence = sentence.replace\("\\whispered", "/amazon:effect"\) \\) Tj
1 0 0 1 50 392 Tm (            .replace\("\\\\whispered", "/amazon:effect"\) \\) Tj
1 0 0 1 50 378 Tm (            .replace\("whispered", "amazon:effect name=\\"whispered\\""\)) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (        # altermatively the plugin could override self.modify_tag method instead) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (        # Synthesize speech using Amazon Polly API) Tj
1 0 0 1 50 308 Tm (        # Write audio stream to WAV file) Tj
1 0 0 1 50 294 Tm (        return wav_file, None) Tj
1 0 0 1 50 280 Tm (```) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (In this example, the `PollyTTS` plugin defines a list of supported SSML tags, including ) Tj
1 0 0 1 50 238 Tm (both standard and Amazon-specific tags. During initialization, the plugin sets up SSML ) Tj
1 0 0 1 50 224 Tm (support by providing the list of tags to the `TTS` superclass.) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (When synthesizing speech using Amazon Polly, the plugin translates platform-specific SSML ) Tj
1 0 0 1 50 182 Tm (tags like `amazon:effect` to ensure compatibility with Amazon's speech synthesis service.) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (### Behavior with Plugins That Do Not Support SSML) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (When SSML text is sent to a TTS plugin that does not support SSML, the plugin will ) Tj
1 0 0 1 50 112 Tm (typically ignore the SSML tags and process the text as regular speech. ) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (This means that any SSML-specific effects, such as pauses, emphasis, or prosody ) Tj
1 0 0 1 50 70 Tm (modifications, will be dropped, and the synthesized speech will be generated without ) Tj
1 0 0 1 50 56 Tm (considering the SSML markup.) Tj
ET
endstream

endobj
548 0 obj
<< /Length 2956 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (It's important to ensure compatibility between the SSML content and the capabilities of ) Tj
1 0 0 1 50 714 Tm (the TTS plugin being used. If SSML-specific effects are essential for the intended speech ) Tj
1 0 0 1 50 700 Tm (output, it's recommended to verify that the selected TTS plugin supports SSML or consider ) Tj
1 0 0 1 50 686 Tm (using a different plugin that provides SSML support.) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (# docs/430-skill_dev_faq.md) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (# Developer FAQ) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (> This list is a work in progress, [Suggestions and Pull Requests ) Tj
1 0 0 1 50 574 Tm (welcome]\(https://github.com/OpenVoiceOS/ovos-technical-manual\)!) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (## How do I know what is currently happening in the GUI?) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (```python) Tj
1 0 0 1 50 504 Tm (from ovos_utils.gui import GUITracker) Tj
1 0 0 1 50 490 Tm (from ovos_workshop.skills import OVOSSkill) Tj
1 0 0 1 50 476 Tm (from ovos_workshop.decorators import intent_handler) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (class MyGUIEventTracker\(GUITracker\):) Tj
1 0 0 1 50 420 Tm (    # GUI event handlers) Tj
1 0 0 1 50 406 Tm (    # skill can/should subclass this) Tj
1 0 0 1 50 392 Tm (    ) Tj
1 0 0 1 50 378 Tm (    def on_idle\(self, namespace\):) Tj
1 0 0 1 50 364 Tm (        print\("IDLE", namespace\)) Tj
1 0 0 1 50 350 Tm (        timestamp = self.idle_ts) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (    def on_active\(self, namespace\):) Tj
1 0 0 1 50 308 Tm (        # NOTE: page has not been loaded yet) Tj
1 0 0 1 50 294 Tm (        # event will fire right after this one) Tj
1 0 0 1 50 280 Tm (        print\("ACTIVE", namespace\)) Tj
1 0 0 1 50 266 Tm (        # check namespace values, they should all be set before this event) Tj
1 0 0 1 50 252 Tm (        values = self.gui_values[namespace]) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (    def on_new_page\(self, page, namespace, index\):) Tj
1 0 0 1 50 210 Tm (        print\("NEW PAGE", namespace, index, namespace\)) Tj
1 0 0 1 50 196 Tm (        # check all loaded pages) Tj
1 0 0 1 50 182 Tm (        for n in self.gui_pages:  # list of named tuples) Tj
1 0 0 1 50 168 Tm (            nspace = n.name  # namespace / skill_id) Tj
1 0 0 1 50 154 Tm (            pages = n.pages  # ordered list of page uris) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (    def on_gui_value\(self, namespace, key, value\):) Tj
1 0 0 1 50 112 Tm (        # WARNING this will pollute logs quite a lot, and you will get) Tj
1 0 0 1 50 98 Tm (        # duplicates, better to check values on a different event,) Tj
1 0 0 1 50 84 Tm (        # demonstrated in on_active) Tj
1 0 0 1 50 70 Tm (        print\("VALUE", namespace, key, value\)) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
549 0 obj
<< /Length 3066 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (class MySkill\(OVOSSkill\): ) Tj
1 0 0 1 50 714 Tm (    def initialize\(self\):) Tj
1 0 0 1 50 700 Tm (        self.tracker = MyGUIEventTracker\(bus=self.bus\)) Tj
1 0 0 1 50 686 Tm (    ) Tj
1 0 0 1 50 672 Tm (    @intent_handler\("gui.status.intent"\)) Tj
1 0 0 1 50 658 Tm (    def handle_status_intent\(self, message\):) Tj
1 0 0 1 50 644 Tm (        print\("device has screen:", self.tracker.can_display\(\)\)) Tj
1 0 0 1 50 630 Tm (        print\("mycroft-gui installed:", self.tracker.is_gui_installed\(\)\)) Tj
1 0 0 1 50 616 Tm (        print\("gui connected:", self.tracker.is_gui_connected\(\)\)) Tj
1 0 0 1 50 602 Tm (        # TODO - speak or something) Tj
1 0 0 1 50 588 Tm (            ) Tj
1 0 0 1 50 574 Tm (    @intent_handler\("list.idle.screens.intent"\)) Tj
1 0 0 1 50 560 Tm (    def handle_idle_screens_intent\(self, message\):) Tj
1 0 0 1 50 546 Tm (        # check registered idle screens) Tj
1 0 0 1 50 532 Tm (        print\("Registered idle screens:"\)) Tj
1 0 0 1 50 518 Tm (        for name in self.tracker.idle_screens:) Tj
1 0 0 1 50 504 Tm (            skill_id = self.tracker.idle_screens[name]) Tj
1 0 0 1 50 490 Tm (            print\("   - ", name, ":", skill_id\)) Tj
1 0 0 1 50 476 Tm (            # TODO - speak or something) Tj
1 0 0 1 50 462 Tm (```) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (## How do I stop an intent mid execution?) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (Sometimes you want to abort a running intent immediately, the stop method may not be ) Tj
1 0 0 1 50 392 Tm (enough in some circumstances) Tj
1 0 0 1 50 378 Tm (we provide a `killable_intent` decorator in `ovos_workshop` that can be used to abort a ) Tj
1 0 0 1 50 364 Tm (running intent immediately) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (a common use case is for GUI interfaces where the same action may be done by voice or ) Tj
1 0 0 1 50 322 Tm (clicking buttons, in this case you may need to abort a running `get_response` loop) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (```python) Tj
1 0 0 1 50 280 Tm (from ovos_workshop.skills import OVOSSkill) Tj
1 0 0 1 50 266 Tm (from ovos_workshop.decorators import killable_intent, intent_handler) Tj
1 0 0 1 50 252 Tm (from time import sleep) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (class Test\(OVOSSkill\):) Tj
1 0 0 1 50 196 Tm (    """) Tj
1 0 0 1 50 182 Tm (    send "mycroft.skills.abort_question" and confirm only get_response is aborted) Tj
1 0 0 1 50 168 Tm (    send "mycroft.skills.abort_execution" and confirm the full intent is aborted, except ) Tj
1 0 0 1 50 154 Tm (intent3) Tj
1 0 0 1 50 140 Tm (    send "my.own.abort.msg" and confirm intent3 is aborted) Tj
1 0 0 1 50 126 Tm (    say "stop" and confirm all intents are aborted) Tj
1 0 0 1 50 112 Tm (    """) Tj
1 0 0 1 50 98 Tm (    def __init__\(self\):) Tj
1 0 0 1 50 84 Tm (        super\(Test, self\).__init__\("KillableSkill"\)) Tj
1 0 0 1 50 70 Tm (        self.my_special_var = "default") Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
550 0 obj
<< /Length 2966 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (    def handle_intent_aborted\(self\):) Tj
1 0 0 1 50 728 Tm (        self.speak\("I am dead"\)) Tj
1 0 0 1 50 714 Tm (        # handle any cleanup the skill might need, since intent was killed) Tj
1 0 0 1 50 700 Tm (        # at an arbitrary place of code execution some variables etc. might) Tj
1 0 0 1 50 686 Tm (        # end up in unexpected states) Tj
1 0 0 1 50 672 Tm (        self.my_special_var = "default") Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (    @killable_intent\(callback=handle_intent_aborted\)) Tj
1 0 0 1 50 630 Tm (    @intent_handler\("test.intent"\)) Tj
1 0 0 1 50 616 Tm (    def handle_test_abort_intent\(self, message\):) Tj
1 0 0 1 50 602 Tm (        self.my_special_var = "changed") Tj
1 0 0 1 50 588 Tm (        while True:) Tj
1 0 0 1 50 574 Tm (            sleep\(1\)) Tj
1 0 0 1 50 560 Tm (            self.speak\("still here"\)) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (    @intent_handler\("test2.intent"\)) Tj
1 0 0 1 50 518 Tm (    @killable_intent\(callback=handle_intent_aborted\)) Tj
1 0 0 1 50 504 Tm (    def handle_test_get_response_intent\(self, message\):) Tj
1 0 0 1 50 490 Tm (        self.my_special_var = "CHANGED") Tj
1 0 0 1 50 476 Tm (        ans = self.get_response\("question", num_retries=99999\)) Tj
1 0 0 1 50 462 Tm (        self.log.debug\("get_response returned: " + str\(ans\)\)) Tj
1 0 0 1 50 448 Tm (        if ans is None:) Tj
1 0 0 1 50 434 Tm (            self.speak\("question aborted"\)) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (    @killable_intent\(msg="my.own.abort.msg", callback=handle_intent_aborted\)) Tj
1 0 0 1 50 392 Tm (    @intent_handler\("test3.intent"\)) Tj
1 0 0 1 50 378 Tm (    def handle_test_msg_intent\(self, message\):) Tj
1 0 0 1 50 364 Tm (        if self.my_special_var != "default":) Tj
1 0 0 1 50 350 Tm (            self.speak\("someone forgot to cleanup"\)) Tj
1 0 0 1 50 336 Tm (        while True:) Tj
1 0 0 1 50 322 Tm (            sleep\(1\)) Tj
1 0 0 1 50 308 Tm (            self.speak\("you can't abort me"\)) Tj
1 0 0 1 50 294 Tm (```) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (## How do I send files over the bus?) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (Sometimes you may want to send files or binary data over the messagebus, `ovos_utils` ) Tj
1 0 0 1 50 224 Tm (provides some tools to make this easy) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (Sending a file) Tj
1 0 0 1 50 182 Tm (```python) Tj
1 0 0 1 50 168 Tm (from ovos_utils.messagebus import send_binary_file_message, decode_binary_message) Tj
1 0 0 1 50 154 Tm (from ovos_workshop.skills import OVOSSkill) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (class MySkill\(OVOSSkill\): ) Tj
1 0 0 1 50 98 Tm (    def initialize\(self\):) Tj
1 0 0 1 50 84 Tm (        self.add_event\("mycroft.binary.file", self.receive_file\)) Tj
1 0 0 1 50 70 Tm (    ) Tj
1 0 0 1 50 56 Tm (    def receive_file\(self, message\):) Tj
ET
endstream

endobj
551 0 obj
<< /Length 2962 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (        print\("Receiving file"\)) Tj
1 0 0 1 50 728 Tm (        path = message.data["path"]  # file path, extract filename if needed) Tj
1 0 0 1 50 714 Tm (        binary_data = decode_binary_message\(message\)) Tj
1 0 0 1 50 700 Tm (        # TODO process data somehow) Tj
1 0 0 1 50 686 Tm (        ) Tj
1 0 0 1 50 672 Tm (    def send_file\(self, my_file_path\):) Tj
1 0 0 1 50 658 Tm (        send_binary_file_message\(my_file_path\)) Tj
1 0 0 1 50 644 Tm (```) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (Sending binary data directly) Tj
1 0 0 1 50 602 Tm (```python) Tj
1 0 0 1 50 588 Tm (from ovos_utils.messagebus import send_binary_data_message, decode_binary_message) Tj
1 0 0 1 50 574 Tm (from ovos_workshop.skills import OVOSSkill) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (class MySkill\(OVOSSkill\):) Tj
1 0 0 1 50 518 Tm (    def initialize\(self\):) Tj
1 0 0 1 50 504 Tm (        self.add_event\("mycroft.binary.data", self.receive_binary\)) Tj
1 0 0 1 50 490 Tm (    ) Tj
1 0 0 1 50 476 Tm (    def send_data\(self, binary_data\):) Tj
1 0 0 1 50 462 Tm (        send_binary_data_message\(binary_data\)) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (    def receive_binary\(self, message\):) Tj
1 0 0 1 50 420 Tm (        print\("Receiving binary data"\)) Tj
1 0 0 1 50 406 Tm (        binary_data = decode_binary_message\(message\)) Tj
1 0 0 1 50 392 Tm (         # TODO process data somehow) Tj
1 0 0 1 50 378 Tm (```) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (# docs/50-ovos_installer.md) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (# How to Install Open Voice OS with the `ovos-installer`) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (Welcome to the quick-start guide for installing Open Voice OS \(OVOS\) using the official ) Tj
1 0 0 1 50 252 Tm (`ovos-installer`! This guide is suitable for **Raspberry Pi** and **desktop/server** Linux) Tj
1 0 0 1 50 238 Tm ( environments. Whether youre running this on a headless Raspberry Pi or your everyday ) Tj
1 0 0 1 50 224 Tm (laptop, the steps are mostly the sameonly the way you connect to the device differs.) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (> ?? Note: Some exotic hardware \(like ReSpeaker microphones or certain audio HATs\) may ) Tj
1 0 0 1 50 182 Tm (require extra configuration. The installer aims for wide compatibility, but specialized ) Tj
1 0 0 1 50 168 Tm (setups might need some manual intervention.) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (Looking for a pre-built raspberry pi image instead? check out ) Tj
1 0 0 1 50 126 Tm ([raspOVOS]\(https://github.com/OpenVoiceOS/raspOVOS\) and the companion ) Tj
1 0 0 1 50 112 Tm ([tutorial]\(https://openvoiceos.github.io/ovos-technical-manual/51-install_raspovos/\)) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (---) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (## Step-by-step Installation) Tj
ET
endstream

endobj
552 0 obj
<< /Length 1999 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (### ? 1. Connect to Your Device *\(if remote\)*) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (If you're installing on a headless device \(like a Raspberry Pi\), connect via SSH:) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (```bash) Tj
1 0 0 1 50 658 Tm (ssh -l your-username <your-device-ip>) Tj
1 0 0 1 50 644 Tm (```) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (---) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (### ? 2. Update Package Metadata) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (Make sure your package manager is up to date:) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (```bash) Tj
1 0 0 1 50 518 Tm (sudo apt update) Tj
1 0 0 1 50 504 Tm (```) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (---) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (### ? 3. Install Prerequisites) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (Install `git` and `curl`these are required to run the installer:) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (```bash) Tj
1 0 0 1 50 378 Tm (sudo apt install -y git curl) Tj
1 0 0 1 50 364 Tm (```) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (---) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (### ? 4. Run the OVOS Installer) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (Now you're ready to kick off the installation process:) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (```bash) Tj
1 0 0 1 50 238 Tm (sudo sh -c "$\(curl -fsSL https://raw.githubusercontent.com/OpenVoiceOS/ovos-) Tj
1 0 0 1 50 224 Tm (installer/main/installer.sh\)") Tj
1 0 0 1 50 210 Tm (```) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (![image]\(https://gist.github.com/user-) Tj
1 0 0 1 50 168 Tm (attachments/assets/8a87fd01-2570-419b-8154-159b2d5801cb\)) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (---) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (## What Happens Next?) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (Once you run the script, the installer will:) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
553 0 obj
<< /Length 2585 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (- Perform system checks) Tj
1 0 0 1 50 728 Tm (- Install dependencies \(Python, Ansible, etc.\)) Tj
1 0 0 1 50 714 Tm (- Launch a **text-based user interface \(TUI\)** to guide you through the setup) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (This can take anywhere from **5 to 20 minutes**, depending on your hardware, internet ) Tj
1 0 0 1 50 672 Tm (speed, and storage performance. Now lets walk through the installer screens!) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (---) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (## The Installer Wizard) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (Navigation:) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (- navigation is done via arrow keys) Tj
1 0 0 1 50 546 Tm (- pressing space selects options in the lists) Tj
1 0 0 1 50 532 Tm (    - eg. when selecting `virtualenv` or `containers`) Tj
1 0 0 1 50 518 Tm (- pressing tab will switch between the options and the `<next>`/`<back>` buttons) Tj
1 0 0 1 50 504 Tm (- pressing enter will execute the highligted `<next>`/`<back>` option) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (---) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (### ? Language Selection) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (The first screen lets you select your preferred language. Just follow the on-screen ) Tj
1 0 0 1 50 406 Tm (instructions.) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (![image]\(https://gist.github.com/user-) Tj
1 0 0 1 50 364 Tm (attachments/assets/61f9e089-1d54-49e9-8d4a-d5e1f6028ee2\)) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (---) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (### ? Environment Summary) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (Youll be shown a summary of the detected environmentno action needed here. Its just ) Tj
1 0 0 1 50 266 Tm (informative.) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (![image]\(https://gist.github.com/user-) Tj
1 0 0 1 50 224 Tm (attachments/assets/1268a703-2007-4bc0-b153-36f33b782b20\)) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (---) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (### ? Choose Installation Method) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (You have two choices:) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (- **Virtualenv**: Recommended for most users. Easier to understand and manage.) Tj
1 0 0 1 50 98 Tm (- **Containers**: For advanced users familiar with Docker or Podman.) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (![image]\(https://gist.github.com/user-) Tj
1 0 0 1 50 56 Tm (attachments/assets/e1b881fc-327d-4e1f-839b-396cffcd354c\)) Tj
ET
endstream

endobj
554 0 obj
<< /Length 2373 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (---) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (### ? Choose Channel) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (Select the **development** channel. Once OVOS is production-ready, a stable channel ) Tj
1 0 0 1 50 658 Tm (will also be available.) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (![image]\(https://gist.github.com/user-) Tj
1 0 0 1 50 616 Tm (attachments/assets/f782cebe-c86b-4474-93d7-894b712e8fe7\)) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (---) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (### ? Choose Profile) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (Pick the `ovos` profile. This is the classic, all-in-one Open Voice OS experience with all) Tj
1 0 0 1 50 518 Tm ( the necessary components running locally.) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (![image]\(https://gist.github.com/user-) Tj
1 0 0 1 50 476 Tm (attachments/assets/0ff4279d-69fa-4ab8-b372-0fef263e6d7c\)) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (---) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (### ?? Feature Selection) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (Choose what features youd like to install.) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (![image]\(https://gist.github.com/user-attachments/assets/bdb65ba6-18d6-42fd-) Tj
1 0 0 1 50 350 Tm (aff6-22fab0826870\)) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (> ?? Note: Some features \(like the GUI\) may be unavailable on lower-end hardware like the ) Tj
1 0 0 1 50 308 Tm (Raspberry Pi 3B+.) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (---) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (### ? Raspberry Pi Tuning *\(if applicable\)*) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (On Raspberry Pi boards, youll be offered system tweaks to improve performance. It's ) Tj
1 0 0 1 50 210 Tm (highly recommended to enable this!) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (![image]\(https://gist.github.com/user-) Tj
1 0 0 1 50 168 Tm (attachments/assets/91bb5f18-9c5a-49ef-a0fe-5b0e52b44ee9\)) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (---) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (### ? Summary) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (Before the installation begins, you'll see a summary of your selected options. This is ) Tj
1 0 0 1 50 70 Tm (your last chance to cancel the process.) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
555 0 obj
<< /Length 3957 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (![image]\(https://gist.github.com/user-) Tj
1 0 0 1 50 728 Tm (attachments/assets/62a565f3-6871-4dfe-a441-c482199feac0\)) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (---) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (### ? Anonymous Telemetry) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (You'll be asked whether to share **anonymous usage data** to help improve Open Voice OS. ) Tj
1 0 0 1 50 630 Tm (Please consider opting in!) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (![image]\(https://gist.github.com/user-) Tj
1 0 0 1 50 588 Tm (attachments/assets/b8015c41-370d-49d3-b783-996887cb421b\)) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (The data collection only happens during the installation process, nothing else will be ) Tj
1 0 0 1 50 546 Tm (collected once the installation is over.) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (**The installer will ask you if you want to share or not the data.**) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (Below is a list of the collected data _\(please have a look to the [Ansible ) Tj
1 0 0 1 50 476 Tm (tempalte]\(https://github.com/OpenVoiceOS/ovos-) Tj
1 0 0 1 50 462 Tm (installer/blob/main/ansible/roles/ovos_installer/templates/telemetry.json.j2\) used ti ) Tj
1 0 0 1 50 448 Tm (publish the data\)_.) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (| Data                   | Description                                              |) Tj
1 0 0 1 50 406 Tm (| ---------------------- | -------------------------------------------------------- |) Tj
1 0 0 1 50 392 Tm (| `architecture`         | CPU architecture where OVOS was installed                |) Tj
1 0 0 1 50 378 Tm (| `channel`              | `stable` or `development` version of OVOS                |) Tj
1 0 0 1 50 364 Tm (| `container`            | OVOS installed into containers                           |) Tj
1 0 0 1 50 350 Tm (| `country`              | Country where OVOS has been installed                    |) Tj
1 0 0 1 50 336 Tm (| `cpu_capable`          | Is the CPU supports AVX2 or SIMD instructions            |) Tj
1 0 0 1 50 322 Tm (| `display_server`       | Is X or Wayland are used as display server               |) Tj
1 0 0 1 50 308 Tm (| `extra_skills_feature` | Extra OVOS's skills enabled during the installation      |) Tj
1 0 0 1 50 294 Tm (| `gui_feature`          | GUI enabled during the installation                      |) Tj
1 0 0 1 50 280 Tm (| `hardware`             | Is the device a Mark 1, Mark II or DevKit                |) Tj
1 0 0 1 50 266 Tm (| `installed_at`         | Date when OVOS has been installed                        |) Tj
1 0 0 1 50 252 Tm (| `os_kernel`            | Kernel version of the host where OVOS is running         |) Tj
1 0 0 1 50 238 Tm (| `os_name`              | OS name of the host where OVOS is running                |) Tj
1 0 0 1 50 224 Tm (| `os_type`              | OS type of the host where OVOS is running                |) Tj
1 0 0 1 50 210 Tm (| `os_version`           | OS version of the host where OVOS is running             |) Tj
1 0 0 1 50 196 Tm (| `profile`              | Which profile has been used during the OVOS installation |) Tj
1 0 0 1 50 182 Tm (| `python_version`       | What Python version was running on the host              |) Tj
1 0 0 1 50 168 Tm (| `raspberry_pi`         | Does OVOS has been installed on Raspberry Pi             |) Tj
1 0 0 1 50 154 Tm (| `skills_feature`       | Default OVOS's skills enabled during the installation    |) Tj
1 0 0 1 50 140 Tm (| `sound_server`         | What PulseAudio or PipeWire used                         |) Tj
1 0 0 1 50 126 Tm (| `tuning_enabled`       | Did the Rasperry Pi tuning feature wsas used             |) Tj
1 0 0 1 50 112 Tm (| `venv`                 | OVOS installed into a Python virtual environment         |) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (---) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (### ???? Sit Back and Relax) Tj
ET
endstream

endobj
556 0 obj
<< /Length 2560 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (The installation begins! This can take some time, so why not grab a coffee \(or maybe a ) Tj
1 0 0 1 50 714 Tm (cupcake\)? ??) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (Here is a demo of how the process should go if everything works as intended) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm ([![asciicast]\(https://asciinema.org/a/710286.svg\)]\(https://asciinema.org/a/710286\)) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (---) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (## Installation Complete!) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (Youve done it! OVOS is now installed and ready to serve you. Try saying things like:) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (- Whats the weather?) Tj
1 0 0 1 50 532 Tm (- Tell me a joke.) Tj
1 0 0 1 50 518 Tm (- Set a timer for 5 minutes.) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (![image]\(https://gist.github.com/user-) Tj
1 0 0 1 50 476 Tm (attachments/assets/acbc71ed-46aa-4084-8f4c-82c6a2a19d49\)) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (Youre officially part of the Open Voice OS community! ??) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (---) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (## Additional Configuration and Known Issues) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (Depending on your language you probably want to change the default plugins, the ovos-) Tj
1 0 0 1 50 350 Tm (installer is not perfect and might not always select the best defaults) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (It is recommend that you run `ovos-config autoconfigure --help` after the initial install) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm ([![asciicast]\(https://asciinema.org/a/710295.svg\)]\(https://asciinema.org/a/710295\)) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (---) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (## Troubleshooting) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (> Something went wrong?) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (Dont panic! If the installer fails, it will generate a log file and upload it to ) Tj
1 0 0 1 50 140 Tm ([https://dpaste.com]\(https://dpaste.com\). Please share that link with the community so we ) Tj
1 0 0 1 50 126 Tm (can help you out.) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (OVOS is a community-driven project, maintained by passionate volunteers. Your feedback, ) Tj
1 0 0 1 50 84 Tm (bug reports, and patience are truly appreciated.) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
557 0 obj
<< /Length 2738 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (# docs/500-prompts.md) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (# Prompting the User for Responses in OVOS Skills) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (OVOS provides several built-in methods for engaging users in interactive conversations. ) Tj
1 0 0 1 50 658 Tm (These include asking open-ended questions, confirming yes/no responses, and offering ) Tj
1 0 0 1 50 644 Tm (multiple-choice selections  all handled in a natural, voice-first way.) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (Here we look at how to implement the most common types of prompts. For more information on) Tj
1 0 0 1 50 602 Tm ( conversation design see) Tj
1 0 0 1 50 588 Tm (the [Voice User Interface Design Guidelines]\(https://mycroft-ai.gitbook.io/docs/skill-) Tj
1 0 0 1 50 574 Tm (development/voice-user-interface-design-guidelines/interactions-and-guidelines/statements-) Tj
1 0 0 1 50 560 Tm (and-prompts\).) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (---) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (## Usage Guide) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (Heres how to use different types of prompts in your OVOS skills:) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (### 1. Open-Ended Questions) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (Let the user respond freely, either to trigger another skill or to handle the response ) Tj
1 0 0 1 50 406 Tm (with a custom intent.) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (```python) Tj
1 0 0 1 50 364 Tm (from ovos_workshop.skills import OVOSSkill) Tj
1 0 0 1 50 350 Tm (from ovos_workshop.decorators import intent_handler) Tj
1 0 0 1 50 336 Tm (import random) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (class AskMeSkill\(OVOSSkill\):) Tj
1 0 0 1 50 294 Tm (    @intent_handler\('ask_me_something.intent'\)) Tj
1 0 0 1 50 280 Tm (    def handle_set_favorite\(self\):) Tj
1 0 0 1 50 266 Tm (        question = random.choice\(self.question_list\)) Tj
1 0 0 1 50 252 Tm (        self.speak\(question, expect_response=True\)) Tj
1 0 0 1 50 238 Tm (```) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (> `expect_response=True` keeps the mic open after speaking, so the response can be handled) Tj
1 0 0 1 50 196 Tm ( by OVOS's intent pipeline.) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (---) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (### 2. Request Extra Information with `get_response\(\)`) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (Use this to ask a specific question and directly capture the user's reply.) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (```python) Tj
1 0 0 1 50 70 Tm (from ovos_workshop.skills import OVOSSkill) Tj
1 0 0 1 50 56 Tm (from ovos_workshop.decorators import intent_handler) Tj
ET
endstream

endobj
558 0 obj
<< /Length 2816 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (class IceCreamSkill\(OVOSSkill\):) Tj
1 0 0 1 50 714 Tm (    @intent_handler\('set.favorite.intent'\)) Tj
1 0 0 1 50 700 Tm (    def handle_set_favorite\(self\):) Tj
1 0 0 1 50 686 Tm (        favorite_flavor = self.get_response\('what.is.your.favorite.flavor'\)) Tj
1 0 0 1 50 672 Tm (        self.speak_dialog\('confirm.favorite.flavor', {'flavor': favorite_flavor}\)) Tj
1 0 0 1 50 658 Tm (```) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (**Optional `get_response\(\)` arguments:**) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (- `data`: Dictionary to format the dialog file) Tj
1 0 0 1 50 588 Tm (- `validator`: A function to check if the user response is valid) Tj
1 0 0 1 50 574 Tm (- `on_fail`: A fallback string to say if validation fails) Tj
1 0 0 1 50 560 Tm (- `num_retries`: How many times to retry if the response isnt valid) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (---) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (### 3. Yes/No Questions with `ask_yesno\(\)`) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (Detects affirmations or negations from user responses.) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (```python) Tj
1 0 0 1 50 434 Tm (from ovos_workshop.skills import OVOSSkill) Tj
1 0 0 1 50 420 Tm (from ovos_workshop.decorators import intent_handler) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (class IceCreamSkill\(OVOSSkill\):) Tj
1 0 0 1 50 378 Tm (    @intent_handler\('do.you.like.intent'\)) Tj
1 0 0 1 50 364 Tm (    def handle_do_you_like\(self\):) Tj
1 0 0 1 50 350 Tm (        likes_ice_cream = self.ask_yesno\('do.you.like.ice.cream'\)) Tj
1 0 0 1 50 336 Tm (        if likes_ice_cream == 'yes':) Tj
1 0 0 1 50 322 Tm (            self.speak_dialog\('does.like'\)) Tj
1 0 0 1 50 308 Tm (        elif likes_ice_cream == 'no':) Tj
1 0 0 1 50 294 Tm (            self.speak_dialog\('does.not.like'\)) Tj
1 0 0 1 50 280 Tm (        else:) Tj
1 0 0 1 50 266 Tm (            self.speak_dialog\('could.not.understand'\)) Tj
1 0 0 1 50 252 Tm (```) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (**Behavior:**) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (- Returns `"yes"` or `"no"` for matching phrases.) Tj
1 0 0 1 50 182 Tm (- Returns the full utterance if unclear.) Tj
1 0 0 1 50 168 Tm (- Returns `None` if no valid response is detected.) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (> uses [ovos-solver-YesNo-plugin]\(https://github.com/OpenVoiceOS/ovos-solver-YesNo-plugin\)) Tj
1 0 0 1 50 126 Tm ( to understand complex affirmations and denials  even double negations.) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (Example mappings:) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (| User Says                        | Detected As |) Tj
1 0 0 1 50 56 Tm (|----------------------------------|--------------|) Tj
ET
endstream

endobj
559 0 obj
<< /Length 3436 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (| "yes"                            | yes          |) Tj
1 0 0 1 50 728 Tm (| "no"                             | no           |) Tj
1 0 0 1 50 714 Tm (| "don't think so"                 | no           |) Tj
1 0 0 1 50 700 Tm (| "that's affirmative"             | yes          |) Tj
1 0 0 1 50 686 Tm (| "no, but actually, yes"          | yes          |) Tj
1 0 0 1 50 672 Tm (| "yes, but actually, no"          | no           |) Tj
1 0 0 1 50 658 Tm (| "yes, yes, yes, but actually, no" | "no"            |) Tj
1 0 0 1 50 644 Tm (| "please"                          | "yes"           |) Tj
1 0 0 1 50 630 Tm (| "please don't"                    | "no"            |) Tj
1 0 0 1 50 616 Tm (| "no! please! I beg you"           | "no"            |) Tj
1 0 0 1 50 602 Tm (| "yes, i don't want it for sure"   | "no"            |) Tj
1 0 0 1 50 588 Tm (| "please! I beg you"               | "yes"           |) Tj
1 0 0 1 50 574 Tm (| "i want it for sure"              | "yes"           |) Tj
1 0 0 1 50 560 Tm (| "obviously"                       | "yes"           |) Tj
1 0 0 1 50 546 Tm (| "indeed"                          | "yes"           |) Tj
1 0 0 1 50 532 Tm (| "no, I obviously hate it"         | "no"            |) Tj
1 0 0 1 50 518 Tm (| "that's certainly undesirable"    | "no"            |) Tj
1 0 0 1 50 504 Tm (| "yes, it's a lie"                 | "yes"           |) Tj
1 0 0 1 50 490 Tm (| "no, it's a lie"                  | "no"            |) Tj
1 0 0 1 50 476 Tm (| "he is lying"                     | "no"            |) Tj
1 0 0 1 50 462 Tm (| "correct, he is lying"            | "yes"           |) Tj
1 0 0 1 50 448 Tm (| "it's a lie"                      | "no"            |) Tj
1 0 0 1 50 434 Tm (| "you are mistaken"                | "no"            |) Tj
1 0 0 1 50 420 Tm (| "that's a mistake"                | "no"            |) Tj
1 0 0 1 50 406 Tm (| "wrong answer"                    | "no"            |) Tj
1 0 0 1 50 392 Tm (| "it's not a lie"                  | "yes"           |) Tj
1 0 0 1 50 378 Tm (| "he is not lying"                 | "yes"           |) Tj
1 0 0 1 50 364 Tm (| "you are not mistaken"            | "yes"           |) Tj
1 0 0 1 50 350 Tm (| "tou are not wrong"               | "yes"           |) Tj
1 0 0 1 50 336 Tm (| "beans"                           | None            |) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (---) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (### 4. Multiple-Choice Prompts with `ask_selection\(\)`) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (Let users choose from a list of options, by name or number.) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (```python) Tj
1 0 0 1 50 210 Tm (from ovos_workshop.skills import OVOSSkill) Tj
1 0 0 1 50 196 Tm (from ovos_workshop.decorators import intent_handler) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (class IceCreamSkill\(OVOSSkill\):) Tj
1 0 0 1 50 154 Tm (    def initialize\(self\):) Tj
1 0 0 1 50 140 Tm (        self.flavors = ['vanilla', 'chocolate', 'mint']) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (    @intent_handler\('request.icecream.intent'\)) Tj
1 0 0 1 50 98 Tm (    def handle_request_icecream\(self\):) Tj
1 0 0 1 50 84 Tm (        self.speak_dialog\('welcome'\)) Tj
1 0 0 1 50 70 Tm (        selection = self.ask_selection\(self.flavors, 'what.flavor'\)) Tj
1 0 0 1 50 56 Tm (        self.speak_dialog\('coming.right_up', {'flavor': selection}\)) Tj
ET
endstream

endobj
560 0 obj
<< /Length 2646 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (```) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (**Optional arguments:**) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (- `min_conf` \(float\): Minimum confidence threshold for fuzzy matching) Tj
1 0 0 1 50 672 Tm (- `numeric` \(bool\): If `True`, speak the list with numbered options) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (User responses like "chocolate", "the second one", or "option three" are all supported.) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (---) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (## Technical Notes) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (- All methods handle microphone activation and parsing behind the scenes.) Tj
1 0 0 1 50 546 Tm (- OVOS automatically integrates with the intent engine to resolve follow-up responses.) Tj
1 0 0 1 50 532 Tm (- These prompts are designed to support natural dialogue flows, validating and re-) Tj
1 0 0 1 50 518 Tm (prompting as needed.) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (---) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (## Tips) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (- Always confirm user input when using `get_response\(\)` or `ask_selection\(\)` for clarity.) Tj
1 0 0 1 50 420 Tm (- Use `validator` with `get_response\(\)` to catch unclear or unwanted input.) Tj
1 0 0 1 50 406 Tm (- Use `ask_yesno\(\)` for quick binary decisions, but gracefully handle unexpected answers.) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (# docs/501-context.md) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (# Follow up questions) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (Conversational context in Open Voice OS \(OVOS\) allows voice interactions to feel more ) Tj
1 0 0 1 50 280 Tm (natural by remembering parts of a conversation, like the subject being discussed. This is ) Tj
1 0 0 1 50 266 Tm (especially useful for follow-up questions where repeating context \(like a person's name\) ) Tj
1 0 0 1 50 252 Tm (would otherwise be necessary.) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (Currently, conversational context is only supported with the [Adapt Intent ) Tj
1 0 0 1 50 210 Tm (Parser]\(https://mycroft.ai/documentation/adapt\), not ) Tj
1 0 0 1 50 196 Tm ([Padatious]\(https://mycroft.ai/documentation/padatious\).) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (---) Tj
1 0 0 1 50 154 Tm (## Keyword Contexts) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (> How tall is John Cleese?) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (`"John Cleese is 196 centimeters"`) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (> Where's he from?) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
561 0 obj
<< /Length 3157 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (`"He's from England"`) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (Context is added manually by the **Skill** creator using either the `self.set_context\(\)` ) Tj
1 0 0 1 50 700 Tm (method or the `@adds_context\(\)` decorator.) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (Consider the following intent handlers:) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (```python) Tj
1 0 0 1 50 630 Tm (    @intent_handler\(IntentBuilder\(\).require\('PythonPerson'\).require\('Length'\)\)) Tj
1 0 0 1 50 616 Tm (    def handle_length\(self, message\):) Tj
1 0 0 1 50 602 Tm (        python = message.data.get\('PythonPerson'\)) Tj
1 0 0 1 50 588 Tm (        self.speak\(f'{python} is {length_dict[python]} cm tall'\)) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (    @intent_handler\(IntentBuilder\(\).require\('PythonPerson'\).require\('WhereFrom'\)\)) Tj
1 0 0 1 50 546 Tm (    def handle_from\(self, message\):) Tj
1 0 0 1 50 532 Tm (        python = message.data.get\('PythonPerson'\)) Tj
1 0 0 1 50 518 Tm (        self.speak\(f'{python} is from {from_dict[python]}'\)) Tj
1 0 0 1 50 504 Tm (```) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (To interact with the above handlers the user would need to say) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (```text) Tj
1 0 0 1 50 434 Tm (User: How tall is John Cleese?) Tj
1 0 0 1 50 420 Tm (Mycroft: John Cleese is 196 centimeters) Tj
1 0 0 1 50 406 Tm (User: Where is John Cleese from?) Tj
1 0 0 1 50 392 Tm (Mycroft: He's from England) Tj
1 0 0 1 50 378 Tm (```) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (To get a more natural response the functions can be changed to let OVOS know which ) Tj
1 0 0 1 50 336 Tm (`PythonPerson` we're talking about by using the `self.set_context\(\)` method to give ) Tj
1 0 0 1 50 322 Tm (context:) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (```python) Tj
1 0 0 1 50 280 Tm (    @intent_handler\(IntentBuilder\(\).require\('PythonPerson'\).require\('Length'\)\)) Tj
1 0 0 1 50 266 Tm (    def handle_length\(self, message\):) Tj
1 0 0 1 50 252 Tm (        # PythonPerson can be any of the Monty Python members) Tj
1 0 0 1 50 238 Tm (        python = message.data.get\('PythonPerson'\)) Tj
1 0 0 1 50 224 Tm (        self.speak\(f'{python} is {length_dict[python]} cm tall'\)) Tj
1 0 0 1 50 210 Tm (        self.set_context\('PythonPerson', python\)) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (    @intent_handler\(IntentBuilder\(\).require\('PythonPerson'\).require\('WhereFrom'\)\)) Tj
1 0 0 1 50 168 Tm (    def handle_from\(self, message\):) Tj
1 0 0 1 50 154 Tm (        # PythonPerson can be any of the Monty Python members) Tj
1 0 0 1 50 140 Tm (        python = message.data.get\('PythonPerson'\)) Tj
1 0 0 1 50 126 Tm (        self.speak\(f'He is from {from_dict[python]}'\)) Tj
1 0 0 1 50 112 Tm (        self.set_context\('PythonPerson', python\)) Tj
1 0 0 1 50 98 Tm (```) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (When either of the methods are called the `PythonPerson` keyword is added to OVOS's ) Tj
1 0 0 1 50 56 Tm (context, which means that if there is a match with `Length` but `PythonPerson` is missing ) Tj
ET
endstream

endobj
562 0 obj
<< /Length 2661 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (OVOS will assume the last mention of that keyword. The interaction can now become the one ) Tj
1 0 0 1 50 728 Tm (described at the top of the page.) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (> User: How tall is John Cleese?) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (OVOS detects the `Length` keyword and the `PythonPerson` keyword) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (> OVOS: 196 centimeters) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (John Cleese is added to the current context) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (> User: Where's he from?) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (OVOS detects the `WhereFrom` keyword but not any `PythonPerson` keyword. The Context ) Tj
1 0 0 1 50 546 Tm (Manager is activated and returns the latest entry of `PythonPerson` which is _John Cleese_) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (> OVOS: He's from England) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (## Cross Skill Context) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (The context is limited by the keywords provided by the **current** Skill. ) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (But we can use context across skills via `self.set_cross_skill_context` to enable ) Tj
1 0 0 1 50 406 Tm (conversations with **other** Skills as well. ) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (```python) Tj
1 0 0 1 50 364 Tm (    @intent_handler\(IntentBuilder\(\).require\(PythonPerson\).require\(WhereFrom\)\)) Tj
1 0 0 1 50 350 Tm (    def handle_from\(self, message\):) Tj
1 0 0 1 50 336 Tm (        # PythonPerson can be any of the Monty Python members) Tj
1 0 0 1 50 322 Tm (        python = message.data.get\('PythonPerson'\)) Tj
1 0 0 1 50 308 Tm (        self.speak\(f'He is from {from_dict[python]}'\)) Tj
1 0 0 1 50 294 Tm (        self.set_context\('PythonPerson', python\) # context for this skill only) Tj
1 0 0 1 50 280 Tm (        ) Tj
1 0 0 1 50 266 Tm (        self.set_cross_skill_context\('Location', from_dict[python]\)  # context for ALL ) Tj
1 0 0 1 50 252 Tm (skills) Tj
1 0 0 1 50 238 Tm (```) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (In this example `Location` keyword is shared with the WeatherSkill) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (```text) Tj
1 0 0 1 50 154 Tm (User: Where is John Cleese from?) Tj
1 0 0 1 50 140 Tm (Mycroft: He's from England) Tj
1 0 0 1 50 126 Tm (User: What's the weather like over there?) Tj
1 0 0 1 50 112 Tm (Mycroft: Raining and 14 degrees...) Tj
1 0 0 1 50 98 Tm (```) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (## Hint Keyword contexts) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
563 0 obj
<< /Length 2708 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (Context do not need to have a value, their presence can be used to simply indicate a ) Tj
1 0 0 1 50 728 Tm (previous interaction happened) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (In this case Context can also be implemented by using decorators instead of calling ) Tj
1 0 0 1 50 686 Tm (`self.set_context`) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (```python) Tj
1 0 0 1 50 644 Tm (from ovos_workshop.decorators import adds_context, removes_context) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (class TeaSkill\(OVOSSkill\):) Tj
1 0 0 1 50 588 Tm (    @intent_handler\(IntentBuilder\('TeaIntent'\).require\("TeaKeyword"\)\)) Tj
1 0 0 1 50 574 Tm (    @adds_context\('MilkContext'\)) Tj
1 0 0 1 50 560 Tm (    def handle_tea_intent\(self, message\):) Tj
1 0 0 1 50 546 Tm (        self.milk = False) Tj
1 0 0 1 50 532 Tm (        self.speak\('Of course, would you like Milk with that?',) Tj
1 0 0 1 50 518 Tm (                   expect_response=True\)) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (    @intent_handler\(IntentBuilder\('NoMilkIntent'\).require\("NoKeyword"\).) Tj
1 0 0 1 50 476 Tm (                                  require\('MilkContext'\).build\(\)\)) Tj
1 0 0 1 50 462 Tm (    @removes_context\('MilkContext'\)) Tj
1 0 0 1 50 448 Tm (    @adds_context\('HoneyContext'\)) Tj
1 0 0 1 50 434 Tm (    def handle_no_milk_intent\(self, message\):) Tj
1 0 0 1 50 420 Tm (        self.speak\('all right, any Honey?', expect_response=True\)) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (```) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (> **NOTE**: cross skill context is not yet exposed via decorators) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (## Using context to enable **Intents**) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (To make sure certain **Intents** can't be triggered unless some previous stage in a ) Tj
1 0 0 1 50 252 Tm (conversation has occurred. Context can be used to create "bubbles" of available intent ) Tj
1 0 0 1 50 238 Tm (handlers.) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (```text) Tj
1 0 0 1 50 196 Tm (User: Hey Mycroft, bring me some Tea) Tj
1 0 0 1 50 182 Tm (Mycroft: Of course, would you like Milk with that?) Tj
1 0 0 1 50 168 Tm (User: No) Tj
1 0 0 1 50 154 Tm (Mycroft: How about some Honey?) Tj
1 0 0 1 50 140 Tm (User: All right then) Tj
1 0 0 1 50 126 Tm (Mycroft: Here you go, here's your Tea with Honey) Tj
1 0 0 1 50 112 Tm (```) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (```python) Tj
1 0 0 1 50 70 Tm (from ovos_workshop.decorators import adds_context, removes_context) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
564 0 obj
<< /Length 3483 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (class TeaSkill\(OVOSSkill\):) Tj
1 0 0 1 50 728 Tm (    @intent_handler\(IntentBuilder\('TeaIntent'\).require\("TeaKeyword"\)\)) Tj
1 0 0 1 50 714 Tm (    @adds_context\('MilkContext'\)) Tj
1 0 0 1 50 700 Tm (    def handle_tea_intent\(self, message\):) Tj
1 0 0 1 50 686 Tm (        self.milk = False) Tj
1 0 0 1 50 672 Tm (        self.speak\('Of course, would you like Milk with that?',) Tj
1 0 0 1 50 658 Tm (                   expect_response=True\)) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (    @intent_handler\(IntentBuilder\('NoMilkIntent'\).require\("NoKeyword"\).) Tj
1 0 0 1 50 616 Tm (                                  require\('MilkContext'\).build\(\)\)) Tj
1 0 0 1 50 602 Tm (    @removes_context\('MilkContext'\)) Tj
1 0 0 1 50 588 Tm (    @adds_context\('HoneyContext'\)) Tj
1 0 0 1 50 574 Tm (    def handle_no_milk_intent\(self, message\):) Tj
1 0 0 1 50 560 Tm (        self.speak\('all right, any Honey?', expect_response=True\)) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (    @intent_handler\(IntentBuilder\('YesMilkIntent'\).require\("YesKeyword"\).) Tj
1 0 0 1 50 518 Tm (                                  require\('MilkContext'\).build\(\)\)) Tj
1 0 0 1 50 504 Tm (    @removes_context\('MilkContext'\)) Tj
1 0 0 1 50 490 Tm (    @adds_context\('HoneyContext'\)) Tj
1 0 0 1 50 476 Tm (    def handle_yes_milk_intent\(self, message\):) Tj
1 0 0 1 50 462 Tm (        self.milk = True) Tj
1 0 0 1 50 448 Tm (        self.speak\('What about Honey?', expect_response=True\)) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (    @intent_handler\(IntentBuilder\('NoHoneyIntent'\).require\("NoKeyword"\).) Tj
1 0 0 1 50 406 Tm (                                  require\('HoneyContext'\).build\(\)\)) Tj
1 0 0 1 50 392 Tm (    @removes_context\('HoneyContext'\)) Tj
1 0 0 1 50 378 Tm (    def handle_no_honey_intent\(self, message\):) Tj
1 0 0 1 50 364 Tm (        if self.milk:) Tj
1 0 0 1 50 350 Tm (            self.speak\('Heres your Tea with a dash of Milk'\)) Tj
1 0 0 1 50 336 Tm (        else:) Tj
1 0 0 1 50 322 Tm (            self.speak\('Heres your Tea, straight up'\)) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (    @intent_handler\(IntentBuilder\('YesHoneyIntent'\).require\("YesKeyword"\).) Tj
1 0 0 1 50 280 Tm (                                require\('HoneyContext'\).build\(\)\)) Tj
1 0 0 1 50 266 Tm (    @removes_context\('HoneyContext'\)) Tj
1 0 0 1 50 252 Tm (    def handle_yes_honey_intent\(self, message\):) Tj
1 0 0 1 50 238 Tm (        if self.milk:) Tj
1 0 0 1 50 224 Tm (            self.speak\('Heres your Tea with Milk and Honey'\)) Tj
1 0 0 1 50 210 Tm (        else:) Tj
1 0 0 1 50 196 Tm (            self.speak\('Heres your Tea with Honey'\)) Tj
1 0 0 1 50 182 Tm (```) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (When starting up only the `TeaIntent` will be available. When that has been triggered and ) Tj
1 0 0 1 50 140 Tm (_MilkContext_ is added the `MilkYesIntent` and `MilkNoIntent` are available since the ) Tj
1 0 0 1 50 126 Tm (_MilkContext_ is set. when a _yes_ or _no_ is received the _MilkContext_ is removed and ) Tj
1 0 0 1 50 112 Tm (can't be accessed. In it's place the _HoneyContext_ is added making the `YesHoneyIntent` ) Tj
1 0 0 1 50 98 Tm (and `NoHoneyIntent` available.) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (You can find an example [Tea Skill using conversational context on ) Tj
1 0 0 1 50 56 Tm (Github]\(https://github.com/krisgesling/tea-skill\).) Tj
ET
endstream

endobj
565 0 obj
<< /Length 2913 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (As you can see, Conversational Context lends itself well to implementing a [dialog tree or) Tj
1 0 0 1 50 714 Tm ( conversation tree]\(https://en.wikipedia.org/wiki/Dialog_tree\).) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (# docs/502-converse.md) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (# Converse) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (Each Skill may define a `converse\(\)` method. This method will be called anytime the Skill ) Tj
1 0 0 1 50 588 Tm (has been recently active and a new utterance is processed.&#x20;) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (The converse method expects a single argument which is a standard Mycroft Message object. ) Tj
1 0 0 1 50 546 Tm (This is the same object an intent handler receives.) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (Converse methods must return a Boolean value. True if an utterance was handled, otherwise ) Tj
1 0 0 1 50 504 Tm (False.) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (## Basic usage) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (Let's use a version of the Ice Cream Skill we've been building up and add a converse ) Tj
1 0 0 1 50 434 Tm (method to catch any brief statements of thanks that might directly follow an order.) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (```python) Tj
1 0 0 1 50 392 Tm (from ovos_workshop.skills import OVOSSkill) Tj
1 0 0 1 50 378 Tm (from ovos_workshop.decorators import intent_handler) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (class IceCreamSkill\(OVOSSkill\):) Tj
1 0 0 1 50 322 Tm (    def initialize\(self\):) Tj
1 0 0 1 50 308 Tm (        self.flavors = ['vanilla', 'chocolate', 'mint']) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (    @intent_handler\('request.icecream.intent'\)) Tj
1 0 0 1 50 266 Tm (    def handle_request_icecream\(self\):) Tj
1 0 0 1 50 252 Tm (        self.speak_dialog\('welcome'\)) Tj
1 0 0 1 50 238 Tm (        selection = self.ask_selection\(self.flavors, 'what.flavor'\)) Tj
1 0 0 1 50 224 Tm (        self.speak_dialog\('coming-right-up', {'flavor': selection}\)) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (    def converse\(self, message\):) Tj
1 0 0 1 50 182 Tm (        if self.voc_match\(message.data['utterances'][0], 'Thankyou'\):) Tj
1 0 0 1 50 168 Tm (            self.speak_dialog\("you-are-welcome"\)) Tj
1 0 0 1 50 154 Tm (            return True) Tj
1 0 0 1 50 140 Tm (```) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (In this example:) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (1. A User might request an ice cream which is handled by `handle_request_icecream\(\)`&#x20;) Tj
1 0 0 1 50 70 Tm (2. The Skill would be added to the system Active Skill list for up to 5 minutes.) Tj
1 0 0 1 50 56 Tm (3. Any utterance received by OVOS would trigger this Skills converse system whilst it is ) Tj
ET
endstream

endobj
566 0 obj
<< /Length 3221 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (considered active.) Tj
1 0 0 1 50 728 Tm (4. If the User followed up with a pleasantry such as "Hey Mycroft, thanks" - the converse ) Tj
1 0 0 1 50 714 Tm (method would match this vocab against the `Thankyou.voc` file in the Skill and speak the ) Tj
1 0 0 1 50 700 Tm (contents of the `you-are-welcome.dialog` file. The method would return `True` and the ) Tj
1 0 0 1 50 686 Tm (utterance would be consumed meaning the intent parsing service would never be triggered.) Tj
1 0 0 1 50 672 Tm (5. Any utterance that did not match would be silently ignored and allowed to continue on ) Tj
1 0 0 1 50 658 Tm (to other converse methods and finally to the intent parsing service.) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (> **WARNING** skills that are not [Session]\(https://openvoiceos.github.io/ovos-technical-) Tj
1 0 0 1 50 602 Tm (manual/bus_service/#session\) aware may behave weirdly with voice satellites, see the ) Tj
1 0 0 1 50 588 Tm ([parrot skill]\(https://github.com/OpenVoiceOS/skill-ovos-parrot/\) for an example.) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (## Active Skill List) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (A Skill is considered active if it has been called in the last 5 minutes.) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (Skills are called in order of when they were last active. For example, if a user spoke the) Tj
1 0 0 1 50 476 Tm ( following commands:) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (> Hey Mycroft, set a timer for 10 minutes) Tj
1 0 0 1 50 434 Tm (>) Tj
1 0 0 1 50 420 Tm (> Hey Mycroft, what's the weather) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (Then the utterance "what's the weather" would first be sent to the Timer Skill's ) Tj
1 0 0 1 50 378 Tm (`converse\(\)` method, then to the intent service for normal handling where the Weather ) Tj
1 0 0 1 50 364 Tm (Skill would be called.) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (As the Weather Skill was called it has now been added to the front of the Active Skills ) Tj
1 0 0 1 50 322 Tm (List. Hence, the next utterance received will be directed to:) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (1. `WeatherSkill.converse\(\)`) Tj
1 0 0 1 50 280 Tm (2. `TimerSkill.converse\(\)`) Tj
1 0 0 1 50 266 Tm (3. Normal intent parsing service) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (When does a skill become active?) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (1. **before** an intent is called the skill is **activated**) Tj
1 0 0 1 50 196 Tm (2. if a fallback **returns True** \(to consume the utterance\) the skill is **activated** ) Tj
1 0 0 1 50 182 Tm (right **after** the fallback) Tj
1 0 0 1 50 168 Tm (3. if converse **returns True** \(to consume the utterance\) the skill is **reactivated** ) Tj
1 0 0 1 50 154 Tm (right **after** converse) Tj
1 0 0 1 50 140 Tm (4. a skill can activate/deactivate itself at any time) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (## Making a Skill Active) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (There are occasions where a Skill has not been triggered by the User, but it should still ) Tj
1 0 0 1 50 70 Tm (be considered "Active".) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
567 0 obj
<< /Length 2857 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (In the case of our Ice Cream Skill - we might have a function that will execute when the ) Tj
1 0 0 1 50 728 Tm (customers order is ready. ) Tj
1 0 0 1 50 714 Tm (At this point, we also want to be responsive to the customers thanks, so we call ) Tj
1 0 0 1 50 700 Tm (`self.activate\(\)` to manually add our Skill to the front of the Active Skills List.) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (```python) Tj
1 0 0 1 50 658 Tm (from ovos_workshop.skills import OVOSSkill) Tj
1 0 0 1 50 644 Tm (from ovos_workshop.decorators import intent_handler) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (class IceCreamSkill\(OVOSSkill\):) Tj
1 0 0 1 50 588 Tm (    def on_order_ready\(self, message\):) Tj
1 0 0 1 50 574 Tm (        self.activate\(\)) Tj
1 0 0 1 50 560 Tm (        ) Tj
1 0 0 1 50 546 Tm (    def handle_activate\(self, message: Message\):) Tj
1 0 0 1 50 532 Tm (        """) Tj
1 0 0 1 50 518 Tm (        Called when this skill is considered active by the intent service;) Tj
1 0 0 1 50 504 Tm (        converse method will be called with every utterance.) Tj
1 0 0 1 50 490 Tm (        Override this method to do any optional preparation.) Tj
1 0 0 1 50 476 Tm (        @param message: `{self.skill_id}.activate` Message) Tj
1 0 0 1 50 462 Tm (        """) Tj
1 0 0 1 50 448 Tm (        LOG.info\("Skill has been activated"\)) Tj
1 0 0 1 50 434 Tm (```) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (## Deactivating a Skill) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (The active skill list will be pruned by `ovos-core`, any skills that have not been ) Tj
1 0 0 1 50 364 Tm (interacted with for longer than 5 minutes will be deactivated) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (Individual Skills may react to this event, to clean up state or, in some rare cases, to ) Tj
1 0 0 1 50 322 Tm (reactivate themselves) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (```python) Tj
1 0 0 1 50 280 Tm (from ovos_workshop.skills import OVOSSkill) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (class AlwaysActiveSkill\(OVOSSkill\):) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (    def handle_deactivate\(self, message: Message\):) Tj
1 0 0 1 50 196 Tm (        """) Tj
1 0 0 1 50 182 Tm (        Called when this skill is no longer considered active by the intent) Tj
1 0 0 1 50 168 Tm (        service; converse method will not be called until skill is active again.) Tj
1 0 0 1 50 154 Tm (        Override this method to do any optional cleanup.) Tj
1 0 0 1 50 140 Tm (        @param message: `{self.skill_id}.deactivate` Message) Tj
1 0 0 1 50 126 Tm (        """) Tj
1 0 0 1 50 112 Tm (        self.activate\(\)) Tj
1 0 0 1 50 98 Tm (```) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (A skill can also deactivate itself at any time) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
568 0 obj
<< /Length 2631 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (```python) Tj
1 0 0 1 50 728 Tm (from ovos_workshop.skills import OVOSSkill) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (class LazySkill\(OVOSSkill\):) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (    def handle_intent\(self, message: Message\):) Tj
1 0 0 1 50 644 Tm (        self.speak\("leave me alone"\)) Tj
1 0 0 1 50 630 Tm (        self.deactivate\(\)) Tj
1 0 0 1 50 616 Tm (```) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (## Conversational Intents) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (**NEW** in `ovos-core` version **0.0.8**) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (Skills can have extra intents valid while they are active, those are internal and not part) Tj
1 0 0 1 50 518 Tm ( of the main intent system, instead each skill checks them BEFORE calling `converse`) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (the `@conversational_intent` decorator can be used to define converse intent handlers) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (these intents only trigger after an initial interaction, essentially they are only follow ) Tj
1 0 0 1 50 448 Tm (up questions) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (```python) Tj
1 0 0 1 50 406 Tm (class DogFactsSkill\(OVOSSkill\):) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (    @intent_handler\("dog_facts.intent"\)) Tj
1 0 0 1 50 364 Tm (    def handle_intent\(self, message\):) Tj
1 0 0 1 50 350 Tm (        fact = "Dogs sense of smell is estimated to be 100,000 times more sensitive than ) Tj
1 0 0 1 50 336 Tm (humans") Tj
1 0 0 1 50 322 Tm (        self.speak\(fact\)) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (    @conversational_intent\("another_one.intent"\)) Tj
1 0 0 1 50 280 Tm (    def handle_followup_question\(self, message\):) Tj
1 0 0 1 50 266 Tm (        fact2 = "Dogs have a unique nose print,  making each one distinct and ) Tj
1 0 0 1 50 252 Tm (identifiable.") Tj
1 0 0 1 50 238 Tm (        self.speak\(fact2\)) Tj
1 0 0 1 50 224 Tm (```) Tj
1 0 0 1 50 210 Tm (> **NOTE**: Only works with `.intent` files, Adapt/Keyword intents are NOT supported) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (A more complex example, a game skill that allows saving/exiting the game only during ) Tj
1 0 0 1 50 168 Tm (playback) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (```python) Tj
1 0 0 1 50 126 Tm (class MyGameSkill\(OVOSSkill\):) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (    @intent_handler\("play.intent"\)) Tj
1 0 0 1 50 84 Tm (    def handle_play\(self, message\):) Tj
1 0 0 1 50 70 Tm (        self.start_game\(load_save=True\)) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
569 0 obj
<< /Length 2578 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (    @conversational_intent\("exit.intent"\)) Tj
1 0 0 1 50 728 Tm (    def handle_exit\(self, message\):) Tj
1 0 0 1 50 714 Tm (        self.exit_game\(\)) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (    @conversational_intent\("save.intent"\)) Tj
1 0 0 1 50 672 Tm (    def handle_save\(self, message\):) Tj
1 0 0 1 50 658 Tm (        self.save_game\(\)) Tj
1 0 0 1 50 644 Tm (        ) Tj
1 0 0 1 50 630 Tm (    def handle_deactivate\(self, message\):) Tj
1 0 0 1 50 616 Tm (        self.game_over\(\) # user abandoned interaction) Tj
1 0 0 1 50 602 Tm (        ) Tj
1 0 0 1 50 588 Tm (    def converse\(self, message\):) Tj
1 0 0 1 50 574 Tm (        if self.playing:) Tj
1 0 0 1 50 560 Tm (            # do some game stuff with the utterance) Tj
1 0 0 1 50 546 Tm (            return True) Tj
1 0 0 1 50 532 Tm (        return False) Tj
1 0 0 1 50 518 Tm (```) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (> **NOTE**:  if these intents trigger, they are called **INSTEAD** of `converse`) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (# docs/503-layers.md) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (# Intent Layers) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (> **WARNING**: Skills using these features might not play well with ) Tj
1 0 0 1 50 364 Tm ([HiveMind]\(https://jarbashivemind.github.io/HiveMind-community-docs/\) due to shared state ) Tj
1 0 0 1 50 350 Tm (across satellites) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (## Managing Intents) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (Sometimes you might want to manually enable or disable an intent, in OVOSSkills you can do) Tj
1 0 0 1 50 280 Tm ( this explicitly to create stateful interactions) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (```python) Tj
1 0 0 1 50 238 Tm (class RotatingIntentsSkill\(OVOSSkill\):) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (    def initialize\(self\):) Tj
1 0 0 1 50 196 Tm (        # NOTE: this must be done in initialize, not in __init__) Tj
1 0 0 1 50 182 Tm (        self.disable_intent\("B.intent"\)) Tj
1 0 0 1 50 168 Tm (        self.disable_intent\("C.intent"\)) Tj
1 0 0 1 50 154 Tm (        ) Tj
1 0 0 1 50 140 Tm (    @intent_handler\("A.intent"\)) Tj
1 0 0 1 50 126 Tm (    def handle_A_intent\(self, message\):) Tj
1 0 0 1 50 112 Tm (        # do stuff) Tj
1 0 0 1 50 98 Tm (        self.enable_intent\("B.intent"\)) Tj
1 0 0 1 50 84 Tm (        self.disable_intent\("A.intent"\)) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (    @intent_handler\("B.intent"\)) Tj
ET
endstream

endobj
570 0 obj
<< /Length 3029 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (    def handle_B_intent\(self, message\):) Tj
1 0 0 1 50 728 Tm (        # do stuff) Tj
1 0 0 1 50 714 Tm (        self.enable_intent\("C.intent"\)) Tj
1 0 0 1 50 700 Tm (        self.disable_intent\("B.intent"\)) Tj
1 0 0 1 50 686 Tm (        ) Tj
1 0 0 1 50 672 Tm (    @intent_handler\("C.intent"\)) Tj
1 0 0 1 50 658 Tm (    def handle_C_intent\(self, message\):) Tj
1 0 0 1 50 644 Tm (        # do stuff) Tj
1 0 0 1 50 630 Tm (        self.enable_intent\("A.intent"\)) Tj
1 0 0 1 50 616 Tm (        self.disable_intent\("C.intent"\)) Tj
1 0 0 1 50 602 Tm (```) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (> **NOTE**: Intent states are currently shared across Sessions) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (## State Machines) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (Another utils provided by `ovos-workshop` is `IntentLayers`, to manage groups of intent ) Tj
1 0 0 1 50 490 Tm (together) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (`IntentLayers` lend themselves well to implement state machines.) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (### The Manual way) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (In this example we implement the [Konami Code]\(https://en.wikipedia.org/wiki/Konami_Code\),) Tj
1 0 0 1 50 392 Tm ( doing everything the manual way instead of using decorators) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (![imagem]\(https://github.com/OpenVoiceOS/ovos-technical-) Tj
1 0 0 1 50 350 Tm (manual/assets/33701864/13b9de20-1f8d-44b3-9b65-c13a79a41b1e\)) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (```python) Tj
1 0 0 1 50 308 Tm (class KonamiCodeSkill\(OVOSSkill\):) Tj
1 0 0 1 50 294 Tm (    def initialize\(self\):) Tj
1 0 0 1 50 280 Tm (        self.counter = 0) Tj
1 0 0 1 50 266 Tm (        self.top_fails = 3) Tj
1 0 0 1 50 252 Tm (        ) Tj
1 0 0 1 50 238 Tm (        up_intent = IntentBuilder\('KonamiUpIntent'\).require\("KonamiUpKeyword"\).build\(\)) Tj
1 0 0 1 50 224 Tm (        down_intent = ) Tj
1 0 0 1 50 210 Tm (IntentBuilder\('KonamiDownIntent'\).require\("KonamiDownKeyword"\).build\(\)) Tj
1 0 0 1 50 196 Tm (        left_intent = ) Tj
1 0 0 1 50 182 Tm (IntentBuilder\('KonamiLeftIntent'\).require\("KonamiLeftKeyword"\).build\(\)) Tj
1 0 0 1 50 168 Tm (        right_intent = ) Tj
1 0 0 1 50 154 Tm (IntentBuilder\('KonamiRightIntent'\).require\("KonamiRightKeyword"\).build\(\)) Tj
1 0 0 1 50 140 Tm (        b_intent = IntentBuilder\('KonamiBIntent'\).require\("KonamiBKeyword"\).build\(\)) Tj
1 0 0 1 50 126 Tm (        a_intent = IntentBuilder\('KonamiAIntent'\).require\("KonamiAKeyword"\).build\(\)) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (        self.register_intent\(up_intent, self.handle_up_intent\)) Tj
1 0 0 1 50 84 Tm (        self.register_intent\(down_intent, self.handle_down_intent\)) Tj
1 0 0 1 50 70 Tm (        self.register_intent\(left_intent, self.handle_left_intent\)) Tj
1 0 0 1 50 56 Tm (        self.register_intent\(right_intent, self.handle_right_intent\)) Tj
ET
endstream

endobj
571 0 obj
<< /Length 3396 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (        self.register_intent\(b_intent, self.handle_b_intent\)) Tj
1 0 0 1 50 728 Tm (        self.register_intent\(a_intent, self.handle_a_intent\)) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (    def build_intent_layers\(self\):) Tj
1 0 0 1 50 686 Tm (        self.intent_layers.update_layer\("up1", ["KonamiUpIntent"]\)) Tj
1 0 0 1 50 672 Tm (        self.intent_layers.update_layer\("up2", ["KonamiUpIntent"]\)) Tj
1 0 0 1 50 658 Tm (        self.intent_layers.update_layer\("down1", ["KonamiDownIntent"]\)) Tj
1 0 0 1 50 644 Tm (        self.intent_layers.update_layer\("down2", ["KonamiDownIntent"]\)) Tj
1 0 0 1 50 630 Tm (        self.intent_layers.update_layer\("left1", ["KonamiLeftIntent"]\)) Tj
1 0 0 1 50 616 Tm (        self.intent_layers.update_layer\("right1",["KonamiRightIntent"]\)) Tj
1 0 0 1 50 602 Tm (        self.intent_layers.update_layer\("left2", ["KonamiLeftIntent"]\)) Tj
1 0 0 1 50 588 Tm (        self.intent_layers.update_layer\("right2",["KonamiRightIntent"]\)) Tj
1 0 0 1 50 574 Tm (        self.intent_layers.update_layer\("B",["KonamiBIntent"]\)) Tj
1 0 0 1 50 560 Tm (        self.intent_layers.update_layer\("A",["KonamiAIntent"]\)) Tj
1 0 0 1 50 546 Tm (        ) Tj
1 0 0 1 50 532 Tm (        self.intent_layers.activate_layer\("up1"\)) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (    def reset\(self\):) Tj
1 0 0 1 50 490 Tm (        self.active = False) Tj
1 0 0 1 50 476 Tm (        self.counter = 0) Tj
1 0 0 1 50 462 Tm (        self.intent_layers.disable\(\)) Tj
1 0 0 1 50 448 Tm (        self.intent_layers.activate_layer\("up1"\)) Tj
1 0 0 1 50 434 Tm (        ) Tj
1 0 0 1 50 420 Tm (    def handle_up_intent\(self, message\):) Tj
1 0 0 1 50 406 Tm (        if self.intent_layers.is_active\("up1"\):) Tj
1 0 0 1 50 392 Tm (            self.intent_layers.deactivate_layer\("up1"\)) Tj
1 0 0 1 50 378 Tm (            self.intent_layers.activate_layer\("up2"\)) Tj
1 0 0 1 50 364 Tm (        else:) Tj
1 0 0 1 50 350 Tm (            self.intent_layers.activate_layer\("down1"\)) Tj
1 0 0 1 50 336 Tm (            self.intent_layers.deactivate_layer\("up2"\)) Tj
1 0 0 1 50 322 Tm (        self.acknowledge\(\)) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (    def handle_down_intent\(self, message\):        ) Tj
1 0 0 1 50 280 Tm (        if self.intent_layers.is_active\("down1"\):) Tj
1 0 0 1 50 266 Tm (            self.intent_layers.deactivate_layer\("down1"\)) Tj
1 0 0 1 50 252 Tm (            self.intent_layers.activate_layer\("down2"\)) Tj
1 0 0 1 50 238 Tm (        else:) Tj
1 0 0 1 50 224 Tm (            self.intent_layers.activate_layer\("left1"\)) Tj
1 0 0 1 50 210 Tm (            self.intent_layers.deactivate_layer\("down2"\)) Tj
1 0 0 1 50 196 Tm (        self.acknowledge\(\)) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (    def handle_left_intent\(self, message\):       ) Tj
1 0 0 1 50 154 Tm (        if self.intent_layers.is_active\("left1"\):) Tj
1 0 0 1 50 140 Tm (            self.intent_layers.deactivate_layer\("left1"\)) Tj
1 0 0 1 50 126 Tm (            self.intent_layers.activate_layer\("right1"\)) Tj
1 0 0 1 50 112 Tm (        else:) Tj
1 0 0 1 50 98 Tm (            self.intent_layers.deactivate_layer\("left2"\)) Tj
1 0 0 1 50 84 Tm (            self.intent_layers.activate_layer\("right2"\)) Tj
1 0 0 1 50 70 Tm (        self.acknowledge\(\)) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
572 0 obj
<< /Length 3209 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (    def handle_right_intent\(self, message\):) Tj
1 0 0 1 50 728 Tm (        if self.intent_layers.is_active\("right1"\):) Tj
1 0 0 1 50 714 Tm (            self.intent_layers.deactivate_layer\("right1"\)) Tj
1 0 0 1 50 700 Tm (            self.intent_layers.activate_layer\("left2"\)) Tj
1 0 0 1 50 686 Tm (        else:) Tj
1 0 0 1 50 672 Tm (            self.intent_layers.activate_layer\("B"\)) Tj
1 0 0 1 50 658 Tm (            self.intent_layers.deactivate_layer\("right2"\)) Tj
1 0 0 1 50 644 Tm (        self.acknowledge\(\)) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (    def handle_b_intent\(self, message\):) Tj
1 0 0 1 50 602 Tm (        self.intent_layers.activate_layer\("A"\)) Tj
1 0 0 1 50 588 Tm (        self.intent_layers.deactivate_layer\("B"\)) Tj
1 0 0 1 50 574 Tm (        self.acknowledge\(\)) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (    def handle_a_intent\(self, message\):        ) Tj
1 0 0 1 50 532 Tm (        self.play_audio\("power_up.mp3"\)) Tj
1 0 0 1 50 518 Tm (        self.reset\(\)) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (    def stop\(self\):) Tj
1 0 0 1 50 476 Tm (        if self.active:) Tj
1 0 0 1 50 462 Tm (            self.reset\(\)) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (    def converse\(self, message\):) Tj
1 0 0 1 50 420 Tm (        if self.active:) Tj
1 0 0 1 50 406 Tm (            if not any\(self.voc_match\(utt, kw\) for kw in ["KonamiUpKeyword", ) Tj
1 0 0 1 50 392 Tm (                                                          "KonamiDownKeyword", ) Tj
1 0 0 1 50 378 Tm (                                                          "KonamiLeftKeyword", ) Tj
1 0 0 1 50 364 Tm (                                                          "KonamiRightKeyword", ) Tj
1 0 0 1 50 350 Tm (                                                          "KonamiBKeyword", ) Tj
1 0 0 1 50 336 Tm (                                                          "KonamiAKeyword"]\):) Tj
1 0 0 1 50 322 Tm (                self.counter += 1) Tj
1 0 0 1 50 308 Tm (                if self.counter > self.top_fails:) Tj
1 0 0 1 50 294 Tm (                    self.speak\("Wrong cheat code"\)) Tj
1 0 0 1 50 280 Tm (                    self.reset\(\)) Tj
1 0 0 1 50 266 Tm (                else:) Tj
1 0 0 1 50 252 Tm (                    self.speak\("Wrong! Try again"\)) Tj
1 0 0 1 50 238 Tm (                return True) Tj
1 0 0 1 50 224 Tm (        return False) Tj
1 0 0 1 50 210 Tm (```) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (### Decorators) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (When you have many complex chained intents `IntentLayers` often makes your life easier, a ) Tj
1 0 0 1 50 140 Tm (layer is a named group of intents that you can manage at once.) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (Slightly more complex than the previous example, we may want to offer several "forks" on ) Tj
1 0 0 1 50 98 Tm (the intent execution, enabling different intent groups depending on previous interactions) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm ([skill-moon-game]\(https://github.com/JarbasSkills/skill-moon-game/\) is an example full ) Tj
1 0 0 1 50 56 Tm (voice game implemented this way) Tj
ET
endstream

endobj
573 0 obj
<< /Length 2971 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (An excerpt from the game to illustrate usage of `IntentLayer` decorators) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (> **NOTE**: IntentLayers do not yet support Session, in this example all [voice ) Tj
1 0 0 1 50 686 Tm (satellites]\(https://jarbashivemind.github.io/HiveMind-community-docs/07_voicesat/\) would ) Tj
1 0 0 1 50 672 Tm (join the game) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (```python) Tj
1 0 0 1 50 630 Tm (from ovos_workshop.skills.decorators import layer_intent, enables_layer, \\) Tj
1 0 0 1 50 616 Tm (    disables_layer, resets_layers) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (class Apollo11GameSkill\(OVOSSkill\):) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (    def initialize\(self\):) Tj
1 0 0 1 50 532 Tm (        # start with all game states disabled) Tj
1 0 0 1 50 518 Tm (        self.intent_layers.disable\(\)) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (    @intent_handler\(IntentBuilder\("StartApollo11Intent"\). \\) Tj
1 0 0 1 50 476 Tm (                    optionally\("startKeyword"\). \\) Tj
1 0 0 1 50 462 Tm (                    require\("MoonGameKeyword"\)\)) Tj
1 0 0 1 50 448 Tm (    def handle_start_intent\(self, message=None\):) Tj
1 0 0 1 50 434 Tm (        if not self.playing:) Tj
1 0 0 1 50 420 Tm (            self.playing = True) Tj
1 0 0 1 50 406 Tm (            self.speak_dialog\("start.game"\)) Tj
1 0 0 1 50 392 Tm (            self.handle_intro\(\)) Tj
1 0 0 1 50 378 Tm (        else:) Tj
1 0 0 1 50 364 Tm (            self.speak_dialog\("already.started"\)) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (    @layer_intent\(IntentBuilder\("StopApollo11Intent"\). \\) Tj
1 0 0 1 50 322 Tm (                  require\("stopKeyword"\). \\) Tj
1 0 0 1 50 308 Tm (                  optionally\("MoonGameKeyword"\),) Tj
1 0 0 1 50 294 Tm (                  layer_name="stop_game"\)) Tj
1 0 0 1 50 280 Tm (    @resets_layers\(\)) Tj
1 0 0 1 50 266 Tm (    def handle_game_over\(self, message=None\):) Tj
1 0 0 1 50 252 Tm (        if self.playing:) Tj
1 0 0 1 50 238 Tm (            self.speak_dialog\("stop.game"\)) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (    @enables_layer\(layer_name="guard"\)) Tj
1 0 0 1 50 196 Tm (    @enables_layer\(layer_name="stop_game"\)) Tj
1 0 0 1 50 182 Tm (    def handle_intro\(self\):) Tj
1 0 0 1 50 168 Tm (        self.speak_dialog\("reach_gate"\)) Tj
1 0 0 1 50 154 Tm (        self.speak_dialog\("guard"\)) Tj
1 0 0 1 50 140 Tm (        self.speak_dialog\("present_id", expect_response=True\)) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (    @layer_intent\(IntentBuilder\("Yes1Apollo11Intent"\).require\("yesKeyword"\),) Tj
1 0 0 1 50 98 Tm (                  layer_name="guard"\)) Tj
1 0 0 1 50 84 Tm (    def handle_yes1\(self, message=None\):) Tj
1 0 0 1 50 70 Tm (        self.speak_dialog\("guard_yes"\)) Tj
1 0 0 1 50 56 Tm (        self.briefing_question1\(\)) Tj
ET
endstream

endobj
574 0 obj
<< /Length 2883 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (    @layer_intent\(IntentBuilder\("No1Apollo11Intent"\).require\("noKeyword"\),) Tj
1 0 0 1 50 714 Tm (                  layer_name="guard"\)) Tj
1 0 0 1 50 700 Tm (    @enables_layer\(layer_name="guard2"\)) Tj
1 0 0 1 50 686 Tm (    @disables_layer\(layer_name="guard"\)) Tj
1 0 0 1 50 672 Tm (    def handle_no1\(self, message=None\):) Tj
1 0 0 1 50 658 Tm (        self.speak_dialog\("guard_no"\)) Tj
1 0 0 1 50 644 Tm (        self.speak_dialog\("present_id", expect_response=True\)) Tj
1 0 0 1 50 630 Tm (        ) Tj
1 0 0 1 50 616 Tm (    # \(...\) more intent layers) Tj
1 0 0 1 50 602 Tm (    ) Tj
1 0 0 1 50 588 Tm (    def converse\(self, message\):) Tj
1 0 0 1 50 574 Tm (        if not self.playing:) Tj
1 0 0 1 50 560 Tm (            return False) Tj
1 0 0 1 50 546 Tm (        # \(...\)) Tj
1 0 0 1 50 532 Tm (        # take corrective action when no intent matched) Tj
1 0 0 1 50 518 Tm (        if self.intent_layers.is_active\("guard"\) or \\) Tj
1 0 0 1 50 504 Tm (                self.intent_layers.is_active\("guard2"\):) Tj
1 0 0 1 50 490 Tm (            self.speak_dialog\("guard_dead"\)) Tj
1 0 0 1 50 476 Tm (            self.handle_game_over\(\)) Tj
1 0 0 1 50 462 Tm (        # \(...\)) Tj
1 0 0 1 50 448 Tm (        else:) Tj
1 0 0 1 50 434 Tm (            self.speak_dialog\("invalid.command", expect_response=True\)) Tj
1 0 0 1 50 420 Tm (        return True) Tj
1 0 0 1 50 406 Tm (```) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (# docs/504-session.md) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (# Session Aware Skills) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (**NEW** `ovos-core` version **0.0.8**) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (If you want your skills to handle simultaneous users you need to make them ) Tj
1 0 0 1 50 266 Tm ([Session]\(https://openvoiceos.github.io/ovos-technical-manual/bus_service/#session\) aware) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (Each remote client, usually a [voice satellite]\(https://jarbashivemind.github.io/HiveMind-) Tj
1 0 0 1 50 224 Tm (community-docs/07_voicesat/\), will send a `Session` with the `Message`) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (Your skill should keep track of any Session specific state separately, eg, a chat history) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (> **WARNING**: Stateful Skills need to be Session Aware to play well with ) Tj
1 0 0 1 50 154 Tm ([HiveMind]\(https://jarbashivemind.github.io/HiveMind-community-docs/\)) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (## SessionManager) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (You can access the `Session` in a `Message` object via the `SessionManager` class) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (```python) Tj
1 0 0 1 50 56 Tm (from ovos_bus_client.session import SessionManager, Session) Tj
ET
endstream

endobj
575 0 obj
<< /Length 2637 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (class MySkill\(OVOSSkill\):) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (    def on_something\(self, message\):) Tj
1 0 0 1 50 686 Tm (        sess = SessionManager.get\(message\)) Tj
1 0 0 1 50 672 Tm (        print\(sess.session_id\)) Tj
1 0 0 1 50 658 Tm (```) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (If the message originated in the device itself, the `session_id` is always equal to ) Tj
1 0 0 1 50 616 Tm (`"default"`, if it comes from an external client then it will be a unique uuid) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (## Magic Properties) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (Skills have some "magic properties", these will always reflect the value in the current ) Tj
1 0 0 1 50 546 Tm (`Session`) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (```python) Tj
1 0 0 1 50 504 Tm (    # magic properties -> depend on message.context / Session) Tj
1 0 0 1 50 490 Tm (    @property) Tj
1 0 0 1 50 476 Tm (    def lang\(self\) -> str:) Tj
1 0 0 1 50 462 Tm (        """) Tj
1 0 0 1 50 448 Tm (        Get the current language as a BCP-47 language code. This will consider) Tj
1 0 0 1 50 434 Tm (        current session data if available, else Configuration.) Tj
1 0 0 1 50 420 Tm (        """) Tj
1 0 0 1 50 406 Tm (        ) Tj
1 0 0 1 50 392 Tm (    @property) Tj
1 0 0 1 50 378 Tm (    def location\(self\) -> dict:) Tj
1 0 0 1 50 364 Tm (        """) Tj
1 0 0 1 50 350 Tm (        Get the JSON data struction holding location information.) Tj
1 0 0 1 50 336 Tm (        This info can come from Session) Tj
1 0 0 1 50 322 Tm (        """) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (    @property) Tj
1 0 0 1 50 280 Tm (    def location_pretty\(self\) -> Optional[str]:) Tj
1 0 0 1 50 266 Tm (        """) Tj
1 0 0 1 50 252 Tm (        Get a speakable city from the location config if available) Tj
1 0 0 1 50 238 Tm (        This info can come from Session) Tj
1 0 0 1 50 224 Tm (        """) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (    @property) Tj
1 0 0 1 50 182 Tm (    def location_timezone\(self\) -> Optional[str]:) Tj
1 0 0 1 50 168 Tm (        """) Tj
1 0 0 1 50 154 Tm (        Get the timezone code, such as 'America/Los_Angeles') Tj
1 0 0 1 50 140 Tm (        This info can come from Session) Tj
1 0 0 1 50 126 Tm (        """) Tj
1 0 0 1 50 112 Tm (        ) Tj
1 0 0 1 50 98 Tm (    @property) Tj
1 0 0 1 50 84 Tm (    def dialog_renderer\(self\) -> Optional[MustacheDialogRenderer]:) Tj
1 0 0 1 50 70 Tm (        """) Tj
1 0 0 1 50 56 Tm (        Get a dialog renderer for this skill. Language will be determined by) Tj
ET
endstream

endobj
576 0 obj
<< /Length 2886 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (        message context to match the language associated with the current) Tj
1 0 0 1 50 728 Tm (        session or else from Configuration.) Tj
1 0 0 1 50 714 Tm (        """) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (    @property) Tj
1 0 0 1 50 672 Tm (    def resources\(self\) -> SkillResources:) Tj
1 0 0 1 50 658 Tm (        """) Tj
1 0 0 1 50 644 Tm (        Get a SkillResources object for the current language. Objects are) Tj
1 0 0 1 50 630 Tm (        initialized for the current Session language as needed.) Tj
1 0 0 1 50 616 Tm (        """) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (```) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (## Per User Interactions) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (Let's consider a skill that keeps track of a chat history, how would such a skill keep ) Tj
1 0 0 1 50 518 Tm (track of `Sessions`?) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (```python) Tj
1 0 0 1 50 476 Tm (from ovos_bus_client.session import SessionManager, Session) Tj
1 0 0 1 50 462 Tm (from ovos_workshop.decorators import intent_handler) Tj
1 0 0 1 50 448 Tm (from ovos_workshop.skills import OVOSSkill) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (class UtteranceRepeaterSkill\(OVOSSkill\):) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (    def initialize\(self\):) Tj
1 0 0 1 50 364 Tm (        self.chat_sessions = {}) Tj
1 0 0 1 50 350 Tm (        self.add_event\('recognizer_loop:utterance', self.on_utterance\)) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (    # keep chat history per session) Tj
1 0 0 1 50 308 Tm (    def on_utterance\(self, message\):) Tj
1 0 0 1 50 294 Tm (        utt = message.data['utterances'][0]) Tj
1 0 0 1 50 280 Tm (        sess = SessionManager.get\(message\)) Tj
1 0 0 1 50 266 Tm (        if sess.session_id not in self.chat_sessions:) Tj
1 0 0 1 50 252 Tm (            self.chat_sessions[sess.session_id] = {"current_stt": ""}) Tj
1 0 0 1 50 238 Tm (        self.chat_sessions[sess.session_id]["prev_stt"] = ) Tj
1 0 0 1 50 224 Tm (self.chat_sessions[sess.session_id]["current_stt"]) Tj
1 0 0 1 50 210 Tm (        self.chat_sessions[sess.session_id]["current_stt"] = utt) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (    # retrieve previous STT per session) Tj
1 0 0 1 50 168 Tm (    @intent_handler\('repeat.stt.intent'\)) Tj
1 0 0 1 50 154 Tm (    def handle_repeat_stt\(self, message\):) Tj
1 0 0 1 50 140 Tm (        sess = SessionManager.get\(message\)) Tj
1 0 0 1 50 126 Tm (        if sess.session_id not in self.chat_sessions:) Tj
1 0 0 1 50 112 Tm (            utt = self.translate\('nothing'\)) Tj
1 0 0 1 50 98 Tm (        else:) Tj
1 0 0 1 50 84 Tm (            utt = self.chat_sessions[sess.session_id]["prev_stt"]) Tj
1 0 0 1 50 70 Tm (        self.speak_dialog\('repeat.stt', {"stt": utt}\)) Tj
1 0 0 1 50 56 Tm (            ) Tj
ET
endstream

endobj
577 0 obj
<< /Length 3172 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (    # session specific stop event ) Tj
1 0 0 1 50 728 Tm (    # if this method returns True then self.stop will NOT be called) Tj
1 0 0 1 50 714 Tm (    def stop_session\(self, session: Session\):) Tj
1 0 0 1 50 700 Tm (        if session.session_id in self.chat_sessions:) Tj
1 0 0 1 50 686 Tm (            self.chat_sessions.pop\(session.session_id\)) Tj
1 0 0 1 50 672 Tm (            return True) Tj
1 0 0 1 50 658 Tm (        return False) Tj
1 0 0 1 50 644 Tm (```) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (A full example can be found in the [parrot skill]\(https://github.com/OpenVoiceOS/skill-) Tj
1 0 0 1 50 602 Tm (ovos-parrot\)) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (# docs/51-install_raspovos.md) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (# RaspOVOS: A Beginner's Guide to Setting Up Your Raspberry Pi with OVOS) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (This tutorial is designed for users new to Raspberry Pi and RaspOVOS. Follow these steps ) Tj
1 0 0 1 50 490 Tm (to set up and optimize your device for the best experience.) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (---) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (## Step 1: Prepare Your Hardware) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (### Raspberry Pi Model Recommendations) Tj
1 0 0 1 50 392 Tm (- **Recommended:** Raspberry Pi 4 or 5.) Tj
1 0 0 1 50 378 Tm (    - For offline STT \(speech-to-text\), the **Raspberry Pi 5** offers significant ) Tj
1 0 0 1 50 364 Tm (performance improvements.) Tj
1 0 0 1 50 350 Tm (- **Minimum Requirement:** Raspberry Pi 3.) Tj
1 0 0 1 50 336 Tm (    - **Note:** The Raspberry Pi 3 will work but may be **extremely slow** compared to ) Tj
1 0 0 1 50 322 Tm (newer models.) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (### Storage Options) Tj
1 0 0 1 50 280 Tm (- **SD Card or USB Storage:**) Tj
1 0 0 1 50 266 Tm (    - You can use either a microSD card or a USB drive.) Tj
1 0 0 1 50 252 Tm (- **Recommended:** USB SSD Drive for maximum speed and performance.) Tj
1 0 0 1 50 238 Tm (    - Connect the USB drive to the **blue USB 3.0 port** for optimal performance.) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (### Power Supply Considerations) Tj
1 0 0 1 50 196 Tm (Raspberry Pi boards are notoriously **picky about power supplies**. Insufficient power can) Tj
1 0 0 1 50 182 Tm ( lead to performance issues, random reboots, or the appearance of the **undervoltage ) Tj
1 0 0 1 50 168 Tm (detected** warning \(a lightning bolt symbol in the top-right corner of the screen\).) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (- **Recommended Power Supplies:**) Tj
1 0 0 1 50 126 Tm (    - Raspberry Pi 4: 5V 3A USB-C power adapter.) Tj
1 0 0 1 50 112 Tm (    - Raspberry Pi 5: Official Raspberry Pi 5 USB-C power adapter or equivalent high-) Tj
1 0 0 1 50 98 Tm (quality adapter with sufficient current capacity.) Tj
1 0 0 1 50 84 Tm (- **Common Issues:**) Tj
1 0 0 1 50 70 Tm (    - Using cheap or low-quality chargers or cables may result in voltage drops.) Tj
1 0 0 1 50 56 Tm (    - Long or thin USB cables can cause resistance, reducing the power delivered to the ) Tj
ET
endstream

endobj
578 0 obj
<< /Length 3125 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (board.) Tj
1 0 0 1 50 728 Tm (- **How to Fix:**) Tj
1 0 0 1 50 714 Tm (    - Always use the official power adapter or a trusted brand with a stable 5V output.) Tj
1 0 0 1 50 700 Tm (    - If you see the **"undervoltage detected"** warning, consider replacing your power ) Tj
1 0 0 1 50 686 Tm (supply or cable.) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (---) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (## Step 2: Install RaspOVOS Image) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (1. **Download and Install Raspberry Pi Imager**) Tj
1 0 0 1 50 588 Tm (    - Visit [Raspberry Pi Imager]\(https://www.raspberrypi.com/software/\) and download the ) Tj
1 0 0 1 50 574 Tm (appropriate version for your OS.) Tj
1 0 0 1 50 560 Tm (    - Install and launch the imager.) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (2. **Flash the Image to Storage**) Tj
1 0 0 1 50 518 Tm (    - Insert your SD card or USB drive into your computer.) Tj
1 0 0 1 50 504 Tm (    - In the Raspberry Pi Imager:) Tj
1 0 0 1 50 490 Tm (        - **Choose OS:** Select "Use custom" and locate the RaspOVOS image file.) Tj
1 0 0 1 50 476 Tm (        - **Choose Storage:** Select your SD card or USB drive.) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (![image]\(https://github.com/user-attachments/assets/92458289-a3c3-4c7b-afc8-126881445f9f\)) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (![image]\(https://github.com/user-attachments/assets/36a83d0a-ebc2-4095-94ba-604ad78b5452\)) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (![image]\(https://github.com/user-attachments/assets/47c92497-d1a2-4f2d-90be-189806736c0d\)) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (3. **Advanced Configuration Options**) Tj
1 0 0 1 50 336 Tm (    - Click **Next** and select **Edit Settings** to customize settings, including:) Tj
1 0 0 1 50 322 Tm (        - **Password:** Change the default password.) Tj
1 0 0 1 50 308 Tm (        - **Hostname:** Set a custom hostname for your device.) Tj
1 0 0 1 50 294 Tm (        - **Wi-Fi Credentials:** Enter your Wi-Fi network name and password.) Tj
1 0 0 1 50 280 Tm (        - **Keyboard Layout:** Configure the correct layout for your region.) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (   **Important:** **Do NOT change the default username** \(`ovos`\), as it is required for ) Tj
1 0 0 1 50 238 Tm (the system to function properly.) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (![image]\(https://github.com/user-attachments/assets/9509ea57-ae46-4c0b-b9e9-97935579d207\)) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (![image]\(https://github.com/user-attachments/assets/252af1a0-54dc-4450-aa4a-eb0f0a4d139f\)) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (4. **Write the Image**) Tj
1 0 0 1 50 140 Tm (    - Click **Save** and then **Yes** to flash the image onto your storage device.) Tj
1 0 0 1 50 126 Tm (    - Once complete, safely remove the SD card or USB drive from your computer.) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (---) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (## Step 3: Initial Setup and First Boot) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
579 0 obj
<< /Length 3065 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (### Connect and Power On) Tj
1 0 0 1 50 728 Tm (- Insert the SD card or connect the USB drive to your Raspberry Pi.) Tj
1 0 0 1 50 714 Tm (- Plug in the power supply and connect an HDMI monitor to observe the boot process.) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (### First Boot Process) Tj
1 0 0 1 50 672 Tm (1. **Initialization:**) Tj
1 0 0 1 50 658 Tm (    - The system will expand the filesystem, generate SSH keys, and perform other setups.) Tj
1 0 0 1 50 644 Tm (2. **Reboots:**) Tj
1 0 0 1 50 630 Tm (    - The device will reboot **up to three times** during this process.) Tj
1 0 0 1 50 616 Tm (3. **Autologin:**) Tj
1 0 0 1 50 602 Tm (    - The `ovos` user will automatically log in to the terminal after boot.) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (4. **Check System Status:**) Tj
1 0 0 1 50 560 Tm (    - Use the `ologs` command to monitor logs and confirm that the system has fully ) Tj
1 0 0 1 50 546 Tm (initialized.) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (---) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (## Step 4: Setting Up Wi-Fi) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (### Option 1: Configure Wi-Fi Using Raspberry Pi Imager) Tj
1 0 0 1 50 448 Tm (The most straightforward method is to set up Wi-Fi during the imaging process.) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (1. Open Raspberry Pi Imager and select Edit Settings Option.) Tj
1 0 0 1 50 406 Tm (2. Enter your **SSID \(Wi-Fi network name\)** and **password** in the Wi-Fi configuration ) Tj
1 0 0 1 50 392 Tm (fields.) Tj
1 0 0 1 50 378 Tm (3. Write the image to your SD card or USB drive, and your Wi-Fi will be pre-configured.) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (### Option 2: Use Audio-Based Wi-Fi Setup \(ggwave\)) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (1. Open [ggwave Wi-Fi setup]\(https://openvoiceos.github.io/ovos-audio-transformer-plugin-) Tj
1 0 0 1 50 308 Tm (ggwave/\) on a device with speakers.) Tj
1 0 0 1 50 294 Tm (2. Enter your **SSID** and **password** and transmit the data as sound.) Tj
1 0 0 1 50 280 Tm (3. Place the transmitting device near the Raspberry Pi microphone.) Tj
1 0 0 1 50 266 Tm (4. If successful, youll hear an acknowledgment tone.) Tj
1 0 0 1 50 252 Tm (    - If decoding fails or credentials are incorrect, youll hear an error tone.) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (? **Note:** ggwave is a **work-in-progress** feature and does not have any dialogs or ) Tj
1 0 0 1 50 210 Tm (provide on-screen feedback. ?) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (![image]\(https://github.com/user-attachments/assets/ce2857b1-b93f-4092-99f3-43f555e04920\)) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (---) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (## Step 5: Running OVOS) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (### OVOS First Launch) Tj
1 0 0 1 50 84 Tm (- On the first run, OVOS may take longer to initialize.) Tj
1 0 0 1 50 70 Tm (- When ready, OVOS will say: **"I am ready"** \(requires an Internet connection\).) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
580 0 obj
<< /Length 2630 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (---) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (## Step 6: Using OVOS Commands) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (### Helpful Commands) Tj
1 0 0 1 50 672 Tm (Once the terminal appears, youll see a guide with OVOS commands. Some key commands ) Tj
1 0 0 1 50 658 Tm (include:) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (- **Configuration:**) Tj
1 0 0 1 50 616 Tm (    - `ovos-config`  Manage configuration files.) Tj
1 0 0 1 50 602 Tm (- **Voice Commands:**) Tj
1 0 0 1 50 588 Tm (    - `ovos-listen`  Activate the microphone for commands.) Tj
1 0 0 1 50 574 Tm (    - `ovos-speak <phrase>`  Make OVOS speak a specific phrase.) Tj
1 0 0 1 50 560 Tm (- **Skill Management:**) Tj
1 0 0 1 50 546 Tm (    - `ovos-install [PACKAGE_NAME]`  Install OVOS packages.) Tj
1 0 0 1 50 532 Tm (    - `ovos-update`  Update all OVOS and skill packages.) Tj
1 0 0 1 50 518 Tm (- **Logs and Status:**) Tj
1 0 0 1 50 504 Tm (    - `ologs`  View logs in real-time.) Tj
1 0 0 1 50 490 Tm (    - `ovos-status`  Check the status of OVOS-related services.) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (You use the command `ovos-help` to print the message with all commands again at any point) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (### Check Logs in Real-Time) Tj
1 0 0 1 50 420 Tm (- Use the `ologs` command to monitor logs live on your screen.) Tj
1 0 0 1 50 406 Tm (- If youre unsure whether the system has finished booting, check logs using this command.) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (---) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (Enjoy your journey with RaspOVOS! With your Raspberry Pi set up, you can start exploring ) Tj
1 0 0 1 50 336 Tm (all the features of OpenVoiceOS.) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (# docs/54-skill-examples.md) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (# Default Skills overview) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (A non-exhaustive list of skills available for OpenVoiceOS, these might be available out of) Tj
1 0 0 1 50 224 Tm ( the box or not depending on how you installed OVOS) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (---) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (## ovos-skill-alerts.openvoiceos) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (A skill to manage alarms, timers, reminders, events and todos and optionally sync them ) Tj
1 0 0 1 50 126 Tm (with a CalDAV service.) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (**Usage examples:**) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (- What are my reminders?) Tj
1 0 0 1 50 56 Tm (- Cancel all reminders.) Tj
ET
endstream

endobj
581 0 obj
<< /Length 2146 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (- When is my next alarm?) Tj
1 0 0 1 50 728 Tm (- Schedule a tennis event for 2 PM on friday spanning 2 hours.) Tj
1 0 0 1 50 714 Tm (- What did I miss?) Tj
1 0 0 1 50 700 Tm (- remind me to take out the trash every Thursday and Sunday at 7 PM.) Tj
1 0 0 1 50 686 Tm (- Start a bread timer for 30 minutes.) Tj
1 0 0 1 50 672 Tm (- Did I miss anything?) Tj
1 0 0 1 50 658 Tm (- Set an alarm for 8 AM.) Tj
1 0 0 1 50 644 Tm (- Set a daily alarm for 8 AM.) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (-------) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (## ovos-skill-cmd.forslund) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (No description available) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (**Usage examples:**) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (- run script ___) Tj
1 0 0 1 50 476 Tm (- launch command ___) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (-------) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (## ovos-skill-confucius-quotes.openvoiceos) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (Quotes from Confucius) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (**Usage examples:**) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (- Quote from Confucius) Tj
1 0 0 1 50 308 Tm (- When did Confucius die) Tj
1 0 0 1 50 294 Tm (- When was Confucius born) Tj
1 0 0 1 50 280 Tm (- Who is Confucius) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (-------) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (## ovos-skill-days-in-history.openvoiceos) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (Provides historical events for today or any other calendar day using information pulled ) Tj
1 0 0 1 50 168 Tm (from Wikipedia.) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (**Usage examples:**) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (- who died today in history?) Tj
1 0 0 1 50 98 Tm (- who was born today in history?) Tj
1 0 0 1 50 84 Tm (- What historical events happened on June 16th?) Tj
1 0 0 1 50 70 Tm (- Tell me about events in history on December 12th) Tj
1 0 0 1 50 56 Tm (- What happened today in history?) Tj
ET
endstream

endobj
582 0 obj
<< /Length 2009 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (-------) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (## ovos-skill-dictation.openvoiceos) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (continuously transcribes user speech to text file while enabled) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (**Usage examples:**) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (- start dictation) Tj
1 0 0 1 50 588 Tm (- end dictation) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (-------) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (## ovos-skill-ip.openvoiceos) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (Network connection information) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (**Usage examples:**) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (- What's your IP address?) Tj
1 0 0 1 50 420 Tm (- What's your network address?) Tj
1 0 0 1 50 406 Tm (- Tell me your network address) Tj
1 0 0 1 50 392 Tm (- What network are you connected to?) Tj
1 0 0 1 50 378 Tm (- Tell me your IP address) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (-------) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (## ovos-skill-iss-location.openvoiceos) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (Track the location of the ISS) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (**Usage examples:**) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (- When is the ISS passing over) Tj
1 0 0 1 50 210 Tm (- Where is the ISS) Tj
1 0 0 1 50 196 Tm (- Tell me about the IS) Tj
1 0 0 1 50 182 Tm (- how many persons on board of the space station) Tj
1 0 0 1 50 168 Tm (- Who is on board of the space station?) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (-------) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (## ovos-skill-moviemaster.openvoiceos) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (Find information about movies, actors, and production details. Easily find information ) Tj
1 0 0 1 50 56 Tm (about a movie with your voice.) Tj
ET
endstream

endobj
583 0 obj
<< /Length 2196 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (**Usage examples:**) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (- What are popular movies playing now?) Tj
1 0 0 1 50 686 Tm (- Tell me about the movie _______) Tj
1 0 0 1 50 672 Tm (- What genres does the flick _______ belong to?) Tj
1 0 0 1 50 658 Tm (- Who plays in the movie _______?) Tj
1 0 0 1 50 644 Tm (- How long is the movie _______?) Tj
1 0 0 1 50 630 Tm (- Look for information on the movie _______.) Tj
1 0 0 1 50 616 Tm (- Do you have info on the film _______?) Tj
1 0 0 1 50 602 Tm (- What is the movie _______ about?) Tj
1 0 0 1 50 588 Tm (- What are the highest rated movies out?) Tj
1 0 0 1 50 574 Tm (- When was the movie _______ made?) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (-------) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (## ovos-skill-number-facts.openvoiceos) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (Facts about numbers) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (**Usage examples:**) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (- random number trivia) Tj
1 0 0 1 50 406 Tm (- trivia about next week) Tj
1 0 0 1 50 392 Tm (- trivia about tomorrow) Tj
1 0 0 1 50 378 Tm (- fact about number 666) Tj
1 0 0 1 50 364 Tm (- fact about yesterday) Tj
1 0 0 1 50 350 Tm (- curiosity about year 1992) Tj
1 0 0 1 50 336 Tm (- math fact about number 7) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (-------) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (## ovos-skill-personal.openvoiceos) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (Learn history and personality of the assistant. Ask about the 'birth' and parentage of the) Tj
1 0 0 1 50 224 Tm ( voice assistant and get a taste of the community who is fostering this open source ) Tj
1 0 0 1 50 210 Tm (artificial intelligence.) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (**Usage examples:**) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (- Where were you born?) Tj
1 0 0 1 50 140 Tm (- What are you?) Tj
1 0 0 1 50 126 Tm (- When were you created?) Tj
1 0 0 1 50 112 Tm (- Who made you?) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (-------) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
584 0 obj
<< /Length 1871 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (## ovos-skill-pyradios.openvoiceos) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (a client for the client for the Radio Browser API) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (**Usage examples:**) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (- play tsf jazz on pyradios) Tj
1 0 0 1 50 644 Tm (- play tsf jazz radio) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (-------) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (## ovos-skill-speedtest.openvoiceos) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (runs an internet bandwidth test using speedtest.net) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (**Usage examples:**) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (- run a speedtest) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (-------) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (## ovos-skill-wikihow.openvoiceos) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (How to do nearly everything.) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (**Usage examples:**) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (- how do i get my dog to stop barking) Tj
1 0 0 1 50 322 Tm (- how to boil an egg) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (-------) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (## skill-ovos-audio-recording.openvoiceos) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (No description available) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (**Usage examples:**) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (- new recording named {name}) Tj
1 0 0 1 50 154 Tm (- start recording) Tj
1 0 0 1 50 140 Tm (- start a recording called {name}) Tj
1 0 0 1 50 126 Tm (- start a new audio recording called {name}) Tj
1 0 0 1 50 112 Tm (- begin recording) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (-------) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
585 0 obj
<< /Length 2052 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (## skill-ovos-boot-finished.openvoiceos) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (The Finished Booting skill provides notifications when OpenVoiceOS has fully started and ) Tj
1 0 0 1 50 700 Tm (all core services are ready) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (**Usage examples:**) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (- Disable ready notifications.) Tj
1 0 0 1 50 630 Tm (- Is the system ready?) Tj
1 0 0 1 50 616 Tm (- Enable ready notifications.) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (-------) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (## skill-ovos-date-time.openvoiceos) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (Get the time, date, day of the week) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (**Usage examples:**) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (- What time is it?) Tj
1 0 0 1 50 448 Tm (- Tell me the day of the week) Tj
1 0 0 1 50 434 Tm (- What day is Memorial Day 2020?) Tj
1 0 0 1 50 420 Tm (- What's the date?) Tj
1 0 0 1 50 406 Tm (- Show me the time) Tj
1 0 0 1 50 392 Tm (- How many days until July 4th) Tj
1 0 0 1 50 378 Tm (- What time is it in Paris?) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (-------) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (## skill-ovos-ddg.openvoiceos) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (Use DuckDuckGo to answer questions.) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (**Usage examples:**) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (- ask the duck about the big bang) Tj
1 0 0 1 50 210 Tm (- when was stephen hawking born) Tj
1 0 0 1 50 196 Tm (- who is elon musk) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (-------) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (## skill-ovos-hello-world.openvoiceos) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (Introductory Skill so that Skill Authors can see how an OVOS Skill is put together) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (**Usage examples:**) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
586 0 obj
<< /Length 1974 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (- Hello world) Tj
1 0 0 1 50 728 Tm (- Thank you) Tj
1 0 0 1 50 714 Tm (- How are you?) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (-------) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (## skill-ovos-icanhazdadjokes.openvoiceos) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (Brighten your day with dad humor. Laughter is not guaranteed, but eye rolls are likely.) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (**Usage examples:**) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (- Can you tell jokes?) Tj
1 0 0 1 50 546 Tm (- Make me laugh.) Tj
1 0 0 1 50 532 Tm (- Do you know any Chuck Norris jokes?) Tj
1 0 0 1 50 518 Tm (- Tell me a joke about dentists.) Tj
1 0 0 1 50 504 Tm (- Say a joke.) Tj
1 0 0 1 50 490 Tm (- Tell me a joke.) Tj
1 0 0 1 50 476 Tm (- Do you know any jokes?) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (-------) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (## skill-ovos-local-media.openvoiceos) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (Local Media File Browser For Open Voice OS) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (**Usage examples:**) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (- open my file browser) Tj
1 0 0 1 50 308 Tm (- show my file browser) Tj
1 0 0 1 50 294 Tm (- show my usb drive) Tj
1 0 0 1 50 280 Tm (- start usb browser app) Tj
1 0 0 1 50 266 Tm (- show my usb) Tj
1 0 0 1 50 252 Tm (- show file browser app) Tj
1 0 0 1 50 238 Tm (- show file browser) Tj
1 0 0 1 50 224 Tm (- open usb) Tj
1 0 0 1 50 210 Tm (- start usb browser) Tj
1 0 0 1 50 196 Tm (- open my usb) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (-------) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (## skill-ovos-naptime.openvoiceos) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (Put the assistant to sleep when you don't want to be disturbed.) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (**Usage examples:**) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
587 0 obj
<< /Length 1984 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (- Nap time) Tj
1 0 0 1 50 728 Tm (- Wake up) Tj
1 0 0 1 50 714 Tm (- Go to sleep) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (-------) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (## skill-ovos-news.openvoiceos) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (News streams from around the globe.) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (**Usage examples:**) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (- play npr news) Tj
1 0 0 1 50 546 Tm (- play news in spanish) Tj
1 0 0 1 50 532 Tm (- play euronews) Tj
1 0 0 1 50 518 Tm (- play the news) Tj
1 0 0 1 50 504 Tm (- play portuguese news) Tj
1 0 0 1 50 490 Tm (- play catalan news) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (-------) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (## skill-ovos-parrot.openvoiceos) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (Turn OpenVoiceOS into a echoing parrot! Make OVOS repeat whatever you want.) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (**Usage examples:**) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (- Tell me what I just said.) Tj
1 0 0 1 50 322 Tm (- say Goodnight, Gracie) Tj
1 0 0 1 50 308 Tm (- speak I can say anything you'd like!) Tj
1 0 0 1 50 294 Tm (- start parrot) Tj
1 0 0 1 50 280 Tm (- repeat Once upon a midnight dreary, while I pondered, weak and weary, Over many a quaint) Tj
1 0 0 1 50 266 Tm ( and curious volume of forgotten lore) Tj
1 0 0 1 50 252 Tm (- Repeat what you just said) Tj
1 0 0 1 50 238 Tm (- What did I just say?) Tj
1 0 0 1 50 224 Tm (- Can you repeat that?) Tj
1 0 0 1 50 210 Tm (- stop parrot) Tj
1 0 0 1 50 196 Tm (- Repeat that) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (-------) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (## skill-ovos-somafm.openvoiceos) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (No description available) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (**Usage examples:**) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
588 0 obj
<< /Length 2006 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (- play soma fm radio) Tj
1 0 0 1 50 728 Tm (- play metal detector) Tj
1 0 0 1 50 714 Tm (- play secret agent) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (-------) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (## skill-ovos-spelling.openvoiceos) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (No description available) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (**Usage examples:**) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (- How do you spell bureacracy?) Tj
1 0 0 1 50 546 Tm (- How do you spell aardvark?) Tj
1 0 0 1 50 532 Tm (- Spell omnipotence) Tj
1 0 0 1 50 518 Tm (- Spell succotash) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (-------) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (## skill-ovos-volume.openvoiceos) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (Control the volume of OVOS with verbal commands) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (**Usage examples:**) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (- unmute volume) Tj
1 0 0 1 50 350 Tm (- volume low) Tj
1 0 0 1 50 336 Tm (- mute audio) Tj
1 0 0 1 50 322 Tm (- volume to high level) Tj
1 0 0 1 50 308 Tm (- reset volume) Tj
1 0 0 1 50 294 Tm (- volume to high) Tj
1 0 0 1 50 280 Tm (- volume level low) Tj
1 0 0 1 50 266 Tm (- toggle audio) Tj
1 0 0 1 50 252 Tm (- low volume) Tj
1 0 0 1 50 238 Tm (- set volume to maximum) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (-------) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (## skill-ovos-weather.openvoiceos) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (Get weather conditions, forecasts, expected precipitation and more! You can also ask for ) Tj
1 0 0 1 50 126 Tm (other cities around the world. Current conditions and weather forecasts come from ) Tj
1 0 0 1 50 112 Tm (OpenMeteo) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (**Usage examples:**) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (- What's the temperature in Paris tomorrow in Celsius?) Tj
ET
endstream

endobj
589 0 obj
<< /Length 2213 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (- When will it rain next?) Tj
1 0 0 1 50 728 Tm (- What's the high temperature tomorrow) Tj
1 0 0 1 50 714 Tm (- Is it going to snow in Baltimore?) Tj
1 0 0 1 50 700 Tm (- what is the weather like?) Tj
1 0 0 1 50 686 Tm (- How windy is it?) Tj
1 0 0 1 50 672 Tm (- What is the weather this weekend?) Tj
1 0 0 1 50 658 Tm (- What is the weather in Houston?) Tj
1 0 0 1 50 644 Tm (- Will it be cold on Tuesday) Tj
1 0 0 1 50 630 Tm (- What's the temperature?) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (-------) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (## skill-ovos-wikipedia.openvoiceos) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (Query Wikipedia for answers to all your questions. Get just a summary, or ask for more to ) Tj
1 0 0 1 50 518 Tm (get in-depth information.) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (**Usage examples:**) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (- Search for chocolate) Tj
1 0 0 1 50 448 Tm (- More information) Tj
1 0 0 1 50 434 Tm (- Tell me about beans) Tj
1 0 0 1 50 420 Tm (- Tell me More) Tj
1 0 0 1 50 406 Tm (- Tell me about the Pembroke Welsh Corgi) Tj
1 0 0 1 50 392 Tm (- Check Wikipedia for beans) Tj
1 0 0 1 50 378 Tm (- Tell me about Elon Musk) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (-------) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (## skill-ovos-wolfie.openvoiceos) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (Use Wolfram Alpha for general knowledge questions.) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (**Usage examples:**) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (- How tall is Mount Everest?) Tj
1 0 0 1 50 210 Tm (- What's 18 times 4?) Tj
1 0 0 1 50 196 Tm (- How many inches in a meter?) Tj
1 0 0 1 50 182 Tm (- What is Madonna's real name?) Tj
1 0 0 1 50 168 Tm (- When was The Rocky Horror Picture Show released?) Tj
1 0 0 1 50 154 Tm (- ask the wolf what is the speed of light) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (-------) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (## skill-ovos-wordnet.openvoiceos) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (Use Wordnet to answer dictionary-like questions.) Tj
ET
endstream

endobj
590 0 obj
<< /Length 2517 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (**Usage examples:**) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (- what is the definition of ...) Tj
1 0 0 1 50 686 Tm (- what is the antonym of ...) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (-------) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (# docs/55-raspovos_troubleshooting.md) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (# RaspOVOS Troubleshooting) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (> ?? This guide applies to raspOVOS and may assume some raspOVOS exclusive utilities are ) Tj
1 0 0 1 50 546 Tm (available, if you are not using raspOVOS [some command line utilities]\(https://github.com/) Tj
1 0 0 1 50 532 Tm (OpenVoiceOS/raspOVOS/tree/dev/overlays/base_ovos/usr/local/bin\) will not be available) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (---) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (## Undervoltage Detected Warning) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (If you see an **undervoltage detected** warning:) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (- Check your power adapter and cable.) Tj
1 0 0 1 50 406 Tm (- Ensure the adapter can supply enough current \(e.g., 5A for Raspberry Pi 5\).) Tj
1 0 0 1 50 392 Tm (- Replace long or thin cables with shorter, thicker ones for better power delivery.) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (---) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (## System Boot Issues) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (If the device does not complete its boot sequence:) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (1. Ensure the power supply is stable and sufficient for your Raspberry Pi model.) Tj
1 0 0 1 50 266 Tm (2. If the OS boots but OVOS doesn't work:) Tj
1 0 0 1 50 252 Tm (     - See if all OVOS services started up correctly with `ovos-status` command) Tj
1 0 0 1 50 238 Tm (     - Check log files in `~/.local/state/mycroft/` for OVOS error messages.) Tj
1 0 0 1 50 224 Tm (3. Re-flash the image if necessary, ensuring all configuration options are set correctly.) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (---) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (## OVOS Fails to Speak "I am Ready") Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (- Confirm the device has a working Internet connection. otherwise OVOS won't consider ) Tj
1 0 0 1 50 126 Tm (itself ready) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (---) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (## How to debug intent matching) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
591 0 obj
<< /Length 4470 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (To easily debug intent parsing open a terminal and run `ologs | grep intent` , this will ) Tj
1 0 0 1 50 728 Tm (show you live logs related only to intent parsing) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (then in another terminal send commands with `ovos-say-to "sentence to test"`  \(or use your) Tj
1 0 0 1 50 686 Tm ( voice\)) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (```bash) Tj
1 0 0 1 50 630 Tm (\(ovos\) ovos@raspOVOS:~ $ ologs | grep intent) Tj
1 0 0 1 50 616 Tm (2025-01-23 16:29:54.299 - skills - ovos_core.intent_services:handle_utterance:416 - INFO -) Tj
1 0 0 1 50 602 Tm ( common_qa match: IntentHandlerMatch\(match_type='question:action.skill-ovos-) Tj
1 0 0 1 50 588 Tm (wikipedia.openvoiceos', match_data={'phrase': 'Qui s Elon Musk', 'skill_id': 'skill-ovos-) Tj
1 0 0 1 50 574 Tm (wikipedia.openvoiceos', 'answer': "Elon Reeve Musk FRS s un empresari, inversor i magnat ) Tj
1 0 0 1 50 560 Tm (conegut pels seus papers clau a l'empresa espacial SpaceX i l'automobilstica Tesla, Inc. ) Tj
1 0 0 1 50 546 Tm (Les accions i les opinions expressades per Musk l'han convertit en una figura ) Tj
1 0 0 1 50 532 Tm (polaritzadora. Desprs de guanyar al novembre, Trump va anunciar que havia triat Musk per ) Tj
1 0 0 1 50 518 Tm (codirigir la junta assessora del nou Departament d'Eficincia Governamental .", ) Tj
1 0 0 1 50 504 Tm ('callback_data': {'answer': "Elon Reeve Musk FRS s un empresari, inversor i magnat ) Tj
1 0 0 1 50 490 Tm (conegut pels seus papers clau a l'empresa espacial SpaceX i l'automobilstica Tesla, Inc. ) Tj
1 0 0 1 50 476 Tm (Les accions i les opinions expressades per Musk l'han convertit en una figura ) Tj
1 0 0 1 50 462 Tm (polaritzadora. Desprs de guanyar al novembre, Trump va anunciar que havia triat Musk per ) Tj
1 0 0 1 50 448 Tm (codirigir la junta assessora del nou Departament d'Eficincia Governamental ."}, 'conf': ) Tj
1 0 0 1 50 434 Tm (0.6}, skill_id='skill-ovos-wikipedia.openvoiceos', utterance='Qui s Elon Musk', ) Tj
1 0 0 1 50 420 Tm (updated_session=None\)) Tj
1 0 0 1 50 406 Tm (2025-01-23 16:29:54.300 - skills - ovos_core.intent_services:handle_utterance:436 - DEBUG ) Tj
1 0 0 1 50 392 Tm (- intent matching took: 1.5732948780059814) Tj
1 0 0 1 50 378 Tm (2025-01-23 16:34:07.672 - skills - ovos_core.intent_services:handle_utterance:399 - INFO -) Tj
1 0 0 1 50 364 Tm ( Parsing utterance: ['quina hora s']) Tj
1 0 0 1 50 350 Tm (2025-01-23 16:34:07.675 - skills - ovos_core.intent_services:get_pipeline:234 - DEBUG - ) Tj
1 0 0 1 50 336 Tm (Session pipeline: ['stop_high', 'converse', 'ocp_high', 'padatious_high', 'adapt_high', ) Tj
1 0 0 1 50 322 Tm ('ocp_medium', 'fallback_high', 'stop_medium', 'adapt_medium', 'padatious_medium', ) Tj
1 0 0 1 50 308 Tm ('adapt_low', 'common_qa', 'fallback_medium', 'fallback_low']) Tj
1 0 0 1 50 294 Tm (2025-01-23 16:34:07.678 - skills - ovos_core.intent_services:handle_utterance:430 - DEBUG ) Tj
1 0 0 1 50 280 Tm (- no match from <bound method StopService.match_stop_high of ) Tj
1 0 0 1 50 266 Tm (<ovos_core.intent_services.stop_service.StopService object at 0x7fff2b036310>>) Tj
1 0 0 1 50 252 Tm (2025-01-23 16:34:07.686 - skills - ovos_core.intent_services:handle_utterance:430 - DEBUG ) Tj
1 0 0 1 50 238 Tm (- no match from <bound method ConverseService.converse_with_skills of ) Tj
1 0 0 1 50 224 Tm (<ovos_core.intent_services.converse_service.ConverseService object at 0x7fff7159ae50>>) Tj
1 0 0 1 50 210 Tm (2025-01-23 16:34:07.691 - skills - ovos_core.intent_services:handle_utterance:430 - DEBUG ) Tj
1 0 0 1 50 196 Tm (- no match from <bound method OCPPipelineMatcher.match_high of ) Tj
1 0 0 1 50 182 Tm (<ocp_pipeline.opm.OCPPipelineMatcher object at 0x7fff26ac3910>>) Tj
1 0 0 1 50 168 Tm (2025-01-23 16:34:07.696 - skills - ovos_core.intent_services:handle_utterance:416 - INFO -) Tj
1 0 0 1 50 154 Tm ( padatious_high match: IntentHandlerMatch\(match_type='skill-ovos-date-) Tj
1 0 0 1 50 140 Tm (time.openvoiceos:what.time.is.it.intent', match_data={}, skill_id='skill-ovos-date-) Tj
1 0 0 1 50 126 Tm (time.openvoiceos', utterance='quina hora s', updated_session=None\)) Tj
1 0 0 1 50 112 Tm (2025-01-23 16:34:07.698 - skills - ovos_core.intent_services:handle_utterance:436 - DEBUG ) Tj
1 0 0 1 50 98 Tm (- intent matching took: 0.022924184799194336) Tj
1 0 0 1 50 84 Tm (```) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (## How to check installed skills) Tj
ET
endstream

endobj
592 0 obj
<< /Length 2847 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (use the `ls-skills` command) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (```bash) Tj
1 0 0 1 50 672 Tm (\(ovos\) ovos@raspOVOS:~ $ ls-skills) Tj
1 0 0 1 50 658 Tm ([INFO] Listing installed skills for OpenVoiceOS...) Tj
1 0 0 1 50 644 Tm ([WARNING] Scanning for installed skills. This may take a few moments, depending on the ) Tj
1 0 0 1 50 630 Tm (number of installed skills...) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (The following skills are installed:) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (['skill-ovos-weather.openvoiceos',) Tj
1 0 0 1 50 560 Tm ( 'ovos-skill-dictation.openvoiceos',) Tj
1 0 0 1 50 546 Tm ( 'skill-ovos-parrot.openvoiceos',) Tj
1 0 0 1 50 532 Tm ( 'ovos-skill-speedtest.openvoiceos',) Tj
1 0 0 1 50 518 Tm ( 'ovos-skill-ip.openvoiceos',) Tj
1 0 0 1 50 504 Tm ( 'skill-ovos-spelling.openvoiceos',) Tj
1 0 0 1 50 490 Tm ( 'ovos-skill-iss-location.openvoiceos',) Tj
1 0 0 1 50 476 Tm ( 'skill-ovos-audio-recording.openvoiceos',) Tj
1 0 0 1 50 462 Tm ( 'skill-ovos-wordnet.openvoiceos',) Tj
1 0 0 1 50 448 Tm ( 'ovos-skill-days-in-history.openvoiceos',) Tj
1 0 0 1 50 434 Tm ( 'ovos-skill-confucius-quotes.openvoiceos',) Tj
1 0 0 1 50 420 Tm ( 'skill-ovos-fallback-chatgpt.openvoiceos',) Tj
1 0 0 1 50 406 Tm ( 'ovos-skill-alerts.openvoiceos',) Tj
1 0 0 1 50 392 Tm ( 'skill-ovos-local-media.openvoiceos',) Tj
1 0 0 1 50 378 Tm ( 'skill-ovos-volume.openvoiceos',) Tj
1 0 0 1 50 364 Tm ( 'ovos-skill-wikihow.openvoiceos',) Tj
1 0 0 1 50 350 Tm ( 'ovos-skill-personal.OpenVoiceOS',) Tj
1 0 0 1 50 336 Tm ( 'ovos-skill-number-facts.openvoiceos',) Tj
1 0 0 1 50 322 Tm ( 'skill-ovos-hello-world.openvoiceos',) Tj
1 0 0 1 50 308 Tm ( 'ovos-skill-moviemaster.openvoiceos',) Tj
1 0 0 1 50 294 Tm ( 'skill-ovos-date-time.openvoiceos',) Tj
1 0 0 1 50 280 Tm ( 'skill-ovos-fallback-unknown.openvoiceos',) Tj
1 0 0 1 50 266 Tm ( 'ovos-skill-pyradios.openvoiceos',) Tj
1 0 0 1 50 252 Tm ( 'skill-ovos-icanhazdadjokes.openvoiceos',) Tj
1 0 0 1 50 238 Tm ( 'ovos-skill-cmd.forslund',) Tj
1 0 0 1 50 224 Tm ( 'ovos-skill-spotify.openvoiceos',) Tj
1 0 0 1 50 210 Tm ( 'skill-ovos-randomness.openvoiceos',) Tj
1 0 0 1 50 196 Tm ( 'skill-ovos-naptime.openvoiceos',) Tj
1 0 0 1 50 182 Tm ( 'skill-ovos-wikipedia.openvoiceos',) Tj
1 0 0 1 50 168 Tm ( 'skill-ovos-boot-finished.openvoiceos',) Tj
1 0 0 1 50 154 Tm ( 'ovos-skill-camera.openvoiceos',) Tj
1 0 0 1 50 140 Tm ( 'skill-ovos-ddg.openvoiceos',) Tj
1 0 0 1 50 126 Tm ( 'ovos-skill-laugh.openvoiceos',) Tj
1 0 0 1 50 112 Tm ( 'skill-ovos-somafm.openvoiceos',) Tj
1 0 0 1 50 98 Tm ( 'skill-ovos-news.openvoiceos',) Tj
1 0 0 1 50 84 Tm ( 'skill-ovos-wolfie.openvoiceos',) Tj
1 0 0 1 50 70 Tm ( 'ovos-skill-fuster-quotes.openvoiceos']) Tj
1 0 0 1 50 56 Tm ([SUCCESS] Skill listing completed.) Tj
ET
endstream

endobj
593 0 obj
<< /Length 2847 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (```) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (## How to check available intents) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (Skills can optionally provide metadata, if they do instructions will be available under ) Tj
1 0 0 1 50 672 Tm (`ovos-commands`) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (```bash) Tj
1 0 0 1 50 630 Tm (\(ovos\) ovos@raspOVOS:~ $ ovos-commands ) Tj
1 0 0 1 50 616 Tm (##########################) Tj
1 0 0 1 50 602 Tm (OpenVoiceOS - Skills help) Tj
1 0 0 1 50 588 Tm (##########################) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (Scanning skills...) Tj
1 0 0 1 50 546 Tm (Found 37 installed skills) Tj
1 0 0 1 50 532 Tm (Skill ids:) Tj
1 0 0 1 50 518 Tm (0\) - skill-ovos-weather.openvoiceos) Tj
1 0 0 1 50 504 Tm (1\) - ovos-skill-dictation.openvoiceos) Tj
1 0 0 1 50 490 Tm (2\) - skill-ovos-parrot.openvoiceos) Tj
1 0 0 1 50 476 Tm (3\) - ovos-skill-speedtest.openvoiceos) Tj
1 0 0 1 50 462 Tm (4\) - ovos-skill-ip.openvoiceos) Tj
1 0 0 1 50 448 Tm (5\) - skill-ovos-spelling.openvoiceos) Tj
1 0 0 1 50 434 Tm (6\) - ovos-skill-iss-location.openvoiceos) Tj
1 0 0 1 50 420 Tm (7\) - skill-ovos-audio-recording.openvoiceos) Tj
1 0 0 1 50 406 Tm (8\) - skill-ovos-wordnet.openvoiceos) Tj
1 0 0 1 50 392 Tm (9\) - ovos-skill-days-in-history.openvoiceos) Tj
1 0 0 1 50 378 Tm (10\) - ovos-skill-confucius-quotes.openvoiceos) Tj
1 0 0 1 50 364 Tm (11\) - skill-ovos-fallback-chatgpt.openvoiceos) Tj
1 0 0 1 50 350 Tm (12\) - ovos-skill-alerts.openvoiceos) Tj
1 0 0 1 50 336 Tm (13\) - skill-ovos-local-media.openvoiceos) Tj
1 0 0 1 50 322 Tm (14\) - skill-ovos-volume.openvoiceos) Tj
1 0 0 1 50 308 Tm (15\) - ovos-skill-wikihow.openvoiceos) Tj
1 0 0 1 50 294 Tm (16\) - ovos-skill-personal.OpenVoiceOS) Tj
1 0 0 1 50 280 Tm (17\) - ovos-skill-number-facts.openvoiceos) Tj
1 0 0 1 50 266 Tm (18\) - skill-ovos-hello-world.openvoiceos) Tj
1 0 0 1 50 252 Tm (19\) - ovos-skill-moviemaster.openvoiceos) Tj
1 0 0 1 50 238 Tm (20\) - skill-ovos-date-time.openvoiceos) Tj
1 0 0 1 50 224 Tm (21\) - skill-ovos-fallback-unknown.openvoiceos) Tj
1 0 0 1 50 210 Tm (22\) - ovos-skill-pyradios.openvoiceos) Tj
1 0 0 1 50 196 Tm (23\) - skill-ovos-icanhazdadjokes.openvoiceos) Tj
1 0 0 1 50 182 Tm (24\) - ovos-skill-cmd.forslund) Tj
1 0 0 1 50 168 Tm (25\) - ovos-skill-spotify.openvoiceos) Tj
1 0 0 1 50 154 Tm (26\) - skill-ovos-randomness.openvoiceos) Tj
1 0 0 1 50 140 Tm (27\) - skill-ovos-naptime.openvoiceos) Tj
1 0 0 1 50 126 Tm (28\) - skill-ovos-wikipedia.openvoiceos) Tj
1 0 0 1 50 112 Tm (29\) - skill-ovos-boot-finished.openvoiceos) Tj
1 0 0 1 50 98 Tm (30\) - ovos-skill-camera.openvoiceos) Tj
1 0 0 1 50 84 Tm (31\) - skill-ovos-ddg.openvoiceos) Tj
1 0 0 1 50 70 Tm (32\) - ovos-skill-laugh.openvoiceos) Tj
1 0 0 1 50 56 Tm (33\) - skill-ovos-somafm.openvoiceos) Tj
ET
endstream

endobj
594 0 obj
<< /Length 2570 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (34\) - skill-ovos-news.openvoiceos) Tj
1 0 0 1 50 728 Tm (35\) - skill-ovos-wolfie.openvoiceos) Tj
1 0 0 1 50 714 Tm (36\) - ovos-skill-fuster-quotes.openvoiceos) Tj
1 0 0 1 50 700 Tm (Select skill number: 36) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (Skill name: ovos-skill-fuster-quotes.openvoiceos) Tj
1 0 0 1 50 658 Tm (Description: La cita del dia de Fuster) Tj
1 0 0 1 50 644 Tm (Usage examples:) Tj
1 0 0 1 50 630 Tm (    - La frase del Fuster del dia) Tj
1 0 0 1 50 616 Tm (    - Necessito alguna idea fusteriana) Tj
1 0 0 1 50 602 Tm (    - Algun pensament fusteri?) Tj
1 0 0 1 50 588 Tm (    - Diguem un aforisme del Fuster) Tj
1 0 0 1 50 574 Tm (    - Qu diria Joan Fuster, aqu?) Tj
1 0 0 1 50 560 Tm (    - Vull sentir un aforisme fusteri) Tj
1 0 0 1 50 546 Tm (    - Qu diu en Fuster?) Tj
1 0 0 1 50 532 Tm (    - Qu pensen els fusterians?) Tj
1 0 0 1 50 518 Tm (    - Digues-me alguna cosa fusteriana) Tj
1 0 0 1 50 504 Tm (```) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (---) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (## How to remove all skills) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (If you want to revert OVOS to a blank state you can use `ovos-reset-brain` to remove ALL ) Tj
1 0 0 1 50 406 Tm (skills) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (```bash) Tj
1 0 0 1 50 350 Tm (\(ovos\) ovos@raspOVOS:~ $ ovos-reset-brain ) Tj
1 0 0 1 50 336 Tm ([INFO] Starting OpenVoiceOS skill uninstallation process...) Tj
1 0 0 1 50 322 Tm (WARNING: This will uninstall all installed skills. Do you want to continue? \(y/n\): y) Tj
1 0 0 1 50 308 Tm (Using Python 3.11.2 environment at: .venvs/ovos) Tj
1 0 0 1 50 294 Tm ([INFO] The following skills will be uninstalled:) Tj
1 0 0 1 50 280 Tm (- ovos-skill-alerts) Tj
1 0 0 1 50 266 Tm (- ovos-skill-audio-recording) Tj
1 0 0 1 50 252 Tm (- ovos-skill-boot-finished) Tj
1 0 0 1 50 238 Tm (- ovos-skill-camera) Tj
1 0 0 1 50 224 Tm (- ovos-skill-cmd) Tj
1 0 0 1 50 210 Tm (- ovos-skill-confucius-quotes) Tj
1 0 0 1 50 196 Tm (- ovos-skill-date-time) Tj
1 0 0 1 50 182 Tm (- ovos-skill-days-in-history) Tj
1 0 0 1 50 168 Tm (- ovos-skill-dictation) Tj
1 0 0 1 50 154 Tm (- ovos-skill-fallback-unknown) Tj
1 0 0 1 50 140 Tm (- ovos-skill-fuster-quotes) Tj
1 0 0 1 50 126 Tm (- ovos-skill-hello-world) Tj
1 0 0 1 50 112 Tm (- ovos-skill-icanhazdadjokes) Tj
1 0 0 1 50 98 Tm (- ovos-skill-ip) Tj
1 0 0 1 50 84 Tm (- ovos-skill-iss-location) Tj
1 0 0 1 50 70 Tm (- ovos-skill-laugh) Tj
1 0 0 1 50 56 Tm (- ovos-skill-local-media) Tj
ET
endstream

endobj
595 0 obj
<< /Length 2580 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (- ovos-skill-moviemaster) Tj
1 0 0 1 50 728 Tm (- ovos-skill-naptime) Tj
1 0 0 1 50 714 Tm (- ovos-skill-number-facts) Tj
1 0 0 1 50 700 Tm (- ovos-skill-parrot) Tj
1 0 0 1 50 686 Tm (- ovos-skill-personal) Tj
1 0 0 1 50 672 Tm (- ovos-skill-pyradios) Tj
1 0 0 1 50 658 Tm (- ovos-skill-randomness) Tj
1 0 0 1 50 644 Tm (- ovos-skill-somafm) Tj
1 0 0 1 50 630 Tm (- ovos-skill-speedtest) Tj
1 0 0 1 50 616 Tm (- ovos-skill-spelling) Tj
1 0 0 1 50 602 Tm (- ovos-skill-spotify) Tj
1 0 0 1 50 588 Tm (- ovos-skill-volume) Tj
1 0 0 1 50 574 Tm (- ovos-skill-weather) Tj
1 0 0 1 50 560 Tm (- ovos-skill-wikihow) Tj
1 0 0 1 50 546 Tm (- ovos-skill-wikipedia) Tj
1 0 0 1 50 532 Tm (- skill-ddg) Tj
1 0 0 1 50 518 Tm (- skill-news) Tj
1 0 0 1 50 504 Tm (- skill-ovos-fallback-chatgpt) Tj
1 0 0 1 50 490 Tm (- skill-wolfie) Tj
1 0 0 1 50 476 Tm (- skill-wordnet) Tj
1 0 0 1 50 462 Tm ([INFO] Uninstalling skills...) Tj
1 0 0 1 50 448 Tm (Using Python 3.11.2 environment at: .venvs/ovos) Tj
1 0 0 1 50 434 Tm (Uninstalled 37 packages in 513ms) Tj
1 0 0 1 50 420 Tm ( - ovos-skill-alerts==0.1.15) Tj
1 0 0 1 50 406 Tm ( - ovos-skill-audio-recording==0.2.5a5) Tj
1 0 0 1 50 392 Tm ( - ovos-skill-boot-finished==0.4.9) Tj
1 0 0 1 50 378 Tm ( - ovos-skill-camera==1.0.3a4) Tj
1 0 0 1 50 364 Tm ( - ovos-skill-cmd==0.2.8) Tj
1 0 0 1 50 350 Tm ( - ovos-skill-confucius-quotes==0.1.11a1) Tj
1 0 0 1 50 336 Tm ( - ovos-skill-date-time==0.4.6) Tj
1 0 0 1 50 322 Tm ( - ovos-skill-days-in-history==0.3.9) Tj
1 0 0 1 50 308 Tm ( - ovos-skill-dictation==0.2.10) Tj
1 0 0 1 50 294 Tm ( - ovos-skill-fallback-unknown==0.1.6a2) Tj
1 0 0 1 50 280 Tm ( - ovos-skill-fuster-quotes==0.0.1) Tj
1 0 0 1 50 266 Tm ( - ovos-skill-hello-world==0.1.11a4) Tj
1 0 0 1 50 252 Tm ( - ovos-skill-icanhazdadjokes==0.3.2) Tj
1 0 0 1 50 238 Tm ( - ovos-skill-ip==0.2.7a1) Tj
1 0 0 1 50 224 Tm ( - ovos-skill-iss-location==0.2.10) Tj
1 0 0 1 50 210 Tm ( - ovos-skill-laugh==0.2.1a3) Tj
1 0 0 1 50 196 Tm ( - ovos-skill-local-media==0.2.9) Tj
1 0 0 1 50 182 Tm ( - ovos-skill-moviemaster==0.0.8a4) Tj
1 0 0 1 50 168 Tm ( - ovos-skill-naptime==0.3.12a1) Tj
1 0 0 1 50 154 Tm ( - ovos-skill-number-facts==0.1.10) Tj
1 0 0 1 50 140 Tm ( - ovos-skill-parrot==0.1.14) Tj
1 0 0 1 50 126 Tm ( - ovos-skill-personal==0.1.9) Tj
1 0 0 1 50 112 Tm ( - ovos-skill-pyradios==0.1.5a1) Tj
1 0 0 1 50 98 Tm ( - ovos-skill-randomness==0.1.2a1) Tj
1 0 0 1 50 84 Tm ( - ovos-skill-somafm==0.1.5) Tj
1 0 0 1 50 70 Tm ( - ovos-skill-speedtest==0.3.3a4) Tj
1 0 0 1 50 56 Tm ( - ovos-skill-spelling==0.2.6a3) Tj
ET
endstream

endobj
596 0 obj
<< /Length 3308 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm ( - ovos-skill-spotify==0.1.9) Tj
1 0 0 1 50 728 Tm ( - ovos-skill-volume==0.1.13a2) Tj
1 0 0 1 50 714 Tm ( - ovos-skill-weather==0.1.14) Tj
1 0 0 1 50 700 Tm ( - ovos-skill-wikihow==0.2.14) Tj
1 0 0 1 50 686 Tm ( - ovos-skill-wikipedia==0.6.0a1) Tj
1 0 0 1 50 672 Tm ( - skill-ddg==0.1.15) Tj
1 0 0 1 50 658 Tm ( - skill-news==0.1.12) Tj
1 0 0 1 50 644 Tm ( - skill-ovos-fallback-chatgpt==0.1.12) Tj
1 0 0 1 50 630 Tm ( - skill-wolfie==0.3.0) Tj
1 0 0 1 50 616 Tm ( - skill-wordnet==0.1.1) Tj
1 0 0 1 50 602 Tm ([SUCCESS] All skills have been uninstalled successfully.) Tj
1 0 0 1 50 588 Tm ([WARNING] Note: This operation only deletes the skills. Configuration files and pipeline ) Tj
1 0 0 1 50 574 Tm (plugins \(which still influence intent matching\) are NOT affected by this action.) Tj
1 0 0 1 50 560 Tm (```) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (## Wake Word Issues) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (Wake word detection in raspOVOS offers several options, each with its advantages and ) Tj
1 0 0 1 50 490 Tm (limitations. Understanding these) Tj
1 0 0 1 50 476 Tm (can help resolve potential issues and improve performance.) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (By default, raspOVOS uses the `precise-lite` model with the wake word "hey mycroft." This ) Tj
1 0 0 1 50 434 Tm (model was trained by MycroftAI) Tj
1 0 0 1 50 420 Tm (for their Mark2 device. However, there are a few things to consider:) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (- **Microphone Compatibility:** The performance of precise models can be impacted if the ) Tj
1 0 0 1 50 378 Tm (specific properties of your) Tj
1 0 0 1 50 364 Tm (  microphone \(e.g., sensitivity, frequency response\) do not match the data used to train ) Tj
1 0 0 1 50 350 Tm (the model. While the default) Tj
1 0 0 1 50 336 Tm (  `precise-lite` model was trained with a balanced dataset from a variety of Mycroft ) Tj
1 0 0 1 50 322 Tm (users, there is no guarantee it) Tj
1 0 0 1 50 308 Tm (  will work optimally with your microphone.) Tj
1 0 0 1 50 294 Tm (- **Speaker Demographics:** Precise models, including `precise-lite`, are often trained ) Tj
1 0 0 1 50 280 Tm (with datasets predominantly) Tj
1 0 0 1 50 266 Tm (  featuring adult male voices. As a result, the model may perform poorly with voices that ) Tj
1 0 0 1 50 252 Tm (are outside this demographic,) Tj
1 0 0 1 50 238 Tm (  such as children's or women's voices. This is a common issue also seen in Speech-to-Text) Tj
1 0 0 1 50 224 Tm ( \(STT\) models.) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (### Custom Models) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (If the default model is not working well for you, consider training your own precise ) Tj
1 0 0 1 50 154 Tm (model. Here are some helpful) Tj
1 0 0 1 50 140 Tm (resources for creating a more tailored solution:) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (- [Helpful Wake Word Datasets on Hugging ) Tj
1 0 0 1 50 98 Tm (Face]\(https://huggingface.co/collections/Jarbas/wake-word-) Tj
1 0 0 1 50 84 Tm (datasets-672cc275fa4bddff9cf69c39\)) Tj
1 0 0 1 50 70 Tm (- [Data Collection]\(https://github.com/secretsauceai/wakeword-data-collector\)) Tj
1 0 0 1 50 56 Tm (- [Wake Word Trainer]\(https://github.com/secretsauceai/precise-wakeword-model-maker\)) Tj
ET
endstream

endobj
597 0 obj
<< /Length 2817 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (- [precise-lite-trainer Code]\(https://github.com/OpenVoiceOS/precise-lite-trainer\)) Tj
1 0 0 1 50 728 Tm (- [Synthetic Data Creation for Wake Words]\(https://github.com/OpenVoiceOS/ovos-ww-auto-) Tj
1 0 0 1 50 714 Tm (synth-dataset\)) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (### Alternative Wake Word: Vosk Plugin) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (If you're looking for an alternative to the precise model, the Vosk wake word plugin is ) Tj
1 0 0 1 50 644 Tm (another option.) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (- [Vosk Wake Word Plugin GitHub]\(https://github.com/OpenVoiceOS/ovos-ww-plugin-vosk\)) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (One of the main advantages of using the **Vosk Wake Word Plugin** is that it does **not ) Tj
1 0 0 1 50 574 Tm (require a training step**.) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (Instead, it uses Kaldi with a limited language model, which means it can work out-of-the-) Tj
1 0 0 1 50 532 Tm (box with certain wake words) Tj
1 0 0 1 50 518 Tm (without needing to collect and train custom data.) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (The performance of Vosk may vary depending on the wake word you choose. Some wake words ) Tj
1 0 0 1 50 476 Tm (may work better than) Tj
1 0 0 1 50 462 Tm (others, so its essential to test and evaluate the plugin with your chosen word.) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (Some wake words are hard to trigger, especially if missing from the language model ) Tj
1 0 0 1 50 420 Tm (vocabulary) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (> ? e.g. `hey mycroft` is usually transcribed as `hey microsoft`,) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (example for "hey  computer") Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (```json) Tj
1 0 0 1 50 322 Tm (  "listener": {) Tj
1 0 0 1 50 308 Tm (    "wake_word": "hey_computer") Tj
1 0 0 1 50 294 Tm (  },) Tj
1 0 0 1 50 280 Tm (  "hotwords": {) Tj
1 0 0 1 50 266 Tm (    "hey_computer": {) Tj
1 0 0 1 50 252 Tm (        "module": "ovos-ww-plugin-vosk",) Tj
1 0 0 1 50 238 Tm (        "lang": "en",) Tj
1 0 0 1 50 224 Tm (        "listen": true,) Tj
1 0 0 1 50 210 Tm (        "debug": true,) Tj
1 0 0 1 50 196 Tm (        "samples": ["hey computer", "a computer", "hey computed"],) Tj
1 0 0 1 50 182 Tm (        "rule": "equals",) Tj
1 0 0 1 50 168 Tm (        "full_vocab": false,) Tj
1 0 0 1 50 154 Tm (    }) Tj
1 0 0 1 50 140 Tm (  }) Tj
1 0 0 1 50 126 Tm (```) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (- `lang` - lang code for model, optional, will use global value if not set. only used to ) Tj
1 0 0 1 50 84 Tm (download models) Tj
1 0 0 1 50 70 Tm (- `debug` - if true will print extra info, like the transcription contents, useful for ) Tj
1 0 0 1 50 56 Tm (adjusting "samples") Tj
ET
endstream

endobj
598 0 obj
<< /Length 3333 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (- `rule` - how to process the transcript for detections) Tj
1 0 0 1 50 728 Tm (    - `contains` - if the transcript contains any of provided samples) Tj
1 0 0 1 50 714 Tm (    - `equals` - if the transcript exactly matches any of provided samples) Tj
1 0 0 1 50 700 Tm (    - `starts` - if the transcript starts with any of provided samples) Tj
1 0 0 1 50 686 Tm (    - `ends` - if the transcript ends with any of provided samples) Tj
1 0 0 1 50 672 Tm (    - `fuzzy` - fuzzy match transcript against samples) Tj
1 0 0 1 50 658 Tm (- `samples` - list of samples to match the rules against, optional, by default uses ) Tj
1 0 0 1 50 644 Tm (keyword name) Tj
1 0 0 1 50 630 Tm (- `full_vocab` - use the full language model vocabulary for transcriptions, if false ) Tj
1 0 0 1 50 616 Tm (\(default\) will run in keyword mode) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (> ? `"lang"` does not need to match the main language, if there is no vosk model for your ) Tj
1 0 0 1 50 574 Tm (language you can try faking it with similar sounding words from a different one) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (### Tips for Choosing a Good Wake Word) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (Selecting a wake word is crucial to improving the accuracy and responsiveness of your ) Tj
1 0 0 1 50 476 Tm (system. Here are some tips for) Tj
1 0 0 1 50 462 Tm (choosing a wake word that will work well in various environments:) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (- **3 or 4 Syllables:** Wake words that are 3 or 4 syllables long tend to perform better ) Tj
1 0 0 1 50 420 Tm (because they are more distinct) Tj
1 0 0 1 50 406 Tm (  and less likely to be confused with common words in everyday speech. For example:) Tj
1 0 0 1 50 392 Tm (    - **Bad Example:** "Bob" \(short, common name\)) Tj
1 0 0 1 50 378 Tm (    - **Less Bad Example:** "Computer" \(common word\)) Tj
1 0 0 1 50 364 Tm (    - **Good Example:** "Ziggy" \(uncommon\)) Tj
1 0 0 1 50 350 Tm (    - **Better Example:** "Hey Ziggy" \(3 syllables, longer\)) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (- **Uncommon Words:** Choose a wake word that is not often used in regular conversation. ) Tj
1 0 0 1 50 308 Tm (This reduces the chance of) Tj
1 0 0 1 50 294 Tm (  false triggers when other words sound similar to your wake word. Unique and uncommon ) Tj
1 0 0 1 50 280 Tm (names, phrases, or combinations) Tj
1 0 0 1 50 266 Tm (  of sounds work best.) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (- **Clear Pronunciation:** Make sure the wake word has a clear and easy-to-pronounce ) Tj
1 0 0 1 50 224 Tm (structure. Words with ambiguous or) Tj
1 0 0 1 50 210 Tm (  difficult-to-articulate syllables may cause detection issues, especially in noisy ) Tj
1 0 0 1 50 196 Tm (environments.) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (- **Avoid Overused Words:** Stay away from wake words like "hey" or "hello," as they are ) Tj
1 0 0 1 50 154 Tm (often used in daily speech and) Tj
1 0 0 1 50 140 Tm (  can trigger false positives. Try combining a less common word with a familiar greeting ) Tj
1 0 0 1 50 126 Tm (for better results.) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (---) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (## Audio Issues) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
599 0 obj
<< /Length 2549 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (- **Run Diagnostics script:**) Tj
1 0 0 1 50 728 Tm (    - raspOVOS includes a helper script `ovos-audio-diagnostics` that will print basic ) Tj
1 0 0 1 50 714 Tm (info about your sound system) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (```bash) Tj
1 0 0 1 50 672 Tm (\(ovos\) ovos@raspOVOS:~ $ ovos-audio-diagnostics) Tj
1 0 0 1 50 658 Tm (=========================== ) Tj
1 0 0 1 50 644 Tm (raspOVOS Audio Diagnostics) Tj
1 0 0 1 50 630 Tm (===========================) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (# Detected sound server:) Tj
1 0 0 1 50 588 Tm (pipewire) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (# Available audio outputs:) Tj
1 0 0 1 50 546 Tm (36 - Built-in Audio Stereo [vol: 0.40]) Tj
1 0 0 1 50 532 Tm (45 - Built-in Audio Stereo [vol: 0.85]) Tj
1 0 0 1 50 518 Tm (46 - Built-in Audio Digital Stereo \(HDMI\) [vol: 0.40]) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (# Default audio output:) Tj
1 0 0 1 50 476 Tm (ID: 36) Tj
1 0 0 1 50 462 Tm (NAME: WM8731 HiFi wm8731-hifi-0) Tj
1 0 0 1 50 448 Tm (CARD NUMBER: 2) Tj
1 0 0 1 50 434 Tm (CARD NAME: snd_rpi_proto) Tj
1 0 0 1 50 420 Tm (```) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (- **Check Input Devices:**) Tj
1 0 0 1 50 378 Tm (    - Run `arecord -l` to list all detected audio capture devices \(microphones\).) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (```) Tj
1 0 0 1 50 336 Tm (**** List of CAPTURE Hardware Devices ****) Tj
1 0 0 1 50 322 Tm (card 2: sndrpiproto [snd_rpi_proto], device 0: WM8731 HiFi wm8731-hifi-0 [WM8731 HiFi ) Tj
1 0 0 1 50 308 Tm (wm8731-hifi-0]) Tj
1 0 0 1 50 294 Tm (Subdevices: 0/1) Tj
1 0 0 1 50 280 Tm (Subdevice #0: subdevice #0) Tj
1 0 0 1 50 266 Tm (card 3: Device [USB Audio Device], device 0: USB Audio [USB Audio]) Tj
1 0 0 1 50 252 Tm (Subdevices: 1/1) Tj
1 0 0 1 50 238 Tm (Subdevice #0: subdevice #0) Tj
1 0 0 1 50 224 Tm (```  ) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (- **Check Output Devices:**) Tj
1 0 0 1 50 182 Tm (    - Run `aplay -l` to list all detected audio playback devices \(speakers\). Verify your ) Tj
1 0 0 1 50 168 Tm (card is being detected) Tj
1 0 0 1 50 154 Tm (      correctly) Tj
1 0 0 1 50 140 Tm (  ) Tj
1 0 0 1 50 126 Tm (```) Tj
1 0 0 1 50 112 Tm (**** List of PLAYBACK Hardware Devices ****) Tj
1 0 0 1 50 98 Tm (card 0: Headphones [bcm2835 Headphones], device 0: bcm2835 Headphones [bcm2835 Headphones]) Tj
1 0 0 1 50 84 Tm (Subdevices: 7/8) Tj
1 0 0 1 50 70 Tm (Subdevice #0: subdevice #0) Tj
1 0 0 1 50 56 Tm (Subdevice #1: subdevice #1) Tj
ET
endstream

endobj
600 0 obj
<< /Length 3047 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (Subdevice #2: subdevice #2) Tj
1 0 0 1 50 728 Tm (Subdevice #3: subdevice #3) Tj
1 0 0 1 50 714 Tm (Subdevice #4: subdevice #4) Tj
1 0 0 1 50 700 Tm (Subdevice #5: subdevice #5) Tj
1 0 0 1 50 686 Tm (Subdevice #6: subdevice #6) Tj
1 0 0 1 50 672 Tm (Subdevice #7: subdevice #7) Tj
1 0 0 1 50 658 Tm (card 1: vc4hdmi [vc4-hdmi], device 0: MAI PCM i2s-hifi-0 [MAI PCM i2s-hifi-0]) Tj
1 0 0 1 50 644 Tm (Subdevices: 1/1) Tj
1 0 0 1 50 630 Tm (Subdevice #0: subdevice #0) Tj
1 0 0 1 50 616 Tm (card 2: sndrpiproto [snd_rpi_proto], device 0: WM8731 HiFi wm8731-hifi-0 [WM8731 HiFi ) Tj
1 0 0 1 50 602 Tm (wm8731-hifi-0]) Tj
1 0 0 1 50 588 Tm (Subdevices: 1/1) Tj
1 0 0 1 50 574 Tm (Subdevice #0: subdevice #0) Tj
1 0 0 1 50 560 Tm (```) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (- **Verify Volume and Mute status:**) Tj
1 0 0 1 50 518 Tm (    - Run `alsamixer` and verify that volume isn't too low or audio muted.) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (- **Check audio setup logs:**) Tj
1 0 0 1 50 476 Tm (- During boot the audio setup generates logs, which are saved to the `/tmp` directory:) Tj
1 0 0 1 50 462 Tm (    - `/tmp/autosoundcard.log` \(for soundcard autoconfiguration\)) Tj
1 0 0 1 50 448 Tm (    ) Tj
1 0 0 1 50 434 Tm (```) Tj
1 0 0 1 50 420 Tm (==> /tmp/autosoundcard.log <==) Tj
1 0 0 1 50 406 Tm (Fri 17 Jan 11:42:46 WET 2025 - **** List of PLAYBACK Hardware Devices ****) Tj
1 0 0 1 50 392 Tm (card 0: Headphones [bcm2835 Headphones], device 0: bcm2835 Headphones [bcm2835 Headphones]) Tj
1 0 0 1 50 378 Tm (Subdevices: 8/8) Tj
1 0 0 1 50 364 Tm (Subdevice #0: subdevice #0) Tj
1 0 0 1 50 350 Tm (Subdevice #1: subdevice #1) Tj
1 0 0 1 50 336 Tm (Subdevice #2: subdevice #2) Tj
1 0 0 1 50 322 Tm (Subdevice #3: subdevice #3) Tj
1 0 0 1 50 308 Tm (Subdevice #4: subdevice #4) Tj
1 0 0 1 50 294 Tm (Subdevice #5: subdevice #5) Tj
1 0 0 1 50 280 Tm (Subdevice #6: subdevice #6) Tj
1 0 0 1 50 266 Tm (Subdevice #7: subdevice #7) Tj
1 0 0 1 50 252 Tm (card 1: Device [USB Audio Device], device 0: USB Audio [USB Audio]) Tj
1 0 0 1 50 238 Tm (Subdevices: 1/1) Tj
1 0 0 1 50 224 Tm (Subdevice #0: subdevice #0) Tj
1 0 0 1 50 210 Tm (card 2: vc4hdmi [vc4-hdmi], device 0: MAI PCM i2s-hifi-0 [MAI PCM i2s-hifi-0]) Tj
1 0 0 1 50 196 Tm (Subdevices: 1/1) Tj
1 0 0 1 50 182 Tm (Subdevice #0: subdevice #0) Tj
1 0 0 1 50 168 Tm (card 3: sndrpiproto [snd_rpi_proto], device 0: WM8731 HiFi wm8731-hifi-0 [WM8731 HiFi ) Tj
1 0 0 1 50 154 Tm (wm8731-hifi-0]) Tj
1 0 0 1 50 140 Tm (Subdevices: 0/1) Tj
1 0 0 1 50 126 Tm (Subdevice #0: subdevice #0) Tj
1 0 0 1 50 112 Tm (Fri 17 Jan 11:42:48 WET 2025 - Mark 1 soundcard detected by ovos-i2csound.) Tj
1 0 0 1 50 98 Tm (Fri 17 Jan 11:42:48 WET 2025 - Detected CARD_NUMBER for Mark 1 soundcard: 3) Tj
1 0 0 1 50 84 Tm (Fri 17 Jan 11:42:48 WET 2025 - Configuring ALSA default card) Tj
1 0 0 1 50 70 Tm (Fri 17 Jan 11:42:48 WET 2025 - Running as user, modifying ~/.asoundrc) Tj
1 0 0 1 50 56 Tm (Fri 17 Jan 11:42:48 WET 2025 - ALSA default card set to: 3) Tj
ET
endstream

endobj
601 0 obj
<< /Length 3175 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (```) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (- **Confirm available audio sinks:**) Tj
1 0 0 1 50 700 Tm (    - Run `wpctl status` to check the available outputs as seen by `pipewire`.) Tj
1 0 0 1 50 686 Tm (    - The default sinks will be marked with `*`) Tj
1 0 0 1 50 672 Tm (- You can inspect a sink by its number with `wpctl inspect $SINK_ID`) Tj
1 0 0 1 50 658 Tm (  ) Tj
1 0 0 1 50 644 Tm (```) Tj
1 0 0 1 50 630 Tm (\(ovos\) ovos@raspOVOS:~ $ wpctl status) Tj
1 0 0 1 50 616 Tm (PipeWire 'pipewire-0' [1.2.4, ovos@raspOVOS, cookie:3349583741]) Tj
1 0 0 1 50 602 Tm (?? Clients:) Tj
1 0 0 1 50 588 Tm (   33. WirePlumber                         [1.2.4, ovos@raspOVOS, pid:695]) Tj
1 0 0 1 50 574 Tm (   34. WirePlumber [export]                [1.2.4, ovos@raspOVOS, pid:695]) Tj
1 0 0 1 50 560 Tm (   47. PipeWire ALSA [librespot]           [1.2.4, ovos@raspOVOS, pid:702]) Tj
1 0 0 1 50 546 Tm (   67. PipeWire ALSA [python3.11]          [1.2.4, ovos@raspOVOS, pid:691]) Tj
1 0 0 1 50 532 Tm (   75. PipeWire ALSA [python3.11]          [1.2.4, ovos@raspOVOS, pid:699]) Tj
1 0 0 1 50 518 Tm (   83. PipeWire ALSA [python3.11]          [1.2.4, ovos@raspOVOS, pid:700]) Tj
1 0 0 1 50 504 Tm (   84. wpctl                               [1.2.4, ovos@raspOVOS, pid:1710]) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (Audio) Tj
1 0 0 1 50 462 Tm (?? Devices:) Tj
1 0 0 1 50 448 Tm (?      42. Built-in Audio                      [alsa]) Tj
1 0 0 1 50 434 Tm (?      43. Built-in Audio                      [alsa]) Tj
1 0 0 1 50 420 Tm (?      44. Built-in Audio                      [alsa]) Tj
1 0 0 1 50 406 Tm (?  ) Tj
1 0 0 1 50 392 Tm (?? Sinks:) Tj
1 0 0 1 50 378 Tm (?  *   36. Built-in Audio Stereo               [vol: 0.40]) Tj
1 0 0 1 50 364 Tm (?      45. Built-in Audio Stereo               [vol: 0.85]) Tj
1 0 0 1 50 350 Tm (?      46. Built-in Audio Digital Stereo \(HDMI\) [vol: 0.40]) Tj
1 0 0 1 50 336 Tm (?  ) Tj
1 0 0 1 50 322 Tm (?? Sink endpoints:) Tj
1 0 0 1 50 308 Tm (?  ) Tj
1 0 0 1 50 294 Tm (?? Sources:) Tj
1 0 0 1 50 280 Tm (?  *   37. Built-in Audio Stereo               [vol: 1.00]) Tj
1 0 0 1 50 266 Tm (?  ) Tj
1 0 0 1 50 252 Tm (?? Source endpoints:) Tj
1 0 0 1 50 238 Tm (?  ) Tj
1 0 0 1 50 224 Tm (?? Streams:) Tj
1 0 0 1 50 210 Tm (   48. PipeWire ALSA [librespot]                                   ) Tj
1 0 0 1 50 196 Tm (        63. output_FL       > WM8731 HiFi wm8731-hifi-0:playback_FL	[active]) Tj
1 0 0 1 50 182 Tm (        64. output_FR       > WM8731 HiFi wm8731-hifi-0:playback_FR	[active]) Tj
1 0 0 1 50 168 Tm (   68. PipeWire ALSA [python3.11]                                  ) Tj
1 0 0 1 50 154 Tm (        69. input_FL        < WM8731 HiFi wm8731-hifi-0:capture_FL	[active]) Tj
1 0 0 1 50 140 Tm (        70. monitor_FL     ) Tj
1 0 0 1 50 126 Tm (        71. input_FR        < WM8731 HiFi wm8731-hifi-0:capture_FR	[active]) Tj
1 0 0 1 50 112 Tm (        72. monitor_FR              ) Tj
1 0 0 1 50 98 Tm (     ) Tj
1 0 0 1 50 84 Tm (\(ovos\) ovos@raspOVOS:~ $ wpctl inspect 36) Tj
1 0 0 1 50 70 Tm (id 36, type PipeWire:Interface:Node) Tj
1 0 0 1 50 56 Tm (   alsa.card = "2") Tj
ET
endstream

endobj
602 0 obj
<< /Length 2757 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (   alsa.card_name = "snd_rpi_proto") Tj
1 0 0 1 50 728 Tm (   alsa.class = "generic") Tj
1 0 0 1 50 714 Tm (   alsa.device = "0") Tj
1 0 0 1 50 700 Tm (   alsa.driver_name = "snd_soc_rpi_proto") Tj
1 0 0 1 50 686 Tm (   alsa.id = "sndrpiproto") Tj
1 0 0 1 50 672 Tm (   alsa.long_card_name = "snd_rpi_proto") Tj
1 0 0 1 50 658 Tm (   alsa.name = "WM8731 HiFi wm8731-hifi-0") Tj
1 0 0 1 50 644 Tm (   alsa.resolution_bits = "16") Tj
1 0 0 1 50 630 Tm (   alsa.subclass = "generic-mix") Tj
1 0 0 1 50 616 Tm (   alsa.subdevice = "0") Tj
1 0 0 1 50 602 Tm (   alsa.subdevice_name = "subdevice #0") Tj
1 0 0 1 50 588 Tm (   ...) Tj
1 0 0 1 50 574 Tm (```) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (- **Test Audio:**) Tj
1 0 0 1 50 532 Tm (    - Record a short test file with `arecord -f test.wav`.) Tj
1 0 0 1 50 518 Tm (    - Play it back with `aplay test.wav`.) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (---) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (## STT tips and tricks) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (### Saving Transcriptions) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (You can enable saving of recordings to file, this should be your first step to diagnose ) Tj
1 0 0 1 50 392 Tm (problems, is the audio) Tj
1 0 0 1 50 378 Tm (inteligible? is it being cropped? too noisy? low volume?) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (> ? set `"save_utterances": true` in) Tj
1 0 0 1 50 336 Tm (> your [listener config]\(https://github.com/OpenVoiceOS/ovos-) Tj
1 0 0 1 50 322 Tm (config/blob/V0.0.13a19/ovos_config/mycroft.conf#L436\),) Tj
1 0 0 1 50 308 Tm (> recordings will be saved to `~/.local/share/mycroft/listener/utterances`) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (If the recorded audio looks good to you, maybe you need to use a different STT plugin, ) Tj
1 0 0 1 50 266 Tm (maybe the one you are using does) Tj
1 0 0 1 50 252 Tm (not like your microphone, or just isn't very good for your language) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (### Wrong Transcriptions) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (If you consistently get specific words or utterances transcribed wrong, you can remedy ) Tj
1 0 0 1 50 182 Tm (around this to some extent by) Tj
1 0 0 1 50 168 Tm (using the [ovos-utterance-corrections-plugin]\(https://github.com/OpenVoiceOS/ovos-) Tj
1 0 0 1 50 154 Tm (utterance-corrections-plugin\)) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (> ? You can define replacements at word level ) Tj
1 0 0 1 50 112 Tm (`~/.local/share/mycroft/word_corrections.json`) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (for example whisper STT often gets artist names wrong, this allows you to correct them) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (```json) Tj
ET
endstream

endobj
603 0 obj
<< /Length 2801 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm ({) Tj
1 0 0 1 50 728 Tm (  "Jimmy Hendricks": "Jimi Hendrix",) Tj
1 0 0 1 50 714 Tm (  "Eric Klapptern": "Eric Clapton",) Tj
1 0 0 1 50 700 Tm (  "Eric Klappton": "Eric Clapton") Tj
1 0 0 1 50 686 Tm (}) Tj
1 0 0 1 50 672 Tm (```) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (### Silence Removal) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (By default OVOS applies VAD \(Voice Activity Detection\) to crop silence from the audio sent) Tj
1 0 0 1 50 602 Tm ( to STT, this helps in) Tj
1 0 0 1 50 588 Tm (performance and in accuracy \(reduces hallucinations in plugins like FasterWhisper\)) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (Depending on your microphone/VAD plugin, this might be removing too much audio) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (> ? set `"remove_silence": false` in) Tj
1 0 0 1 50 518 Tm (> your [listener config]\(https://github.com/OpenVoiceOS/ovos-) Tj
1 0 0 1 50 504 Tm (config/blob/V0.0.13a19/ovos_config/mycroft.conf#L452\), this) Tj
1 0 0 1 50 490 Tm (> will send the full audio recording to STT) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (### Listen Sound) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (does your listen sound contain speech? some users replace the "ding" sound with words such) Tj
1 0 0 1 50 420 Tm ( as "yes?") Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (In this case the listen sound will be sent to STT and might negatively affect the ) Tj
1 0 0 1 50 378 Tm (transcription) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (> ? set `"instant_listen": false` in your [listener ) Tj
1 0 0 1 50 336 Tm (config]\(https://github.com/OpenVoiceOS/ovos-) Tj
1 0 0 1 50 322 Tm (config/blob/V0.0.13a19/ovos_config/mycroft.conf#L519\), this) Tj
1 0 0 1 50 308 Tm (> will drop the listen sound audio from the STT audio buffer. You will need to wait for ) Tj
1 0 0 1 50 294 Tm (the listen sound to finish before speaking your command in this case) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (---) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (# docs/590-voice_apps.md) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (# Standalone Apps) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (Standalone applications can be made for OVOS, these applications are not skills, instead ) Tj
1 0 0 1 50 168 Tm (they are launched by the user) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (The main use case for these applications is in desktops, when you want to add a voice ) Tj
1 0 0 1 50 126 Tm (interface to a regular application) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (## OVOSAbstractApplication) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (`ovos-workshop` provides the `OVOSAbstractApplication` class, you can use all methods and ) Tj
1 0 0 1 50 56 Tm (decorators from regular Skills in applications built from this) Tj
ET
endstream

endobj
604 0 obj
<< /Length 2602 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (```python) Tj
1 0 0 1 50 714 Tm (from ovos_workshop.app import OVOSAbstractApplication) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (class MyApplication\(OVOSAbstractApplication\):) Tj
1 0 0 1 50 658 Tm (    def __init__\(self, skill_id: str = "my_app",) Tj
1 0 0 1 50 644 Tm (                 bus: Optional[MessageBusClient] = None,) Tj
1 0 0 1 50 630 Tm (                 resources_dir: Optional[str] = None,) Tj
1 0 0 1 50 616 Tm (                 gui: Optional[GUIInterface] = None,) Tj
1 0 0 1 50 602 Tm (                 **kwargs\):) Tj
1 0 0 1 50 588 Tm (        """) Tj
1 0 0 1 50 574 Tm (        Create an Application. An application is essentially a skill, but) Tj
1 0 0 1 50 560 Tm (        designed such that it may be run without an intent service.) Tj
1 0 0 1 50 546 Tm (        @param skill_id: Unique ID for this application) Tj
1 0 0 1 50 532 Tm (        @param bus: MessageBusClient to bind to application) Tj
1 0 0 1 50 518 Tm (        @param resources_dir: optional root resource directory \(else defaults to) Tj
1 0 0 1 50 504 Tm (            application `root_dir`) Tj
1 0 0 1 50 490 Tm (        @param gui: GUIInterface to bind \(if `None`, one is created\)) Tj
1 0 0 1 50 476 Tm (        """) Tj
1 0 0 1 50 462 Tm (        super\(\).__init__\(skill_id, bus, resources_dir, gui=gui, **kwargs\)) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (    def do_app_stuff\(self\):) Tj
1 0 0 1 50 406 Tm (        pass) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (    @intent_handler\("app_action.intent"\)) Tj
1 0 0 1 50 364 Tm (    def do_intent_stuff_in_app\(self, message\):) Tj
1 0 0 1 50 350 Tm (        pass) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (    ) Tj
1 0 0 1 50 308 Tm (if __name__ == "__main__":) Tj
1 0 0 1 50 294 Tm (    # launch your application) Tj
1 0 0 1 50 280 Tm (    from ovos_utils import wait_for_exit_signal) Tj
1 0 0 1 50 266 Tm (    ) Tj
1 0 0 1 50 252 Tm (    app = MyApplication\(\)) Tj
1 0 0 1 50 238 Tm (    ) Tj
1 0 0 1 50 224 Tm (    # wait for user to exit) Tj
1 0 0 1 50 210 Tm (    wait_for_exit_signal\(\)) Tj
1 0 0 1 50 196 Tm (```) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (> **NOTE**: from OVOS perspective Voice Apps are just like skills and need to have a ) Tj
1 0 0 1 50 154 Tm (unique `skill_id`) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (# docs/600-fallbacks.md) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (# Fallback Skill) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (## Order of precedence) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
605 0 obj
<< /Length 2931 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (The Fallback **Skills** all have a priority and will be checked in order from low priority) Tj
1 0 0 1 50 728 Tm ( value to high priority value. ) Tj
1 0 0 1 50 714 Tm (If a Fallback **Skill** can handle the **Utterance** it will create a response and return ) Tj
1 0 0 1 50 700 Tm (`True`. ) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (After this no other Fallback **Skills** are tried. This means the priority for Fallbacks ) Tj
1 0 0 1 50 658 Tm (that can handle a _broad_ range of queries should be _high_ \\\(80-100\\\) and Fallbacks that ) Tj
1 0 0 1 50 644 Tm (only responds to a very specific range of queries should be higher \\\(20-80\\\). The more ) Tj
1 0 0 1 50 630 Tm (specific, the lower the priority value.) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (---) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (##  Fallback Handlers) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (Import the `FallbackSkill` base class, create a derived class and register the handler ) Tj
1 0 0 1 50 532 Tm (with the fallback system) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (Implement the fallback handler \\\(the method that will be called to potentially handle the ) Tj
1 0 0 1 50 490 Tm (**Utterance**\\\). ) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (The method implements logic to determine if the **Utterance** can be handled and shall ) Tj
1 0 0 1 50 448 Tm (output speech if it can handle the query. ) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (It shall return Boolean `True` if the **Utterance** was handled and Boolean `False` if ) Tj
1 0 0 1 50 406 Tm (not.) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (```python) Tj
1 0 0 1 50 350 Tm (from ovos_workshop.skills.fallback import FallbackSkill) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (class MeaningFallback\(FallbackSkill\):) Tj
1 0 0 1 50 308 Tm (    """) Tj
1 0 0 1 50 294 Tm (        A Fallback skill to answer the question about the) Tj
1 0 0 1 50 280 Tm (        meaning of life, the universe and everything.) Tj
1 0 0 1 50 266 Tm (    """) Tj
1 0 0 1 50 252 Tm (    def initialize\(self\):) Tj
1 0 0 1 50 238 Tm (         """) Tj
1 0 0 1 50 224 Tm (             Registers the fallback handler) Tj
1 0 0 1 50 210 Tm (         """) Tj
1 0 0 1 50 196 Tm (         self.register_fallback\(self.handle_fallback, 10\)) Tj
1 0 0 1 50 182 Tm (         # Any other initialize code you like can be placed here) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (    def handle_fallback\(self, message\):) Tj
1 0 0 1 50 140 Tm (        """) Tj
1 0 0 1 50 126 Tm (            Answers question about the meaning of life, the universe) Tj
1 0 0 1 50 112 Tm (            and everything.) Tj
1 0 0 1 50 98 Tm (        """) Tj
1 0 0 1 50 84 Tm (        utterance = message.data.get\("utterance"\)) Tj
1 0 0 1 50 70 Tm (        if 'what' in utterance) Tj
1 0 0 1 50 56 Tm (            and 'meaning' in utterance) Tj
ET
endstream

endobj
606 0 obj
<< /Length 2445 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (            and \('life' in utterance) Tj
1 0 0 1 50 728 Tm (                or 'universe' in utterance) Tj
1 0 0 1 50 714 Tm (                or 'everything' in utterance\):) Tj
1 0 0 1 50 700 Tm (            self.speak\('42'\)) Tj
1 0 0 1 50 686 Tm (            return True) Tj
1 0 0 1 50 672 Tm (        else:) Tj
1 0 0 1 50 658 Tm (            return False) Tj
1 0 0 1 50 644 Tm (```) Tj
1 0 0 1 50 630 Tm (> **NOTE**: a `FallbackSkill` can register any number of fallback handlers) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (The above example can be found [here]\(https://github.com/forslund/fallback-meaning\).) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (---) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (## Decorators) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (Alternatively, you can use decorators ) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (```python) Tj
1 0 0 1 50 476 Tm (from ovos_workshop.decorators.fallback_handler import fallback_handler) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (class MeaningFallback\(FallbackSkill\):) Tj
1 0 0 1 50 420 Tm (    """) Tj
1 0 0 1 50 406 Tm (        A Fallback skill to answer the question about the) Tj
1 0 0 1 50 392 Tm (        meaning of life, the universe and everything.) Tj
1 0 0 1 50 378 Tm (    """) Tj
1 0 0 1 50 364 Tm (    ) Tj
1 0 0 1 50 350 Tm (    @fallback_handler\(priority=10\)) Tj
1 0 0 1 50 336 Tm (    def handle_fallback\(self, message\):) Tj
1 0 0 1 50 322 Tm (        """) Tj
1 0 0 1 50 308 Tm (            Answers question about the meaning of life, the universe) Tj
1 0 0 1 50 294 Tm (            and everything.) Tj
1 0 0 1 50 280 Tm (        """) Tj
1 0 0 1 50 266 Tm (        utterance = message.data.get\("utterance"\)) Tj
1 0 0 1 50 252 Tm (        if 'what' in utterance) Tj
1 0 0 1 50 238 Tm (            and 'meaning' in utterance) Tj
1 0 0 1 50 224 Tm (            and \('life' in utterance) Tj
1 0 0 1 50 210 Tm (                or 'universe' in utterance) Tj
1 0 0 1 50 196 Tm (                or 'everything' in utterance\):) Tj
1 0 0 1 50 182 Tm (            self.speak\('42'\)) Tj
1 0 0 1 50 168 Tm (            return True) Tj
1 0 0 1 50 154 Tm (        else:) Tj
1 0 0 1 50 140 Tm (            return False) Tj
1 0 0 1 50 126 Tm (```) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (---) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (## Check utterances) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
607 0 obj
<< /Length 3207 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (Fallback skills should report if they are able to answer a question, without actually ) Tj
1 0 0 1 50 728 Tm (executing any action.) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (Besides providing performance improvements this allows other OVOS components to check how ) Tj
1 0 0 1 50 686 Tm (a utterance will be handled without side effects) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (```python) Tj
1 0 0 1 50 644 Tm (    def can_answer\(self, utterances: List[str], lang: str\) -> bool:) Tj
1 0 0 1 50 630 Tm (        """) Tj
1 0 0 1 50 616 Tm (        Check if the skill can answer the particular question. Override this) Tj
1 0 0 1 50 602 Tm (        method to validate whether a query can possibly be handled. By default,) Tj
1 0 0 1 50 588 Tm (        assumes a skill can answer if it has any registered handlers) Tj
1 0 0 1 50 574 Tm (        @param utterances: list of possible transcriptions to parse) Tj
1 0 0 1 50 560 Tm (        @param lang: BCP-47 language code associated with utterances) Tj
1 0 0 1 50 546 Tm (        @return: True if skill can handle the query) Tj
1 0 0 1 50 532 Tm (        """) Tj
1 0 0 1 50 518 Tm (        return len\(self._fallback_handlers\) > 0) Tj
1 0 0 1 50 504 Tm (```) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (# docs/610-common_query.md) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (# Common Query Framework) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (The Common Query Framework handles the common use case of "general information" or ) Tj
1 0 0 1 50 378 Tm (question answering. Many Skills may implement handlers for "what is X" or "when did Y", ) Tj
1 0 0 1 50 364 Tm (the Common Query Framework allows all these Skills be queried and a single "best" answer ) Tj
1 0 0 1 50 350 Tm (to be selected. This is similar to the Common Play Framework that handles the common use ) Tj
1 0 0 1 50 336 Tm (of "playing" music or other media.) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (The Common Query Skill System is led by the Common Query Pipeline. The pipeline handles ) Tj
1 0 0 1 50 294 Tm (queries matching a question pattern such as "What is the height of the Eiffle Tower" and ) Tj
1 0 0 1 50 280 Tm ("When is lunch". ) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (A matched question will be sent to all Skills based upon the `CommonQuerySkill` base ) Tj
1 0 0 1 50 238 Tm (class. The Skills will return wether they can answer the query along with an answer when ) Tj
1 0 0 1 50 224 Tm (applicable. The "best" match will be selected and spoken to the user.) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (## CommonQuerySkill) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (A Skill interfacing with the Common Query Framework inherits from the the ) Tj
1 0 0 1 50 154 Tm (`CommonQuerySkill` and needs to define a method `CQS_match_query_phrase\(\)` taking an ) Tj
1 0 0 1 50 140 Tm (utterance as argument.) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (The general structure is:) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (```python) Tj
1 0 0 1 50 70 Tm (from ovos_workshop.skills.common_query_skill import CommonQuerySkill, CQSMatchLevel) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
608 0 obj
<< /Length 3045 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (class MyCommonQuerySkill\(CommonQuerySkill\):) Tj
1 0 0 1 50 728 Tm (    def CQS_match_query_phrase\(self, utt\):) Tj
1 0 0 1 50 714 Tm (       # Parsing implementation) Tj
1 0 0 1 50 700 Tm (       # [...]) Tj
1 0 0 1 50 686 Tm (       return \(utt, CQSMatchLevel.LEVEL, answer_string\)) Tj
1 0 0 1 50 672 Tm (```) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (The `CQS_match_query_phrase\(\)` method will parse the utterance and determine if it can ) Tj
1 0 0 1 50 630 Tm (handle the query. if it can't answer it will return `None` and if it _can_ answer it will ) Tj
1 0 0 1 50 616 Tm (return a data tuple with the format) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (```python) Tj
1 0 0 1 50 574 Tm (\(\(str\)Input Query, CQSMatchLevel, \(str\)Answer Text\)) Tj
1 0 0 1 50 560 Tm (```) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (The input query is returned to map the query to the answer.) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (`CQSMatchLevel` is an Enum with the possible values) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (* `CQSMatchLevel.EXACT`: The Skill is very confident that it has the precise answer the ) Tj
1 0 0 1 50 462 Tm (user is looking for. There was a category match and a known entity is referenced.) Tj
1 0 0 1 50 448 Tm (* `CQSMatchLevel.CATEGORY`: The Skill could determine that the type of question matches a ) Tj
1 0 0 1 50 434 Tm (category that the Skill is good at finding.) Tj
1 0 0 1 50 420 Tm (* `CQSMatchLevel.GENERAL`: This Skill tries to answer all questions and found an answer.) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (To show visuals or take some other action in response to being selected, see the ) Tj
1 0 0 1 50 378 Tm ([`CQS_action\(\)` method]\(common-query-framework.md#cqs\\_action\) below.) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (## An Example) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (Let's make a simple Skill that tells us the age of the various Monty Python members. A ) Tj
1 0 0 1 50 308 Tm (quick draft looks like this. \(You can find the complete code ) Tj
1 0 0 1 50 294 Tm ([here]\(https://github.com/forslund/common-query-tutorial\)\)) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (```python) Tj
1 0 0 1 50 252 Tm (from ovos_workshop.skills.common_query_skill import CommonQuerySkill, CQSMatchLevel) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (# Dict mapping python members to their age and whether they're alive or dead     ) Tj
1 0 0 1 50 210 Tm (PYTHONS = {) Tj
1 0 0 1 50 196 Tm (    'eric idle': \(77,'alive'\),) Tj
1 0 0 1 50 182 Tm (    'michael palin': \(77, 'alive'\),) Tj
1 0 0 1 50 168 Tm (    'john cleese': \(80, 'alive'\),) Tj
1 0 0 1 50 154 Tm (    'graham chapman': \(48, 'dead'\),) Tj
1 0 0 1 50 140 Tm (    'terry gilliam': \(79, 'alive'\),) Tj
1 0 0 1 50 126 Tm (    'terry jones': \(77, 'dead'\)) Tj
1 0 0 1 50 112 Tm (}) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (def python_in_utt\(utterance\):) Tj
1 0 0 1 50 56 Tm (    """Find a monty python member in the utterance.) Tj
ET
endstream

endobj
609 0 obj
<< /Length 2812 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (    Arguments:) Tj
1 0 0 1 50 728 Tm (        utterance \(str\): Sentence to check for Monty Python members) Tj
1 0 0 1 50 714 Tm (    Returns:) Tj
1 0 0 1 50 700 Tm (        \(str\) name of Monty Python member or None) Tj
1 0 0 1 50 686 Tm (    """) Tj
1 0 0 1 50 672 Tm (    for key in PYTHONS:) Tj
1 0 0 1 50 658 Tm (        if key in utterance.lower\(\):) Tj
1 0 0 1 50 644 Tm (            # Return the found python) Tj
1 0 0 1 50 630 Tm (            return key) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (    # No python found) Tj
1 0 0 1 50 588 Tm (    return None) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (class PythonAgeSkill\(CommonQuerySkill\):) Tj
1 0 0 1 50 532 Tm (    """A Skill for checking the age of the python crew.""") Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (    def format_answer\(self, python\):) Tj
1 0 0 1 50 490 Tm (        """Create string with answer for the specified "python" person.""") Tj
1 0 0 1 50 476 Tm (        age, status = PYTHONS[python]) Tj
1 0 0 1 50 462 Tm (        if status == 'alive':) Tj
1 0 0 1 50 448 Tm (            return self.dialog_renderer.render\('age_alive',) Tj
1 0 0 1 50 434 Tm (                                               {'person': python, 'age': age}\)) Tj
1 0 0 1 50 420 Tm (        else:) Tj
1 0 0 1 50 406 Tm (            return self.dialog_renderer.render\('age_dead',) Tj
1 0 0 1 50 392 Tm (                                               {'person': python, 'age': age}\)) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (    def CQS_match_query_phrase\(self, utt\):) Tj
1 0 0 1 50 350 Tm (        """Check the utterance if it is a question we can answer.) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (        Arguments:) Tj
1 0 0 1 50 308 Tm (            utt: The question) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (        Returns: tuple \(input utterance, match level, response sentence, extra\)) Tj
1 0 0 1 50 266 Tm (        """) Tj
1 0 0 1 50 252 Tm (        # Check if this is an age query) Tj
1 0 0 1 50 238 Tm (        age_query = self.voc_match\(utt, 'age'\)) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (        # Check if a monty python member is mentioned) Tj
1 0 0 1 50 196 Tm (        python = full_python_in_utt\(utt\)) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (        # If this is an age query and a monty python member is mentioned the) Tj
1 0 0 1 50 154 Tm (        # skill can answer this) Tj
1 0 0 1 50 140 Tm (        if age_query and python:) Tj
1 0 0 1 50 126 Tm (            # return high confidence) Tj
1 0 0 1 50 112 Tm (            return \(utt, CQSMatchLevel.CATEGORY, self.format_answer\(python\)\)) Tj
1 0 0 1 50 98 Tm (        else:) Tj
1 0 0 1 50 84 Tm (            return None) Tj
1 0 0 1 50 70 Tm (```) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
610 0 obj
<< /Length 3198 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (As seen above the `CQS_match_query_phrase\(\)` checks if this is an age related utterance ) Tj
1 0 0 1 50 728 Tm (and if the utterance contains the name of a Monty Python member. If both criteria are met ) Tj
1 0 0 1 50 714 Tm (it returns a match with a `CQSMatchLevel.CATEGORY` confidence together with a rendered ) Tj
1 0 0 1 50 700 Tm (dialog containing the answer.) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (If both criteria are not fulfilled the method will return `None` indicating that it can't ) Tj
1 0 0 1 50 658 Tm (answer the query.) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (This will be able to provide answers to queries such as) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (> "how old is Graham Chapman") Tj
1 0 0 1 50 588 Tm (>) Tj
1 0 0 1 50 574 Tm (> "what's Eric Idle's age") Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (To make this more exact we can add support for checking for the words "monty python", and ) Tj
1 0 0 1 50 532 Tm (if present return the highest confidence.) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (The method for parsing the example is quite simplistic but there are many different ) Tj
1 0 0 1 50 490 Tm (toolkits out there for doing the question parsing. [Adapt]\(https://pypi.org/project/adapt-) Tj
1 0 0 1 50 476 Tm (parser/\), [little questions]\(https://pypi.org/project/little-questions/\), ) Tj
1 0 0 1 50 462 Tm ([padaos]\(https://pypi.org/project/padaos/\) and many more!) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (## Match Confidence) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (If we want to make sure this Skill is used when the user explicitly states it's the age of) Tj
1 0 0 1 50 392 Tm ( a Monty Python member, a slight modification to the Skill can be made:) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (We'll change the end of the `CQS_match_query_phrase\(\)` method to) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (```python) Tj
1 0 0 1 50 322 Tm (    def CQS_match_query_phrase\(self, utt\):) Tj
1 0 0 1 50 308 Tm (        # \(...\)) Tj
1 0 0 1 50 294 Tm (        if 'monty python' in utt.lower\(\):) Tj
1 0 0 1 50 280 Tm (            confidence = CQSMatchLevel.EXACT) Tj
1 0 0 1 50 266 Tm (        else:) Tj
1 0 0 1 50 252 Tm (            confidence = CQSMatchLevel.CATEGORY            ) Tj
1 0 0 1 50 238 Tm (        # return high confidence) Tj
1 0 0 1 50 224 Tm (        return \(utt, confidence, self.format_answer\(python\)\)) Tj
1 0 0 1 50 210 Tm (```) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (So if the utterance contains the phrase "monty python" the confidence will be set to ) Tj
1 0 0 1 50 168 Tm (`CQSMatchLevel.EXACT` making the Skill very very likely to be chosen to answer the query.) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (## CQS\\_action\(\)) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (In some cases the Skill should do additional operations when selected as the best match. ) Tj
1 0 0 1 50 98 Tm (It could be prepared for follow-up questions or show an image on the screen. The ) Tj
1 0 0 1 50 84 Tm (`CQS_action\(\)` method allows for this, when a Skill is selected this method will be ) Tj
1 0 0 1 50 70 Tm (called.) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
611 0 obj
<< /Length 3043 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (Let's make our Python Age Skill gloat that it was selected by adding a `CQS_action\(\)` ) Tj
1 0 0 1 50 728 Tm (method like this:) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (where `phrase` is the same phrase that were sent to `CQS_match_query_phrase\(\)` and `data` ) Tj
1 0 0 1 50 686 Tm (is optional additional data from the query matching method.) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (```python) Tj
1 0 0 1 50 644 Tm (    def CQS_action\(self, utt, data\):) Tj
1 0 0 1 50 630 Tm (        self.log.info\('I got selected! What you say about that Wolfram Alpha Skill!?!?'\)) Tj
1 0 0 1 50 616 Tm (```) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (Now each time the Skill is called the above message will be added to the log! Not very ) Tj
1 0 0 1 50 574 Tm (useful you say? Hmm, yes... let's add something useful, like show the age on the Mark-1 ) Tj
1 0 0 1 50 560 Tm (display.) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (To accomplish this we need to get the age into the `CQS_action\(\)` method in some way. we ) Tj
1 0 0 1 50 518 Tm (could store last age in as an internal variable but the more elegant way is to send data ) Tj
1 0 0 1 50 504 Tm (as part of the match tuple. ) Tj
1 0 0 1 50 490 Tm (To do this we must extend the returned match tuple from `CQS_match_query_phrase\(\)` with a ) Tj
1 0 0 1 50 476 Tm (data entry. So the return statement becomes) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (```python) Tj
1 0 0 1 50 434 Tm (    def CQS_match_query_phrase\(self, utt\):) Tj
1 0 0 1 50 420 Tm (        # \(...\)) Tj
1 0 0 1 50 406 Tm (        data = {'age': PYTHONS[python], 'python': python}) Tj
1 0 0 1 50 392 Tm (        return \(utt, confidence, self.format_answer\(python\), data\)) Tj
1 0 0 1 50 378 Tm (```) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (The data structure declared here will be sent to `CQS_Action\(\)` and we can update the ) Tj
1 0 0 1 50 336 Tm (method to) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (```python) Tj
1 0 0 1 50 294 Tm (    def CQS_action\(self, utt, data\):) Tj
1 0 0 1 50 280 Tm (        self.log.info\('I got selected! What you say about that Wolfram Alpha Skill!?!?'\)) Tj
1 0 0 1 50 266 Tm (        age = data.get\('age'\)) Tj
1 0 0 1 50 252 Tm (        if age:) Tj
1 0 0 1 50 238 Tm (            self.log.info\(f'Showing the age {age}'\)) Tj
1 0 0 1 50 224 Tm (            self.enclosure.mouth_text\(str\(age\)\)) Tj
1 0 0 1 50 210 Tm (```) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (# docs/620-universal_skills.md) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (# UniversalSkill) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (The `UniversalSkill` class is designed to facilitate automatic translation of input and ) Tj
1 0 0 1 50 112 Tm (output messages between different languages. ) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (This skill is particularly useful when native language support is not feasible, providing ) Tj
1 0 0 1 50 70 Tm (a convenient way to handle multilingual interactions.) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
612 0 obj
<< /Length 2900 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (> **NEW** - `ovos-core` version **0.0.8**) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (## Overview) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (This skill ensures that intent handlers receive utterances in the skill's internal ) Tj
1 0 0 1 50 672 Tm (language and are expected to produce responses in the same internal language. ) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (The `speak` method, used for generating spoken responses, automatically translates ) Tj
1 0 0 1 50 630 Tm (utterances from the internal language to the original query language.) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (> **NOTE:** The `self.lang` attribute reflects the original query language, while received) Tj
1 0 0 1 50 588 Tm ( utterances are always in `self.internal_language`.) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (## Language Plugins) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (To run `UniversalSkills` you need to configure [Translation ) Tj
1 0 0 1 50 518 Tm (plugins]\(https://openvoiceos.github.io/ovos-technical-manual/lang_plugins.md\) in ) Tj
1 0 0 1 50 504 Tm (`mycroft.conf`) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (```javascript) Tj
1 0 0 1 50 462 Tm (  // Translation plugins) Tj
1 0 0 1 50 448 Tm (  "language": {) Tj
1 0 0 1 50 434 Tm (    // by default uses public servers) Tj
1 0 0 1 50 420 Tm (    // https://github.com/OpenVoiceOS/ovos-translate-server    ) Tj
1 0 0 1 50 406 Tm (    "detection_module": "ovos-lang-detector-plugin-server",) Tj
1 0 0 1 50 392 Tm (    "translation_module": "ovos-translate-plugin-server") Tj
1 0 0 1 50 378 Tm (  },) Tj
1 0 0 1 50 364 Tm (```) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (## Usage) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (### Initialization) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (```python) Tj
1 0 0 1 50 266 Tm (# Example initialization) Tj
1 0 0 1 50 252 Tm (from ovos_workshop.skills.auto_translatable import UniversalSkill) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (class MyMultilingualSkill\(UniversalSkill\):) Tj
1 0 0 1 50 210 Tm (    """) Tj
1 0 0 1 50 196 Tm (    Skill that auto translates input/output from any language) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (    This skill is designed to automatically translate input and output messages) Tj
1 0 0 1 50 154 Tm (    between different languages. The intent handlers are ensured to receive) Tj
1 0 0 1 50 140 Tm (    utterances in the skill's internal language, and they are expected to produce) Tj
1 0 0 1 50 126 Tm (    utterances in the same internal language.) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (    The `speak` method will always translate utterances from the internal language) Tj
1 0 0 1 50 84 Tm (    to the original query language \(`self.lang`\).) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (    NOTE: `self.lang` reflects the original query language, but received utterances) Tj
ET
endstream

endobj
613 0 obj
<< /Length 3014 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (          are always in `self.internal_language`.) Tj
1 0 0 1 50 728 Tm (    """) Tj
1 0 0 1 50 714 Tm (    def __init__\(self, *args, **kwargs\):) Tj
1 0 0 1 50 700 Tm (        """) Tj
1 0 0 1 50 686 Tm (        Initialize the UniversalSkill.) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (        Parameters for super\(\):) Tj
1 0 0 1 50 644 Tm (        - internal_language \(str\): The language in which the skill internally operates.) Tj
1 0 0 1 50 630 Tm (        - translate_tags \(bool\): Whether to translate the private __tags__ value \(adapt ) Tj
1 0 0 1 50 616 Tm (entities\).) Tj
1 0 0 1 50 602 Tm (        - autodetect \(bool\): If True, the skill will detect the language of the utterance) Tj
1 0 0 1 50 588 Tm (                            and ignore self.lang / Session.lang.) Tj
1 0 0 1 50 574 Tm (        - translate_keys \(list\): default ["utterance", "utterances"] ) Tj
1 0 0 1 50 560 Tm (                                 Keys added here will have values translated in ) Tj
1 0 0 1 50 546 Tm (message.data.) Tj
1 0 0 1 50 532 Tm (        """) Tj
1 0 0 1 50 518 Tm (        # skill hardcoded in portuguese) Tj
1 0 0 1 50 504 Tm (        super\(\).__init__\(internal_language="pt-pt", translate_tags=translate_tags,) Tj
1 0 0 1 50 490 Tm (                         autodetect=autodetect, translate_keys=translate_keys, *args, ) Tj
1 0 0 1 50 476 Tm (**kwargs\)) Tj
1 0 0 1 50 462 Tm (```) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (### Intents and Utterances) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (Use the `register_intent` and `register_intent_file` methods to register intents with ) Tj
1 0 0 1 50 392 Tm (universal intent handlers. The usual decorators also work) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (The `speak` method is used to generate spoken responses.) Tj
1 0 0 1 50 350 Tm (It automatically translates utterances if the output language is different from the ) Tj
1 0 0 1 50 336 Tm (skill's internal language or autodetection is enabled.) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (```python) Tj
1 0 0 1 50 294 Tm (# Example speaking utterance, hardcoded to self.internal_language) Tj
1 0 0 1 50 280 Tm (self.speak\("Hello, how are you?"\)) Tj
1 0 0 1 50 266 Tm (```) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (### Universal Intent Handler) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (> **NOTE** Users should NOT use the `create_universal_handler` method manually in skill ) Tj
1 0 0 1 50 196 Tm (intents; it is automatically utilized by `self.register_intent`. ) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (The following example demonstrates its usage with `self.add_event`.) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (```python) Tj
1 0 0 1 50 126 Tm (# Example universal handler creation) Tj
1 0 0 1 50 112 Tm (def my_event_handler\(message\):) Tj
1 0 0 1 50 98 Tm (    # Your event handling logic here) Tj
1 0 0 1 50 84 Tm (    pass) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (# Manual usage with self.add_event) Tj
ET
endstream

endobj
614 0 obj
<< /Length 2885 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (my_handler = self.create_universal_handler\(my_event_handler\)) Tj
1 0 0 1 50 728 Tm (self.add_event\("my_event", my_handler\)) Tj
1 0 0 1 50 714 Tm (```) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (## EnglishCatFacts Skill Example) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (Let's create a simple tutorial skill that interacts with an API to fetch cat facts in ) Tj
1 0 0 1 50 644 Tm (English. ) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (We'll use the `UniversalSkill` class to support translations for other languages.) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (```python) Tj
1 0 0 1 50 574 Tm (from ovos_workshop.skills.auto_translatable import UniversalSkill) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (class EnglishCatFactsSkill\(UniversalSkill\):) Tj
1 0 0 1 50 518 Tm (    def __init__\(self, *args, **kwargs\):) Tj
1 0 0 1 50 504 Tm (        """) Tj
1 0 0 1 50 490 Tm (        This skill is hardcoded in english, indicated by internal_language) Tj
1 0 0 1 50 476 Tm (        """) Tj
1 0 0 1 50 462 Tm (        super\(\).__init__\(internal_language="en-us", *args, **kwargs\)) Tj
1 0 0 1 50 448 Tm (        ) Tj
1 0 0 1 50 434 Tm (    def fetch_cat_fact\(self\):) Tj
1 0 0 1 50 420 Tm (        # Your logic to fetch a cat fact from an API) Tj
1 0 0 1 50 406 Tm (        cat_fact = "Cats have five toes on their front paws but only four on their back ) Tj
1 0 0 1 50 392 Tm (paws.") Tj
1 0 0 1 50 378 Tm (        return cat_fact) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (    @intent_handler\("cat_fact.intent"\)) Tj
1 0 0 1 50 336 Tm (    def handle_cat_fact_request\(self, message\):) Tj
1 0 0 1 50 322 Tm (        # Fetch a cat fact in self.internal_language) Tj
1 0 0 1 50 308 Tm (        cat_fact = self.fetch_cat_fact\(\)) Tj
1 0 0 1 50 294 Tm (        # Speak the cat fact, it will be translated to self.lang if needed) Tj
1 0 0 1 50 280 Tm (        self.speak\(cat_fact\)) Tj
1 0 0 1 50 266 Tm (```) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (In this example, the `CatFactsSkill` class extends `UniversalSkill`, allowing it to ) Tj
1 0 0 1 50 224 Tm (seamlessly translate cat facts into the user's preferred language.) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (## SpanishDatabase Skill Example) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (A more advanced example, let's consider a skill that listens to bus messages.) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (Our skill listens for messages containing a `"phrase"` payload in message.data that can be) Tj
1 0 0 1 50 98 Tm ( in any language, and it saves this phrase *in spanish* to a database. ) Tj
1 0 0 1 50 84 Tm (Then it speaks a hardcoded spanish utterance, and it gets translated into the language of ) Tj
1 0 0 1 50 70 Tm (the bus message Session) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
615 0 obj
<< /Length 2784 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (```python) Tj
1 0 0 1 50 728 Tm (from ovos_workshop.skills.auto_translatable import UniversalSkill) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (class SpanishDatabaseSkill\(UniversalSkill\):) Tj
1 0 0 1 50 686 Tm (    def __init__\(self, *args, **kwargs\):) Tj
1 0 0 1 50 672 Tm (        """) Tj
1 0 0 1 50 658 Tm (        This skill is hardcoded in spanish, indicated by internal_language) Tj
1 0 0 1 50 644 Tm (        """) Tj
1 0 0 1 50 630 Tm (        translate_keys=["phrase"] # translate "phrase" in message.data) Tj
1 0 0 1 50 616 Tm (        super\(\).__init__\(internal_language="es-es",) Tj
1 0 0 1 50 602 Tm (                         translate_keys=translate_keys,) Tj
1 0 0 1 50 588 Tm (                         *args, **kwargs\)) Tj
1 0 0 1 50 574 Tm (    ) Tj
1 0 0 1 50 560 Tm (    def initialize\(self\):) Tj
1 0 0 1 50 546 Tm (        # wrap the event into a auto translation layer) Tj
1 0 0 1 50 532 Tm (        handler = self.create_universal_handler\(self.handle_entry\)) Tj
1 0 0 1 50 518 Tm (        self.add_event\("skill.database.add", handler\)) Tj
1 0 0 1 50 504 Tm (        ) Tj
1 0 0 1 50 490 Tm (    def handle_entry\(self, message: Message\):) Tj
1 0 0 1 50 476 Tm (        phrase = message.data["phrase"]  # assured to be in self.internal_language) Tj
1 0 0 1 50 462 Tm (        ) Tj
1 0 0 1 50 448 Tm (        # Your logic to save phrase to a database) Tj
1 0 0 1 50 434 Tm (        ) Tj
1 0 0 1 50 420 Tm (        self.speak\("agregado a la base de datos"\) # will be spoken in self.lang) Tj
1 0 0 1 50 406 Tm (```) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (# docs/630-OCP_skills.md) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (# OCP Skills) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (OCP skills are built from the OVOSCommonPlaybackSkill class) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (These skills work as media providers, they return results for OCP to playback) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (The actual voice interaction is handled by OCP, skills only implement the returning of ) Tj
1 0 0 1 50 238 Tm (results) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (## Search Results) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (Search results are returned as a list of dicts, skills can also use iterators to yield ) Tj
1 0 0 1 50 168 Tm (results 1 at a time as they become available) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (Mandatory fields are) Tj
1 0 0 1 50 126 Tm (```python) Tj
1 0 0 1 50 112 Tm (uri: str  # URL/URI of media, OCP will handle formatting and file handling) Tj
1 0 0 1 50 98 Tm (title: str) Tj
1 0 0 1 50 84 Tm (media_type: MediaType) Tj
1 0 0 1 50 70 Tm (playback: PlaybackType) Tj
1 0 0 1 50 56 Tm (match_confidence: int  # 0-100) Tj
ET
endstream

endobj
616 0 obj
<< /Length 3176 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (```) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (Other optional metadata includes artists, album, length and images for the GUI) Tj
1 0 0 1 50 700 Tm (```python) Tj
1 0 0 1 50 686 Tm (artist: str) Tj
1 0 0 1 50 672 Tm (album: str) Tj
1 0 0 1 50 658 Tm (image: str # uri/file path) Tj
1 0 0 1 50 644 Tm (bg_image: str # uri/file path) Tj
1 0 0 1 50 630 Tm (skill_icon: str # uri/file path) Tj
1 0 0 1 50 616 Tm (length: int # seconds, -1 for live streams) Tj
1 0 0 1 50 602 Tm (```) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (![imagem]\(https://github.com/OpenVoiceOS/ovos-technical-) Tj
1 0 0 1 50 560 Tm (manual/assets/33701864/08e31d2d-90e8-45ea-ab2f-dbd235892cb3\)) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (### OCP Skill) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (General Steps to create a skill) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (- subclass your skill from `OVOSCommonPlaybackSkill`) Tj
1 0 0 1 50 462 Tm (- In the \\_\\_init\\_\\_ method indicate [the media types you want to ) Tj
1 0 0 1 50 448 Tm (handle]\(https://github.com/OpenVoiceOS/ovos-ocp-audio-plugin/blob/31701ded43a4f7ff6c02833d) Tj
1 0 0 1 50 434 Tm (6aaf1bc0740257fc/ovos_plugin_common_play/ocp/status.py#L95\)) Tj
1 0 0 1 50 420 Tm (- `self.voc_match\(phrase, "skill_name"\)` to handle specific requests for your skill) Tj
1 0 0 1 50 406 Tm (- `self.remove_voc\(phrase, "skill_name"\)` to remove matched phrases from the search ) Tj
1 0 0 1 50 392 Tm (request) Tj
1 0 0 1 50 378 Tm (- Implement the `ocp_search` decorator, as many as you want \(they run in parallel\)) Tj
1 0 0 1 50 364 Tm (  - The decorated method can return a list or be an iterator of `result_dict` \(track or ) Tj
1 0 0 1 50 350 Tm (playlist\)) Tj
1 0 0 1 50 336 Tm (  - The search function can be entirely inline or call another Python library, like ) Tj
1 0 0 1 50 322 Tm ([pandorinha]\(https://github.com/OpenJarbas/pandorinha\) or ) Tj
1 0 0 1 50 308 Tm ([plexapi]\(https://github.com/pkkid/python-plexapi\)) Tj
1 0 0 1 50 294 Tm (- `self.extend_timeout\(\)` to delay OCP from selecting a result, requesting more time to ) Tj
1 0 0 1 50 280 Tm (perform the search) Tj
1 0 0 1 50 266 Tm (- Implement a confidence score formula) Tj
1 0 0 1 50 252 Tm (  - [Values are between 0 and 100]\(https://github.com/OpenVoiceOS/ovos-ocp-audio-plugin/bl) Tj
1 0 0 1 50 238 Tm (ob/31701ded43a4f7ff6c02833d6aaf1bc0740257fc/ovos_plugin_common_play/ocp/status.py#L4\)) Tj
1 0 0 1 50 224 Tm (  - High confidence scores cancel other OCP skill searches) Tj
1 0 0 1 50 210 Tm (- `ocp_featured_media`, return a playlist for the OCP menu if selected from GUI \(optional\)) Tj
1 0 0 1 50 196 Tm (- Create a `requirements.txt` file with third-party package requirements) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (```python) Tj
1 0 0 1 50 140 Tm (from os.path import join, dirname) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (import radiosoma) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (from ovos_utils import classproperty) Tj
1 0 0 1 50 70 Tm (from ovos_utils.ocp import MediaType, PlaybackType) Tj
1 0 0 1 50 56 Tm (from ovos_utils.parse import fuzzy_match) Tj
ET
endstream

endobj
617 0 obj
<< /Length 2937 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (from ovos_workshop.decorators.ocp import ocp_search, ocp_featured_media) Tj
1 0 0 1 50 728 Tm (from ovos_workshop.skills.common_play import OVOSCommonPlaybackSkill) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (class SomaFMSkill\(OVOSCommonPlaybackSkill\):) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (    def __init__\(self, *args, **kwargs\):) Tj
1 0 0 1 50 644 Tm (        # media type this skill can handle) Tj
1 0 0 1 50 630 Tm (        self.supported_media = [MediaType.MUSIC, MediaType.RADIO]) Tj
1 0 0 1 50 616 Tm (        self.skill_icon = join\(dirname\(__file__\), "ui", "somafm.png"\)) Tj
1 0 0 1 50 602 Tm (        super\(\).__init__\(*args, **kwargs\)) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (    @ocp_featured_media\(\)) Tj
1 0 0 1 50 560 Tm (    def featured_media\(self\):) Tj
1 0 0 1 50 546 Tm (        # playlist when selected from OCP skills menu) Tj
1 0 0 1 50 532 Tm (        return [{) Tj
1 0 0 1 50 518 Tm (            "match_confidence": 90,) Tj
1 0 0 1 50 504 Tm (            "media_type": MediaType.RADIO,) Tj
1 0 0 1 50 490 Tm (            "uri": ch.direct_stream,) Tj
1 0 0 1 50 476 Tm (            "playback": PlaybackType.AUDIO,) Tj
1 0 0 1 50 462 Tm (            "image": ch.image,) Tj
1 0 0 1 50 448 Tm (            "bg_image": ch.image,) Tj
1 0 0 1 50 434 Tm (            "skill_icon": self.skill_icon,) Tj
1 0 0 1 50 420 Tm (            "title": ch.title,) Tj
1 0 0 1 50 406 Tm (            "author": "SomaFM",) Tj
1 0 0 1 50 392 Tm (            "length": 0) Tj
1 0 0 1 50 378 Tm (        } for ch in radiosoma.get_stations\(\)]) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (    @ocp_search\(\)) Tj
1 0 0 1 50 336 Tm (    def search_somafm\(self, phrase, media_type\):) Tj
1 0 0 1 50 322 Tm (        # check if user asked for a known radio station) Tj
1 0 0 1 50 308 Tm (        base_score = 0) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (        if media_type == MediaType.RADIO:) Tj
1 0 0 1 50 266 Tm (            base_score += 20) Tj
1 0 0 1 50 252 Tm (        else:) Tj
1 0 0 1 50 238 Tm (            base_score -= 30) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (        if self.voc_match\(phrase, "radio"\):) Tj
1 0 0 1 50 196 Tm (            base_score += 10) Tj
1 0 0 1 50 182 Tm (            phrase = self.remove_voc\(phrase, "radio"\)) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (        if self.voc_match\(phrase, "somafm"\):) Tj
1 0 0 1 50 140 Tm (            base_score += 30  # explicit request) Tj
1 0 0 1 50 126 Tm (            phrase = self.remove_voc\(phrase, "somafm"\)) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (        for ch in radiosoma.get_stations\(\):) Tj
1 0 0 1 50 84 Tm (            score = round\(base_score + fuzzy_match\(ch.title.lower\(\),) Tj
1 0 0 1 50 70 Tm (                                                   phrase.lower\(\)\) * 100\)) Tj
1 0 0 1 50 56 Tm (            if score < 50:) Tj
ET
endstream

endobj
618 0 obj
<< /Length 2721 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (                continue) Tj
1 0 0 1 50 728 Tm (            yield {) Tj
1 0 0 1 50 714 Tm (                "match_confidence": min\(100, score\),) Tj
1 0 0 1 50 700 Tm (                "media_type": MediaType.RADIO,) Tj
1 0 0 1 50 686 Tm (                "uri": ch.direct_stream,) Tj
1 0 0 1 50 672 Tm (                "playback": PlaybackType.AUDIO,) Tj
1 0 0 1 50 658 Tm (                "image": ch.image,) Tj
1 0 0 1 50 644 Tm (                "bg_image": ch.image,) Tj
1 0 0 1 50 630 Tm (                "skill_icon": self.skill_icon,) Tj
1 0 0 1 50 616 Tm (                "title": ch.title,) Tj
1 0 0 1 50 602 Tm (                "artistr": "SomaFM",) Tj
1 0 0 1 50 588 Tm (                "length": 0) Tj
1 0 0 1 50 574 Tm (            }) Tj
1 0 0 1 50 560 Tm (```) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (## OCP Keywords) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (OCP skills often need to match hundreds or thousands of strings against the query string, ) Tj
1 0 0 1 50 476 Tm (`self.voc_match` can quickly become impractical to use in this scenario) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (To help with this the OCP skill class provides efficient keyword matching) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (```python) Tj
1 0 0 1 50 406 Tm (def register_ocp_keyword\(self, label: str, samples: List, langs: List[str] = None\):) Tj
1 0 0 1 50 392 Tm (    """ register strings as native OCP keywords \(eg, movie_name, artist_name ...\)) Tj
1 0 0 1 50 378 Tm (    ocp keywords can be efficiently matched with self.ocp_match helper method) Tj
1 0 0 1 50 364 Tm (    that uses AhoCorasick algorithm) Tj
1 0 0 1 50 350 Tm (    """) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (def load_ocp_keyword_from_csv\(self, csv_path: str, lang: str\):) Tj
1 0 0 1 50 308 Tm (    """ load entities from a .csv file for usage with self.ocp_voc_match) Tj
1 0 0 1 50 294 Tm (    see the ocp_entities.csv datatsets for example files built from wikidata SPARQL ) Tj
1 0 0 1 50 280 Tm (queries) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (    examples contents of csv file) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (        label,entity) Tj
1 0 0 1 50 210 Tm (        film_genre,swashbuckler film) Tj
1 0 0 1 50 196 Tm (        film_genre,neo-noir) Tj
1 0 0 1 50 182 Tm (        film_genre,actual play film) Tj
1 0 0 1 50 168 Tm (        film_genre,alternate history film) Tj
1 0 0 1 50 154 Tm (        film_genre,spy film) Tj
1 0 0 1 50 140 Tm (        ...) Tj
1 0 0 1 50 126 Tm (    """) Tj
1 0 0 1 50 112 Tm (```) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (### OCP Voc match) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (uses [AhoCorasick ) Tj
ET
endstream

endobj
619 0 obj
<< /Length 2976 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (algorithm]\(https://en.wikipedia.org/wiki/Aho%E2%80%93Corasick_algorithm\) to match OCP ) Tj
1 0 0 1 50 728 Tm (keywords) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (this efficiently matches many keywords against an utterance) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (OCP keywords are registered via `self.register_ocp_keyword`) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (wordlists can also be loaded from a .csv file, see [the OCP ) Tj
1 0 0 1 50 630 Tm (dataset]\(https://github.com/OpenVoiceOS/ovos-) Tj
1 0 0 1 50 616 Tm (classifiers/tree/dev/scripts/training/ocp/datasets\) for a list of keywords gathered from ) Tj
1 0 0 1 50 602 Tm (wikidata with SPARQL queries) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (### OCP Database Skill) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (```python) Tj
1 0 0 1 50 518 Tm (import json) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (from ovos_utils.messagebus import FakeBus) Tj
1 0 0 1 50 476 Tm (from ovos_utils.ocp import MediaType) Tj
1 0 0 1 50 462 Tm (from ovos_workshop.skills.common_play import OVOSCommonPlaybackSkill) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (class HorrorBabbleSkill\(OVOSCommonPlaybackSkill\):) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (    def initialize\(self\):) Tj
1 0 0 1 50 378 Tm (        # get file from) Tj
1 0 0 1 50 364 Tm (        # https://github.com/JarbasSkills/skill-horrorbabble/blob/dev/bootstrap.json) Tj
1 0 0 1 50 350 Tm (        with open\("hb.json"\) as f:) Tj
1 0 0 1 50 336 Tm (            db = json.load\(f\)) Tj
1 0 0 1 50 322 Tm (        book_names = []) Tj
1 0 0 1 50 308 Tm (        book_authors = []) Tj
1 0 0 1 50 294 Tm (        for url, data in db.items\(\):) Tj
1 0 0 1 50 280 Tm (            t = data["title"].split\("/"\)[0].strip\(\)) Tj
1 0 0 1 50 266 Tm (            if " by " in t:) Tj
1 0 0 1 50 252 Tm (                title, author = t.split\(" by "\)) Tj
1 0 0 1 50 238 Tm (                title = title.replace\('"', ""\).strip\(\)) Tj
1 0 0 1 50 224 Tm (                author = author.split\("\("\)[0].strip\(\)) Tj
1 0 0 1 50 210 Tm (                book_names.append\(title\)) Tj
1 0 0 1 50 196 Tm (                book_authors.append\(author\)) Tj
1 0 0 1 50 182 Tm (                if " " in author:) Tj
1 0 0 1 50 168 Tm (                    book_authors += author.split\(" "\)) Tj
1 0 0 1 50 154 Tm (            elif t.startswith\('"'\) and t.endswith\('"'\):) Tj
1 0 0 1 50 140 Tm (                book_names.append\(t[1:-1]\)) Tj
1 0 0 1 50 126 Tm (            else:) Tj
1 0 0 1 50 112 Tm (                book_names.append\(t\)) Tj
1 0 0 1 50 98 Tm (        self.register_ocp_keyword\(MediaType.AUDIOBOOK,) Tj
1 0 0 1 50 84 Tm (                                  "book_author",) Tj
1 0 0 1 50 70 Tm (                                  list\(set\(book_authors\)\)\)) Tj
1 0 0 1 50 56 Tm (        self.register_ocp_keyword\(MediaType.AUDIOBOOK,) Tj
ET
endstream

endobj
620 0 obj
<< /Length 2766 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (                                  "book_name",) Tj
1 0 0 1 50 728 Tm (                                  list\(set\(book_names\)\)\)) Tj
1 0 0 1 50 714 Tm (        self.register_ocp_keyword\(MediaType.AUDIOBOOK,) Tj
1 0 0 1 50 700 Tm (                                  "audiobook_streaming_provider",) Tj
1 0 0 1 50 686 Tm (                                  ["HorrorBabble", "Horror Babble"]\)) Tj
1 0 0 1 50 672 Tm (```) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (```python) Tj
1 0 0 1 50 630 Tm (s = HorrorBabbleSkill\(bus=FakeBus\(\), skill_id="demo.fake"\)) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (entities = s.ocp_voc_match\("read The Call of Cthulhu by Lovecraft"\)) Tj
1 0 0 1 50 588 Tm (# {'book_author': 'Lovecraft', 'book_name': 'The Call of Cthulhu'}) Tj
1 0 0 1 50 574 Tm (print\(entities\)) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (entities = s.ocp_voc_match\("play HorrorBabble"\)) Tj
1 0 0 1 50 532 Tm (# {'audiobook_streaming_provider': 'HorrorBabble'}) Tj
1 0 0 1 50 518 Tm (print\(entities\)) Tj
1 0 0 1 50 504 Tm (```) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (## Playlist Results) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (Results can also be playlists, not only single tracks, for instance full albums or a full ) Tj
1 0 0 1 50 420 Tm (season for a series) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (When a playlist is selected from Search Results, it will replace the Now Playing list) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (Playlist results look exactly the same as regular results, but instead of a `uri` they ) Tj
1 0 0 1 50 350 Tm (provide a `playlist`) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (```python) Tj
1 0 0 1 50 308 Tm (playlist: list  # list of dicts, each dict is a regular search result) Tj
1 0 0 1 50 294 Tm (title: str) Tj
1 0 0 1 50 280 Tm (media_type: MediaType) Tj
1 0 0 1 50 266 Tm (playback: PlaybackType) Tj
1 0 0 1 50 252 Tm (match_confidence: int  # 0-100) Tj
1 0 0 1 50 238 Tm (```) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (> NOTE: nested playlists are a work in progress and not guaranteed to be functional, ie, ) Tj
1 0 0 1 50 196 Tm (the `"playlist"` dict key should not include other playlists) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (### Playlist Skill) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (```python) Tj
1 0 0 1 50 126 Tm (class MyJamsSkill\(OVOSCommonPlaybackSkill\):) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (    def __init__\(self, *args, **kwargs\):) Tj
1 0 0 1 50 84 Tm (        self.supported_media = [MediaType.MUSIC]) Tj
1 0 0 1 50 70 Tm (        self.skill_icon = join\(dirname\(__file__\), "ui", "myjams.png"\)) Tj
1 0 0 1 50 56 Tm (        super\(\).__init__\(*args, **kwargs\)) Tj
ET
endstream

endobj
621 0 obj
<< /Length 3183 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (    @ocp_search\(\)) Tj
1 0 0 1 50 714 Tm (    def search_my_jams\(self, phrase, media_type\):) Tj
1 0 0 1 50 700 Tm (        if self.voc_match\(...\):) Tj
1 0 0 1 50 686 Tm (            results = [...]  # regular result dicts, as in examples above) Tj
1 0 0 1 50 672 Tm (            score = 70  # TODO) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (            yield {) Tj
1 0 0 1 50 630 Tm (                "match_confidence": min\(100, score\),) Tj
1 0 0 1 50 616 Tm (                "media_type": MediaType.MUSIC,) Tj
1 0 0 1 50 602 Tm (                "playlist": results, # replaces "uri") Tj
1 0 0 1 50 588 Tm (                "playback": PlaybackType.AUDIO,) Tj
1 0 0 1 50 574 Tm (                "image": self.image,) Tj
1 0 0 1 50 560 Tm (                "bg_image": self.image,) Tj
1 0 0 1 50 546 Tm (                "skill_icon": self.skill_icon,) Tj
1 0 0 1 50 532 Tm (                "title": "MyJams",) Tj
1 0 0 1 50 518 Tm (                "length": sum\([r["length"] for r in results]\)  # total playlist duration) Tj
1 0 0 1 50 504 Tm (            }) Tj
1 0 0 1 50 490 Tm (```) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (# docs/631-OCP_pipeline.md) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (# OCP Pipeline) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (The **OCP \(OVOS Common Playback\)** Pipeline Plugin integrates seamlessly into the OVOS ) Tj
1 0 0 1 50 378 Tm (intent processing framework,) Tj
1 0 0 1 50 364 Tm (enabling intelligent handling of media-related voice commands. By leveraging classifiers, ) Tj
1 0 0 1 50 350 Tm (skill-registered catalogs, and) Tj
1 0 0 1 50 336 Tm (playback-specific filters, OCP facilitates accurate recognition and execution of user ) Tj
1 0 0 1 50 322 Tm (requests such as "play music," ") Tj
1 0 0 1 50 308 Tm (pause video," or "next song.") Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (---) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (## Pipeline Components) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (The OCP Pipeline Plugin registers three components within the OVOS intent pipeline, each ) Tj
1 0 0 1 50 210 Tm (corresponding to different) Tj
1 0 0 1 50 196 Tm (confidence levels in interpreting media-related intents:) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (| Pipeline ID  | Description                            | Recommended Use) Tj
1 0 0 1 50 154 Tm (                                                                    |   ) Tj
1 0 0 1 50 140 Tm (|--------------|----------------------------------------|---------------------------------) Tj
1 0 0 1 50 126 Tm (---------------------------------------------------|) Tj
1 0 0 1 50 112 Tm (| `ocp_high`   | High-confidence media intent matches   | ? Primary media commands) Tj
1 0 0 1 50 98 Tm (                                                           |   ) Tj
1 0 0 1 50 84 Tm (| `ocp_medium` | Medium-confidence media intent matches | ?? Ambiguous media queries) Tj
1 0 0 1 50 70 Tm (                                                         |   ) Tj
1 0 0 1 50 56 Tm (| `ocp_low`    | Low-confidence media intent matches    | ? Broad keyword matches. Only ) Tj
ET
endstream

endobj
622 0 obj
<< /Length 2621 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (use if the device is exclusively for media playback |   ) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (These components should be ordered in the pipeline to prioritize higher-confidence matches) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (---) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (## Intent Classification) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (OCP employs a combination of techniques to classify and handle media-related intents:) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (* **Keyword-Based Matching**: Identifies explicit media-related terms in user utterances.) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (* **Skill-Registered Keywords**: Utilizes media keywords registered by OCP-aware skills ) Tj
1 0 0 1 50 560 Tm (\(e.g., artist names, show) Tj
1 0 0 1 50 546 Tm (  titles\) to enhance intent recognition.) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (* **Media Type Classification**: Assigns a media type \(e.g., music, podcast, movie\) to the) Tj
1 0 0 1 50 504 Tm ( query based on keywords or an) Tj
1 0 0 1 50 490 Tm (  optional experimental classifier.) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (> ?? The `ocp_low` component relies on skill-registered keywords and may trigger on ) Tj
1 0 0 1 50 448 Tm (queries that include known media) Tj
1 0 0 1 50 434 Tm (> terms, even if the user's intent is not to initiate playback.) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (---) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (## Media Type Handling) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (OCP supports various media types, including:) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (* `music`) Tj
1 0 0 1 50 308 Tm (* `podcast`) Tj
1 0 0 1 50 294 Tm (* `movie`) Tj
1 0 0 1 50 280 Tm (* `radio`) Tj
1 0 0 1 50 266 Tm (* `audiobook`) Tj
1 0 0 1 50 252 Tm (* `news`) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (Media type classification is primarily based on keywords within the user's query. For ) Tj
1 0 0 1 50 210 Tm (example, a query containing "play) Tj
1 0 0 1 50 196 Tm (the latest news" would be classified under the `news` media type. An experimental ) Tj
1 0 0 1 50 182 Tm (classifier can also be enabled to) Tj
1 0 0 1 50 168 Tm (predict media types based on the full query context.) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (---) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (## Result Filtering) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (After gathering potential media results from OCP-enabled skills, the plugin applies ) Tj
1 0 0 1 50 70 Tm (several filters to ensure relevance) Tj
1 0 0 1 50 56 Tm (and playability:) Tj
ET
endstream

endobj
623 0 obj
<< /Length 2660 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (* **Confidence Threshold**: Results with a `match_confidence` below the configured ) Tj
1 0 0 1 50 714 Tm (`min_score` are discarded.) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (* **Media Type Consistency**: If a media type has been classified, results of differing ) Tj
1 0 0 1 50 672 Tm (types are removed.) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (* **Plugin Availability**: Results requiring unavailable playback plugins \(e.g., ) Tj
1 0 0 1 50 630 Tm (`spotify://` URIs without the Spotify) Tj
1 0 0 1 50 616 Tm (  plugin\) are excluded.) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (* **Playback Mode Preference**: Respects user or system preferences for audio-only or ) Tj
1 0 0 1 50 574 Tm (video-only playback, filtering out) Tj
1 0 0 1 50 560 Tm (  incompatible results.) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (---) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (## Playback Management) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (OCP delegates the actual media playback to the appropriate plugin managed by `ovos-audio`.) Tj
1 0 0 1 50 462 Tm ( Skills act solely as media) Tj
1 0 0 1 50 448 Tm (catalogs, providing search results without handling playback directly. This separation ) Tj
1 0 0 1 50 434 Tm (ensures a consistent and) Tj
1 0 0 1 50 420 Tm (centralized playback experience across different media types and sources.) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (the OCP Pipeline keeps track of media player status across `Session`s, this is taken into ) Tj
1 0 0 1 50 378 Tm (account during the intent) Tj
1 0 0 1 50 364 Tm (matching process) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (eg. if no media player is active, then "next song" will not trigger) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (---) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (## Configuration Options) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (OCP behavior can be customized via the `mycroft.conf` file under the `intents` section:) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (```json) Tj
1 0 0 1 50 210 Tm ({) Tj
1 0 0 1 50 196 Tm (  "intents": {) Tj
1 0 0 1 50 182 Tm (    "OCP": {) Tj
1 0 0 1 50 168 Tm (      "experimental_media_classifier": false,) Tj
1 0 0 1 50 154 Tm (      "experimental_binary_classifier": false,) Tj
1 0 0 1 50 140 Tm (      "legacy": false,) Tj
1 0 0 1 50 126 Tm (      "classifier_threshold": 0.4,) Tj
1 0 0 1 50 112 Tm (      "min_score": 40,) Tj
1 0 0 1 50 98 Tm (      "filter_media": true,) Tj
1 0 0 1 50 84 Tm (      "filter_SEI": true,) Tj
1 0 0 1 50 70 Tm (      "playback_mode": 0,) Tj
1 0 0 1 50 56 Tm (      "search_fallback": true) Tj
ET
endstream

endobj
624 0 obj
<< /Length 3358 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (    }) Tj
1 0 0 1 50 728 Tm (  }) Tj
1 0 0 1 50 714 Tm (}) Tj
1 0 0 1 50 700 Tm (```) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (| Key                              | Type  | Default | Description) Tj
1 0 0 1 50 658 Tm (                                                            |) Tj
1 0 0 1 50 644 Tm (                                                       ) Tj
1 0 0 1 50 630 Tm (|----------------------------------|-------|---------|------------------------------------) Tj
1 0 0 1 50 616 Tm (------------------------------------| ) Tj
1 0 0 1 50 602 Tm (| `experimental_media_classifier`  | bool  | false   | Enable ML-based media type ) Tj
1 0 0 1 50 588 Tm (classification \(English only\).              |) Tj
1 0 0 1 50 574 Tm (                                                       ) Tj
1 0 0 1 50 560 Tm (| `experimental_binary_classifier` | bool  | false   | Enable ML-based media detection for) Tj
1 0 0 1 50 546 Tm ( `ocp_medium`.  \(English only\).     |) Tj
1 0 0 1 50 532 Tm (                                                       ) Tj
1 0 0 1 50 518 Tm (| `legacy`                         | bool  | false   | Use legacy audio service API ) Tj
1 0 0 1 50 504 Tm (instead of OCP \(not recommended\).         |) Tj
1 0 0 1 50 490 Tm (                                                       ) Tj
1 0 0 1 50 476 Tm (| `classifier_threshold`           | float | 0.4     | Minimum confidence for trusting ) Tj
1 0 0 1 50 462 Tm (classifier results \(0.01.0\).          |) Tj
1 0 0 1 50 448 Tm (                                                       ) Tj
1 0 0 1 50 434 Tm (| `min_score`                      | int   | 40      | Minimum match confidence to retain ) Tj
1 0 0 1 50 420 Tm (a skill result \(0100\).             |) Tj
1 0 0 1 50 406 Tm (                                                       ) Tj
1 0 0 1 50 392 Tm (| `filter_media`                   | bool  | true    | Enable media type-based result ) Tj
1 0 0 1 50 378 Tm (filtering.                              |) Tj
1 0 0 1 50 364 Tm (                                                       ) Tj
1 0 0 1 50 350 Tm (| `filter_SEI`                     | bool  | true    | Filter out results requiring ) Tj
1 0 0 1 50 336 Tm (unavailable plugins \(Stream Extractors\).  |) Tj
1 0 0 1 50 322 Tm (                                                       ) Tj
1 0 0 1 50 308 Tm (| `playback_mode`                  | int   | 0       | Playback preference: `0` = auto, ) Tj
1 0 0 1 50 294 Tm (`10` = audio-only, `20` = video-only. |) Tj
1 0 0 1 50 280 Tm (                                                       ) Tj
1 0 0 1 50 266 Tm (| `search_fallback`                | bool  | true    | Perform a generic media search if ) Tj
1 0 0 1 50 252 Tm (no type-specific results are found.  |) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (---) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (# docs/700-homescreen.md) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (# OpenVoiceOS Home Screen) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (The home screen is the central place for all your tasks. It is what your device displays ) Tj
1 0 0 1 50 112 Tm (when it is idle) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (## Configuration) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (Select a homescreen in `mycroft.conf` or via `ovos-shell`) Tj
ET
endstream

endobj
625 0 obj
<< /Length 2626 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (```javascript) Tj
1 0 0 1 50 714 Tm ("gui": {) Tj
1 0 0 1 50 700 Tm (    "idle_display_skill": "skill-ovos-homescreen.openvoiceos") Tj
1 0 0 1 50 686 Tm (}) Tj
1 0 0 1 50 672 Tm (```) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (## Resting Faces) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (The resting face API provides skill authors the ability to extend their skills to supply ) Tj
1 0 0 1 50 602 Tm (their own customized IDLE screens that will be displayed when there is no activity on the ) Tj
1 0 0 1 50 588 Tm (screen.) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (```) Tj
1 0 0 1 50 546 Tm (import requests) Tj
1 0 0 1 50 532 Tm (from ovos_workshop.skills import OVOSSkill) Tj
1 0 0 1 50 518 Tm (from ovos_workshop.descorators import intent_handler, resting_screen_handler) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (class CatSkill\(OVOSSkill\):) Tj
1 0 0 1 50 462 Tm (    def update_cat\(self\):) Tj
1 0 0 1 50 448 Tm (        r = requests.get\('https://api.thecatapi.com/v1/images/search'\)) Tj
1 0 0 1 50 434 Tm (        return r.json\(\)[0]['url']) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (    @resting_screen_handler\("Cat Image"\)) Tj
1 0 0 1 50 392 Tm (    def idle\(self, message\):) Tj
1 0 0 1 50 378 Tm (        img = self.update_cat\(\)) Tj
1 0 0 1 50 364 Tm (        self.gui.show_image\(img\)) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (    @intent_handler\('show_cat.intent'\)) Tj
1 0 0 1 50 322 Tm (    def cat_handler\(self, message\):) Tj
1 0 0 1 50 308 Tm (        img = self.update_cat\(\)) Tj
1 0 0 1 50 294 Tm (        self.gui.show_image\(img\)) Tj
1 0 0 1 50 280 Tm (        self.speak_dialog\('mjau'\)) Tj
1 0 0 1 50 266 Tm (```) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (A more advanced example, refreshing a webpage on a timer) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (```python) Tj
1 0 0 1 50 196 Tm (from ovos_workshop.skills import OVOSSkill) Tj
1 0 0 1 50 182 Tm (from ovos_workshop.descorators import intent_handler, resting_screen_handler) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (class WebpageHomescreen\(OVOSSkill\):) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (    def initialize\(self\):) Tj
1 0 0 1 50 112 Tm (        """Perform final setup of Skill.""") Tj
1 0 0 1 50 98 Tm (        # Disable manual refresh until this Homepage is made active.) Tj
1 0 0 1 50 84 Tm (        self.is_active = False) Tj
1 0 0 1 50 70 Tm (        self.disable_intent\("refresh-homepage.intent"\)) Tj
1 0 0 1 50 56 Tm (        self.settings_change_callback = self.refresh_homescreen) Tj
ET
endstream

endobj
626 0 obj
<< /Length 2978 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (    def get_intro_message\(self\):) Tj
1 0 0 1 50 714 Tm (        """Provide instructions on first install.""") Tj
1 0 0 1 50 700 Tm (        self.speak_dialog\("setting-url"\)) Tj
1 0 0 1 50 686 Tm (        self.speak_dialog\("selecting-homescreen"\)) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (    @resting_screen_handler\("Webpage Homescreen"\)) Tj
1 0 0 1 50 644 Tm (    def handle_request_to_use_homescreen\(self, message: Message\):) Tj
1 0 0 1 50 630 Tm (        """Handler for requests from GUI to use this Homescreen.""") Tj
1 0 0 1 50 616 Tm (        self.is_active = True) Tj
1 0 0 1 50 602 Tm (        self.display_homescreen\(\)) Tj
1 0 0 1 50 588 Tm (        self.refresh_homescreen\(message\)) Tj
1 0 0 1 50 574 Tm (        self.enable_intent\("refresh-homepage.intent"\)) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (    def display_homescreen\(self\):) Tj
1 0 0 1 50 532 Tm (        """Display the selected webpage as the Homescreen.""") Tj
1 0 0 1 50 518 Tm (        default_url = "https://openvoiceos.github.io/status") Tj
1 0 0 1 50 504 Tm (        url = self.settings.get\("homepage_url", default_url\)) Tj
1 0 0 1 50 490 Tm (        self.gui.show_url\(url\)) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (    @intent_handler\("refresh-homepage.intent"\)) Tj
1 0 0 1 50 448 Tm (    def refresh_homescreen\(self, message: Message\):) Tj
1 0 0 1 50 434 Tm (        """Update refresh rate of homescreen and refresh screen.) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (        Defaults to 600 seconds / 10 minutes.) Tj
1 0 0 1 50 392 Tm (        """) Tj
1 0 0 1 50 378 Tm (        self.cancel_scheduled_event\("refresh-webpage-homescreen"\)) Tj
1 0 0 1 50 364 Tm (        if self.is_active:) Tj
1 0 0 1 50 350 Tm (            self.schedule_repeating_event\() Tj
1 0 0 1 50 336 Tm (                self.display_homescreen,) Tj
1 0 0 1 50 322 Tm (                0,) Tj
1 0 0 1 50 308 Tm (                self.settings.get\("refresh_frequency", 600\),) Tj
1 0 0 1 50 294 Tm (                name="refresh-webpage-homescreen",) Tj
1 0 0 1 50 280 Tm (            \)) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (    def shutdown\(self\):) Tj
1 0 0 1 50 238 Tm (        """Actions to perform when Skill is shutting down.""") Tj
1 0 0 1 50 224 Tm (        self.is_active = False) Tj
1 0 0 1 50 210 Tm (        self.cancel_all_repeating_events\(\)) Tj
1 0 0 1 50 196 Tm (```) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (# docs/701-gui_protocol.md) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (## Protocol) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (The [gui service]\(https://github.com/OpenVoiceOS/ovos-gui\) in ovos-core will expose a ) Tj
1 0 0 1 50 98 Tm (websocket to) Tj
1 0 0 1 50 84 Tm (the GUI clients following the protocol outlined in this page) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (The transport protocol works between gui service and the gui clients, OpenVoiceOS does not) Tj
ET
endstream

endobj
627 0 obj
<< /Length 3298 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm ( directly use the protocol but instead communicates with `ovos-gui` via the standard ) Tj
1 0 0 1 50 728 Tm (messagebus) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (The QT library which implements the protocol lives in the [mycroft-gui-) Tj
1 0 0 1 50 686 Tm (qt5]\(https://github.com/OpenVoiceOS/mycroft-gui-qt5\) repository. ) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (![imagem]\(https://github.com/OpenVoiceOS/ovos-technical-) Tj
1 0 0 1 50 644 Tm (manual/assets/33701864/92e73af7-f7d2-4aa3-a294-77f87aa22390\)) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (## Specification) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (This protocol defines how ovos-gui communicates with connected clients) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (- [CONNECTION - mycroft.gui.connected]\(#connection---mycroftguiconnected\)) Tj
1 0 0 1 50 546 Tm (- [NAMESPACES]\(#namespaces\)) Tj
1 0 0 1 50 532 Tm (  * [Active Skills - mycroft.system.active_skills]\(#active-skills---mycroftsystemactive-) Tj
1 0 0 1 50 518 Tm (skills\)) Tj
1 0 0 1 50 504 Tm (- [PAGES - mycroft.gui.list.xxx]\(#pages---mycroftguilistxxx\)) Tj
1 0 0 1 50 490 Tm (  * [Insert new page at position]\(#insert-new-page-at-position\)) Tj
1 0 0 1 50 476 Tm (  * [Move pages within the list]\(#move-pages-within-the-list\)) Tj
1 0 0 1 50 462 Tm (  * [Remove pages from the list]\(#remove-pages-from-the-list\)) Tj
1 0 0 1 50 448 Tm (- [EVENTS - mycroft.events.triggered]\(#events---mycrofteventstriggered\)) Tj
1 0 0 1 50 434 Tm (  * [SPECIAL EVENT: page_gained_focus]\(#special-event--page-gained-focus\)) Tj
1 0 0 1 50 420 Tm (- [SKILL DATA - mycroft.session.xxx]\(#skill-data---mycroftsessionxxx\)) Tj
1 0 0 1 50 406 Tm (  * [Sets a new key/value in the sessionData dictionary]\(#sets-a-new-key-value-in-the-) Tj
1 0 0 1 50 392 Tm (sessiondata-dictionary\)) Tj
1 0 0 1 50 378 Tm (  * [Deletes a key/value pair from the sessionData dictionary]\(#deletes-a-key-value-pair-) Tj
1 0 0 1 50 364 Tm (from-the-sessiondata-dictionary\)) Tj
1 0 0 1 50 350 Tm (  * [Lists]\(#lists\)) Tj
1 0 0 1 50 336 Tm (    + [Inserts new items at position]\(#inserts-new-items-at-position\)) Tj
1 0 0 1 50 322 Tm (    + [Updates item values starting at the given position, as many items as there are in ) Tj
1 0 0 1 50 308 Tm (the array]\(#updates-item-values-starting-at-the-given-position--as-many-items-as-there-) Tj
1 0 0 1 50 294 Tm (are-in-the-array\)) Tj
1 0 0 1 50 280 Tm (    + [Move items within the list]\(#move-items-within-the-list\)) Tj
1 0 0 1 50 266 Tm (    + [Remove items from the list]\(#remove-items-from-the-list\)) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (## CONNECTION - mycroft.gui.connected) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (on connection gui clients announce themselves) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (This is an extension by OVOS to the [original mycroft ) Tj
1 0 0 1 50 154 Tm (protocol]\(https://github.com/MycroftAI/mycroft-gui/blob/master/transportProtocol.md\)) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (```javascript) Tj
1 0 0 1 50 98 Tm ({) Tj
1 0 0 1 50 84 Tm (    "type": "mycroft.gui.connected",) Tj
1 0 0 1 50 70 Tm (    "gui_id": "unique_identifier_provided_by_client") Tj
1 0 0 1 50 56 Tm (}) Tj
ET
endstream

endobj
628 0 obj
<< /Length 2665 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (```) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (## NAMESPACES) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (ovos-gui maintains a list of namespaces with GUI data, namespaces usually correspond to a ) Tj
1 0 0 1 50 672 Tm (skill_id) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (Every message in the gui protocol specifies a namespace it belongs to) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (gui clients usualy display all namespaces, but can be requested to display a single one, ) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (eg, have a dedicated window to show a skill as a [traditional desktop ) Tj
1 0 0 1 50 574 Tm (app]\(https://github.com/OpenVoiceOS/ovos-ocp-audio-) Tj
1 0 0 1 50 560 Tm (plugin/blob/dev/ovos_plugin_common_play/ocp/res/desktop/OCP.desktop\)) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (### Active Skills - mycroft.system.active_skills) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (a reserved namespace is "mycroft.system.active_skills", the data contained in this ) Tj
1 0 0 1 50 476 Tm (namespace defines the namespace display priority) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (Recent skills are ordered from the last used to the oldest, so the first item of the list ) Tj
1 0 0 1 50 434 Tm (will always be the the one showing any GUI page, if available.) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (see the section about [lists]\(https://github.com/OpenVoiceOS/ovos-) Tj
1 0 0 1 50 392 Tm (gui/blob/dev/protocol.md#lists\) if you need to modify active skills) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (## PAGES - mycroft.gui.list.xxx) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (Each active skill is associated with a list of uris to the QML files of all gui items that) Tj
1 0 0 1 50 308 Tm ( are supposed to be visible.) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (Non QT GUIS get sent other file extensions such as .jsx or .html using the same message ) Tj
1 0 0 1 50 266 Tm (format) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (### Insert new page at position) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (```javascript) Tj
1 0 0 1 50 196 Tm ({) Tj
1 0 0 1 50 182 Tm (    "type": "mycroft.gui.list.insert",) Tj
1 0 0 1 50 168 Tm (    "namespace": "mycroft.weather") Tj
1 0 0 1 50 154 Tm (    "position": 2) Tj
1 0 0 1 50 140 Tm (    "values": [{"url": "file://..../currentWeather.qml"}, ...] //values must always be in ) Tj
1 0 0 1 50 126 Tm (array form) Tj
1 0 0 1 50 112 Tm (}) Tj
1 0 0 1 50 98 Tm (```) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (### Move pages within the list) Tj
1 0 0 1 50 56 Tm (```javascript) Tj
ET
endstream

endobj
629 0 obj
<< /Length 2547 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm ({) Tj
1 0 0 1 50 728 Tm (    "type": "mycroft.gui.list.move",) Tj
1 0 0 1 50 714 Tm (    "namespace": "mycroft.weather") Tj
1 0 0 1 50 700 Tm (    "from": 2) Tj
1 0 0 1 50 686 Tm (    "to": 5) Tj
1 0 0 1 50 672 Tm (    "items_number": 2 //optional in case we want to move a big chunk of list at once) Tj
1 0 0 1 50 658 Tm (}) Tj
1 0 0 1 50 644 Tm (```) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (### Remove pages from the list) Tj
1 0 0 1 50 602 Tm (```javascript) Tj
1 0 0 1 50 588 Tm ({) Tj
1 0 0 1 50 574 Tm (    "type": "mycroft.gui.list.remove",) Tj
1 0 0 1 50 560 Tm (    "namespace": "mycroft.weather") Tj
1 0 0 1 50 546 Tm (    "position": 2) Tj
1 0 0 1 50 532 Tm (    "items_number": 5 //optional in case we want to get rid a big chunk of list at once) Tj
1 0 0 1 50 518 Tm (}) Tj
1 0 0 1 50 504 Tm (```) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (## EVENTS - mycroft.events.triggered) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (Events can either be emitted by a gui client \(eg, some element clicked\) or by the skill ) Tj
1 0 0 1 50 420 Tm (\(eg, in response to a voice command\)) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (```javascript) Tj
1 0 0 1 50 378 Tm ({) Tj
1 0 0 1 50 364 Tm (    "type": "mycroft.events.triggered") Tj
1 0 0 1 50 350 Tm (    "namespace": "my_skill_id") Tj
1 0 0 1 50 336 Tm (    "event_name": "my.gui.event",) Tj
1 0 0 1 50 322 Tm (    "parameters": {"item": 3}) Tj
1 0 0 1 50 308 Tm (}) Tj
1 0 0 1 50 294 Tm (```) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (### SPECIAL EVENT: page_gained_focus) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (This event is used when the ovos-gui wants a page of a particular skill to gain user ) Tj
1 0 0 1 50 224 Tm (attention focus and become the current active view and "focus of attention" of the user. ) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (when a GUI client receives it, it should render the requested GUI page) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (GUI clients can also emit this event, if a new page was rendered \(eg, in response to a ) Tj
1 0 0 1 50 154 Tm (user swipping left\)) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (NOTE: for responsiveness it is recommened this message is only emitted after the rendering) Tj
1 0 0 1 50 112 Tm ( has actually been done, skills may be waiting for this event to initiate some actons) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (```javascript) Tj
1 0 0 1 50 70 Tm ({) Tj
1 0 0 1 50 56 Tm (    "type": "mycroft.events.triggered",) Tj
ET
endstream

endobj
630 0 obj
<< /Length 2463 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (    "namespace": "mycroft.weather",) Tj
1 0 0 1 50 728 Tm (    "event_name": "page_gained_focus",) Tj
1 0 0 1 50 714 Tm (    "data": {"number": 0}) Tj
1 0 0 1 50 700 Tm (}) Tj
1 0 0 1 50 686 Tm (```) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (The parameter "number" is the position \(starting from zero\) of the page) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (## SKILL DATA - mycroft.session.xxx) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (At the center of data sharing there is a key/value dictionary that is kept synchronized ) Tj
1 0 0 1 50 588 Tm (between ovos-gui and the GUI client.) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (Values can either be simple strings, numbers and booleans or be more complicated data ) Tj
1 0 0 1 50 546 Tm (types) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (this event can be sent from gui clients \(eg, in response to a dropdown selection\) or from ) Tj
1 0 0 1 50 504 Tm (skills \(eg, change weather data\)) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (NOTE: Once a new gui client connects to ovos-gui, all existing session data is sent to the) Tj
1 0 0 1 50 462 Tm ( client, ) Tj
1 0 0 1 50 448 Tm (after that the client gets live updates via these events) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (### Sets a new key/value in the sessionData dictionary) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (Either sets a new key/value pair or replace an existing old value.) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (```javascript) Tj
1 0 0 1 50 350 Tm ({) Tj
1 0 0 1 50 336 Tm (    "type": "mycroft.session.set",) Tj
1 0 0 1 50 322 Tm (    "namespace": "weather.mycroft") Tj
1 0 0 1 50 308 Tm (    "data": {) Tj
1 0 0 1 50 294 Tm (        "temperature": "28",) Tj
1 0 0 1 50 280 Tm (        "icon": "cloudy",) Tj
1 0 0 1 50 266 Tm (        "forecast": [{...},...] //if it's a list see below for more message types) Tj
1 0 0 1 50 252 Tm (    }) Tj
1 0 0 1 50 238 Tm (}) Tj
1 0 0 1 50 224 Tm (```) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (### Deletes a key/value pair from the sessionData dictionary) Tj
1 0 0 1 50 182 Tm (```javascript) Tj
1 0 0 1 50 168 Tm ({) Tj
1 0 0 1 50 154 Tm (    "type": "mycroft.session.delete",) Tj
1 0 0 1 50 140 Tm (    "namespace": "weather.mycroft") Tj
1 0 0 1 50 126 Tm (    "property": "temperature") Tj
1 0 0 1 50 112 Tm (}) Tj
1 0 0 1 50 98 Tm (```) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (### Lists) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
631 0 obj
<< /Length 2395 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (#### Inserts new items at position) Tj
1 0 0 1 50 728 Tm (```javascript) Tj
1 0 0 1 50 714 Tm ({) Tj
1 0 0 1 50 700 Tm (    "type": "mycroft.session.list.insert",) Tj
1 0 0 1 50 686 Tm (    "namespace": "weather.mycroft") Tj
1 0 0 1 50 672 Tm (    "property": "forecast" //the key of the main data map this list in contained into) Tj
1 0 0 1 50 658 Tm (    "position": 2) Tj
1 0 0 1 50 644 Tm (    "values": [{"date": "tomorrow", "temperature" : 13, ...}, ...] //values must always be) Tj
1 0 0 1 50 630 Tm ( in array form) Tj
1 0 0 1 50 616 Tm (}) Tj
1 0 0 1 50 602 Tm (```) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (#### Updates item values starting at the given position, as many items as there are in the) Tj
1 0 0 1 50 560 Tm ( array) Tj
1 0 0 1 50 546 Tm (```javascript) Tj
1 0 0 1 50 532 Tm ({) Tj
1 0 0 1 50 518 Tm (    "type": "mycroft.session.list.update",) Tj
1 0 0 1 50 504 Tm (    "namespace": "weather.mycroft") Tj
1 0 0 1 50 490 Tm (    "property": "forecast") Tj
1 0 0 1 50 476 Tm (    "position": 2) Tj
1 0 0 1 50 462 Tm (    "values": [{"date": "tomorrow", "temperature" : 13, ...}, ...] //values must always be) Tj
1 0 0 1 50 448 Tm ( in array form) Tj
1 0 0 1 50 434 Tm (}) Tj
1 0 0 1 50 420 Tm (```) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (#### Move items within the list) Tj
1 0 0 1 50 378 Tm (```javascript) Tj
1 0 0 1 50 364 Tm ({) Tj
1 0 0 1 50 350 Tm (    "type": "mycroft.session.list.move",) Tj
1 0 0 1 50 336 Tm (    "namespace": "weather.mycroft") Tj
1 0 0 1 50 322 Tm (    "property": "forecast") Tj
1 0 0 1 50 308 Tm (    "from": 2) Tj
1 0 0 1 50 294 Tm (    "to": 5) Tj
1 0 0 1 50 280 Tm (    "items_number": 2 //optional in case we want to move a big chunk of list at once) Tj
1 0 0 1 50 266 Tm (}) Tj
1 0 0 1 50 252 Tm (```) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (#### Remove items from the list) Tj
1 0 0 1 50 210 Tm (```javascript) Tj
1 0 0 1 50 196 Tm ({) Tj
1 0 0 1 50 182 Tm (    "type": "mycroft.session.list.remove",) Tj
1 0 0 1 50 168 Tm (    "namespace": "weather.mycroft") Tj
1 0 0 1 50 154 Tm (    "property": "forecast") Tj
1 0 0 1 50 140 Tm (    "position": 2) Tj
1 0 0 1 50 126 Tm (    "items_number": 5 //optional in case we want to get rid a big chunk of list at once) Tj
1 0 0 1 50 112 Tm (}) Tj
1 0 0 1 50 98 Tm (```) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
632 0 obj
<< /Length 3003 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (# docs/702-ovos-shell.md) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (# OVOS Shell) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm ([OVOS-shell]\(https://github.com/OpenVoiceOS/ovos-shell\) is the OpenVoiceOS client ) Tj
1 0 0 1 50 658 Tm (implementation of the [mycroft-gui-qt5]\(https://github.com/OpenVoiceOS/mycroft-gui-qt5\) ) Tj
1 0 0 1 50 644 Tm (library used in our embedded device images) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (## Design Principles) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (The OpenVoiceOS Shell was designed with some simple principles in mind.) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (> **The visual interface is always secondary to the voice interface.**) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (Our goal is to make all interactions Voice First, meaning that the user could accomplish ) Tj
1 0 0 1 50 518 Tm (their tasks with just voice interaction.) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (> **Touchscreen menus should be kept to a minimum, this reinforces using the primary mode ) Tj
1 0 0 1 50 476 Tm (of interaction, voice.**) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (However, many important controls need to be implemented as multimodal such as the ability ) Tj
1 0 0 1 50 434 Tm (to return to the home screen, change the volume, change the brightness of the screen, ) Tj
1 0 0 1 50 420 Tm (control media playback, and other system settings.) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (OpenVoiceOS images ship with [ovos-homescreen]\(https://github.com/OpenVoiceOS/skill-ovos-) Tj
1 0 0 1 50 378 Tm (homescreen\) and `ovos-shell`, built on top of QT5, these components ensure the viability ) Tj
1 0 0 1 50 364 Tm (of the GUI in embedded devices running `ovos-shell` via EGLFS, without requiring a ) Tj
1 0 0 1 50 350 Tm (traditional desktop environment) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (## Companion Plugins) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (To unlock full functionality you also need to configure [ovos-gui-plugin-shell-) Tj
1 0 0 1 50 280 Tm (companion]\(https://github.com/OpenVoiceOS/ovos-gui-plugin-shell-companion\) in mycroft.conf) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (This plugin integrates with `ovos-gui` to provide:) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (- color scheme manager) Tj
1 0 0 1 50 210 Tm (- notifications widgets) Tj
1 0 0 1 50 196 Tm (- configuration provider  \(settings UI\)) Tj
1 0 0 1 50 182 Tm (- brightness control  \(night mode etc\)) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (```javascript) Tj
1 0 0 1 50 140 Tm ({) Tj
1 0 0 1 50 126 Tm (  "gui": {) Tj
1 0 0 1 50 112 Tm (    // Extensions provide additional GUI platform support for specific devices) Tj
1 0 0 1 50 98 Tm (    "extension": "ovos-gui-plugin-shell-companion",) Tj
1 0 0 1 50 84 Tm (    ) Tj
1 0 0 1 50 70 Tm (    // homescreen skill to use) Tj
1 0 0 1 50 56 Tm (    "idle_display_skill": "skill-ovos-homescreen.openvoiceos") Tj
ET
endstream

endobj
633 0 obj
<< /Length 2531 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (  }) Tj
1 0 0 1 50 728 Tm (}) Tj
1 0 0 1 50 714 Tm (```) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (OVOS-shell is tightly coupled to [PHAL]\(#what-is-phal\), the following companion plugins ) Tj
1 0 0 1 50 672 Tm (should also be installed) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (- [ovos-PHAL-plugin-network-manager]\(https://github.com/OpenVoiceOS/ovos-PHAL-plugin-) Tj
1 0 0 1 50 630 Tm (network-manager\)) Tj
1 0 0 1 50 616 Tm (- [ovos-PHAL-plugin-gui-network-client]\(https://github.com/OpenVoiceOS/ovos-PHAL-plugin-) Tj
1 0 0 1 50 602 Tm (gui-network-client\)) Tj
1 0 0 1 50 588 Tm (- [ovos-PHAL-plugin-wifi-setup]\(https://github.com/OpenVoiceOS/ovos-PHAL-plugin-wifi-) Tj
1 0 0 1 50 574 Tm (setup\)) Tj
1 0 0 1 50 560 Tm (- [ovos-PHAL-plugin-alsa]\(https://github.com/OpenVoiceOS/ovos-PHAL-plugin-alsa\)) Tj
1 0 0 1 50 546 Tm (- [ovos-PHAL-plugin-system]\(https://github.com/OpenVoiceOS/ovos-PHAL-plugin-system\)) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (## Configuration) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (The Shell can be configured in a few ways.) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (### GUI) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (Display settings) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (![]\(https://github.com/OpenVoiceOS/ovos_assets/raw/master/Images/shell_settings.gif\)) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (Color Theme editor) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (![]\(https://github.com/OpenVoiceOS/ovos_assets/raw/master/Images/shell_theme.gif\)) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (### Shell Options) Tj
1 0 0 1 50 280 Tm (`~/.config/OpenvoiceOS/OvosShell.conf` can be edited to change shell options that) Tj
1 0 0 1 50 266 Tm (may also be changed via UI. An example config would look like:) Tj
1 0 0 1 50 252 Tm (```) Tj
1 0 0 1 50 238 Tm ([General]) Tj
1 0 0 1 50 224 Tm (fakeBrightness=1) Tj
1 0 0 1 50 210 Tm (menuLabels=true) Tj
1 0 0 1 50 196 Tm (```) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (### Themes) Tj
1 0 0 1 50 154 Tm (Shell themes can be included in `/usr/share/OVOS/ColorSchemes/` or ) Tj
1 0 0 1 50 140 Tm (`~/.local/share/OVOS/ColorSchemes/` in json format. Note that colors should include) Tj
1 0 0 1 50 126 Tm (an alpha value \(usually `FF`\).) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (```json) Tj
1 0 0 1 50 84 Tm ({) Tj
1 0 0 1 50 70 Tm (  "name": "Neon Green",) Tj
1 0 0 1 50 56 Tm (  "primaryColor": "#FF072103",) Tj
ET
endstream

endobj
634 0 obj
<< /Length 3131 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (  "secondaryColor": "#FF2C7909",) Tj
1 0 0 1 50 728 Tm (  "textColor": "#FFF1F1F1") Tj
1 0 0 1 50 714 Tm (}) Tj
1 0 0 1 50 700 Tm (```) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (# docs/710-qt5-gui.md) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (# Mycroft-GUI QT5) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (> **NOTE** - Currently only a [QT5 gui-client]\(https://github.com/OpenVoiceOS/mycroft-gui-) Tj
1 0 0 1 50 602 Tm (qt5\) is available, help wanted to [migrate to ) Tj
1 0 0 1 50 588 Tm (QT6]\(https://github.com/OVOSHatchery/mycroft-gui-qt6\)!) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (## Introduction to QML) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (The reference GUI client implementation is based on the QML user interface markup language) Tj
1 0 0 1 50 518 Tm ( that gives you complete freedom to create in-depth innovative interactions without ) Tj
1 0 0 1 50 504 Tm (boundaries or provide you with simple templates within the GUI framework that allow ) Tj
1 0 0 1 50 490 Tm (minimalistic display of text and images based on your skill development specifics and ) Tj
1 0 0 1 50 476 Tm (preferences.) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (QML user interface markup language is a declarative language built on top of Qt's existing) Tj
1 0 0 1 50 434 Tm ( strengths designed to describe the user interface of a program: both what it looks like, ) Tj
1 0 0 1 50 420 Tm (and how it behaves. QML provides modules that consist of sophisticated set of graphical ) Tj
1 0 0 1 50 406 Tm (and behavioral building elements.) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (### Before Getting Started) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (A collection of resources to familiarize you with QML and Kirigami Framework.) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (* [Introduction to QML ]\(http://doc.qt.io/qt-5/qml-tutorial.html\)) Tj
1 0 0 1 50 308 Tm (* [Introduction to Kirigami]\(https://www.kde.org/products/kirigami/\)) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (### Importing Modules) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (A QML module provides versioned types and JavaScript resources in a type namespace which ) Tj
1 0 0 1 50 238 Tm (may be used by clients who import the module. Modules make use of the QML versioning ) Tj
1 0 0 1 50 224 Tm (system which allows modules to be independently updated. More in-depth information about ) Tj
1 0 0 1 50 210 Tm (QML modules can be found here [Qt QML Modules Documentation]\(http://doc.qt.io/qt-5/qtqml-) Tj
1 0 0 1 50 196 Tm (modules-topic.html\)) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (In the code snippet example below we will look at importing some of the common modules ) Tj
1 0 0 1 50 154 Tm (that provide the components required to get started with our Visual User Interface.) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (```) Tj
1 0 0 1 50 112 Tm (import QtQuick 2.4) Tj
1 0 0 1 50 98 Tm (import QtQuick.Controls 2.2) Tj
1 0 0 1 50 84 Tm (import QtQuick.Layouts 1.4) Tj
1 0 0 1 50 70 Tm (import org.kde.kirigami 2.4 as Kirigami) Tj
1 0 0 1 50 56 Tm (import Mycroft 1.0 as Mycroft) Tj
ET
endstream

endobj
635 0 obj
<< /Length 3564 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (import org.kde.lottie 1.0) Tj
1 0 0 1 50 728 Tm (```) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (**QTQuick Module:**) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (Qt Quick module is the standard library for writing QML applications, the module provides ) Tj
1 0 0 1 50 658 Tm (a visual canvas and includes types for creating and animating visual components, receiving) Tj
1 0 0 1 50 644 Tm ( user input, creating data models and views and delayed object instantiation. In-depth ) Tj
1 0 0 1 50 630 Tm (information about QtQuick can be found at [Qt Quick ) Tj
1 0 0 1 50 616 Tm (Documentation]\(https://doc.qt.io/qt-5.11/qtquick-index.html\)) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (**QTQuick.Controls Module:**) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (The QtQuick Controls module provides a set of controls that can be used to build complete ) Tj
1 0 0 1 50 546 Tm (interfaces in Qt Quick. Some of the controls provided are button controls, container ) Tj
1 0 0 1 50 532 Tm (controls, delegate controls, indicator controls, input controls, navigation controls and ) Tj
1 0 0 1 50 518 Tm (more, for a complete list of controls and components provided by QtQuick Controls you can ) Tj
1 0 0 1 50 504 Tm (refer to [QtQuick Controls 2 ) Tj
1 0 0 1 50 490 Tm (Guidelines]\(https://doc.qt.io/qt-5.11/qtquickcontrols2-guidelines.html\)) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (**QtQuick.Layouts Module:**) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (QtQuick Layouts are a set of QML types used to arrange items in a user interface. Some of ) Tj
1 0 0 1 50 420 Tm (the layouts provided by QtQuick Layouts are Column Layout, Grid Layout, Row Layout and ) Tj
1 0 0 1 50 406 Tm (more, for a complete list of layouts you can refer to [QtQuick Layouts ) Tj
1 0 0 1 50 392 Tm (Documentation]\(http://doc.qt.io/qt-5/qtquicklayouts-index.html\)) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (**Kirigami Module:**) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm ([Kirigami]\(https://api.kde.org/frameworks/kirigami/html/index.html\) is a set of QtQuick ) Tj
1 0 0 1 50 322 Tm (components for mobile and convergent applications. ) Tj
1 0 0 1 50 308 Tm ([Kirigami]\(https://api.kde.org/frameworks/kirigami/html/index.html\) is a set of high level) Tj
1 0 0 1 50 294 Tm ( components to make the creation of applications that look and feel great on mobile as ) Tj
1 0 0 1 50 280 Tm (well as desktop devices and follow the [Kirigami Human Interface ) Tj
1 0 0 1 50 266 Tm (Guidelines]\(https://community.kde.org/KDE\\_Visual\\_Design\\_Group/KirigamiHIG\)) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (**Mycroft Module:**) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (Mycroft GUI frameworks provides a set of high level components and events system for ) Tj
1 0 0 1 50 196 Tm (aiding in the development of Mycroft visual skills. One of the controls provided by ) Tj
1 0 0 1 50 182 Tm (Mycroft GUI frameworks are Mycroft-GUI Framework Base Delegates [Mycroft-GUI Framework ) Tj
1 0 0 1 50 168 Tm (Base Delegates Documentation]\(mycroft-gui.md\)) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (**QML Lottie Module:**) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (This provides a QML `Item` to render Adobe After Effects animations exported as JSON ) Tj
1 0 0 1 50 98 Tm (with Bodymovin using the Lottie Web library. For list of all properties supported refer ) Tj
1 0 0 1 50 84 Tm ([Lottie QML]\(https://github.com/kbroulik/lottie-qml\)) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (### Mycroft-GUI Framework Base Delegates) Tj
ET
endstream

endobj
636 0 obj
<< /Length 2825 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (When you design your skill with QML, Mycroft-GUI frameworks provides you with some base ) Tj
1 0 0 1 50 714 Tm (delegates you should use when designing your GUI skill. The base delegates provide you ) Tj
1 0 0 1 50 700 Tm (with a basic presentation layer for your skill with some property assignments that can ) Tj
1 0 0 1 50 686 Tm (help you setup background images, background dim, timeout and grace time properties to ) Tj
1 0 0 1 50 672 Tm (give you the control you need for rendering an experience. In your GUI Skill you can use:) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (**Mycroft.Delegate:** A basic and simple page based on Kirigami.Page) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (Simple display Image and Text Example using Mycroft.Delegate) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (```) Tj
1 0 0 1 50 574 Tm (import Mycroft 1.0 as Mycroft) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (Mycroft.Delegate {) Tj
1 0 0 1 50 532 Tm (    skillBackgroundSource: sessionData.exampleImage) Tj
1 0 0 1 50 518 Tm (    ColumnLayout {) Tj
1 0 0 1 50 504 Tm (        anchors.fill: parent) Tj
1 0 0 1 50 490 Tm (        Image {) Tj
1 0 0 1 50 476 Tm (            id: imageId) Tj
1 0 0 1 50 462 Tm (            Layout.fillWidth: true) Tj
1 0 0 1 50 448 Tm (            Layout.preferredHeight: Kirigami.Units.gridUnit * 2) Tj
1 0 0 1 50 434 Tm (            source: "https://source.unsplash.com/1920x1080/?+autumn") Tj
1 0 0 1 50 420 Tm (         }) Tj
1 0 0 1 50 406 Tm (         Label {) Tj
1 0 0 1 50 392 Tm (            id: labelId) Tj
1 0 0 1 50 378 Tm (            Layout.fillWidth: true) Tj
1 0 0 1 50 364 Tm (            Layout.preferredHeight: Kirigami.Units.gridUnit * 4) Tj
1 0 0 1 50 350 Tm (            text: "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod) Tj
1 0 0 1 50 336 Tm ( tempor incididunt ut labore et dolore magna aliqua."            ) Tj
1 0 0 1 50 322 Tm (        }) Tj
1 0 0 1 50 308 Tm (    }) Tj
1 0 0 1 50 294 Tm (}) Tj
1 0 0 1 50 280 Tm (```) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (**Mycroft.ScrollableDelegate:** A delegate that displays skill visuals in a scroll enabled) Tj
1 0 0 1 50 238 Tm ( Kirigami Page.) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (Example of using Mycroft.ScrollableDelegate) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (```) Tj
1 0 0 1 50 168 Tm (import QtQuick 2.4) Tj
1 0 0 1 50 154 Tm (import QtQuick.Controls 2.2) Tj
1 0 0 1 50 140 Tm (import QtQuick.Layouts 1.4) Tj
1 0 0 1 50 126 Tm (import org.kde.kirigami 2.4 as Kirigami) Tj
1 0 0 1 50 112 Tm (import Mycroft 1.0 as Mycroft) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (Mycroft.ScrollableDelegate{) Tj
1 0 0 1 50 70 Tm (    id: root) Tj
1 0 0 1 50 56 Tm (    skillBackgroundSource: sessionData.background) Tj
ET
endstream

endobj
637 0 obj
<< /Length 2976 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (    property var sampleModel: sessionData.sampleBlob) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (    Kirigami.CardsListView {) Tj
1 0 0 1 50 700 Tm (        id: exampleListView) Tj
1 0 0 1 50 686 Tm (        Layout.fillWidth: true) Tj
1 0 0 1 50 672 Tm (        Layout.fillHeight: true) Tj
1 0 0 1 50 658 Tm (        model: sampleModel.lorem) Tj
1 0 0 1 50 644 Tm (        delegate: Kirigami.AbstractCard {) Tj
1 0 0 1 50 630 Tm (            id: rootCard) Tj
1 0 0 1 50 616 Tm (            implicitHeight: delegateItem.implicitHeight + Kirigami.Units.largeSpacing) Tj
1 0 0 1 50 602 Tm (            contentItem: Item {) Tj
1 0 0 1 50 588 Tm (                implicitWidth: parent.implicitWidth) Tj
1 0 0 1 50 574 Tm (                implicitHeight: parent.implicitHeight) Tj
1 0 0 1 50 560 Tm (                ColumnLayout {) Tj
1 0 0 1 50 546 Tm (                    id: delegateItem) Tj
1 0 0 1 50 532 Tm (                    anchors.left: parent.left) Tj
1 0 0 1 50 518 Tm (                    anchors.right: parent.right) Tj
1 0 0 1 50 504 Tm (                    anchors.top: parent.top) Tj
1 0 0 1 50 490 Tm (                    spacing: Kirigami.Units.largeSpacing) Tj
1 0 0 1 50 476 Tm (                    Kirigami.Heading {) Tj
1 0 0 1 50 462 Tm (                        id: restaurantNameLabel) Tj
1 0 0 1 50 448 Tm (                        Layout.fillWidth: true) Tj
1 0 0 1 50 434 Tm (                        text: modelData.text) Tj
1 0 0 1 50 420 Tm (                        level: 2) Tj
1 0 0 1 50 406 Tm (                        wrapMode: Text.WordWrap) Tj
1 0 0 1 50 392 Tm (                    }) Tj
1 0 0 1 50 378 Tm (                    Kirigami.Separator {) Tj
1 0 0 1 50 364 Tm (                        Layout.fillWidth: true) Tj
1 0 0 1 50 350 Tm (                    }) Tj
1 0 0 1 50 336 Tm (                    Image {) Tj
1 0 0 1 50 322 Tm (                        id: placeImage) Tj
1 0 0 1 50 308 Tm (                        source: modelData.image) Tj
1 0 0 1 50 294 Tm (                        Layout.fillWidth: true) Tj
1 0 0 1 50 280 Tm (                        Layout.preferredHeight: Kirigami.Units.gridUnit * 3) Tj
1 0 0 1 50 266 Tm (                        fillMode: Image.PreserveAspectCrop) Tj
1 0 0 1 50 252 Tm (                    }) Tj
1 0 0 1 50 238 Tm (                    Item {) Tj
1 0 0 1 50 224 Tm (                        Layout.fillWidth: true) Tj
1 0 0 1 50 210 Tm (                        Layout.preferredHeight: Kirigami.Units.gridUnit * 1) Tj
1 0 0 1 50 196 Tm (                    }) Tj
1 0 0 1 50 182 Tm (                }) Tj
1 0 0 1 50 168 Tm (            }) Tj
1 0 0 1 50 154 Tm (        }) Tj
1 0 0 1 50 140 Tm (    }) Tj
1 0 0 1 50 126 Tm (}) Tj
1 0 0 1 50 112 Tm (```) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (## QML Design Guidelines) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (Before we dive deeper into the Design Guidelines, lets look at some concepts that a GUI ) Tj
ET
endstream

endobj
638 0 obj
<< /Length 3281 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (developer should learn about:) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (### Units & Theming) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (#### Units: ) Tj
1 0 0 1 50 672 Tm (Mycroft.Units.GridUnit is the fundamental unit of space that should be used for all sizing) Tj
1 0 0 1 50 658 Tm ( inside the QML UI, expressed in pixels. Each GridUnit is predefined as 16 pixels) Tj
1 0 0 1 50 644 Tm (```) Tj
1 0 0 1 50 630 Tm (// Usage in QML Components example) Tj
1 0 0 1 50 616 Tm (width: Mycroft.Units.gridUnit * 2 // 32px Wide) Tj
1 0 0 1 50 602 Tm (height: Mycroft.Units.gridUnit // 16px Tall) Tj
1 0 0 1 50 588 Tm (```) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (#### Theming:) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (OVOS Shell uses a custom Kirigami Platform Theme plugin to provide global theming to all ) Tj
1 0 0 1 50 518 Tm (our skills and user interfaces, which also allows our GUI's to be fully compatible with ) Tj
1 0 0 1 50 504 Tm (the system themes on platforms that are not running the OVOS Shell.) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (Kirigami Theme and Color Scheme guide is extensive and can be found ) Tj
1 0 0 1 50 462 Tm ([here]\(https://develop.kde.org/docs/use/kirigami/style-colors/\)) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (OVOS GUI's developed to follow the color scheme depend on only a subset of available ) Tj
1 0 0 1 50 420 Tm (colors, mainly:) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (1. Kirigami.Theme.backgroundColor = Primary Color \(Background Color: This will always be a) Tj
1 0 0 1 50 378 Tm ( dark palette or light palette depending on the dark or light chosen color scheme\)) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (2. Kirigami.Theme.highlightColor = Secondary Color \(Accent Color: This will always be a ) Tj
1 0 0 1 50 336 Tm (standout palette that defines the themes dominating color and can be used for buttons, ) Tj
1 0 0 1 50 322 Tm (cards, borders, highlighted text etc.\)) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (3. Kirigami.Theme.textColor = Text Color \(This will always be an opposite palette to the ) Tj
1 0 0 1 50 280 Tm (selected primary color\)) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (### QML Delegate Design Best Practise) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (__Let's look at this image and qml example below, this is a representation of the Mycroft ) Tj
1 0 0 1 50 196 Tm (Delegate:__) Tj
1 0 0 1 50 182 Tm (![]\(https://mycroft.blue-systems.com/display-1.png\)) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (1. When designing your first QML file, it is important to note the red triangles in the ) Tj
1 0 0 1 50 140 Tm (above image, these triangles represent the margin from the screen edge the GUI needs to be) Tj
1 0 0 1 50 126 Tm ( designed within, these margins ensure your GUI content does not overlap with features ) Tj
1 0 0 1 50 112 Tm (like edge lighting and menus in the platforms that support it like OVOS-Shell) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (2. The content items and components all utilize the selected color scheme, where black is ) Tj
1 0 0 1 50 70 Tm (the primary background color, red is our accent color and white is our contrasting text ) Tj
1 0 0 1 50 56 Tm (color) Tj
ET
endstream

endobj
639 0 obj
<< /Length 2828 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (__Let's look at this in QML:__) Tj
1 0 0 1 50 714 Tm (```) Tj
1 0 0 1 50 700 Tm (import ...) Tj
1 0 0 1 50 686 Tm (import Mycroft 1.0 as Mycroft) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (Mycroft.Delegate {) Tj
1 0 0 1 50 644 Tm (    skillBackgroundSource: sessionData.exampleImage) Tj
1 0 0 1 50 630 Tm (    leftPadding: 0) Tj
1 0 0 1 50 616 Tm (    rightPadding: 0) Tj
1 0 0 1 50 602 Tm (    topPadding: 0) Tj
1 0 0 1 50 588 Tm (    bottomPadding: 0) Tj
1 0 0 1 50 574 Tm (    ) Tj
1 0 0 1 50 560 Tm (    Rectangle {) Tj
1 0 0 1 50 546 Tm (        anchors.fill: parent) Tj
1 0 0 1 50 532 Tm (        // Setting margins that need to be left for the screen edges) Tj
1 0 0 1 50 518 Tm (        anchors.margins: Mycroft.Units.gridUnit * 2) Tj
1 0 0 1 50 504 Tm (        ) Tj
1 0 0 1 50 490 Tm (        //Setting a background dim using our primary theme / background color on top of ) Tj
1 0 0 1 50 476 Tm (our skillBackgroundSource image for better readability and contrast) Tj
1 0 0 1 50 462 Tm (        color: Qt.rgba\(Kirigami.Theme.backgroundColor.r, Kirigami.Theme.backgroundColor.g,) Tj
1 0 0 1 50 448 Tm ( Kirigami.Theme.backgroundColor.b, 0.3\)) Tj
1 0 0 1 50 434 Tm (        ) Tj
1 0 0 1 50 420 Tm (        Kirigami.Heading {) Tj
1 0 0 1 50 406 Tm (            level: 2) Tj
1 0 0 1 50 392 Tm (            text: "An Example Pie Chart") Tj
1 0 0 1 50 378 Tm (            anchors.top: parent.top) Tj
1 0 0 1 50 364 Tm (            anchors.left: parent.left) Tj
1 0 0 1 50 350 Tm (            anchors.right: parent.right) Tj
1 0 0 1 50 336 Tm (            height: Mycroft.Units.gridUnit * 3) Tj
1 0 0 1 50 322 Tm (            // Setting the text color to always follow the color scheme for this item ) Tj
1 0 0 1 50 308 Tm (displayed on the screen) Tj
1 0 0 1 50 294 Tm (            color: Kirigami.Theme.textColor) Tj
1 0 0 1 50 280 Tm (        }) Tj
1 0 0 1 50 266 Tm (        ) Tj
1 0 0 1 50 252 Tm (        PieChart {) Tj
1 0 0 1 50 238 Tm (            anchors.centerIn: parent) Tj
1 0 0 1 50 224 Tm (            pieColorMinor: Kirigami.Theme.backgroundColor // As in the image above the ) Tj
1 0 0 1 50 210 Tm (minor area of the pie chart uses our primary color) Tj
1 0 0 1 50 196 Tm (            pieColorMid: Kirigami.Theme.highlightColor // As in the image above the middle) Tj
1 0 0 1 50 182 Tm ( area is assigned the highlight or our accent color) Tj
1 0 0 1 50 168 Tm (            pieColorMajor: Kirigami.Theme.textColor // As in the image above the major ) Tj
1 0 0 1 50 154 Tm (area is assigned the text color) Tj
1 0 0 1 50 140 Tm (        }) Tj
1 0 0 1 50 126 Tm (    }) Tj
1 0 0 1 50 112 Tm (}) Tj
1 0 0 1 50 98 Tm (```) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (### QML Delegate Multi Platform and Screen Guidelines) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
640 0 obj
<< /Length 3341 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (OVOS Skill GUIs are designed to be multi-platform and screen friendly, to support this we ) Tj
1 0 0 1 50 728 Tm (always try to support both Horizontal and Vertical display's. Let's look at an example and) Tj
1 0 0 1 50 714 Tm ( a general approach to writing multi resolution friendly UI's) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (__Let's look at these images below that represent a Delegate as seen in a Horizontal ) Tj
1 0 0 1 50 672 Tm (screen:__) Tj
1 0 0 1 50 658 Tm (![]\(https://mycroft.blue-systems.com/display-2.png\)) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (__Let's look at these images below that represent a Delegate as seen in a Vertical ) Tj
1 0 0 1 50 616 Tm (screen:__) Tj
1 0 0 1 50 602 Tm (![]\(https://mycroft.blue-systems.com/display-3.png\)) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (1. When designing for different screens it is preferred to utilize Grids, GridLayouts and ) Tj
1 0 0 1 50 560 Tm (GridViews this allows easier content placement as one can control the number of columns ) Tj
1 0 0 1 50 546 Tm (and rows displayed on the screen) Tj
1 0 0 1 50 532 Tm (2. It is also recommended to use Flickables when you believe your content is going to not ) Tj
1 0 0 1 50 518 Tm (fit on the screen, this allows for content to always be scrollable. To make it easier to ) Tj
1 0 0 1 50 504 Tm (design scrollable content, Mycroft GUI provides you with a ready to use ) Tj
1 0 0 1 50 490 Tm (Mycroft.ScrollableDelegate.) Tj
1 0 0 1 50 476 Tm (3. It is also preferred to use the width vs height comparison on the root delegate item to) Tj
1 0 0 1 50 462 Tm ( know when the screen should be using a vertical layout vs horizontal layout) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (__Let's look at this in QML:__) Tj
1 0 0 1 50 420 Tm (```) Tj
1 0 0 1 50 406 Tm (import ...) Tj
1 0 0 1 50 392 Tm (import Mycroft 1.0 as Mycroft) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (Mycroft.Delegate {) Tj
1 0 0 1 50 350 Tm (    id: root) Tj
1 0 0 1 50 336 Tm (    skillBackgroundSource: sessionData.exampleImage) Tj
1 0 0 1 50 322 Tm (    leftPadding: 0) Tj
1 0 0 1 50 308 Tm (    rightPadding: 0) Tj
1 0 0 1 50 294 Tm (    topPadding: 0) Tj
1 0 0 1 50 280 Tm (    bottomPadding: 0) Tj
1 0 0 1 50 266 Tm (    property bool horizontalMode: width >= height  ? 1 : 0 // Using a ternary operator to ) Tj
1 0 0 1 50 252 Tm (detect if width of the delegate is greater than the height, which provides if the delegate) Tj
1 0 0 1 50 238 Tm ( is in horizontalMode) Tj
1 0 0 1 50 224 Tm (    ) Tj
1 0 0 1 50 210 Tm (    Rectangle {) Tj
1 0 0 1 50 196 Tm (        anchors.fill: parent) Tj
1 0 0 1 50 182 Tm (        // Setting margins that need to be left for the screen edges) Tj
1 0 0 1 50 168 Tm (        anchors.margins: Mycroft.Units.gridUnit * 2) Tj
1 0 0 1 50 154 Tm (        ) Tj
1 0 0 1 50 140 Tm (        //Setting a background dim using our primary theme / background color on top of ) Tj
1 0 0 1 50 126 Tm (our skillBackgroundSource image for better readability and contrast) Tj
1 0 0 1 50 112 Tm (        color: Qt.rgba\(Kirigami.Theme.backgroundColor.r, Kirigami.Theme.backgroundColor.g,) Tj
1 0 0 1 50 98 Tm ( Kirigami.Theme.backgroundColor.b, 0.3\)) Tj
1 0 0 1 50 84 Tm (        ) Tj
1 0 0 1 50 70 Tm (        Kirigami.Heading {) Tj
1 0 0 1 50 56 Tm (            level: 2) Tj
ET
endstream

endobj
641 0 obj
<< /Length 2529 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (            text: "An Example Pie Chart") Tj
1 0 0 1 50 728 Tm (            // Setting the text color to always follow the color scheme) Tj
1 0 0 1 50 714 Tm (            color: Kirigami.Theme.textColor) Tj
1 0 0 1 50 700 Tm (        }) Tj
1 0 0 1 50 686 Tm (        ) Tj
1 0 0 1 50 672 Tm (        GridLayout {) Tj
1 0 0 1 50 658 Tm (            id: examplesGridView) Tj
1 0 0 1 50 644 Tm (            // Checking if we are in horizontal mode, we should display two columns to ) Tj
1 0 0 1 50 630 Tm (display the items in the image above, or if we are in vertical mode, we should display a ) Tj
1 0 0 1 50 616 Tm (single column only) Tj
1 0 0 1 50 602 Tm (            columns: root.horizontalMode ? 2 : 1 ) Tj
1 0 0 1 50 588 Tm (            ) Tj
1 0 0 1 50 574 Tm (            Repeater {) Tj
1 0 0 1 50 560 Tm (                model: examplesModel) Tj
1 0 0 1 50 546 Tm (                delegates: ExamplesDelegate {) Tj
1 0 0 1 50 532 Tm (                    ...) Tj
1 0 0 1 50 518 Tm (                }) Tj
1 0 0 1 50 504 Tm (            }) Tj
1 0 0 1 50 490 Tm (        }) Tj
1 0 0 1 50 476 Tm (    }) Tj
1 0 0 1 50 462 Tm (}) Tj
1 0 0 1 50 448 Tm (```) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (## Advanced skill displays using QML) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (**Display Lottie Animations**:) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (You can use the `LottieAnimation` item just like any other `QtQuick` element, such as an ) Tj
1 0 0 1 50 336 Tm (`Image` and place it in your scene any way you please.) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (**QML Example**) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (```) Tj
1 0 0 1 50 266 Tm (import QtQuick 2.4) Tj
1 0 0 1 50 252 Tm (import QtQuick.Controls 2.2) Tj
1 0 0 1 50 238 Tm (import QtQuick.Layouts 1.4) Tj
1 0 0 1 50 224 Tm (import org.kde.kirigami 2.4 as Kirigami) Tj
1 0 0 1 50 210 Tm (import Mycroft 1.0 as Mycroft) Tj
1 0 0 1 50 196 Tm (import org.kde.lottie 1.0) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (Mycroft.Delegate {) Tj
1 0 0 1 50 154 Tm (    LottieAnimation {     ) Tj
1 0 0 1 50 140 Tm (        id: fancyAnimation ) Tj
1 0 0 1 50 126 Tm (        anchors.fill: parent) Tj
1 0 0 1 50 112 Tm (        source: Qt.resolvedUrl\("animations/fancy_animation.json"\)) Tj
1 0 0 1 50 98 Tm (        loops: Animation.Infinite) Tj
1 0 0 1 50 84 Tm (        fillMode: Image.PreserveAspectFit    ) Tj
1 0 0 1 50 70 Tm (        running: true) Tj
1 0 0 1 50 56 Tm (    }    ) Tj
ET
endstream

endobj
642 0 obj
<< /Length 2389 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (}) Tj
1 0 0 1 50 728 Tm (```) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (**Display Sliding Images**) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (Contains an image that will slowly scroll in order to be shown completely) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (**QML Example**) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (```) Tj
1 0 0 1 50 602 Tm (import QtQuick 2.4) Tj
1 0 0 1 50 588 Tm (import QtQuick.Controls 2.2) Tj
1 0 0 1 50 574 Tm (import QtQuick.Layouts 1.4) Tj
1 0 0 1 50 560 Tm (import org.kde.kirigami 2.4 as Kirigami) Tj
1 0 0 1 50 546 Tm (import Mycroft 1.0 as Mycroft) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (Mycroft.Delegate {) Tj
1 0 0 1 50 504 Tm (     background: Mycroft.SlidingImage {) Tj
1 0 0 1 50 490 Tm (     source: "foo.jpg" ) Tj
1 0 0 1 50 476 Tm (     running: bool    //If true the sliding animation is active) Tj
1 0 0 1 50 462 Tm (     speed: 1         //Animation speed in Kirigami.Units.gridUnit / second) Tj
1 0 0 1 50 448 Tm (   }) Tj
1 0 0 1 50 434 Tm (}) Tj
1 0 0 1 50 420 Tm (```) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (**Display Paginated Text**) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (Takes a long text and breaks it down into pages that can be horizontally swiped) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (**QML Example**) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (```) Tj
1 0 0 1 50 294 Tm (import QtQuick 2.4) Tj
1 0 0 1 50 280 Tm (import QtQuick.Controls 2.2) Tj
1 0 0 1 50 266 Tm (import QtQuick.Layouts 1.4) Tj
1 0 0 1 50 252 Tm (import org.kde.kirigami 2.4 as Kirigami) Tj
1 0 0 1 50 238 Tm (import Mycroft 1.0 as Mycroft) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (Mycroft.Delegate {) Tj
1 0 0 1 50 196 Tm (     Mycroft.PaginatedText {) Tj
1 0 0 1 50 182 Tm (         text: string      //The text that should be displayed) Tj
1 0 0 1 50 168 Tm (         currentIndex: 0   //The currently visible page number \(starting from 0\)) Tj
1 0 0 1 50 154 Tm (     }) Tj
1 0 0 1 50 140 Tm (}) Tj
1 0 0 1 50 126 Tm (```) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (**Display A Vertical ListView With Information Cards**) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (Kirigami CardsListView is a ListView which can have AbstractCard as its delegate: it will ) Tj
1 0 0 1 50 56 Tm (automatically assign the proper spacing and margins around the cards adhering to the ) Tj
ET
endstream

endobj
643 0 obj
<< /Length 2607 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (design guidelines.) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (**Python Skill Example**) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (```python) Tj
1 0 0 1 50 672 Tm (...) Tj
1 0 0 1 50 658 Tm (def handle_food_places\(self, message\):) Tj
1 0 0 1 50 644 Tm (...) Tj
1 0 0 1 50 630 Tm (self.gui["foodPlacesBlob"] = results.json) Tj
1 0 0 1 50 616 Tm (self.gui.show_page\("foodplaces.qml"\)) Tj
1 0 0 1 50 602 Tm (...) Tj
1 0 0 1 50 588 Tm (```) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (**QML Example**) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (```) Tj
1 0 0 1 50 518 Tm (import QtQuick 2.4) Tj
1 0 0 1 50 504 Tm (import QtQuick.Controls 2.2) Tj
1 0 0 1 50 490 Tm (import QtQuick.Layouts 1.4) Tj
1 0 0 1 50 476 Tm (import org.kde.kirigami 2.4 as Kirigami) Tj
1 0 0 1 50 462 Tm (import Mycroft 1.0 as Mycroft) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (Mycroft.Delegate{) Tj
1 0 0 1 50 420 Tm (    id: root) Tj
1 0 0 1 50 406 Tm (    property var foodPlacesModel: sessionData.foodPlacesBlob) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (    Kirigami.CardsListView {) Tj
1 0 0 1 50 364 Tm (        id: restaurantsListView) Tj
1 0 0 1 50 350 Tm (        Layout.fillWidth: true) Tj
1 0 0 1 50 336 Tm (        Layout.fillHeight: true) Tj
1 0 0 1 50 322 Tm (        model: foodPlacesModel) Tj
1 0 0 1 50 308 Tm (        delegate: Kirigami.AbstractCard {) Tj
1 0 0 1 50 294 Tm (            id: rootCard) Tj
1 0 0 1 50 280 Tm (            implicitHeight: delegateItem.implicitHeight + Kirigami.Units.largeSpacing) Tj
1 0 0 1 50 266 Tm (            contentItem: Item {) Tj
1 0 0 1 50 252 Tm (                implicitWidth: parent.implicitWidth) Tj
1 0 0 1 50 238 Tm (                implicitHeight: parent.implicitHeight) Tj
1 0 0 1 50 224 Tm (                ColumnLayout {) Tj
1 0 0 1 50 210 Tm (                    id: delegateItem) Tj
1 0 0 1 50 196 Tm (                    anchors.left: parent.left) Tj
1 0 0 1 50 182 Tm (                    anchors.right: parent.right) Tj
1 0 0 1 50 168 Tm (                    anchors.top: parent.top) Tj
1 0 0 1 50 154 Tm (                    spacing: Kirigami.Units.smallSpacing) Tj
1 0 0 1 50 140 Tm (                    Kirigami.Heading {) Tj
1 0 0 1 50 126 Tm (                        id: restaurantNameLabel) Tj
1 0 0 1 50 112 Tm (                        Layout.fillWidth: true) Tj
1 0 0 1 50 98 Tm (                        text: modelData.name) Tj
1 0 0 1 50 84 Tm (                        level: 3) Tj
1 0 0 1 50 70 Tm (                        wrapMode: Text.WordWrap) Tj
1 0 0 1 50 56 Tm (                    }) Tj
ET
endstream

endobj
644 0 obj
<< /Length 3363 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (                    Kirigami.Separator {) Tj
1 0 0 1 50 728 Tm (                        Layout.fillWidth: true) Tj
1 0 0 1 50 714 Tm (                    }) Tj
1 0 0 1 50 700 Tm (                    RowLayout {) Tj
1 0 0 1 50 686 Tm (                        Layout.fillWidth: true) Tj
1 0 0 1 50 672 Tm (                        Layout.preferredHeight: form.implicitHeight) Tj
1 0 0 1 50 658 Tm (                        Image {) Tj
1 0 0 1 50 644 Tm (                            id: placeImage) Tj
1 0 0 1 50 630 Tm (                            source: modelData.image) Tj
1 0 0 1 50 616 Tm (                            Layout.fillHeight: true) Tj
1 0 0 1 50 602 Tm (                            Layout.preferredWidth: placeImage.implicitHeight + ) Tj
1 0 0 1 50 588 Tm (Kirigami.Units.gridUnit * 2) Tj
1 0 0 1 50 574 Tm (                            fillMode: Image.PreserveAspectFit) Tj
1 0 0 1 50 560 Tm (                        }) Tj
1 0 0 1 50 546 Tm (                        Kirigami.Separator {) Tj
1 0 0 1 50 532 Tm (                            Layout.fillHeight: true) Tj
1 0 0 1 50 518 Tm (                        }) Tj
1 0 0 1 50 504 Tm (                        Kirigami.FormLayout {) Tj
1 0 0 1 50 490 Tm (                            id: form) Tj
1 0 0 1 50 476 Tm (                            Layout.fillWidth: true) Tj
1 0 0 1 50 462 Tm (                            Layout.minimumWidth: aCard.implicitWidth) Tj
1 0 0 1 50 448 Tm (                            Layout.alignment: Qt.AlignLeft | Qt.AlignBottom) Tj
1 0 0 1 50 434 Tm (                            Label {) Tj
1 0 0 1 50 420 Tm (                                Kirigami.FormData.label: "Description:") Tj
1 0 0 1 50 406 Tm (                                Layout.fillWidth: true) Tj
1 0 0 1 50 392 Tm (                                wrapMode: Text.WordWrap) Tj
1 0 0 1 50 378 Tm (                                elide: Text.ElideRight) Tj
1 0 0 1 50 364 Tm (                                text: modelData.restaurantDescription) Tj
1 0 0 1 50 350 Tm (                            }) Tj
1 0 0 1 50 336 Tm (                            Label {) Tj
1 0 0 1 50 322 Tm (                                Kirigami.FormData.label: "Phone:") Tj
1 0 0 1 50 308 Tm (                                Layout.fillWidth: true) Tj
1 0 0 1 50 294 Tm (                                wrapMode: Text.WordWrap) Tj
1 0 0 1 50 280 Tm (                                elide: Text.ElideRight) Tj
1 0 0 1 50 266 Tm (                                text: modelData.phone) Tj
1 0 0 1 50 252 Tm (                            }) Tj
1 0 0 1 50 238 Tm (                        }) Tj
1 0 0 1 50 224 Tm (                    }) Tj
1 0 0 1 50 210 Tm (                }) Tj
1 0 0 1 50 196 Tm (            }) Tj
1 0 0 1 50 182 Tm (        }) Tj
1 0 0 1 50 168 Tm (    }) Tj
1 0 0 1 50 154 Tm (}) Tj
1 0 0 1 50 140 Tm (```) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (**Using Proportional Delegate For Simple Display Skills & Auto Layout**) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (**ProportionalDelegate** is a delegate which has proportional padding and a columnlayout ) Tj
1 0 0 1 50 70 Tm (as mainItem. The delegate supports a proportionalGridUnit which is based upon its size and) Tj
1 0 0 1 50 56 Tm ( the contents are supposed to be scaled proportionally to the delegate size either ) Tj
ET
endstream

endobj
645 0 obj
<< /Length 2375 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (directly or using the proportionalGridUnit.) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (**AutoFitLabel** is a label that will always scale its text size according to the item ) Tj
1 0 0 1 50 700 Tm (size rather than the other way around) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (**QML Example**) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (```) Tj
1 0 0 1 50 630 Tm (import QtQuick 2.4) Tj
1 0 0 1 50 616 Tm (import QtQuick.Controls 2.2) Tj
1 0 0 1 50 602 Tm (import QtQuick.Layouts 1.4) Tj
1 0 0 1 50 588 Tm (import org.kde.kirigami 2.4 as Kirigami) Tj
1 0 0 1 50 574 Tm (import Mycroft 1.0 as Mycroft) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (Mycroft.ProportionalDelegate {) Tj
1 0 0 1 50 532 Tm (    id: root) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (    Mycroft.AutoFitLabel {) Tj
1 0 0 1 50 490 Tm (        id: monthLabel) Tj
1 0 0 1 50 476 Tm (        font.weight: Font.Bold) Tj
1 0 0 1 50 462 Tm (        Layout.fillWidth: true) Tj
1 0 0 1 50 448 Tm (        Layout.preferredHeight: proportionalGridUnit * 40) Tj
1 0 0 1 50 434 Tm (        text: sessionData.month) Tj
1 0 0 1 50 420 Tm (    }) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (    Mycroft.AutoFitLabel {) Tj
1 0 0 1 50 378 Tm (        id: dayLabel) Tj
1 0 0 1 50 364 Tm (        font.weight: Font.Bold) Tj
1 0 0 1 50 350 Tm (        Layout.fillWidth: true) Tj
1 0 0 1 50 336 Tm (        Layout.preferredHeight: proportionalGridUnit * 40) Tj
1 0 0 1 50 322 Tm (        text: sessionData.day) Tj
1 0 0 1 50 308 Tm (    }) Tj
1 0 0 1 50 294 Tm (}) Tj
1 0 0 1 50 280 Tm (```) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (**Using Slideshow Component To Show Cards Slideshow**) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (Slideshow component lets you insert a slideshow with your custom delegate in any skill ) Tj
1 0 0 1 50 210 Tm (display which can be tuned to autoplay and loop and also scrolled or flicked manually by ) Tj
1 0 0 1 50 196 Tm (the user.) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (**QML Example**) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (```) Tj
1 0 0 1 50 126 Tm (import QtQuick 2.4) Tj
1 0 0 1 50 112 Tm (import QtQuick.Controls 2.2) Tj
1 0 0 1 50 98 Tm (import QtQuick.Layouts 1.4) Tj
1 0 0 1 50 84 Tm (import org.kde.kirigami 2.4 as Kirigami) Tj
1 0 0 1 50 70 Tm (import Mycroft 1.0 as Mycroft) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
646 0 obj
<< /Length 2874 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (Mycroft.Delegate {) Tj
1 0 0 1 50 728 Tm (    id: root) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (    Mycroft.SlideShow {) Tj
1 0 0 1 50 686 Tm (        id: simpleSlideShow ) Tj
1 0 0 1 50 672 Tm (        model: sessionData.exampleModel // model with slideshow data) Tj
1 0 0 1 50 658 Tm (        anchors.fill: parent) Tj
1 0 0 1 50 644 Tm (        interval: 5000 // time to switch between slides ) Tj
1 0 0 1 50 630 Tm (        running: true // can be set to false if one wants to swipe manually) Tj
1 0 0 1 50 616 Tm (        loop: true // can be set to play through continously or just once) Tj
1 0 0 1 50 602 Tm (        delegate: Kirigami.AbstractCard { ) Tj
1 0 0 1 50 588 Tm (            width: rootItem.width) Tj
1 0 0 1 50 574 Tm (            height: rootItem.height) Tj
1 0 0 1 50 560 Tm (            contentItem: ColumnLayout {) Tj
1 0 0 1 50 546 Tm (                anchors.fill: parent) Tj
1 0 0 1 50 532 Tm (                Kirigami.Heading {) Tj
1 0 0 1 50 518 Tm (                    Layout.fillWidth: true) Tj
1 0 0 1 50 504 Tm (                    wrapMode: Text.WordWrap) Tj
1 0 0 1 50 490 Tm (                    level: 3) Tj
1 0 0 1 50 476 Tm (                    text: modelData.Title) Tj
1 0 0 1 50 462 Tm (                }) Tj
1 0 0 1 50 448 Tm (                Kirigami.Separator {) Tj
1 0 0 1 50 434 Tm (                        Layout.fillWidth: true) Tj
1 0 0 1 50 420 Tm (                        Layout.preferredHeight: 1) Tj
1 0 0 1 50 406 Tm (                }) Tj
1 0 0 1 50 392 Tm (                Image {) Tj
1 0 0 1 50 378 Tm (                    Layout.fillWidth: true) Tj
1 0 0 1 50 364 Tm (                    Layout.preferredHeight: rootItem.height / 4) Tj
1 0 0 1 50 350 Tm (                    source: modelData.Image) Tj
1 0 0 1 50 336 Tm (                    fillMode: Image.PreserveAspectCrop) Tj
1 0 0 1 50 322 Tm (                }) Tj
1 0 0 1 50 308 Tm (            }) Tj
1 0 0 1 50 294 Tm (        }) Tj
1 0 0 1 50 280 Tm (    }) Tj
1 0 0 1 50 266 Tm (}) Tj
1 0 0 1 50 252 Tm (```) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (#### Event Handling) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (Mycroft GUI API provides an Event Handling Protocol between the skill and QML display ) Tj
1 0 0 1 50 182 Tm (which allow Skill Authors to forward events in either direction to an event consumer. ) Tj
1 0 0 1 50 168 Tm (Skill Authors have the ability to create any amount of custom events. Event names that ) Tj
1 0 0 1 50 154 Tm (start with "system." are available to all skills, like previous/next/pick.) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (**Simple Event Trigger Example From QML Display To Skill**) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (**Python Skill Example**) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (```python) Tj
1 0 0 1 50 56 Tm (    def initialize\(self\):) Tj
ET
endstream

endobj
647 0 obj
<< /Length 2123 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (    # Initialize...) Tj
1 0 0 1 50 728 Tm (        self.gui.register_handler\('skill.foo.event', self.handle_foo_event\)) Tj
1 0 0 1 50 714 Tm (...) Tj
1 0 0 1 50 700 Tm (    def handle_foo_event\(self, message\):) Tj
1 0 0 1 50 686 Tm (        self.speak\(message.data["string"]\)) Tj
1 0 0 1 50 672 Tm (...) Tj
1 0 0 1 50 658 Tm (...) Tj
1 0 0 1 50 644 Tm (```) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (**QML Example**) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (```) Tj
1 0 0 1 50 574 Tm (import QtQuick 2.4) Tj
1 0 0 1 50 560 Tm (import QtQuick.Controls 2.2) Tj
1 0 0 1 50 546 Tm (import QtQuick.Layouts 1.4) Tj
1 0 0 1 50 532 Tm (import org.kde.kirigami 2.4 as Kirigami) Tj
1 0 0 1 50 518 Tm (import Mycroft 1.0 as Mycroft) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (Mycroft.Delegate {) Tj
1 0 0 1 50 476 Tm (    id: root) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (    Button {) Tj
1 0 0 1 50 434 Tm (        anchors.fill: parent) Tj
1 0 0 1 50 420 Tm (        text: "Click Me") Tj
1 0 0 1 50 406 Tm (        onClicked: {) Tj
1 0 0 1 50 392 Tm (            triggerGuiEvent\("skill.foo.event", {"string": "Lorem ipsum dolor sit amet"}\)) Tj
1 0 0 1 50 378 Tm (        }) Tj
1 0 0 1 50 364 Tm (    }) Tj
1 0 0 1 50 350 Tm (}) Tj
1 0 0 1 50 336 Tm (```) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (**Simple Event Trigger Example From Skill To QML Display**) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (**Python Skill Example**) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (```python) Tj
1 0 0 1 50 238 Tm (...) Tj
1 0 0 1 50 224 Tm (    def handle_foo_intent\(self, message\):) Tj
1 0 0 1 50 210 Tm (        self.gui['foobar'] = message.data.get\("utterance"\)) Tj
1 0 0 1 50 196 Tm (        self.gui['color'] = "blue") Tj
1 0 0 1 50 182 Tm (        self.gui.show_page\("foo"\)) Tj
1 0 0 1 50 168 Tm (...) Tj
1 0 0 1 50 154 Tm (...) Tj
1 0 0 1 50 140 Tm (```) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (**QML Example**) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (```) Tj
1 0 0 1 50 70 Tm (import QtQuick 2.4) Tj
1 0 0 1 50 56 Tm (import QtQuick.Controls 2.2) Tj
ET
endstream

endobj
648 0 obj
<< /Length 2272 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (import QtQuick.Layouts 1.4) Tj
1 0 0 1 50 728 Tm (import org.kde.kirigami 2.4 as Kirigami) Tj
1 0 0 1 50 714 Tm (import Mycroft 1.0 as Mycroft) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (Mycroft.Delegate {) Tj
1 0 0 1 50 672 Tm (    id: root) Tj
1 0 0 1 50 658 Tm (    property var fooString: sessionData.foobar) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (    onFooStringChanged: {) Tj
1 0 0 1 50 616 Tm (        fooRect.color = sessionData.color ) Tj
1 0 0 1 50 602 Tm (    }) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (    Rectangle {) Tj
1 0 0 1 50 560 Tm (        id: fooRect) Tj
1 0 0 1 50 546 Tm (        anchors.fill: parent) Tj
1 0 0 1 50 532 Tm (        color: "#fff") Tj
1 0 0 1 50 518 Tm (    }) Tj
1 0 0 1 50 504 Tm (}) Tj
1 0 0 1 50 490 Tm (```) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (#### Resting Faces) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (The resting face API provides skill authors the ability to extend their skills to supply ) Tj
1 0 0 1 50 406 Tm (their own customized IDLE screens that will be displayed when there is no activity on the ) Tj
1 0 0 1 50 392 Tm (screen.) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (**Simple Idle Screen Example**) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (**Python Skill Example**) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (```) Tj
1 0 0 1 50 294 Tm (from ovos_workshop.decorators import resting_screen_handler) Tj
1 0 0 1 50 280 Tm (...) Tj
1 0 0 1 50 266 Tm (@resting_screen_handler\('NameOfIdleScreen'\)) Tj
1 0 0 1 50 252 Tm (def handle_idle\(self, message\):) Tj
1 0 0 1 50 238 Tm (    self.gui.clear\(\)) Tj
1 0 0 1 50 224 Tm (    self.log.info\('Activating foo/bar resting page'\)) Tj
1 0 0 1 50 210 Tm (    self.gui["exampleText"] = "This Is A Idle Screen") Tj
1 0 0 1 50 196 Tm (    self.gui.show_page\('idle.qml'\)) Tj
1 0 0 1 50 182 Tm (```) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (**QML Example**) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (```) Tj
1 0 0 1 50 112 Tm (import QtQuick 2.4) Tj
1 0 0 1 50 98 Tm (import QtQuick.Controls 2.2) Tj
1 0 0 1 50 84 Tm (import QtQuick.Layouts 1.4) Tj
1 0 0 1 50 70 Tm (import org.kde.kirigami 2.4 as Kirigami) Tj
1 0 0 1 50 56 Tm (import Mycroft 1.0 as Mycroft) Tj
ET
endstream

endobj
649 0 obj
<< /Length 2372 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (Mycroft.Delegate {) Tj
1 0 0 1 50 714 Tm (    id: root) Tj
1 0 0 1 50 700 Tm (    property var fooString: sessionData.exampleText) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (    Kirigami.Heading {) Tj
1 0 0 1 50 658 Tm (        id: headerExample) Tj
1 0 0 1 50 644 Tm (        anchors.centerIn: parent) Tj
1 0 0 1 50 630 Tm (        text: fooString ) Tj
1 0 0 1 50 616 Tm (    }) Tj
1 0 0 1 50 602 Tm (}) Tj
1 0 0 1 50 588 Tm (```) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (# docs/711-qt_voice_apps.md) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (# QT Applications) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (> **NOTE**: Only QT5 is supported, help wanted to migrate to QT6! ) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (You can build full standalone QT Voice Applications using ) Tj
1 0 0 1 50 420 Tm ([QML]\(https://openvoiceos.github.io/ovos-technical-manual/qt5/\) with `ovos-gui` either via) Tj
1 0 0 1 50 406 Tm ( skills or [OVOSAbstractApp]\(\)) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (## Desktop Files) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (GUI clients are allowed to filter a `namespace`, providing a GUI skill in it's own ) Tj
1 0 0 1 50 336 Tm (dedicated window. ) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (This is what powers [Plasma Bigscreen Voice Apps]\(https://plasma-) Tj
1 0 0 1 50 294 Tm (bigscreen.org/docs/develop/\) via .desktop files) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (Desktop files are also parsed to populate the skills in the ) Tj
1 0 0 1 50 252 Tm ([homescreen]\(https://github.com/OpenVoiceOS/skill-ovos-homescreen\) app drawer) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (![]\(https://github.com/OpenVoiceOS/ovos_assets/raw/master/Images/homescreen-app-) Tj
1 0 0 1 50 210 Tm (drawer.png\)) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (> **NOTE**: be sure to have [mycroft-gui-qt5]\(https://github.com/OpenVoiceOS/mycroft-gui-) Tj
1 0 0 1 50 168 Tm (qt5\) installed) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (```) Tj
1 0 0 1 50 126 Tm ([Desktop Entry]) Tj
1 0 0 1 50 112 Tm (X-DBUS-StartupType=None) Tj
1 0 0 1 50 98 Tm (X-KDE-StartupNotify=false) Tj
1 0 0 1 50 84 Tm (Version=1.0) Tj
1 0 0 1 50 70 Tm (Terminal=false) Tj
1 0 0 1 50 56 Tm (Type=Application) Tj
ET
endstream

endobj
650 0 obj
<< /Length 2666 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (Name=OCP) Tj
1 0 0 1 50 728 Tm (Exec=ovos-gui-app --hideTextInput --skill=ovos.common_play) Tj
1 0 0 1 50 714 Tm (Icon=OCP) Tj
1 0 0 1 50 700 Tm (Categories=VoiceApp) Tj
1 0 0 1 50 686 Tm (StartupNotify=false) Tj
1 0 0 1 50 672 Tm (```) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (> Learn more about the [Desktop Entry ) Tj
1 0 0 1 50 630 Tm (Specification]\(https://specifications.freedesktop.org/desktop-entry-spec/desktop-entry-) Tj
1 0 0 1 50 616 Tm (spec-latest.html\)) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (# docs/720-skill_gui.md) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (# GUIInterface) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (Any component wanting to implement a GUI for OpenVoiceOS can do so via the `GUIInterface` ) Tj
1 0 0 1 50 504 Tm (class) Tj
1 0 0 1 50 490 Tm (from [ovos-bus-client]\(https://github.com/OpenVoiceOS/ovos-bus-) Tj
1 0 0 1 50 476 Tm (client/blob/dev/ovos_bus_client/apis/gui.py\)) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (Sending custom pages from skills requires skill to explicitly support a client platform) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (```python) Tj
1 0 0 1 50 406 Tm (class GUIInterface:) Tj
1 0 0 1 50 392 Tm (    """) Tj
1 0 0 1 50 378 Tm (    Interface to the Graphical User Interface, allows interaction with) Tj
1 0 0 1 50 364 Tm (    the mycroft-gui from anywhere) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (    Values set in this class are synced to the GUI, accessible within QML) Tj
1 0 0 1 50 322 Tm (    via the built-in sessionData mechanism.  For example, in Python you can) Tj
1 0 0 1 50 308 Tm (    write in a skill:) Tj
1 0 0 1 50 294 Tm (        self.gui['temp'] = 33) Tj
1 0 0 1 50 280 Tm (        self.gui.show_page\('Weather'\)) Tj
1 0 0 1 50 266 Tm (        ) Tj
1 0 0 1 50 252 Tm (    Then in the Weather.qml you'd access the temp via code such as:) Tj
1 0 0 1 50 238 Tm (        text: sessionData.time) Tj
1 0 0 1 50 224 Tm (    """) Tj
1 0 0 1 50 210 Tm (```) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (in OVOS Skills `self.gui` provides a `GUIInterface`  under `self.skill_id` namespace) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (## Page Templates) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (To have a unified look and feel, and to allow simple UIs to be integrated into skills ) Tj
1 0 0 1 50 112 Tm (without UI framework knowledge, the GUIInterface provides page templates) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (A page template is a ui file, like QML or html, that is used by gui clients to render the ) Tj
1 0 0 1 50 70 Tm (info provided by `ovos-gui`.) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
651 0 obj
<< /Length 2800 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (Skills may provide their own pages, for example for [QT Voice ) Tj
1 0 0 1 50 728 Tm (Apps]\(https://openvoiceos.github.io/ovos-technical-manual/qt_apps/\), but is their ) Tj
1 0 0 1 50 714 Tm (responsibility to explicitly support individual gui client apps if not using a provided ) Tj
1 0 0 1 50 700 Tm (template) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (#### Text) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (Display simple strings of text.) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (```python) Tj
1 0 0 1 50 588 Tm (self.gui.show_text\(self, text, title=None, override_idle=None, override_animations=False\)) Tj
1 0 0 1 50 574 Tm (```) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (Arguments:) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (* text \\\(str\\\): Main text content.  It will auto-paginate) Tj
1 0 0 1 50 504 Tm (* title \\\(str\\\): A title to display above the text content.) Tj
1 0 0 1 50 490 Tm (* override\\_idle \\\(boolean, int\\\):) Tj
1 0 0 1 50 476 Tm (  * True: Takes over the resting page indefinitely) Tj
1 0 0 1 50 462 Tm (  * \\\(int\\\): Delays resting page for the specified number of seconds.) Tj
1 0 0 1 50 448 Tm (* override\\_animations \\\(boolean\\\):) Tj
1 0 0 1 50 434 Tm (  * True: Disables showing all platform skill animations.) Tj
1 0 0 1 50 420 Tm (  * False: 'Default' always show animations.) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (#### Static Image) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (Display a static image such as a jpeg or png.) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (```python) Tj
1 0 0 1 50 322 Tm (self.gui.show_image\(self, url, caption=None, title=None, fill=None, override_idle=None, ) Tj
1 0 0 1 50 308 Tm (override_animations=False\)) Tj
1 0 0 1 50 294 Tm (```) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (Arguments:) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (* url \\\(str\\\): Pointer to the image) Tj
1 0 0 1 50 224 Tm (* caption \\\(str\\\): A caption to show under the image) Tj
1 0 0 1 50 210 Tm (* title \\\(str\\\): A title to display above the image content) Tj
1 0 0 1 50 196 Tm (* fill \\\(str\\\): Fill type - supports: ) Tj
1 0 0 1 50 182 Tm (  * 'PreserveAspectFit',) Tj
1 0 0 1 50 168 Tm (  * 'PreserveAspectCrop', ) Tj
1 0 0 1 50 154 Tm (  * 'Stretch') Tj
1 0 0 1 50 140 Tm (* override\\_idle \\\(boolean, int\\\):) Tj
1 0 0 1 50 126 Tm (  * True: Takes over the resting page indefinitely) Tj
1 0 0 1 50 112 Tm (  * \\\(int\\\): Delays resting page for the specified number of seconds.) Tj
1 0 0 1 50 98 Tm (* override\\_animations \\\(boolean\\\):) Tj
1 0 0 1 50 84 Tm (  * True: Disables showing all platform skill animations.) Tj
1 0 0 1 50 70 Tm (  * False: 'Default' always show animations.) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
652 0 obj
<< /Length 2589 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (#### Animated Image) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (Display an animated image such as a gif.) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (```python) Tj
1 0 0 1 50 672 Tm (self.gui.show_animated_image\(self, url, caption=None, title=None, fill=None, ) Tj
1 0 0 1 50 658 Tm (override_idle=None, override_animations=False\)) Tj
1 0 0 1 50 644 Tm (```) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (Arguments:) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (* url \\\(str\\\): Pointer to the .gif image) Tj
1 0 0 1 50 574 Tm (* caption \\\(str\\\): A caption to show under the image) Tj
1 0 0 1 50 560 Tm (* title \\\(str\\\): A title to display above the image content) Tj
1 0 0 1 50 546 Tm (* fill \\\(str\\\): Fill type - supports: ) Tj
1 0 0 1 50 532 Tm (  * 'PreserveAspectFit',) Tj
1 0 0 1 50 518 Tm (  * 'PreserveAspectCrop', ) Tj
1 0 0 1 50 504 Tm (  * 'Stretch') Tj
1 0 0 1 50 490 Tm (* override\\_idle \\\(boolean, int\\\):) Tj
1 0 0 1 50 476 Tm (  * True: Takes over the resting page indefinitely) Tj
1 0 0 1 50 462 Tm (  * \\\(int\\\): Delays resting page for the specified number of seconds.) Tj
1 0 0 1 50 448 Tm (* override\\_animations \\\(boolean\\\):) Tj
1 0 0 1 50 434 Tm (  * True: Disables showing all platform skill animations.) Tj
1 0 0 1 50 420 Tm (  * False: 'Default' always show animations.) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (#### HTML Page) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (Display a local HTML page.) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (```python) Tj
1 0 0 1 50 322 Tm (self.gui.show_html\(self, html, resource_url=None, override_idle=None, ) Tj
1 0 0 1 50 308 Tm (override_animations=False\)) Tj
1 0 0 1 50 294 Tm (```) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (Arguments:) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (* html \\\(str\\\): HTML text to display) Tj
1 0 0 1 50 224 Tm (* resource\\_url \\\(str\\\): Pointer to HTML resources) Tj
1 0 0 1 50 210 Tm (* override\\_idle \\\(boolean, int\\\):) Tj
1 0 0 1 50 196 Tm (  * True: Takes over the resting page indefinitely) Tj
1 0 0 1 50 182 Tm (  * \\\(int\\\): Delays resting page for the specified number of seconds.) Tj
1 0 0 1 50 168 Tm (* override\\_animations \\\(boolean\\\):) Tj
1 0 0 1 50 154 Tm (  * True: Disables showing all platform skill animations.) Tj
1 0 0 1 50 140 Tm (  * False: 'Default' always show animations.) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (#### Remote URL) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (Display a webpage.) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (```python) Tj
ET
endstream

endobj
653 0 obj
<< /Length 2748 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (self.gui.show_url\(self, url, override_idle=None, override_animations=False\)) Tj
1 0 0 1 50 728 Tm (```) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (Arguments:) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (* url \\\(str\\\): URL to render) Tj
1 0 0 1 50 658 Tm (* override\\_idle \\\(boolean, int\\\):) Tj
1 0 0 1 50 644 Tm (  * True: Takes over the resting page indefinitely) Tj
1 0 0 1 50 630 Tm (  * \\\(int\\\): Delays resting page for the specified number of seconds.) Tj
1 0 0 1 50 616 Tm (* override\\_animations \\\(boolean\\\):) Tj
1 0 0 1 50 602 Tm (  * True: Disables showing all platform skill animations.) Tj
1 0 0 1 50 588 Tm (  * False: 'Default' always show animations.) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (# docs/800-mk1_api.md) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (# Enclosure Api) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (The EnclosureApi is an abstraction over an hypothetical "body" housing OVOS) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (eg, The Mark 1 **Device** is housed in an **Enclosure**. The Enclosure is the shell that ) Tj
1 0 0 1 50 434 Tm (houses a **Device** that runs OVOS.) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (```python) Tj
1 0 0 1 50 392 Tm (from ovos_bus_client.apis.enclosure import EnclosureApi) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (api = EnclosureApi\(bus\)) Tj
1 0 0 1 50 350 Tm (```) Tj
1 0 0 1 50 336 Tm (## The Mark 1 Enclosure capabilities) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (The Mark 1 _mouth_ and _eyes_ can be controlled by **Skills** using the `self.enclosure` ) Tj
1 0 0 1 50 294 Tm (object inherited from the `OVOSSkill` base class. ) Tj
1 0 0 1 50 280 Tm (This object acts as an interface to the **Enclosure** and allows the Skill creator to draw) Tj
1 0 0 1 50 266 Tm ( to the _mouth_ display.) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (This is how the _mouth_ and _eyes_ are made to change during operations such as audio ) Tj
1 0 0 1 50 224 Tm (playback.) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (Dedicated utils for fine grained control over the mark 1 can be found at [ovos-) Tj
1 0 0 1 50 182 Tm (mark1-utils]\(https://github.com/OpenVoiceOS/ovos-mark1-utils\)) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (## Drawing to the _mouth_ display) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (### Drawing text to the _mouth_ display) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (Text can be sent to the display using the `mouth_text\(\)` method of the `enclosure` object.) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (```python) Tj
1 0 0 1 50 56 Tm (self.enclosure.mouth_text\('The meaning of life, the universe and everything is 42'\)) Tj
ET
endstream

endobj
654 0 obj
<< /Length 2462 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (```) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (If the text is too long to fit on the display, the text will scroll.) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (@TODO how many characters will fit on the display before it will scroll?) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (### Drawing images to the _mouth_ display) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (**Clearing an existing image from the mouth display**) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (Before writing an image to the _mouth_ display, you should clear any previous image.) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (```python) Tj
1 0 0 1 50 560 Tm (self.enclosure.mouth_display\(img_code="HIAAAAAAAAAAAAAA", refresh=False\)) Tj
1 0 0 1 50 546 Tm (self.enclosure.mouth_display\(img_code="HIAAAAAAAAAAAAAA", x=24, refresh=False\)) Tj
1 0 0 1 50 532 Tm (```) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (### How images are drawn on the _mouth_ display) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (The _mouth_ display is a grid, 32 pixels wide and 8 pixels high.) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (There are two ways to draw an image on the _mouth_ display.) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (**Addressing each pixel using a string encoding**) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (You can draw an image to the _mouth_ display by binary encoding pixel information in a ) Tj
1 0 0 1 50 378 Tm (string.) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (The binary encoding is straightforward value substitution.) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (| Letter Value | Pixel value |) Tj
1 0 0 1 50 308 Tm (| :--- | :--- |) Tj
1 0 0 1 50 294 Tm (| A | 0 |) Tj
1 0 0 1 50 280 Tm (| B | 1 |) Tj
1 0 0 1 50 266 Tm (| C | 2 |) Tj
1 0 0 1 50 252 Tm (| D | 3 |) Tj
1 0 0 1 50 238 Tm (| E | 4 |) Tj
1 0 0 1 50 224 Tm (| F | 5 |) Tj
1 0 0 1 50 210 Tm (| G | 6 |) Tj
1 0 0 1 50 196 Tm (| H | 7 |) Tj
1 0 0 1 50 182 Tm (| I | 8 |) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (and so on.) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (```python) Tj
1 0 0 1 50 112 Tm (self.enclosure.mouth_display\(img_code="HIAAAAAAAAAAAAAA", refresh=False\)) Tj
1 0 0 1 50 98 Tm (self.enclosure.mouth_display\(img_code="HIAAAAAAAAAAAAAA", x=24, refresh=False\)) Tj
1 0 0 1 50 84 Tm (```) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (The code above clears the image by sending a string consisting of `HI` which stands for a ) Tj
ET
endstream

endobj
655 0 obj
<< /Length 3157 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (Width of 7 and a height of 8 and each A stands for a segment of 4 pixels in the off state.) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (@TODO we really need a grid image here to show how it works - to make it easier to ) Tj
1 0 0 1 50 700 Tm (understand.) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (**Sending a PNG image to the mouth display**) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (Another way to draw an image on the _mouth_ display is to create a PNG-formatted image ) Tj
1 0 0 1 50 630 Tm (with a width of 32 pixels and a height of 8 pixels, then use the `mouth_display_png\(\)` ) Tj
1 0 0 1 50 616 Tm (method of the `enclosure` object.) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (The image should be black and white, with white meaning a dark pixel, and black indicating) Tj
1 0 0 1 50 574 Tm ( an illuminated pixel.) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (`mouth_display_png\(\)` expects the first argument to be the image absolute path. Optional ) Tj
1 0 0 1 50 532 Tm (arguments are) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (* `threshold`: The value at which a pixel should be considered 'dark' or 'illuminated') Tj
1 0 0 1 50 490 Tm (* `invert`: Treat white in the image as illuminated pixels, and black as dark pixels) Tj
1 0 0 1 50 476 Tm (* `x`: The x position \\\(horizontal\\\) at which the image should be displaye, in pixels) Tj
1 0 0 1 50 462 Tm (* `y`: The y position \\\(vertical\\\) at which the image should be displayed, in pixels) Tj
1 0 0 1 50 448 Tm (* `refresh`: clear the display before writing to it) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (@TODO all the above needs to be validated - the information is educated guesswork) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (```python) Tj
1 0 0 1 50 378 Tm (self.mouth_display_png\('/path/to/image.png', threshold=70, invert=False, x=0, y=0, ) Tj
1 0 0 1 50 364 Tm (refresh=True\)) Tj
1 0 0 1 50 350 Tm (```) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (Example image: ![A note symbol]\(https://akeiexil.files.wordpress.com/2017/08/note1.png\)) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (**Tools for converting PNG image representations to string representations**) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (If you don't want to convert PNG files at runtime \\\(for example when creating simple ) Tj
1 0 0 1 50 252 Tm (animations\\\) [this short python ) Tj
1 0 0 1 50 238 Tm (script]\(https://gist.github.com/forslund/9d8805fd7adb9e74ec3ea321e1676a21\) will convert ) Tj
1 0 0 1 50 224 Tm (PNG files to strings compatible with the `img_code` of `self.enclosure.mouth_display\(\)`.) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (### Resetting the display to the default state) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (When the **Skill** is finished, you should reset the **Enclosure** to the default state ) Tj
1 0 0 1 50 154 Tm (using) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (```python) Tj
1 0 0 1 50 112 Tm (self.enclosure.reset\(\)) Tj
1 0 0 1 50 98 Tm (```) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (This will clear the screen and blink the Mark 1's _eyes_ once.) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
656 0 obj
<< /Length 2196 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (# docs/801-mk1_utils.md) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (# Mark1 Utils) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (small library to interact with a [Mycroft Mark1 faceplate via the ) Tj
1 0 0 1 50 658 Tm (messagebus]\(https://openvoiceos.github.io/message_spec/phal_mk1/\)) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (gives you full control of the faceplate and eyes pixel by pixel) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (![]\(./demo/86788719_10157996735085818_3139665318654246912_n.jpg\)) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (## Animate the eyes) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (```python) Tj
1 0 0 1 50 532 Tm (from ovos_mark1.eyes import Eyes) Tj
1 0 0 1 50 518 Tm (from ovos_bus_client.utils import get_mycroft_bus) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (bus = get_mycroft_bus\("0.0.0.0"\)) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (eyes = Eyes\(bus\)) Tj
1 0 0 1 50 448 Tm (eyes.hue_spin\(\)) Tj
1 0 0 1 50 434 Tm (```) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (## Faceplate Icons) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (```python) Tj
1 0 0 1 50 364 Tm (from ovos_mark1.faceplate import BlackScreen) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (class MusicIcon\(BlackScreen\):) Tj
1 0 0 1 50 322 Tm (    str_grid = """) Tj
1 0 0 1 50 308 Tm (XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX) Tj
1 0 0 1 50 294 Tm (XXXXXXXXXXXXXX     XXXXXXXXXXXXX) Tj
1 0 0 1 50 280 Tm (XXXXXXXXXXXXXX     XXXXXXXXXXXXX) Tj
1 0 0 1 50 266 Tm (XXXXXXXXXXXXXX XXX XXXXXXXXXXXXX) Tj
1 0 0 1 50 252 Tm (XXXXXXXXXXXXXX XXX XXXXXXXXXXXXX) Tj
1 0 0 1 50 238 Tm (XXXXXXXXXXXXX  XX  XXXXXXXXXXXXX) Tj
1 0 0 1 50 224 Tm (XXXXXXXXXXXX   X   XXXXXXXXXXXXX) Tj
1 0 0 1 50 210 Tm (XXXXXXXXXXXXX XXX XXXXXXXXXXXXXX) Tj
1 0 0 1 50 196 Tm (""") Tj
1 0 0 1 50 182 Tm (    ) Tj
1 0 0 1 50 168 Tm (icon = MusicIcon\(\)) Tj
1 0 0 1 50 154 Tm (icon.print\(\)  # show in terminal) Tj
1 0 0 1 50 140 Tm (icon.display\(\)  # show in mark1) Tj
1 0 0 1 50 126 Tm (```) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (## Faceplate Animations) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (```python) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
657 0 obj
<< /Length 2402 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (# it's snowing !) Tj
1 0 0 1 50 728 Tm (class FallingDots\(FacePlateAnimation\):) Tj
1 0 0 1 50 714 Tm (    def __init__\(self, n=10, bus=None\):) Tj
1 0 0 1 50 700 Tm (        super\(\).__init__\(bus=bus\)) Tj
1 0 0 1 50 686 Tm (        self._create = True) Tj
1 0 0 1 50 672 Tm (        assert 0 < n < 32) Tj
1 0 0 1 50 658 Tm (        self.n = n) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (    @property) Tj
1 0 0 1 50 616 Tm (    def n_dots\(self\):) Tj
1 0 0 1 50 602 Tm (        n = 0) Tj
1 0 0 1 50 588 Tm (        for y in range\(self.height\):) Tj
1 0 0 1 50 574 Tm (            for x in range\(self.width\):) Tj
1 0 0 1 50 560 Tm (                if self.grid[y][x]:) Tj
1 0 0 1 50 546 Tm (                    n += 1) Tj
1 0 0 1 50 532 Tm (        return n) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (    def animate\(self\):) Tj
1 0 0 1 50 490 Tm (        self.move_down\(\)) Tj
1 0 0 1 50 476 Tm (        if self._create:) Tj
1 0 0 1 50 462 Tm (            if random.choice\([True, False]\):) Tj
1 0 0 1 50 448 Tm (                self._create = False) Tj
1 0 0 1 50 434 Tm (                x = random.randint\(0, self.width - 1\)) Tj
1 0 0 1 50 420 Tm (                self.grid[0][x] = 1) Tj
1 0 0 1 50 406 Tm (        if self.n_dots < self.n:) Tj
1 0 0 1 50 392 Tm (            self._create = True) Tj
1 0 0 1 50 378 Tm (```) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (Pre made animations) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (```python) Tj
1 0 0 1 50 308 Tm (from ovos_mark1.faceplate.animations import ParticleBox) Tj
1 0 0 1 50 294 Tm (from ovos_bus_client.utils import get_mycroft_bus) Tj
1 0 0 1 50 280 Tm (from time import sleep) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (bus = get_mycroft_bus\("0.0.0.0"\)) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (for faceplate in ParticleBox\(bus=bus\):) Tj
1 0 0 1 50 210 Tm (    faceplate.display\(invert=False\)) Tj
1 0 0 1 50 196 Tm (    sleep\(0.5\)) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (    ) Tj
1 0 0 1 50 154 Tm (from ovos_mark1.faceplate.cellular_automaton import Rule110) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (a = Rule110\(bus=bus\)) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (for grid in a:) Tj
1 0 0 1 50 84 Tm (    grid.print\(\)  # animate in terminal) Tj
1 0 0 1 50 70 Tm (    grid.display\(invert=False\)) Tj
1 0 0 1 50 56 Tm (    sleep\(0.5\)) Tj
ET
endstream

endobj
658 0 obj
<< /Length 2791 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (```) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (# docs/890-date_parser.md) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (# ovos-date-parser) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (`ovos-date-parser` is a comprehensive library for multilingual date and time parsing, ) Tj
1 0 0 1 50 644 Tm (extraction, and formatting,) Tj
1 0 0 1 50 630 Tm (designed to handle a range of human-readable date, time, and duration expressions.) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (## Features) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (- **Date and Time Extraction**: Extract specific dates and times from natural language ) Tj
1 0 0 1 50 560 Tm (phrases in various languages.) Tj
1 0 0 1 50 546 Tm (- **Duration Parsing**: Parse phrases that indicate a span of time, such as "two hours and) Tj
1 0 0 1 50 532 Tm ( fifteen minutes.") Tj
1 0 0 1 50 518 Tm (- **Friendly Time Formatting**: Format time for human-friendly output, supporting both ) Tj
1 0 0 1 50 504 Tm (12-hour and 24-hour formats.) Tj
1 0 0 1 50 490 Tm (- **Relative Time Descriptions**: Generate relative descriptions \(e.g., "tomorrow," "in ) Tj
1 0 0 1 50 476 Tm (three days"\) for given dates.) Tj
1 0 0 1 50 462 Tm (- **Multilingual Support**: Includes extraction and formatting methods for multiple ) Tj
1 0 0 1 50 448 Tm (languages, such as English, Spanish,) Tj
1 0 0 1 50 434 Tm (  French, German, and more.) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (## Installation) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (```bash) Tj
1 0 0 1 50 364 Tm (pip install ovos-date-parser) Tj
1 0 0 1 50 350 Tm (```) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (### Languages Supported) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (`ovos-date-parser` supports a wide array of languages, each with its own set of methods ) Tj
1 0 0 1 50 280 Tm (for handling natural language) Tj
1 0 0 1 50 266 Tm (time expressions.) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (- ? - supported) Tj
1 0 0 1 50 224 Tm (- ? - not supported) Tj
1 0 0 1 50 210 Tm (- ? - imperfect placeholder, usually a language agnostic implementation or external ) Tj
1 0 0 1 50 196 Tm (library) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (**Parse**) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (| Language | `extract_duration` | `extract_datetime` |) Tj
1 0 0 1 50 126 Tm (|----------|--------------------|--------------------|) Tj
1 0 0 1 50 112 Tm (| az       | ?                  | ?                  |) Tj
1 0 0 1 50 98 Tm (| ca       | ?                  | ?                  |) Tj
1 0 0 1 50 84 Tm (| cs       | ?                  | ?                  |) Tj
1 0 0 1 50 70 Tm (| da       | ?                  | ?                  |) Tj
1 0 0 1 50 56 Tm (| de       | ?                  | ?                  |) Tj
ET
endstream

endobj
659 0 obj
<< /Length 4011 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (| en       | ?                  | ?                  |) Tj
1 0 0 1 50 728 Tm (| es       | ?                  | ?                  |) Tj
1 0 0 1 50 714 Tm (| gl       | ?                  | ?                 |) Tj
1 0 0 1 50 700 Tm (| eu       | ?                  | ?                  |) Tj
1 0 0 1 50 686 Tm (| fa       | ?                  | ?                  |) Tj
1 0 0 1 50 672 Tm (| fr       | ?                  | ?                  |) Tj
1 0 0 1 50 658 Tm (| hu       | ?                  | ?                 |) Tj
1 0 0 1 50 644 Tm (| it       | ?                  | ?                  |) Tj
1 0 0 1 50 630 Tm (| nl       | ?                  | ?                  |) Tj
1 0 0 1 50 616 Tm (| pl       | ?                  | ?                  |) Tj
1 0 0 1 50 602 Tm (| pt       | ?                  | ?                  |) Tj
1 0 0 1 50 588 Tm (| ru       | ?                  | ?                  |) Tj
1 0 0 1 50 574 Tm (| sv       | ?                  | ?                  |) Tj
1 0 0 1 50 560 Tm (| uk       | ?                  | ?                  |) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (> ? If a language is not implemented for `extract_datetime` then ) Tj
1 0 0 1 50 504 Tm ([dateparser]\(https://dateparser.readthedocs.io/en/latest/\) will be used as a fallback) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (**Format**) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (| Language | `nice_date`<br>`nice_date_time`<br>`nice_day` <br>`nice_weekday` ) Tj
1 0 0 1 50 434 Tm (<br>`nice_month` <br>`nice_year` <br>`get_date_strings` | `nice_time` | ) Tj
1 0 0 1 50 420 Tm (`nice_relative_time` | `nice_duration` |) Tj
1 0 0 1 50 406 Tm (|----------|------------------------------------------------------------------------------) Tj
1 0 0 1 50 392 Tm (--------------------------------------------|-------------|----------------------|--------) Tj
1 0 0 1 50 378 Tm (---------|) Tj
1 0 0 1 50 364 Tm (| az       | ?                                                                            ) Tj
1 0 0 1 50 350 Tm (                                            | ?           | ?                   | ?) Tj
1 0 0 1 50 336 Tm (               | ) Tj
1 0 0 1 50 322 Tm (| ca       | ?                                                                            ) Tj
1 0 0 1 50 308 Tm (                                            | ?           | ?                   | ?) Tj
1 0 0 1 50 294 Tm (               | ) Tj
1 0 0 1 50 280 Tm (| cs       | ?                                                                            ) Tj
1 0 0 1 50 266 Tm (                                            | ?           | ?                   | ?) Tj
1 0 0 1 50 252 Tm (               | ) Tj
1 0 0 1 50 238 Tm (| da       | ?                                                                            ) Tj
1 0 0 1 50 224 Tm (                                            | ?           | ?                   | ?) Tj
1 0 0 1 50 210 Tm (               | ) Tj
1 0 0 1 50 196 Tm (| de       | ?                                                                            ) Tj
1 0 0 1 50 182 Tm (                                            | ?           | ?                   | ?) Tj
1 0 0 1 50 168 Tm (               | ) Tj
1 0 0 1 50 154 Tm (| en       | ?                                                                            ) Tj
1 0 0 1 50 140 Tm (                                            | ?           | ?                   | ?) Tj
1 0 0 1 50 126 Tm (               | ) Tj
1 0 0 1 50 112 Tm (| es       | ?                                                                            ) Tj
1 0 0 1 50 98 Tm (                                            | ?           | ?                   | ?) Tj
1 0 0 1 50 84 Tm (               | ) Tj
1 0 0 1 50 70 Tm (| gl       | ?                                                                            ) Tj
1 0 0 1 50 56 Tm (                                            | ?           | ?                   | ?) Tj
ET
endstream

endobj
660 0 obj
<< /Length 3837 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (               | ) Tj
1 0 0 1 50 728 Tm (| eu       | ?                                                                            ) Tj
1 0 0 1 50 714 Tm (                                            | ?           | ?                    | ?) Tj
1 0 0 1 50 700 Tm (               | ) Tj
1 0 0 1 50 686 Tm (| fa       | ?                                                                            ) Tj
1 0 0 1 50 672 Tm (                                            | ?           | ?                   | ?) Tj
1 0 0 1 50 658 Tm (               | ) Tj
1 0 0 1 50 644 Tm (| fr       | ?                                                                            ) Tj
1 0 0 1 50 630 Tm (                                            | ?           | ?                   | ?) Tj
1 0 0 1 50 616 Tm (               | ) Tj
1 0 0 1 50 602 Tm (| hu       | ?                                                                            ) Tj
1 0 0 1 50 588 Tm (                                            | ?           | ?                   | ?) Tj
1 0 0 1 50 574 Tm (               | ) Tj
1 0 0 1 50 560 Tm (| it       | ?                                                                            ) Tj
1 0 0 1 50 546 Tm (                                            | ?           | ?                   | ?) Tj
1 0 0 1 50 532 Tm (               | ) Tj
1 0 0 1 50 518 Tm (| nl       | ?                                                                            ) Tj
1 0 0 1 50 504 Tm (                                            | ?           | ?                   | ?) Tj
1 0 0 1 50 490 Tm (               | ) Tj
1 0 0 1 50 476 Tm (| pl       | ?                                                                            ) Tj
1 0 0 1 50 462 Tm (                                            | ?           | ?                   | ?) Tj
1 0 0 1 50 448 Tm (               | ) Tj
1 0 0 1 50 434 Tm (| pt       | ?                                                                            ) Tj
1 0 0 1 50 420 Tm (                                            | ?           | ?                   | ?) Tj
1 0 0 1 50 406 Tm (               | ) Tj
1 0 0 1 50 392 Tm (| ru       | ?                                                                            ) Tj
1 0 0 1 50 378 Tm (                                            | ?           | ?                   | ?) Tj
1 0 0 1 50 364 Tm (               | ) Tj
1 0 0 1 50 350 Tm (| sv       | ?                                                                            ) Tj
1 0 0 1 50 336 Tm (                                            | ?           | ?                   | ?) Tj
1 0 0 1 50 322 Tm (               |) Tj
1 0 0 1 50 308 Tm (| sl       | ?                                                                            ) Tj
1 0 0 1 50 294 Tm (                                            | ?           | ?                   | ?) Tj
1 0 0 1 50 280 Tm (               |) Tj
1 0 0 1 50 266 Tm (| uk       | ?                                                                            ) Tj
1 0 0 1 50 252 Tm (                                            | ?           | ?                   | ?) Tj
1 0 0 1 50 238 Tm (               | ) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (## Usage) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (### Date and Time Extraction) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (Extract specific dates and times from a phrase. This function identifies date-related ) Tj
1 0 0 1 50 140 Tm (terms in natural language and) Tj
1 0 0 1 50 126 Tm (returns both the datetime object and any remaining text.) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (```python) Tj
1 0 0 1 50 84 Tm (from ovos_date_parser import extract_datetime) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (result = extract_datetime\("Meet me next Friday at 3pm", lang="en"\)) Tj
ET
endstream

endobj
661 0 obj
<< /Length 2555 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (print\(result\)  # \(datetime object, "at 3pm"\)) Tj
1 0 0 1 50 728 Tm (```) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (### Duration Extraction) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (Identify duration phrases in text and convert them into a `timedelta` object. This can ) Tj
1 0 0 1 50 658 Tm (parse common human-friendly) Tj
1 0 0 1 50 644 Tm (duration expressions like "30 minutes" or "two and a half hours.") Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (```python) Tj
1 0 0 1 50 602 Tm (from ovos_date_parser import extract_duration) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (duration, remainder = extract_duration\("It will take about 2 hours and 30 minutes", ) Tj
1 0 0 1 50 560 Tm (lang="en"\)) Tj
1 0 0 1 50 546 Tm (print\(duration\)  # timedelta object) Tj
1 0 0 1 50 532 Tm (print\(remainder\)  # "about") Tj
1 0 0 1 50 518 Tm (```) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (### Formatting Time) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (Generate a natural-sounding time format suitable for voice or display in different ) Tj
1 0 0 1 50 448 Tm (languages, allowing customization for) Tj
1 0 0 1 50 434 Tm (speech or written text.) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (```python) Tj
1 0 0 1 50 392 Tm (from ovos_date_parser import nice_time) Tj
1 0 0 1 50 378 Tm (from datetime import datetime) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (dt = datetime.now\(\)) Tj
1 0 0 1 50 336 Tm (formatted_time = nice_time\(dt, lang="en", speech=True, use_24hour=False\)) Tj
1 0 0 1 50 322 Tm (print\(formatted_time\)  # "three o'clock") Tj
1 0 0 1 50 308 Tm (```) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (### Relative Time Descriptions) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (Create relative phrases for describing dates and times in relation to the current moment ) Tj
1 0 0 1 50 238 Tm (or a reference datetime.) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (```python) Tj
1 0 0 1 50 196 Tm (from ovos_date_parser import nice_relative_time) Tj
1 0 0 1 50 182 Tm (from datetime import datetime, timedelta) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (relative_time = nice_relative_time\(datetime.now\(\) + timedelta\(days=1\), datetime.now\(\), ) Tj
1 0 0 1 50 140 Tm (lang="en"\)) Tj
1 0 0 1 50 126 Tm (print\(relative_time\)  # "tomorrow") Tj
1 0 0 1 50 112 Tm (```) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (## Related Projects) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (- [ovos-number-parser]\(https://github.com/OpenVoiceOS/ovos-number-parser\) - for handling ) Tj
ET
endstream

endobj
662 0 obj
<< /Length 3136 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (numbers) Tj
1 0 0 1 50 728 Tm (- [ovos-lang-parser]\(https://github.com/OVOSHatchery/ovos-lang-parser\) - for handling ) Tj
1 0 0 1 50 714 Tm (languages) Tj
1 0 0 1 50 700 Tm (- [ovos-color-parser]\(https://github.com/OVOSHatchery/ovos-color-parser\) - for handling ) Tj
1 0 0 1 50 686 Tm (colors) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (# docs/891-number_parser.md) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (# OVOS Number Parser) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (OVOS Number Parser is a tool for extracting, pronouncing, and detecting numbers from text ) Tj
1 0 0 1 50 574 Tm (across multiple languages. It) Tj
1 0 0 1 50 560 Tm (supports functionalities like converting numbers to their spoken forms, extracting numbers) Tj
1 0 0 1 50 546 Tm ( from text, identifying) Tj
1 0 0 1 50 532 Tm (fractional and ordinal numbers, and more.) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (## Features) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (- **Pronounce Numbers:** Converts numerical values to their spoken forms.) Tj
1 0 0 1 50 462 Tm (- **Pronounce Ordinals:** Converts numbers to their ordinal forms.) Tj
1 0 0 1 50 448 Tm (- **Extract Numbers:** Extracts numbers from textual inputs.) Tj
1 0 0 1 50 434 Tm (- **Detect Fractions:** Identifies fractional expressions.) Tj
1 0 0 1 50 420 Tm (- **Detect Ordinals:** Checks if a text input contains an ordinal number.) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (## Supported Languages) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (- ? - supported) Tj
1 0 0 1 50 350 Tm (- ? - not supported) Tj
1 0 0 1 50 336 Tm (- ? - imperfect placeholder, usually a language agnostic implementation or external ) Tj
1 0 0 1 50 322 Tm (library) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (| Language Code           | Pronounce Number | Pronounce Ordinal | Extract Number | ) Tj
1 0 0 1 50 266 Tm (numbers_to_digits |) Tj
1 0 0 1 50 252 Tm (|-------------------------|------------------|-------------------|----------------|-------) Tj
1 0 0 1 50 238 Tm (------------|) Tj
1 0 0 1 50 224 Tm (| `en` \(English\)          | ?               | ?                | ?             | ?) Tj
1 0 0 1 50 210 Tm (                |) Tj
1 0 0 1 50 196 Tm (| `az` \(Azerbaijani\)      | ?               | ?                | ?             | ?) Tj
1 0 0 1 50 182 Tm (                |) Tj
1 0 0 1 50 168 Tm (| `ca` \(Catalan\)          | ?                | ?                 | ?              | ?) Tj
1 0 0 1 50 154 Tm (                 |) Tj
1 0 0 1 50 140 Tm (| `gl` \(Galician\)         | ?                | ?                | ?              |  ?) Tj
1 0 0 1 50 126 Tm (                  |) Tj
1 0 0 1 50 112 Tm (| `cs` \(Czech\)            | ?                | ?                 | ?              | ?) Tj
1 0 0 1 50 98 Tm (                 |) Tj
1 0 0 1 50 84 Tm (| `da` \(Danish\)           | ?                | ?                 | ?              | ?) Tj
1 0 0 1 50 70 Tm (                 |) Tj
1 0 0 1 50 56 Tm (| `de` \(German\)           | ?                | ?                 | ?              | ?) Tj
ET
endstream

endobj
663 0 obj
<< /Length 3118 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (                 |) Tj
1 0 0 1 50 728 Tm (| `es` \(Spanish\)          | ?                | ?                 | ?              | ?) Tj
1 0 0 1 50 714 Tm (                 |) Tj
1 0 0 1 50 700 Tm (| `eu` \(Euskara / Basque\) | ?                | ?                 | ?              | ?) Tj
1 0 0 1 50 686 Tm (                 |) Tj
1 0 0 1 50 672 Tm (| `fa` \(Farsi / Persian\)  | ?                | ?                 | ?              | ?) Tj
1 0 0 1 50 658 Tm (                 |) Tj
1 0 0 1 50 644 Tm (| `fr` \(French\)           | ?                | ?                 | ?              | ?) Tj
1 0 0 1 50 630 Tm (                 |) Tj
1 0 0 1 50 616 Tm (| `hu` \(Hungarian\)        | ?                | ?                 | ?              | ?) Tj
1 0 0 1 50 602 Tm (                 |) Tj
1 0 0 1 50 588 Tm (| `it` \(Italian\)          | ?                | ?                | ?              | ?) Tj
1 0 0 1 50 574 Tm (                 |) Tj
1 0 0 1 50 560 Tm (| `nl` \(Dutch\)            | ?                | ?                 | ?              | ?) Tj
1 0 0 1 50 546 Tm (                 |) Tj
1 0 0 1 50 532 Tm (| `pl` \(Polish\)           | ?                | ?                 | ?              | ?) Tj
1 0 0 1 50 518 Tm (                 |) Tj
1 0 0 1 50 504 Tm (| `pt` \(Portuguese\)       | ?                | ?                 | ?              | ?) Tj
1 0 0 1 50 490 Tm (                 |) Tj
1 0 0 1 50 476 Tm (| `ru` \(Russian\)          | ?                | ?                 | ?              | ?) Tj
1 0 0 1 50 462 Tm (                 |) Tj
1 0 0 1 50 448 Tm (| `sv` \(Swedish\)          | ?                | ?                 | ?              | ?) Tj
1 0 0 1 50 434 Tm (                 |) Tj
1 0 0 1 50 420 Tm (| `sl` \(Slovenian\)        | ?                | ?                 | ?              | ?) Tj
1 0 0 1 50 406 Tm (                 |) Tj
1 0 0 1 50 392 Tm (| `uk` \(Ukrainian\)        | ?                | ?                 | ?              | ?) Tj
1 0 0 1 50 378 Tm (                 |) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (> ? If a language is not implemented for `pronounce_number` or `pronounce_ordinal` then ) Tj
1 0 0 1 50 322 Tm ([unicode-rbnf]\(https://github.com/rhasspy/unicode-rbnf\) will be used as a fallback) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (## Installation) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (To install OVOS Number Parser, use:) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (```bash) Tj
1 0 0 1 50 224 Tm (pip install ovos-number-parser) Tj
1 0 0 1 50 210 Tm (```) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (## Usage) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (### Pronounce a Number) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (Convert a number to its spoken equivalent.) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (```python) Tj
1 0 0 1 50 84 Tm (def pronounce_number\(number: Union[int, float], lang: str, places: int = 2, short_scale: ) Tj
1 0 0 1 50 70 Tm (bool = True,) Tj
1 0 0 1 50 56 Tm (                     scientific: bool = False, ordinals: bool = False\) -> str:) Tj
ET
endstream

endobj
664 0 obj
<< /Length 2448 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (    """) Tj
1 0 0 1 50 728 Tm (    Convert a number to its spoken equivalent.) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (    Args:) Tj
1 0 0 1 50 686 Tm (        number: The number to pronounce.) Tj
1 0 0 1 50 672 Tm (        lang \(str\): A BCP-47 language code.) Tj
1 0 0 1 50 658 Tm (        places \(int\): Number of decimal places to express. Default is 2.) Tj
1 0 0 1 50 644 Tm (        short_scale \(bool\): Use short \(True\) or long scale \(False\) for large numbers.) Tj
1 0 0 1 50 630 Tm (        scientific \(bool\): Pronounce in scientific notation if True.) Tj
1 0 0 1 50 616 Tm (        ordinals \(bool\): Pronounce as an ordinal if True.) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (    Returns:) Tj
1 0 0 1 50 574 Tm (        str: The pronounced number.) Tj
1 0 0 1 50 560 Tm (    """) Tj
1 0 0 1 50 546 Tm (```) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (**Example Usage:**) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (```python) Tj
1 0 0 1 50 476 Tm (from ovos_number_parser import pronounce_number) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (# Example) Tj
1 0 0 1 50 434 Tm (result = pronounce_number\(123, "en"\)) Tj
1 0 0 1 50 420 Tm (print\(result\)  # "one hundred and twenty-three") Tj
1 0 0 1 50 406 Tm (```) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (### Pronounce an Ordinal) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (Convert a number to its ordinal spoken equivalent.) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (```python) Tj
1 0 0 1 50 308 Tm (def pronounce_ordinal\(number: Union[int, float], lang: str, short_scale: bool = True\) -> ) Tj
1 0 0 1 50 294 Tm (str:) Tj
1 0 0 1 50 280 Tm (    """) Tj
1 0 0 1 50 266 Tm (    Convert an ordinal number to its spoken equivalent.) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (    Args:) Tj
1 0 0 1 50 224 Tm (        number: The number to pronounce.) Tj
1 0 0 1 50 210 Tm (        lang \(str\): A BCP-47 language code.) Tj
1 0 0 1 50 196 Tm (        short_scale \(bool\): Use short \(True\) or long scale \(False\) for large numbers.) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (    Returns:) Tj
1 0 0 1 50 154 Tm (        str: The pronounced ordinal number.) Tj
1 0 0 1 50 140 Tm (    """) Tj
1 0 0 1 50 126 Tm (```) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (**Example Usage:**) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (```python) Tj
1 0 0 1 50 56 Tm (from ovos_number_parser import pronounce_ordinal) Tj
ET
endstream

endobj
665 0 obj
<< /Length 2361 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (# Example) Tj
1 0 0 1 50 714 Tm (result = pronounce_ordinal\(5, "en"\)) Tj
1 0 0 1 50 700 Tm (print\(result\)  # "fifth") Tj
1 0 0 1 50 686 Tm (```) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (### Extract a Number) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (Extract a number from a given text string.) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (```python) Tj
1 0 0 1 50 588 Tm (def extract_number\(text: str, lang: str, short_scale: bool = True, ordinals: bool = False\)) Tj
1 0 0 1 50 574 Tm ( -> Union[int, float, bool]:) Tj
1 0 0 1 50 560 Tm (    """) Tj
1 0 0 1 50 546 Tm (    Extract a number from text.) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (    Args:) Tj
1 0 0 1 50 504 Tm (        text \(str\): The string to extract a number from.) Tj
1 0 0 1 50 490 Tm (        lang \(str\): A BCP-47 language code.) Tj
1 0 0 1 50 476 Tm (        short_scale \(bool\): Use short scale if True, long scale if False.) Tj
1 0 0 1 50 462 Tm (        ordinals \(bool\): Consider ordinal numbers.) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (    Returns:) Tj
1 0 0 1 50 420 Tm (        int, float, or False: The extracted number, or False if no number found.) Tj
1 0 0 1 50 406 Tm (    """) Tj
1 0 0 1 50 392 Tm (```) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (**Example Usage:**) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (```python) Tj
1 0 0 1 50 322 Tm (from ovos_number_parser import extract_number) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (# Example) Tj
1 0 0 1 50 280 Tm (result = extract_number\("I have twenty apples", "en"\)) Tj
1 0 0 1 50 266 Tm (print\(result\)  # 20) Tj
1 0 0 1 50 252 Tm (```) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (### Check for Fractional Numbers) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (Identify if the text contains a fractional number.) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (```python) Tj
1 0 0 1 50 154 Tm (def is_fractional\(input_str: str, lang: str, short_scale: bool = True\) -> Union[bool, ) Tj
1 0 0 1 50 140 Tm (float]:) Tj
1 0 0 1 50 126 Tm (    """) Tj
1 0 0 1 50 112 Tm (    Check if the text is a fraction.) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (    Args:) Tj
1 0 0 1 50 70 Tm (        input_str \(str\): The string to check if fractional.) Tj
1 0 0 1 50 56 Tm (        lang \(str\): A BCP-47 language code.) Tj
ET
endstream

endobj
666 0 obj
<< /Length 2290 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (        short_scale \(bool\): Use short scale if True, long scale if False.) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (    Returns:) Tj
1 0 0 1 50 700 Tm (        bool or float: False if not a fraction, otherwise the fraction as a float.) Tj
1 0 0 1 50 686 Tm (    """) Tj
1 0 0 1 50 672 Tm (```) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (**Example Usage:**) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (```python) Tj
1 0 0 1 50 602 Tm (from ovos_number_parser import is_fractional) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (# Example) Tj
1 0 0 1 50 560 Tm (result = is_fractional\("half", "en"\)) Tj
1 0 0 1 50 546 Tm (print\(result\)  # 0.5) Tj
1 0 0 1 50 532 Tm (```) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (### Check for Ordinals) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (Determine if the text contains an ordinal number.) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (```python) Tj
1 0 0 1 50 434 Tm (def is_ordinal\(input_str: str, lang: str\) -> Union[bool, float]:) Tj
1 0 0 1 50 420 Tm (    """) Tj
1 0 0 1 50 406 Tm (    Check if the text is an ordinal number.) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (    Args:) Tj
1 0 0 1 50 364 Tm (        input_str \(str\): The string to check if ordinal.) Tj
1 0 0 1 50 350 Tm (        lang \(str\): A BCP-47 language code.) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (    Returns:) Tj
1 0 0 1 50 308 Tm (        bool or float: False if not an ordinal, otherwise the ordinal as a float.) Tj
1 0 0 1 50 294 Tm (    """) Tj
1 0 0 1 50 280 Tm (```) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (**Example Usage:**) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (```python) Tj
1 0 0 1 50 210 Tm (from ovos_number_parser import is_ordinal) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (# Example) Tj
1 0 0 1 50 168 Tm (result = is_ordinal\("third", "en"\)) Tj
1 0 0 1 50 154 Tm (print\(result\)  # 3) Tj
1 0 0 1 50 140 Tm (```) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (## Related Projects) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (- [ovos-date-parser]\(https://github.com/OpenVoiceOS/ovos-date-parser\) - for handling dates) Tj
1 0 0 1 50 70 Tm ( and times) Tj
1 0 0 1 50 56 Tm (- [ovos-lang-parser]\(https://github.com/OVOSHatchery/ovos-lang-parser\) - for handling ) Tj
ET
endstream

endobj
667 0 obj
<< /Length 2173 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (languages) Tj
1 0 0 1 50 728 Tm (- [ovos-color-parser]\(https://github.com/OVOSHatchery/ovos-color-parser\) - for handling ) Tj
1 0 0 1 50 714 Tm (colors) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (## License) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (This project is licensed under the Apache License 2.0.) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (# docs/893-color_parser.md) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (# OVOS Color Parser) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (> :warning: this package is a work in progress) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (## What does this have to do with voice?) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (- "change the lamp color to moss green") Tj
1 0 0 1 50 490 Tm (- "make it darker") Tj
1 0 0 1 50 476 Tm (- "more saturated") Tj
1 0 0 1 50 462 Tm (- "a bit more yellowish") Tj
1 0 0 1 50 448 Tm (- "perfect") Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (> NOTE: physicists are huge nerds, so they might say something like "change the lamp wave ) Tj
1 0 0 1 50 406 Tm (lenght to X nanometers", this) Tj
1 0 0 1 50 392 Tm (> is a terrible way to talk about color and innacurate but we also added basic support for) Tj
1 0 0 1 50 378 Tm ( this) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (## Extracting a color from text) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (The parser will do it's best to parse "color modifiers") Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (```python) Tj
1 0 0 1 50 252 Tm (from ovos_color_parser import color_from_description) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (names = [) Tj
1 0 0 1 50 210 Tm (    "Bright, vibrant green",) Tj
1 0 0 1 50 196 Tm (    "Pale pink",) Tj
1 0 0 1 50 182 Tm (    "Muted, warm gray",) Tj
1 0 0 1 50 168 Tm (    "Dark, cool blue",) Tj
1 0 0 1 50 154 Tm (  ) Tj
1 0 0 1 50 140 Tm (]) Tj
1 0 0 1 50 126 Tm (for n in names:) Tj
1 0 0 1 50 112 Tm (    c = color_from_description\(n\)) Tj
1 0 0 1 50 98 Tm (    print\(c.hex_str\)) Tj
1 0 0 1 50 84 Tm (    print\(c\)) Tj
1 0 0 1 50 70 Tm (```) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
668 0 obj
<< /Length 3111 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (![image]\(https://github.com/user-attachments/assets/96601212-01d2-4eda-a7e2-120f2d7de5f5\)) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (Color names are ambiguous, the same name sometimes refers to multiple colors. When a color) Tj
1 0 0 1 50 686 Tm ( is matched by the parser it "averages all matched colors") Tj
1 0 0 1 50 672 Tm (```python) Tj
1 0 0 1 50 658 Tm (from ovos_color_parser import color_from_description) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (color = color_from_description\("Red"\)) Tj
1 0 0 1 50 616 Tm (print\(color.hex_str\)  #D21B1B) Tj
1 0 0 1 50 602 Tm (print\(color\) ) Tj
1 0 0 1 50 588 Tm (# sRGBColor\(r=210, g=27, b=27, name='Red', description='Red'\)) Tj
1 0 0 1 50 574 Tm (```) Tj
1 0 0 1 50 560 Tm (![image]\(https://github.com/user-attachments/assets/b54b5452-36a1-4dd8-8e3e-49dfacb57a97\)) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (We can tell the parser to always return a known/named color with `cast_to_palette=True`, ) Tj
1 0 0 1 50 490 Tm (but this might not always return what you expect) Tj
1 0 0 1 50 476 Tm (```python) Tj
1 0 0 1 50 462 Tm (from ovos_color_parser import color_from_description) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (color = color_from_description\("Red", cast_to_palette=True\)) Tj
1 0 0 1 50 420 Tm (print\(color.hex_str\)  #CE202B) Tj
1 0 0 1 50 406 Tm (print\(color\)) Tj
1 0 0 1 50 392 Tm (# sRGBColor\(r=206, g=32, b=43, name='Fire engine red', description='Red'\)) Tj
1 0 0 1 50 378 Tm (```) Tj
1 0 0 1 50 364 Tm (![image]\(https://github.com/user-attachments/assets/ac3cc89d-2949-4d8e-ae70-e9829402d7b7\)) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (### Beware of impossible colors) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (Some colors are [impossible]\(https://en.wikipedia.org/wiki/Impossible_color\), but that ) Tj
1 0 0 1 50 280 Tm (doesn't stop text from describing them) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (`"Reddish-green"` doesnt make much sense as a description, unless you mean yellow or ) Tj
1 0 0 1 50 238 Tm (orange, which you dont, because you would have said yellow or orange. The same ) Tj
1 0 0 1 50 224 Tm (applies to `"Yellowishblue"`) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (> the Colour of Magic or the King Colour, was the eighth colour of the Discworld spectrum.) Tj
1 0 0 1 50 182 Tm ( ) Tj
1 0 0 1 50 168 Tm (Only visible to wizards and cats. It is described in "The Colour of Magic" as the colour ) Tj
1 0 0 1 50 154 Tm (of imagination and is a fluorescent greenish yellow-purple. ) Tj
1 0 0 1 50 140 Tm (The only time non-wizards can see it is when they close their eyes; the bursts of color ) Tj
1 0 0 1 50 126 Tm (are octarine.) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (Fluorescent greenish-yellow and purple are essentially opposite colors on the color wheel,) Tj
1 0 0 1 50 70 Tm ( with wavelengths that cant coexist in a single light wave in the visible spectrum. ) Tj
1 0 0 1 50 56 Tm (Heres why:) Tj
ET
endstream

endobj
669 0 obj
<< /Length 3326 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (- Color Wavelengths and Light: Greenish-yellow light falls in a wavelength range of about ) Tj
1 0 0 1 50 714 Tm (560590 nanometers, while purple is not a pure spectral color but a combination of blue ) Tj
1 0 0 1 50 700 Tm (\(around 450495 nm\) and red \(around 620750 nm\). Human eyes perceive purple as a ) Tj
1 0 0 1 50 686 Tm (combination of these two ends of the spectrum.) Tj
1 0 0 1 50 672 Tm (- Color Opponency Theory: The human visual system relies on color opponency, where certain) Tj
1 0 0 1 50 658 Tm ( pairs of colors \(like red-green and blue-yellow\) are processed in opposing channels. ) Tj
1 0 0 1 50 644 Tm (Because of this, our brains cant interpret colors that simultaneously activate both ends ) Tj
1 0 0 1 50 630 Tm (of an opponent channel. This is why we dont perceive colors like reddish-green or ) Tj
1 0 0 1 50 616 Tm (yellowish-blueour brains are simply wired to cancel out those combinations.) Tj
1 0 0 1 50 602 Tm (- Perceptual Limits: Fluorescent colors are especially intense because they emit light in ) Tj
1 0 0 1 50 588 Tm (a narrow, concentrated wavelength range, making them appear very saturated and bright. ) Tj
1 0 0 1 50 574 Tm (Attempting to mix fluorescent greenish-yellow with purple not only challenges the ) Tj
1 0 0 1 50 560 Tm (physiology of the eye but would also result in a muted brown or gray tone, as the colors ) Tj
1 0 0 1 50 546 Tm (cancel each other out.) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (In short, fluorescent greenish-yellow and purple light cant coexist in a way our eyes can) Tj
1 0 0 1 50 504 Tm ( interpret as a single, stable color because of the biological limits of human color ) Tj
1 0 0 1 50 490 Tm (perception.) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (```python) Tj
1 0 0 1 50 434 Tm (from ovos_color_parser import color_from_description) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (# look! an impossible color) Tj
1 0 0 1 50 392 Tm (color = color_from_description\("fluorescent greenish-yellow purple"\)) Tj
1 0 0 1 50 378 Tm (color.name = "Octarine") Tj
1 0 0 1 50 364 Tm (print\(color.hex_str\) #76B11D) Tj
1 0 0 1 50 350 Tm (print\(color\)) Tj
1 0 0 1 50 336 Tm (# sRGBColor\(r=118, g=177, b=29, name='Octarine', description='fluorescent greenish-yellow ) Tj
1 0 0 1 50 322 Tm (purple'\)) Tj
1 0 0 1 50 308 Tm (```) Tj
1 0 0 1 50 294 Tm (the parser will gladly output something... it just might not make sense) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (in this case the parser focused on `"greenish-yellow"`) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (![image]\(https://github.com/user-attachments/assets/82484998-3f19-4626-bcea-e6c570a90dc9\)) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (but it could have focused on `"purple"`) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (![image]\(https://github.com/user-attachments/assets/4aee840a-ccb8-4a63-ad84-bf0d283a49c1\)) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (## Comparing color objects) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (compare color distances \(smaller is better\)) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (```python) Tj
1 0 0 1 50 70 Tm (from ovos_color_parser import color_distance, color_from_description) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
670 0 obj
<< /Length 3162 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (color_a = color_from_description\("green"\)) Tj
1 0 0 1 50 728 Tm (color_b = color_from_description\("purple"\)) Tj
1 0 0 1 50 714 Tm (print\(color_distance\(color_a, color_b\)\)) Tj
1 0 0 1 50 700 Tm (# 64.97192890677195) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (color_a = color_from_description\("green"\)) Tj
1 0 0 1 50 658 Tm (color_b = color_from_description\("yellow"\)) Tj
1 0 0 1 50 644 Tm (print\(color_distance\(color_a, color_b\)\)) Tj
1 0 0 1 50 630 Tm (# 44.557493285361) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (color_a = color_from_description\("yellow"\)) Tj
1 0 0 1 50 588 Tm (color_b = color_from_description\("purple"\)) Tj
1 0 0 1 50 574 Tm (print\(color_distance\(color_a, color_b\)\)) Tj
1 0 0 1 50 560 Tm (# 78.08287998809946) Tj
1 0 0 1 50 546 Tm (```) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (match a color object to a list of colors) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (```python) Tj
1 0 0 1 50 476 Tm (from ovos_color_parser import sRGBAColor, sRGBAColorPalette, closest_color) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (# https://en.wikipedia.org/wiki/Blue-green) Tj
1 0 0 1 50 434 Tm (BlueGreenPalette = sRGBAColorPalette\(colors=[) Tj
1 0 0 1 50 420 Tm (  sRGBAColor\(r=0, g=128, b=128, name="Blue-green"\),) Tj
1 0 0 1 50 406 Tm (  sRGBAColor\(r=0, g=255, b=255, name="Cyan \(Aqua\)", description="Brilliant bluish green"\),) Tj
1 0 0 1 50 392 Tm (  sRGBAColor\(r=64, g=224, b=208, name="Turquoise", description="Brilliant bluish green"\),) Tj
1 0 0 1 50 378 Tm (  sRGBAColor\(r=17, g=100, b=180, name="Green-blue", description="Strong blue"\),) Tj
1 0 0 1 50 364 Tm (  sRGBAColor\(r=57, g=55, b=223, name="Bondi blue"\),) Tj
1 0 0 1 50 350 Tm (  sRGBAColor\(r=0, g=165, b=156, name="Blue green \(Munsell\)", description="Brilliant bluish) Tj
1 0 0 1 50 336 Tm ( green"\),) Tj
1 0 0 1 50 322 Tm (  sRGBAColor\(r=0, g=123, b=167, name="Cerulean", description="Strong greenish blue"\),) Tj
1 0 0 1 50 308 Tm (  sRGBAColor\(r=0, g=63, b=255, name="Cerulean \(RGB\)", description="Vivid blue"\),) Tj
1 0 0 1 50 294 Tm (  sRGBAColor\(r=0, g=128, b=128, name="Teal", description="Moderate bluish green"\),) Tj
1 0 0 1 50 280 Tm (]\)) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (print\(closest_color\(sRGBAColor\(r=0, g=0, b=255, name="Blue"\),) Tj
1 0 0 1 50 238 Tm (                    BlueGreenPalette.colors\)\)) Tj
1 0 0 1 50 224 Tm (# sRGBColor\(r=0, g=63, b=255, name='Cerulean \(RGB\)', description='Vivid blue'\)) Tj
1 0 0 1 50 210 Tm (print\(closest_color\(sRGBAColor\(r=0, g=255, b=0, name="Green"\),) Tj
1 0 0 1 50 196 Tm (                    BlueGreenPalette.colors\)\)) Tj
1 0 0 1 50 182 Tm (# sRGBColor\(r=64, g=224, b=208, name='Turquoise', description='Brilliant bluish green'\)) Tj
1 0 0 1 50 168 Tm (```) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (---) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (## Language support) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (When describing color in natural language to approximate it in RGB, there are several ) Tj
1 0 0 1 50 70 Tm (keywords that can convey) Tj
1 0 0 1 50 56 Tm (its properties effectively) Tj
ET
endstream

endobj
671 0 obj
<< /Length 3029 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (```python) Tj
1 0 0 1 50 714 Tm (# Parse complex color descriptions) Tj
1 0 0 1 50 700 Tm (color = color_from_description\("very bright, slightly warm muted blue"\)) Tj
1 0 0 1 50 686 Tm (```) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (- **Description**: Hue refers to the basic color family, such as red, blue, green, or ) Tj
1 0 0 1 50 644 Tm (yellow.) Tj
1 0 0 1 50 630 Tm (- **Translation to RGB**:) Tj
1 0 0 1 50 616 Tm (- The hue determines which of the primary RGB channels \(red, green, or blue\) will be most ) Tj
1 0 0 1 50 602 Tm (prominent. For example,) Tj
1 0 0 1 50 588 Tm (  red means a strong red channel with low green and blue, while blue means a high blue) Tj
1 0 0 1 50 574 Tm ( channel with low red and) Tj
1 0 0 1 50 560 Tm (  green.) Tj
1 0 0 1 50 546 Tm (- Hues like "yellow" indicate both red and green channels are high with blue low, while ) Tj
1 0 0 1 50 532 Tm ("purple" combines red and) Tj
1 0 0 1 50 518 Tm (  blue with little green.) Tj
1 0 0 1 50 504 Tm (  ) Tj
1 0 0 1 50 490 Tm (---) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (- **Description**: Saturation, or chroma, is how pure or intense the color is. Terms like ) Tj
1 0 0 1 50 448 Tm (vibrant, dull, or washed) Tj
1 0 0 1 50 434 Tm (  out refer to saturation.) Tj
1 0 0 1 50 420 Tm (- **Translation to RGB**:) Tj
1 0 0 1 50 406 Tm (    - High saturation \(vibrant\): Increase the difference between the dominant channel\(s\) ) Tj
1 0 0 1 50 392 Tm (and others. For example, making) Tj
1 0 0 1 50 378 Tm (      the red channel much higher than green and blue for a vibrant red.) Tj
1 0 0 1 50 364 Tm (    - Low saturation \(dull\): Reduce the contrast between channels, creating a blend closer) Tj
1 0 0 1 50 350 Tm ( to grayscale. For instance,) Tj
1 0 0 1 50 336 Tm (      balancing red, green, and blue channels to similar values lowers saturation.) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (---) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (- **Description**: Brightness refers to how light or dark the color appears. Words like ) Tj
1 0 0 1 50 252 Tm (bright, dim, dark, or) Tj
1 0 0 1 50 238 Tm (  pale are often used.) Tj
1 0 0 1 50 224 Tm (- **Translation to RGB**:) Tj
1 0 0 1 50 210 Tm (    - High brightness \(bright\): Increase the values across all channels.) Tj
1 0 0 1 50 196 Tm (    - Low brightness \(dark\): Decrease values across channels while maintaining the hue's ) Tj
1 0 0 1 50 182 Tm (relative balance.) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (---) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (- **Description**: Color temperature reflects whether a color feels warm or cool. Terms ) Tj
1 0 0 1 50 112 Tm (like "warm red," "cool green,") Tj
1 0 0 1 50 98 Tm (  or "cold blue" apply here.) Tj
1 0 0 1 50 84 Tm (- **Translation to RGB**:) Tj
1 0 0 1 50 70 Tm (    - Warm colors: Increase red or red and green channels.) Tj
1 0 0 1 50 56 Tm (    - Cool colors: Increase blue or decrease red.) Tj
ET
endstream

endobj
672 0 obj
<< /Length 2654 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (---) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (- **Description**: Opacity doesnt affect RGB but is relevant for color perception, ) Tj
1 0 0 1 50 686 Tm (especially in design. Terms like) Tj
1 0 0 1 50 672 Tm (  translucent, opaque, or sheer describe it.) Tj
1 0 0 1 50 658 Tm (- **Translation to RGB**:) Tj
1 0 0 1 50 644 Tm (    - Opacity affects the alpha channel \(RGBA\) rather than RGB values.) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (This approach, while interpretative, offers a structured way to translate natural language) Tj
1 0 0 1 50 574 Tm ( color descriptions into RGB) Tj
1 0 0 1 50 560 Tm (approximations.) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (#### Color Keywords ) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (To categorize adjectives and keywords that describe color in ways that translate into RGB ) Tj
1 0 0 1 50 476 Tm (or color space adjustments the) Tj
1 0 0 1 50 462 Tm (parser uses a `.json` file per language) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (Example JSON structure for English color keywords:) Tj
1 0 0 1 50 420 Tm ( ) Tj
1 0 0 1 50 406 Tm (```json) Tj
1 0 0 1 50 392 Tm ({) Tj
1 0 0 1 50 378 Tm (  "saturation": {) Tj
1 0 0 1 50 364 Tm (    "high": ["vibrant", "rich", "bold", "deep"],) Tj
1 0 0 1 50 350 Tm (    "low": ["dull", "muted", "washed-out", "faded"]) Tj
1 0 0 1 50 336 Tm (  },) Tj
1 0 0 1 50 322 Tm (  "brightness": {) Tj
1 0 0 1 50 308 Tm (    "high": ["bright", "light", "pale", "glowing"],) Tj
1 0 0 1 50 294 Tm (    "low": ["dim", "dark", "shadowy", "faint"]) Tj
1 0 0 1 50 280 Tm (  }) Tj
1 0 0 1 50 266 Tm (}) Tj
1 0 0 1 50 252 Tm (```) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (Color name lists in each language are also used to determine the **hue**. ) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (> English has a word list of almost ~6000 color name mappings) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (Below are some examples of non-color-name keywords that define other qualities of a color) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (- **Very High Saturation**: For colors that are extremely intense or vivid.) Tj
1 0 0 1 50 98 Tm (    - Keywords: neon, saturated, intense, brilliant, flamboyant) Tj
1 0 0 1 50 84 Tm (- **High Saturation**: These adjectives indicate vibrant or intense colors where the hue ) Tj
1 0 0 1 50 70 Tm (is pronounced.) Tj
1 0 0 1 50 56 Tm (    - Keywords: vibrant, rich, bold, deep, vivid, intense, pure, electric) Tj
ET
endstream

endobj
673 0 obj
<< /Length 3622 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (- **Low Saturation**: These adjectives imply a muted or washed-out appearance, often ) Tj
1 0 0 1 50 728 Tm (making the color appear closer to) Tj
1 0 0 1 50 714 Tm (  grayscale.) Tj
1 0 0 1 50 700 Tm (    - Keywords: dull, muted, washed-out, faded, soft, pale, subdued, ) Tj
1 0 0 1 50 686 Tm (pastel) Tj
1 0 0 1 50 672 Tm (- **Very Low Saturation**: For colors that are very desaturated, nearing grayscale.) Tj
1 0 0 1 50 658 Tm (    - Keywords: drab, grayed, washed-out, faded, subdued) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (---) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (- **Very High Brightness**: Extremely bright colors, often implying high lightness or ) Tj
1 0 0 1 50 588 Tm (near-whiteness.) Tj
1 0 0 1 50 574 Tm (    - Keywords: blinding, radiant, glowing, white, light-filled) Tj
1 0 0 1 50 560 Tm (- **High Brightness**: Bright colors, often indicating a lighter shade or close to white.) Tj
1 0 0 1 50 546 Tm (    - Keywords: bright, light, pale, glowing, luminous, brilliant, clear, ) Tj
1 0 0 1 50 532 Tm (radiant) Tj
1 0 0 1 50 518 Tm (- **Low Brightness**: These terms describe darker or dimmer shades, closer to black.) Tj
1 0 0 1 50 504 Tm (    - Keywords: dim, dark, shadowy, faint, gloomy, subdued, deep, midnight) Tj
1 0 0 1 50 490 Tm (- **Very Low Brightness**: Colors that are nearly black or very dark.) Tj
1 0 0 1 50 476 Tm (    - Keywords: pitch-dark, black, shadowed, deep, ink-like) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (---) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (- **Very High Temperature \(Very Warm\)**: Intense warm colors, strongly leaning toward red,) Tj
1 0 0 1 50 406 Tm ( orange, or intense yellow.) Tj
1 0 0 1 50 392 Tm (    - Keywords: fiery, lava-like, burning, blazing) Tj
1 0 0 1 50 378 Tm (- **High Temperature \(Warm Colors\)**: Warmer colors suggest a shift towards red or yellow ) Tj
1 0 0 1 50 364 Tm (tones, giving the color a) Tj
1 0 0 1 50 350 Tm (  warmer feel.) Tj
1 0 0 1 50 336 Tm (    - Keywords: warm, hot, fiery, sunny, toasty, scorching, amber, reddish) Tj
1 0 0 1 50 322 Tm (- **Low Temperature \(Cool Colors\)**: Cooler colors involve blue or green tones, giving the) Tj
1 0 0 1 50 308 Tm ( color a cooler or icy) Tj
1 0 0 1 50 294 Tm (  appearance.) Tj
1 0 0 1 50 280 Tm (    - Keywords: cool, cold, chilly, icy, frosty, crisp, bluish, aqua) Tj
1 0 0 1 50 266 Tm (- **Very Low Temperature \(Very Cool\)**: Extremely cool tones, verging on cold, icy blues ) Tj
1 0 0 1 50 252 Tm (or greens.) Tj
1 0 0 1 50 238 Tm (    - Keywords: icy, arctic, frigid, wintry, glacial) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (---) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (- **Very High Opacity**: Extremely solid or dense colors.) Tj
1 0 0 1 50 168 Tm (    - Keywords: impenetrable, opaque, thick) Tj
1 0 0 1 50 154 Tm (- **High Opacity**: Describes solid colors without transparency.) Tj
1 0 0 1 50 140 Tm (    - Keywords: opaque, solid, dense, thick, cloudy, impenetrable, strong) Tj
1 0 0 1 50 126 Tm (- **Low Opacity**: Indicates transparency or translucency, where the background may show ) Tj
1 0 0 1 50 112 Tm (through.) Tj
1 0 0 1 50 98 Tm (    - Keywords: transparent, translucent, sheer, see-through, misty, delicate,) Tj
1 0 0 1 50 84 Tm ( airy) Tj
1 0 0 1 50 70 Tm (- **Very Low Opacity**: Highly transparent or barely visible colors.) Tj
1 0 0 1 50 56 Tm (    - Keywords: ethereal, ghostly, barely-there, translucent) Tj
ET
endstream

endobj
674 0 obj
<< /Length 3065 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (## Related Projects) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (- [ovos-number-parser]\(https://github.com/OpenVoiceOS/ovos-number-parser\) - for handling ) Tj
1 0 0 1 50 672 Tm (numbers) Tj
1 0 0 1 50 658 Tm (- [ovos-date-parser]\(https://github.com/OpenVoiceOS/ovos-date-parser\) - for handling dates) Tj
1 0 0 1 50 644 Tm ( and times) Tj
1 0 0 1 50 630 Tm (- [ovos-lang-parser]\(https://github.com/OVOSHatchery/ovos-lang-parser\) - for handling ) Tj
1 0 0 1 50 616 Tm (languages) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (# docs/900-bus_client.md) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (# MessageBus Client) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (The [OVOS MessageBus Client]\(https://github.com/OpenVoiceOS/ovos-bus-client\) is a Python ) Tj
1 0 0 1 50 504 Tm (module providing a simple interface for the OVOS MessageBus. It can be used to connect to ) Tj
1 0 0 1 50 490 Tm (OVOS, send messages, and react to messages sent by the OVOS system.) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (The module is available through [PyPI.org]\(https://pypi.org/project/ovos-bus-client\) or ) Tj
1 0 0 1 50 448 Tm (directly [on Github]\(https://github.com/OpenVoiceOS/ovos-bus-client\).) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (#### MessageBusClient\\\(\\\)) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (The `MessageBusClient\(\)` object can be setup to connect to any host and port as well as ) Tj
1 0 0 1 50 378 Tm (any endpoint on that host. this makes it quite versatile and will work on the main bus as ) Tj
1 0 0 1 50 364 Tm (well as on a gui bus. ) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (If no arguments are provided it will try to connect to a local instance of OVOS on the ) Tj
1 0 0 1 50 322 Tm (default endpoint and port.) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (> ? in skills and plugins `self.bus` provides a MessageBusClient connections out of the ) Tj
1 0 0 1 50 280 Tm (box, you don't usually need to initialize this yourself) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (#### Message\\\(\\\)) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (The `Message` object is a representation of the messagebus message, this will always ) Tj
1 0 0 1 50 210 Tm (contain a message type but can also contain data and context. Data is usually real ) Tj
1 0 0 1 50 196 Tm (information while the context typically contain information on where the message ) Tj
1 0 0 1 50 182 Tm (originated or who the intended recipient is.) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (```python) Tj
1 0 0 1 50 140 Tm (Message\('MESSAGE_TYPE', data={'meaning': 42}, context={'origin': 'A.Dent'}\)) Tj
1 0 0 1 50 126 Tm (```) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (### Sending a Message) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (In the following example we setup an instance of the MessageBusClient then emit a `speak` ) Tj
1 0 0 1 50 56 Tm (Message with a data payload. OVOS would consume this Message and speak "Hello World".) Tj
ET
endstream

endobj
675 0 obj
<< /Length 2651 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (```python) Tj
1 0 0 1 50 714 Tm (from ovos_bus_client import MessageBusClient, Message) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (print\('Setting up client to connect to a local mycroft instance'\)) Tj
1 0 0 1 50 672 Tm (client = MessageBusClient\(\)) Tj
1 0 0 1 50 658 Tm (client.run_in_thread\(\)) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (print\('Sending speak message...'\)) Tj
1 0 0 1 50 616 Tm (client.emit\(Message\('speak', data={'utterance': 'Hello World'}\)\)) Tj
1 0 0 1 50 602 Tm (```) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (### Listening for a Message) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (In the following example we setup an instance of the MessageBusClient. We then define a ) Tj
1 0 0 1 50 532 Tm (function `print_utterance` that prints the `utterance` from a Message. This is registered ) Tj
1 0 0 1 50 518 Tm (as a handler for the `speak` Message. Finally we call the `run_forever\(\)` method to keep ) Tj
1 0 0 1 50 504 Tm (the `client` running.) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (If this code had run before the example above, it would catch the `speak` Message we ) Tj
1 0 0 1 50 462 Tm (emitted and print: `OVOS said "Hello World"`) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (```python) Tj
1 0 0 1 50 420 Tm (from ovos_bus_client import MessageBusClient, Message) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (print\('Setting up client to connect to a local ovos instance'\)) Tj
1 0 0 1 50 378 Tm (client = MessageBusClient\(\)) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (def print_utterance\(message\):) Tj
1 0 0 1 50 336 Tm (    print\('OVOS said "{}"'.format\(message.data.get\('utterance'\)\)\)) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (print\('Registering handler for speak message...'\)) Tj
1 0 0 1 50 280 Tm (client.on\('speak', print_utterance\)) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (client.run_forever\(\)) Tj
1 0 0 1 50 238 Tm (```) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (# docs/910-quebra_frases.md) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (# Quebra Frases) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (The `quebra_frases` package provides essential text processing tools for tokenization, ) Tj
1 0 0 1 50 126 Tm (chunking, and token analysis. ) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (**No External Dependencies**: quebra_frases is designed to be lightweight and does not ) Tj
1 0 0 1 50 84 Tm (rely on external libraries other than regex for efficient text processing.) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (## Installation) Tj
ET
endstream

endobj
676 0 obj
<< /Length 2914 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (You can install the `quebra_frases` package using pip:) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (```bash) Tj
1 0 0 1 50 686 Tm (pip install quebra_frases) Tj
1 0 0 1 50 672 Tm (```) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (## Overview) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (The `quebra_frases` package includes several modules and functionalities:) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (- **Tokenization**: Text tokenization is the process of splitting text into meaningful ) Tj
1 0 0 1 50 574 Tm (units such as words, sentences, or paragraphs.) Tj
1 0 0 1 50 560 Tm (- **Chunking**: Text chunking involves dividing text into smaller chunks based on ) Tj
1 0 0 1 50 546 Tm (specified delimiters or patterns.) Tj
1 0 0 1 50 532 Tm (- **Token Analysis**: This package also provides methods to analyze tokens across multiple) Tj
1 0 0 1 50 518 Tm ( text samples, extracting common, uncommon, and exclusive tokens.) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (## Usage) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (### Tokenization) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (The `quebra_frases` package offers various tokenization methods:) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (- `word_tokenize\(input_string\)`: Tokenizes an input string into words.) Tj
1 0 0 1 50 392 Tm (- `sentence_tokenize\(input_string\)`: Splits an input string into sentences.) Tj
1 0 0 1 50 378 Tm (- `paragraph_tokenize\(input_string\)`: Divides an input string into paragraphs.) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (### Chunking) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (Chunking is performed using the following functions:) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (- `chunk\(text, delimiters\)`: Splits text into chunks based on specified delimiters.) Tj
1 0 0 1 50 280 Tm (- `get_common_chunks\(samples\)`: Extracts common chunks from a list of text samples.) Tj
1 0 0 1 50 266 Tm (- `get_uncommon_chunks\(samples\)`: Extracts uncommon chunks from text samples.) Tj
1 0 0 1 50 252 Tm (- `get_exclusive_chunks\(samples\)`: Extracts exclusive chunks that are unique to each text ) Tj
1 0 0 1 50 238 Tm (sample.) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (### Token Analysis) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (Token analysis functions are available for text sample comparison:) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (- `get_common_tokens\(samples\)`: Extracts tokens that are common across multiple text ) Tj
1 0 0 1 50 140 Tm (samples.) Tj
1 0 0 1 50 126 Tm (- `get_uncommon_tokens\(samples\)`: Extracts tokens that are uncommon across multiple text ) Tj
1 0 0 1 50 112 Tm (samples.) Tj
1 0 0 1 50 98 Tm (- `get_exclusive_tokens\(samples\)`: Extracts tokens that are exclusive to each individual ) Tj
1 0 0 1 50 84 Tm (text sample.) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (## Example Usage) Tj
ET
endstream

endobj
677 0 obj
<< /Length 3445 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (Tokenization) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (```python) Tj
1 0 0 1 50 686 Tm (import quebra_frases) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (sentence = "sometimes i develop stuff for mycroft, mycroft is FOSS!") Tj
1 0 0 1 50 644 Tm (print\(quebra_frases.word_tokenize\(sentence\)\)) Tj
1 0 0 1 50 630 Tm (# ['sometimes', 'i', 'develop', 'stuff', 'for', 'mycroft', ',', ) Tj
1 0 0 1 50 616 Tm (# 'mycroft', 'is', 'FOSS', '!']) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (print\(quebra_frases.span_indexed_word_tokenize\(sentence\)\)) Tj
1 0 0 1 50 574 Tm (# [\(0, 9, 'sometimes'\), \(10, 11, 'i'\), \(12, 19, 'develop'\), ) Tj
1 0 0 1 50 560 Tm (# \(20, 25, 'stuff'\), \(26, 29, 'for'\), \(30, 37, 'mycroft'\), ) Tj
1 0 0 1 50 546 Tm (# \(37, 38, ','\), \(39, 46, 'mycroft'\), \(47, 49, 'is'\), ) Tj
1 0 0 1 50 532 Tm (# \(50, 54, 'FOSS'\), \(54, 55, '!'\)]) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (print\(quebra_frases.sentence_tokenize\() Tj
1 0 0 1 50 490 Tm (    "Mr. Smith bought cheapsite.com for 1.5 million dollars, i.e. he paid a lot for it. ) Tj
1 0 0 1 50 476 Tm (Did he mind? Adam Jones Jr. thinks he didn't. In any case, this isn't true... Well, with a) Tj
1 0 0 1 50 462 Tm ( probability of .9 it isn't."\)\)) Tj
1 0 0 1 50 448 Tm (#['Mr. Smith bought cheapsite.com for 1.5 million dollars, i.e. he paid a lot for it.',) Tj
1 0 0 1 50 434 Tm (#'Did he mind?',) Tj
1 0 0 1 50 420 Tm (#"Adam Jones Jr. thinks he didn't.",) Tj
1 0 0 1 50 406 Tm (#"In any case, this isn't true...",) Tj
1 0 0 1 50 392 Tm (#"Well, with a probability of .9 it isn't."]) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (print\(quebra_frases.span_indexed_sentence_tokenize\() Tj
1 0 0 1 50 350 Tm (    "Mr. Smith bought cheapsite.com for 1.5 million dollars, i.e. he paid a lot for it. ) Tj
1 0 0 1 50 336 Tm (Did he mind? Adam Jones Jr. thinks he didn't. In any case, this isn't true... Well, with a) Tj
1 0 0 1 50 322 Tm ( probability of .9 it isn't."\)\)) Tj
1 0 0 1 50 308 Tm (#[\(0, 82, 'Mr. Smith bought cheapsite.com for 1.5 million dollars, i.e. he paid a lot for ) Tj
1 0 0 1 50 294 Tm (it.'\),) Tj
1 0 0 1 50 280 Tm (#\(83, 95, 'Did he mind?'\),) Tj
1 0 0 1 50 266 Tm (#\(96, 128, "Adam Jones Jr. thinks he didn't."\),) Tj
1 0 0 1 50 252 Tm (#\(129, 160, "In any case, this isn't true..."\),) Tj
1 0 0 1 50 238 Tm (#\(161, 201, "Well, with a probability of .9 it isn't."\)]) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (print\(quebra_frases.paragraph_tokenize\('This is a paragraph!\\n\\t\\nThis is another ') Tj
1 0 0 1 50 196 Tm (                                       'one.\\t\\n\\tUsing multiple lines\\t   \\n     ') Tj
1 0 0 1 50 182 Tm (                                       '\\n\\tparagraph 3 says goodbye'\)\)) Tj
1 0 0 1 50 168 Tm (#['This is a paragraph!\\n\\t\\n',) Tj
1 0 0 1 50 154 Tm (#'This is another one.\\t\\n\\tUsing multiple lines\\t   \\n     \\n',) Tj
1 0 0 1 50 140 Tm (#'\\tparagraph 3 says goodbye']) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (print\(quebra_frases.span_indexed_paragraph_tokenize\('This is a paragraph!\\n\\t\\nThis is ) Tj
1 0 0 1 50 98 Tm (another ') Tj
1 0 0 1 50 84 Tm (                                                    'one.\\t\\n\\tUsing multiple lines\\t   \\n) Tj
1 0 0 1 50 70 Tm (     ') Tj
1 0 0 1 50 56 Tm (                                                    '\\n\\tparagraph 3 says goodbye'\)\)) Tj
ET
endstream

endobj
678 0 obj
<< /Length 2653 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (#[\(0, 23, 'This is a paragraph!\\n\\t\\n'\),) Tj
1 0 0 1 50 728 Tm (#\(23, 77, 'This is another one.\\t\\n\\tUsing multiple lines\\t   \\n     \\n'\),) Tj
1 0 0 1 50 714 Tm (#\(77, 102, '\\tparagraph 3 says goodbye'\)]) Tj
1 0 0 1 50 700 Tm (```) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (chunking) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (```python) Tj
1 0 0 1 50 630 Tm (import quebra_frases) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (delimiters = ["OpenVoiceOS"]) Tj
1 0 0 1 50 588 Tm (sentence = "sometimes i develop stuff for OpenVoiceOS, OpenVoiceOS is FOSS!") Tj
1 0 0 1 50 574 Tm (print\(quebra_frases.chunk\(sentence, delimiters\)\)) Tj
1 0 0 1 50 560 Tm (# ['sometimes i develop stuff for', 'OpenVoiceOS', ',', 'OpenVoiceOS', 'is FOSS!']) Tj
1 0 0 1 50 546 Tm (```) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (token analysis) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (```python) Tj
1 0 0 1 50 476 Tm (import quebra_frases) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (samples = ["tell me what do you dream about",) Tj
1 0 0 1 50 434 Tm (           "tell me what did you dream about",) Tj
1 0 0 1 50 420 Tm (           "tell me what are your dreams about",) Tj
1 0 0 1 50 406 Tm (           "tell me what were your dreams about"]) Tj
1 0 0 1 50 392 Tm (print\(quebra_frases.get_common_chunks\(samples\)\)) Tj
1 0 0 1 50 378 Tm (# {'tell me what', 'about'}) Tj
1 0 0 1 50 364 Tm (print\(quebra_frases.get_uncommon_chunks\(samples\)\)) Tj
1 0 0 1 50 350 Tm (# {'do you dream', 'did you dream', 'are your dreams', 'were your dreams'}) Tj
1 0 0 1 50 336 Tm (print\(quebra_frases.get_exclusive_chunks\(samples\)\)) Tj
1 0 0 1 50 322 Tm (# {'do', 'did', 'are', 'were'}) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (samples = ["what is the speed of light",) Tj
1 0 0 1 50 280 Tm (           "what is the maximum speed of a firetruck",) Tj
1 0 0 1 50 266 Tm (           "why are fire trucks red"]) Tj
1 0 0 1 50 252 Tm (print\(quebra_frases.get_exclusive_chunks\(samples\)\)) Tj
1 0 0 1 50 238 Tm (# {'light', 'maximum', 'a firetruck', 'why are fire trucks red'}\)) Tj
1 0 0 1 50 224 Tm (print\(quebra_frases.get_exclusive_chunks\(samples, squash=False\)\)) Tj
1 0 0 1 50 210 Tm (#[['light'],) Tj
1 0 0 1 50 196 Tm (#['maximum', 'a firetruck'],) Tj
1 0 0 1 50 182 Tm (#['why are fire trucks red']]\)) Tj
1 0 0 1 50 168 Tm (```) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (# docs/920-padacioso.md) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (# Padacioso) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (*A lightweight, dead-simple intent parser*) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
679 0 obj
<< /Length 2572 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (Built on top of [simplematch]\(https://github.com/tfeldmann/simplematch\), inspired by ) Tj
1 0 0 1 50 728 Tm ([Padaos]\(https://github.com/MycroftAI/padaos\)) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (## Example) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (```python) Tj
1 0 0 1 50 658 Tm (from padacioso import IntentContainer) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (container = IntentContainer\(\)) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (## samples) Tj
1 0 0 1 50 588 Tm (container.add_intent\('hello', ['hello', 'hi', 'how are you', "what's up"]\)) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (## "optionally" syntax) Tj
1 0 0 1 50 546 Tm (container.add_intent\('hello world', ["hello [world]"]\)) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (## "one_of" syntax) Tj
1 0 0 1 50 504 Tm (container.add_intent\('greeting', ["\(hi|hey|hello\)"]\)) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (## entity extraction) Tj
1 0 0 1 50 462 Tm (container.add_intent\('buy', [) Tj
1 0 0 1 50 448 Tm (    'buy {item}', 'purchase {item}', 'get {item}', 'get {item} for me') Tj
1 0 0 1 50 434 Tm (]\)) Tj
1 0 0 1 50 420 Tm (container.add_intent\('search', [) Tj
1 0 0 1 50 406 Tm (    'search for {query} on {engine}', 'using {engine} \(search|look\) for {query}',) Tj
1 0 0 1 50 392 Tm (    'find {query} \(with|using\) {engine}') Tj
1 0 0 1 50 378 Tm (]\)) Tj
1 0 0 1 50 364 Tm (container.add_entity\('engine', ['abc', 'xyz']\)) Tj
1 0 0 1 50 350 Tm (container.calc_intent\('find cats using xyz'\)) Tj
1 0 0 1 50 336 Tm (# {'conf': 1.0, 'name': 'search', 'entities': {'query': 'cats', 'engine': 'xyz'}}) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (## wildcards syntax) Tj
1 0 0 1 50 294 Tm (container.add_intent\('say', ["say *"]\)) Tj
1 0 0 1 50 280 Tm (container.calc_intent\('say something, whatever'\)) Tj
1 0 0 1 50 266 Tm (# {'conf': 0.85, 'entities': {}, 'name': 'test'}) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (## typed entities syntax) Tj
1 0 0 1 50 224 Tm (container.add_intent\('pick_number', ['* number {number:int}']\)) Tj
1 0 0 1 50 210 Tm (container.calc_intent\('i want number 3'\)) Tj
1 0 0 1 50 196 Tm (# {'conf': 0.85, 'entities': {'number': 3}, 'name': 'pick_number'}\)) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (```) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (# docs/99-architecture-overview.md) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (# Architecture Overview) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (![]\(img/Full%20flow.jpeg\)) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
680 0 obj
<< /Length 2610 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (# docs/990-eggscript.md) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (# Eggscript) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (Eggscript is a markup language that can be "compiled" into a valid OVOS Skill) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (> **EXPERIMENTAL** This is an experimental feature) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (It is intended as an easy way for user to create simple skills, while offering an easy ) Tj
1 0 0 1 50 602 Tm (transition to regular skills) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (It also helps getting a lot of the boilerplate done for you when getting started) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (You can find a developer preview of eggscript in ) Tj
1 0 0 1 50 532 Tm ([github]\(https://github.com/OpenVoiceOS/eggscript\)) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (## Crash Course) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (Example files written in eggscript) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (hello.eggscript) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (        // this is a comment) Tj
1 0 0 1 50 392 Tm (        // all comments and blank lines are ignored) Tj
1 0 0 1 50 378 Tm (        // special interperter variables can be set with @var syntax) Tj
1 0 0 1 50 364 Tm (        // - @name -> skill name) Tj
1 0 0 1 50 350 Tm (        // - @author -> skill author) Tj
1 0 0 1 50 336 Tm (        // - @email -> author contact) Tj
1 0 0 1 50 322 Tm (        // - @license -> skill license) Tj
1 0 0 1 50 308 Tm (        // - @interpreter -> supported interperter, eg, cli) Tj
1 0 0 1 50 294 Tm (        // - @compiler -> supported compiler, eg, mycroft skill) Tj
1 0 0 1 50 280 Tm (        ) Tj
1 0 0 1 50 266 Tm (        @author jarbasai) Tj
1 0 0 1 50 252 Tm (        @email jarbasai@mailfence.com) Tj
1 0 0 1 50 238 Tm (        @license MIT) Tj
1 0 0 1 50 224 Tm (        @name hello world) Tj
1 0 0 1 50 210 Tm (        @url https://github.com/author/repo) Tj
1 0 0 1 50 196 Tm (        @version 0.1.0) Tj
1 0 0 1 50 182 Tm (        ) Tj
1 0 0 1 50 168 Tm (        // this script can be used standalone in the cli) Tj
1 0 0 1 50 154 Tm (        @interpreter cli) Tj
1 0 0 1 50 140 Tm (        // a standalone python file can be generated) Tj
1 0 0 1 50 126 Tm (        @compiler cli) Tj
1 0 0 1 50 112 Tm (        // a mycroft skill can be generated) Tj
1 0 0 1 50 98 Tm (        @compiler mycroft) Tj
1 0 0 1 50 84 Tm (        ) Tj
1 0 0 1 50 70 Tm (        // intent definition) Tj
1 0 0 1 50 56 Tm (        # hello world) Tj
ET
endstream

endobj
681 0 obj
<< /Length 2640 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (        + hello world) Tj
1 0 0 1 50 728 Tm (        - hello world) Tj
1 0 0 1 50 714 Tm (        ) Tj
1 0 0 1 50 700 Tm (        // you can define python code, executed after TTS) Tj
1 0 0 1 50 686 Tm (        ```) Tj
1 0 0 1 50 672 Tm (        hello = "world") Tj
1 0 0 1 50 658 Tm (        if hello == "world":) Tj
1 0 0 1 50 644 Tm (            print\("python code!"\)) Tj
1 0 0 1 50 630 Tm (        ```) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (dialogs.eggscript) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (        // this is a comment) Tj
1 0 0 1 50 532 Tm (        // all comments and blank lines are ignored) Tj
1 0 0 1 50 518 Tm (        ) Tj
1 0 0 1 50 504 Tm (        // text after # is the intent name) Tj
1 0 0 1 50 490 Tm (        # hello world) Tj
1 0 0 1 50 476 Tm (        // text after + is the user utterance) Tj
1 0 0 1 50 462 Tm (        + hello world) Tj
1 0 0 1 50 448 Tm (        // text after - is mycroft's response) Tj
1 0 0 1 50 434 Tm (        - hello world) Tj
1 0 0 1 50 420 Tm (        ) Tj
1 0 0 1 50 406 Tm (        ) Tj
1 0 0 1 50 392 Tm (        # weather in location) Tj
1 0 0 1 50 378 Tm (        // you can capture variables and use them using {var} syntax) Tj
1 0 0 1 50 364 Tm (        + how is the weather in {location}) Tj
1 0 0 1 50 350 Tm (        - how am i supposed to know the weather in {location}) Tj
1 0 0 1 50 336 Tm (        ) Tj
1 0 0 1 50 322 Tm (        ) Tj
1 0 0 1 50 308 Tm (        # weather) Tj
1 0 0 1 50 294 Tm (        // this will create a intent file with the 3 + utterances) Tj
1 0 0 1 50 280 Tm (        + what is the weather like) Tj
1 0 0 1 50 266 Tm (        + how is the weather) Tj
1 0 0 1 50 252 Tm (        + how does it look outside) Tj
1 0 0 1 50 238 Tm (        // this will create a dialog file with the 2 - utterances) Tj
1 0 0 1 50 224 Tm (        - i do not know how to check the weather) Tj
1 0 0 1 50 210 Tm (        - stick your head ouf of the window and check for yourself) Tj
1 0 0 1 50 196 Tm (        ) Tj
1 0 0 1 50 182 Tm (        ) Tj
1 0 0 1 50 168 Tm (        # count to 10) Tj
1 0 0 1 50 154 Tm (        + count to 10) Tj
1 0 0 1 50 140 Tm (        // if ident level matches its an alternate dialog) Tj
1 0 0 1 50 126 Tm (        - i will only count to 5) Tj
1 0 0 1 50 112 Tm (        - i only know how to count to 5) Tj
1 0 0 1 50 98 Tm (          // use tab for identation) Tj
1 0 0 1 50 84 Tm (          // each ident level defines a new utterance to be spoken) Tj
1 0 0 1 50 70 Tm (              - 1) Tj
1 0 0 1 50 56 Tm (                  - 2) Tj
ET
endstream

endobj
682 0 obj
<< /Length 2283 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (                      - 3) Tj
1 0 0 1 50 728 Tm (                          - 4) Tj
1 0 0 1 50 714 Tm (                              - 5) Tj
1 0 0 1 50 700 Tm (        ) Tj
1 0 0 1 50 686 Tm (        ) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (layers.eggscript) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (        // this is a comment) Tj
1 0 0 1 50 602 Tm (        // all comments and blank lines are ignored) Tj
1 0 0 1 50 588 Tm (        // this sample scripts show intent layers usage) Tj
1 0 0 1 50 574 Tm (        ) Tj
1 0 0 1 50 560 Tm (        ) Tj
1 0 0 1 50 546 Tm (        // the number of # in intent definition determines an intent layer) Tj
1 0 0 1 50 532 Tm (        # tell me about) Tj
1 0 0 1 50 518 Tm (        + tell me about {thing}) Tj
1 0 0 1 50 504 Tm (        - {thing} exists) Tj
1 0 0 1 50 490 Tm (        ) Tj
1 0 0 1 50 476 Tm (        // N times + will enable layer N) Tj
1 0 0 1 50 462 Tm (        // to enable layer 2) Tj
1 0 0 1 50 448 Tm (        ++) Tj
1 0 0 1 50 434 Tm (        ) Tj
1 0 0 1 50 420 Tm (        ) Tj
1 0 0 1 50 406 Tm (        // use N times # for layer N) Tj
1 0 0 1 50 392 Tm (        // this intent is in layer 2, enabled by previous intent) Tj
1 0 0 1 50 378 Tm (        ## tell me more) Tj
1 0 0 1 50 364 Tm (        + tell me more) Tj
1 0 0 1 50 350 Tm (        + continue) Tj
1 0 0 1 50 336 Tm (        - i do not know more) Tj
1 0 0 1 50 322 Tm (        ) Tj
1 0 0 1 50 308 Tm (        // N times - will disable layer N) Tj
1 0 0 1 50 294 Tm (        // to disable layer 2) Tj
1 0 0 1 50 280 Tm (        --) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (## Interpreters) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (Can run a subset of eggscript directly, enough to test simple skills in the terminal) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (```python) Tj
1 0 0 1 50 140 Tm (from eggscript import CliInterpreter) Tj
1 0 0 1 50 126 Tm (from os.path import dirname) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (c = CliInterpreter\(\)) Tj
1 0 0 1 50 84 Tm (c.load_eggscript_file\(f"{dirname\(__file__\)}/dialogs.eggscript"\)) Tj
1 0 0 1 50 70 Tm (c.run\(\)) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
683 0 obj
<< /Length 2419 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (```) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (## Compilers) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (```python) Tj
1 0 0 1 50 672 Tm (from eggscript import OVOSSkillCompiler) Tj
1 0 0 1 50 658 Tm (from os.path import dirname) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (c = OVOSSkillCompiler\(\)) Tj
1 0 0 1 50 616 Tm (c.load_eggscript_file\(f"{dirname\(__file__\)}/layers.eggscript"\)) Tj
1 0 0 1 50 602 Tm (c.export\("myskill"\)) Tj
1 0 0 1 50 588 Tm (```) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (You can now continue extending your exported skill to add more advanced functionality) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (# docs/999-ovos_bigscreen.md) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (# Plasma Bigscreen - OVOS Edition) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (**EXPERIMENTAL** - experimental repository) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (> **WARNING** - Not actively maintained, this fork is essentially a snapshot in time since) Tj
1 0 0 1 50 434 Tm ( Plasma Bigscreen dropped support for OVOS and moved to QT6) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (## Introduction) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (A big launcher giving you easy access to any installed apps and skills.) Tj
1 0 0 1 50 364 Tm (Controllable via voice or TV remote.) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (This project is using various open-source components like Plasma Bigscreen, OpenVoiceOS ) Tj
1 0 0 1 50 322 Tm (and libcec.) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (![ovos-bigscreen]\(https://github.com/OpenVoiceOS/ovos-plasma-) Tj
1 0 0 1 50 280 Tm (bigscreen/assets/33701864/afcc5e15-146b-4f38-be8d-0e5a56acaa55\)) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (This is a fork from https://invent.kde.org/plasma/plasma-bigscreen/) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (Changes:) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (- moves from Mycroft to OVOS ) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (- "mycroft" is no longer optional and it's integration is enabled by default) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (- Remove MycroftSkillInstaller \(not OVOS compliant\)) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (- Remove "Recent" section) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (- Remove generic "Applications" section) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (- Add "Media" section) Tj
ET
endstream

endobj
684 0 obj
<< /Length 2584 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (- Add "Network" section) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (- Add "Graphics" section) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (## Voice Control) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (Bigscreen supports OpenVoiceOS, a free and open-source voice assistant that can be run ) Tj
1 0 0 1 50 630 Tm (completely decentralized on your own server.) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (Download new apps \(aka skills\) for your Bigscreen or add your own ones for others to ) Tj
1 0 0 1 50 588 Tm (enjoy.) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (## Remote control your TV via CEC) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (CEC \(Consumer Electronics Control\) is a standard to control devices over HDMI.) Tj
1 0 0 1 50 518 Tm (Use your normal TV remote control, or a RC with built-in microphone for voice control and ) Tj
1 0 0 1 50 504 Tm (optional mouse simulation.) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (## Application Launcher) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (Bigscreen replaces your DE, to stop an application from showing up you can edit ) Tj
1 0 0 1 50 434 Tm (`/etc/xdg/applications-blacklistrc`) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (Adding new applications only requires a [.desktop ) Tj
1 0 0 1 50 392 Tm (file]\(https://specifications.freedesktop.org/desktop-entry-spec/desktop-entry-spec-) Tj
1 0 0 1 50 378 Tm (latest.html\)) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (see [plasma-bigscreen/bigscreen-image-settings]\(https://invent.kde.org/plasma-) Tj
1 0 0 1 50 336 Tm (bigscreen/bigscreen-image-settings\) for more settings you might want to tweak in a ) Tj
1 0 0 1 50 322 Tm (Bigscreen image) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (## Installing from source) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (```bash) Tj
1 0 0 1 50 252 Tm (mkdir build) Tj
1 0 0 1 50 238 Tm (cd build) Tj
1 0 0 1 50 224 Tm (cmake .. -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release   -DKDE_INSTALL_LIBDIR=lib) Tj
1 0 0 1 50 210 Tm ( -DKDE_INSTALL_USE_QT_SYS_PATHS=ON -DCMAKE_CXX_COMPILER=clazy) Tj
1 0 0 1 50 196 Tm (make) Tj
1 0 0 1 50 182 Tm (sudo make install) Tj
1 0 0 1 50 168 Tm (```) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (## Running) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (To start the Bigscreen homescreen in a window, run:) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (```) Tj
1 0 0 1 50 70 Tm (QT_QPA_PLATFORM=wayland dbus-run-session kwin_wayland "plasmashell -p ) Tj
1 0 0 1 50 56 Tm (org.kde.plasma.mycroft.bigscreen") Tj
ET
endstream

endobj
685 0 obj
<< /Length 3126 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (```) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (you can also select [plasma-bigscreen-x11]\(bin/plasma-bigscreen-x11\) on your login screen ) Tj
1 0 0 1 50 700 Tm (as DE) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (## Related repositories) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (- Image Settings for Bigscreen https://invent.kde.org/plasma-bigscreen/bigscreen-image-) Tj
1 0 0 1 50 630 Tm (settings) Tj
1 0 0 1 50 616 Tm (- Plasma Remote Controllers https://invent.kde.org/plasma-bigscreen/plasma-) Tj
1 0 0 1 50 602 Tm (remotecontrollers) Tj
1 0 0 1 50 588 Tm (- ovos-gui-app - https://github.com/OpenVoiceOS/mycroft-gui-qt5) Tj
1 0 0 1 50 574 Tm (- bigscreen gui extension https://github.com/OpenVoiceOS/ovos-gui-plugin-bigscreen) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (# docs/adapt_pipeline.md) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (# Adapt Pipeline Plugin) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (The **Adapt Pipeline Plugin** brings rule-based intent parsing to the **OVOS intent ) Tj
1 0 0 1 50 476 Tm (pipeline** using the Adapt parser. It supports `high`, `medium`, and `low` confidence ) Tj
1 0 0 1 50 462 Tm (intent detection and integrates seamlessly with OVOSs multi-stage pipeline.) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (While Adapt is powerful for **explicit, deterministic matching**, it has notable ) Tj
1 0 0 1 50 420 Tm (limitations in multilingual environments and complex skill ecosystems. **In general, Adapt) Tj
1 0 0 1 50 406 Tm ( is not recommended for broad deployments**it is best suited for **personal skills** ) Tj
1 0 0 1 50 392 Tm (where you control the full context and can craft precise intent rules.) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (---) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (## Pipeline Stages) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (This plugin registers three pipelines:) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (| Pipeline ID    | Description                          | Recommended Use        |) Tj
1 0 0 1 50 266 Tm (| -------------- | ------------------------------------ | ---------------------- |) Tj
1 0 0 1 50 252 Tm (| `adapt_high`   | High-confidence Adapt intent matches | ? Personal skills only |) Tj
1 0 0 1 50 238 Tm (| `adapt_medium` | Medium-confidence Adapt matches      | ?? Use with caution    |) Tj
1 0 0 1 50 224 Tm (| `adapt_low`    | Low-confidence Adapt matches         | ? Not recommended     |) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (Each pipeline is scored by Adapt and routed according to configured confidence thresholds.) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (---) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (## Limitations) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (Adapt requires **hand-crafted rules** for every intent:) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (* ? **Poor scalability**  hard to manage with many skills) Tj
1 0 0 1 50 70 Tm (* ? **Difficult to localize**  rules rely on exact words and phrases) Tj
1 0 0 1 50 56 Tm (* ? **Prone to conflicts**  multiple skills defining overlapping rules can cause ) Tj
ET
endstream

endobj
686 0 obj
<< /Length 2482 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (collisions or missed matches) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (As your skill library grows or if you operate in a multilingual setup, these problems ) Tj
1 0 0 1 50 700 Tm (increase.) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (**Recommendation:**) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (> ? Use Adapt **only** in personal projects or controlled environments where you can fully) Tj
1 0 0 1 50 630 Tm ( define and test every possible phrase.) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (---) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (## Configuration) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (Adapt confidence thresholds can be set in `ovos.conf`:) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (```json) Tj
1 0 0 1 50 504 Tm ("intents": {) Tj
1 0 0 1 50 490 Tm (  "adapt": {) Tj
1 0 0 1 50 476 Tm (    "conf_high": 0.65,) Tj
1 0 0 1 50 462 Tm (    "conf_med": 0.45,) Tj
1 0 0 1 50 448 Tm (    "conf_low": 0.25) Tj
1 0 0 1 50 434 Tm (  }) Tj
1 0 0 1 50 420 Tm (}) Tj
1 0 0 1 50 406 Tm (```) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (* These thresholds control routing into `adapt_high`, `adapt_medium`, and `adapt_low`.) Tj
1 0 0 1 50 364 Tm (* The plugin is included by default in OVOS.) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (---) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (## When to Use Adapt in OVOS) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (Use this plugin **only when**:) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (* You are building **a personal or private skill**.) Tj
1 0 0 1 50 238 Tm (* You need **strict, predictable matching** \(e.g., command-and-control\).) Tj
1 0 0 1 50 224 Tm (* You are working in **a single language** and **control all skill interactions**.) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (Avoid using Adapt for public-facing or general-purpose assistant skills. Modern ) Tj
1 0 0 1 50 182 Tm (alternatives like **Padatious**, **LLM-based parsers**, or **neural fallback models** are ) Tj
1 0 0 1 50 168 Tm (more scalable and adaptable.) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (# docs/audio_transformers.md) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (# Audio Transformers) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (**Audio Transformers** in OpenVoiceOS \(OVOS\) are plugins designed to process raw audio ) Tj
1 0 0 1 50 56 Tm (input before it reaches the Speech-to-Text \(STT\) engine. They enable functionalities such ) Tj
ET
endstream

endobj
687 0 obj
<< /Length 2506 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (as noise reduction, language detection, and data transmission over sound, thereby ) Tj
1 0 0 1 50 728 Tm (enhancing the accuracy and versatility of voice interactions.) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (---) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (## Processing Flow) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (The typical audio processing pipeline in OVOS is as follows:) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (1. **Audio Capture**: Microphone captures raw audio input.) Tj
1 0 0 1 50 602 Tm (2. **Audio Transformation**: Audio Transformers preprocess the raw audio.) Tj
1 0 0 1 50 588 Tm (3. **Speech-to-Text \(STT\)**: Transformed audio is converted into text.) Tj
1 0 0 1 50 574 Tm (4. **Intent Recognition**: Text is analyzed to determine user intent.) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (Audio Transformers operate in step 2, allowing for enhancements and modifications to the ) Tj
1 0 0 1 50 532 Tm (audio signal before transcription.) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (---) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (## Configuration) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (To enable Audio Transformers, add them to your `mycroft.conf` under the ) Tj
1 0 0 1 50 434 Tm (`audio_transformers` section:) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (```json) Tj
1 0 0 1 50 392 Tm ("audio_transformers": {) Tj
1 0 0 1 50 378 Tm (  "plugin_name": {) Tj
1 0 0 1 50 364 Tm (    // plugin-specific configuration) Tj
1 0 0 1 50 350 Tm (  }) Tj
1 0 0 1 50 336 Tm (}) Tj
1 0 0 1 50 322 Tm (```) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (Replace `"plugin_name"` with the identifier of the desired plugin and provide any ) Tj
1 0 0 1 50 280 Tm (necessary configuration parameters.) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (---) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (## Available Audio Transformer Plugins) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (### **OVOS GGWave Audio Transformer**) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (* **Purpose**: Enables data transmission over sound using audio QR codes.) Tj
1 0 0 1 50 154 Tm (* **Features**:) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (    * Transmit data such as Wi-Fi credentials, URLs, or commands via sound.) Tj
1 0 0 1 50 112 Tm (    * Integrates with the `ovos-skill-ggwave` for voice-controlled activation.) Tj
1 0 0 1 50 98 Tm (  ) Tj
1 0 0 1 50 84 Tm (* **Installation**:) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (```bash) Tj
ET
endstream

endobj
688 0 obj
<< /Length 2476 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (  pip install ovos-audio-transformer-plugin-ggwave) Tj
1 0 0 1 50 728 Tm (```) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (* **Configuration Example**:) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (```json) Tj
1 0 0 1 50 658 Tm (  "audio_transformers": {) Tj
1 0 0 1 50 644 Tm (    "ovos-audio-transformer-plugin-ggwave": {) Tj
1 0 0 1 50 630 Tm (      "start_enabled": true) Tj
1 0 0 1 50 616 Tm (    }) Tj
1 0 0 1 50 602 Tm (  }) Tj
1 0 0 1 50 588 Tm (```) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (For more information, visit the [GitHub repository]\(https://github.com/OpenVoiceOS/ovos-) Tj
1 0 0 1 50 546 Tm (audio-transformer-plugin-ggwave\).) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (### **OVOS SpeechBrain Language Detection Transformer**) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (* **Purpose**: Automatically detects the language of spoken input to route it to the ) Tj
1 0 0 1 50 476 Tm (appropriate STT engine.) Tj
1 0 0 1 50 462 Tm (* **Features**:) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (    * Utilizes SpeechBrain models for language identification.) Tj
1 0 0 1 50 420 Tm (    * Enhances multilingual support by dynamically selecting the correct language model.) Tj
1 0 0 1 50 406 Tm (  ) Tj
1 0 0 1 50 392 Tm (* **Installation**:) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (```bash) Tj
1 0 0 1 50 350 Tm (  pip install ovos-audio-transformer-plugin-speechbrain-langdetect) Tj
1 0 0 1 50 336 Tm (```) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (* **Configuration Example**:) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (```json) Tj
1 0 0 1 50 266 Tm (  "audio_transformers": {) Tj
1 0 0 1 50 252 Tm (    "ovos-audio-transformer-plugin-speechbrain-langdetect": {}) Tj
1 0 0 1 50 238 Tm (  }) Tj
1 0 0 1 50 224 Tm (```) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (For more information, visit the [GitHub repository]\(https://github.com/OpenVoiceOS/ovos-) Tj
1 0 0 1 50 182 Tm (audio-transformer-plugin-speechbrain-langdetect\).) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (---) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (## Creating Custom Audio Transformers) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (To develop your own Audio Transformer plugin for OVOS, implement a class that extends the ) Tj
1 0 0 1 50 84 Tm (base `AudioTransformer` template. ) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (This class allows you to process raw audio chunks at various stages before the Speech-to-) Tj
ET
endstream

endobj
689 0 obj
<< /Length 2827 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (Text \(STT\) engine processes the audio.) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (### Base Class Overview) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (Your custom transformer should subclass:) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (```python) Tj
1 0 0 1 50 644 Tm (from ovos_plugin_manager.templates.transformers import AudioTransformer) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (class MyCustomAudioTransformer\(AudioTransformer\):) Tj
1 0 0 1 50 602 Tm (    def __init__\(self, config=None\):) Tj
1 0 0 1 50 588 Tm (        super\(\).__init__\("my-custom-audio-transformer", priority=10, config=config\)) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (    def on_audio\(self, audio_data\):) Tj
1 0 0 1 50 546 Tm (        # Process non-speech audio chunks \(e.g., noise\)) Tj
1 0 0 1 50 532 Tm (        return audio_data) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (    def on_hotword\(self, audio_data\):) Tj
1 0 0 1 50 490 Tm (        # Process full hotword/wakeword audio chunks) Tj
1 0 0 1 50 476 Tm (        return audio_data) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (    def on_speech\(self, audio_data\):) Tj
1 0 0 1 50 434 Tm (        # Process speech audio chunks during recording \(not full utterance\)) Tj
1 0 0 1 50 420 Tm (        return audio_data) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (    def on_speech_end\(self, audio_data\):) Tj
1 0 0 1 50 378 Tm (        # Process full speech utterance audio chunk) Tj
1 0 0 1 50 364 Tm (        return audio_data) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (    def transform\(self, audio_data\):) Tj
1 0 0 1 50 322 Tm (        # Optionally perform final transformation before STT stage) Tj
1 0 0 1 50 308 Tm (        # Return tuple \(transformed_audio_data, optional_message_context\)) Tj
1 0 0 1 50 294 Tm (        return audio_data, {}) Tj
1 0 0 1 50 280 Tm (```) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (### Lifecycle & Methods) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (* **Initialization**: Override `initialize\(\)` for setup steps.) Tj
1 0 0 1 50 210 Tm (* **Audio Feed Handlers**:) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (      * `on_audio`: Handle background or non-speech chunks.) Tj
1 0 0 1 50 168 Tm (      * `on_hotword`: Handle wakeword/hotword chunks.) Tj
1 0 0 1 50 154 Tm (      * `on_speech`: Handle speech chunks during recording.) Tj
1 0 0 1 50 140 Tm (      * `on_speech_end`: Handle full utterance audio.) Tj
1 0 0 1 50 126 Tm (     ) Tj
1 0 0 1 50 112 Tm (* **Final Transformation**:) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (      * `transform`: Return the final processed audio and optionally a dictionary of ) Tj
1 0 0 1 50 70 Tm (additional metadata/context that will be passed along with the `recognize_loop:utterance` ) Tj
1 0 0 1 50 56 Tm (message.) Tj
ET
endstream

endobj
690 0 obj
<< /Length 2364 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (* **Reset**: The `reset\(\)` method clears internal audio buffers, called after STT ) Tj
1 0 0 1 50 714 Tm (completes.) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (### Plugin Registration) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (In your `setup.py`, register the plugin entry point:) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (```python) Tj
1 0 0 1 50 616 Tm (entry_points={) Tj
1 0 0 1 50 602 Tm (    'ovos.plugin.audio_transformer': [) Tj
1 0 0 1 50 588 Tm (        'my-custom-audio-transformer = my_module:MyCustomAudioTransformer') Tj
1 0 0 1 50 574 Tm (    ]) Tj
1 0 0 1 50 560 Tm (}) Tj
1 0 0 1 50 546 Tm (```) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (### Configuration Example) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (Add your transformer to `mycroft.conf`:) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (```json) Tj
1 0 0 1 50 448 Tm ("audio_transformers": {) Tj
1 0 0 1 50 434 Tm (  "my-custom-audio-transformer": {) Tj
1 0 0 1 50 420 Tm (    // plugin-specific config options here) Tj
1 0 0 1 50 406 Tm (  }) Tj
1 0 0 1 50 392 Tm (}) Tj
1 0 0 1 50 378 Tm (```) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (# docs/converse_pipeline.md) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (# Converse Pipeline) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (The **Converse Pipeline** in **OpenVoiceOS \(OVOS\)** manages active conversational contexts) Tj
1 0 0 1 50 252 Tm ( between the assistant and skills. It allows skills to keep handling user input across ) Tj
1 0 0 1 50 238 Tm (multiple turns, enabling more natural, stateful conversations.) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (---) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (## Purpose) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (The **Converse pipeline** enables **multi-turn conversations** by prioritizing which ) Tj
1 0 0 1 50 140 Tm (skills are given the opportunity to handle an utterance through their `converse\(\)` method ) Tj
1 0 0 1 50 126 Tm (before normal intent parsing occurs.) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (Key purposes include:) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (* **Preserve conversational context** across multiple turns.) Tj
1 0 0 1 50 56 Tm (* **Prioritize recently used skills** for more natural interactions.) Tj
ET
endstream

endobj
691 0 obj
<< /Length 2908 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (* **Enable stateful behavior**, such as follow-up questions or corrections.) Tj
1 0 0 1 50 728 Tm (* **Prevent unnecessary intent parsing** when a skill is already engaged.) Tj
1 0 0 1 50 714 Tm (* **Support skill-defined session control** via manual activation/deactivation.) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (This allows OVOS to act more like a true conversational assistant rather than a single-) Tj
1 0 0 1 50 672 Tm (turn command system.) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (---) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (## Active Skill List) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (A Skill is considered active if it has been called in the last 5 minutes.) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (Skills are called in order of when they were last active. For example, if a user spoke the) Tj
1 0 0 1 50 546 Tm ( following commands:) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (> Hey Mycroft, set a timer for 10 minutes) Tj
1 0 0 1 50 504 Tm (>) Tj
1 0 0 1 50 490 Tm (> Hey Mycroft, what's the weather) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (Then the utterance "what's the weather" would first be sent to the Timer Skill's ) Tj
1 0 0 1 50 448 Tm (`converse\(\)` method, then to the intent service for normal handling where the Weather ) Tj
1 0 0 1 50 434 Tm (Skill would be called.) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (As the Weather Skill was called it has now been added to the front of the Active Skills ) Tj
1 0 0 1 50 392 Tm (List. Hence, the next utterance received will be directed to:) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (1. `WeatherSkill.converse\(\)`) Tj
1 0 0 1 50 350 Tm (2. `TimerSkill.converse\(\)`) Tj
1 0 0 1 50 336 Tm (3. Normal intent parsing service) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (When does a skill become active?) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (1. **before** an intent is called the skill is **activated**) Tj
1 0 0 1 50 266 Tm (2. if a fallback **returns True** \(to consume the utterance\) the skill is **activated** ) Tj
1 0 0 1 50 252 Tm (right **after** the fallback) Tj
1 0 0 1 50 238 Tm (3. if converse **returns True** \(to consume the utterance\) the skill is **reactivated** ) Tj
1 0 0 1 50 224 Tm (right **after** converse) Tj
1 0 0 1 50 210 Tm (4. a skill can activate/deactivate itself at any time) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (---) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (## Pipeline Stages) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (This plugin registers a single pipeline:) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (| Pipeline ID | Description                  | Recommended Use) Tj
1 0 0 1 50 70 Tm (                                                            |) Tj
1 0 0 1 50 56 Tm (|-------------|------------------------------|--------------------------------------------) Tj
ET
endstream

endobj
692 0 obj
<< /Length 2585 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (--------------------------------|) Tj
1 0 0 1 50 728 Tm (| `converse`  | Continuous dialog for skills | Should always be present, do not remove ) Tj
1 0 0 1 50 714 Tm (unless you know what you are doing |) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (---) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (## How It Works) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (* When a user speaks, the pipeline checks if any skill is actively conversing.) Tj
1 0 0 1 50 602 Tm (* Active skills implement a `converse\(\)` method that determines if they want to handle the) Tj
1 0 0 1 50 588 Tm ( utterance.) Tj
1 0 0 1 50 574 Tm (* If no active skill accepts the input, the regular intent matching process continues.) Tj
1 0 0 1 50 560 Tm (* Skills can automatically deactivate after a timeout or based on custom logic.) Tj
1 0 0 1 50 546 Tm (* Only a limited number of skills can be active at any given time \(defaults configurable\).) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (---) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (## Skill Integration) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (Skills integrate with the converse pipeline by:) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (* Implementing a `converse\(\)` method that checks if the skill wants to handle an ) Tj
1 0 0 1 50 406 Tm (utterance.) Tj
1 0 0 1 50 392 Tm (* Returning `True` if the utterance was handled, `False` otherwise.) Tj
1 0 0 1 50 378 Tm (* Managing internal state to determine when to exit conversation mode.) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (This enables modular, stateful conversations without hardcoding turn-taking logic into the) Tj
1 0 0 1 50 336 Tm ( core assistant.) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (---) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (## Configuration) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (Customize the pipeline via `mycroft.conf`:) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (```json) Tj
1 0 0 1 50 210 Tm ("skills": {) Tj
1 0 0 1 50 196 Tm (  "converse": {) Tj
1 0 0 1 50 182 Tm (    "cross_activation": true,) Tj
1 0 0 1 50 168 Tm (    "converse_activation": "accept_all",) Tj
1 0 0 1 50 154 Tm (    "converse_mode": "accept_all",) Tj
1 0 0 1 50 140 Tm (    "converse_blacklist": [],) Tj
1 0 0 1 50 126 Tm (    "converse_whitelist": [],) Tj
1 0 0 1 50 112 Tm (    "max_activations": 3,) Tj
1 0 0 1 50 98 Tm (    "skill_activations": {) Tj
1 0 0 1 50 84 Tm (      "skill-example": 5) Tj
1 0 0 1 50 70 Tm (    },) Tj
1 0 0 1 50 56 Tm (    "timeout": 300,) Tj
ET
endstream

endobj
693 0 obj
<< /Length 2911 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (    "skill_timeouts": {) Tj
1 0 0 1 50 728 Tm (      "skill-example": 600) Tj
1 0 0 1 50 714 Tm (    },) Tj
1 0 0 1 50 700 Tm (    "max_skill_runtime": 10) Tj
1 0 0 1 50 686 Tm (  }) Tj
1 0 0 1 50 672 Tm (}) Tj
1 0 0 1 50 658 Tm (```) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (**Key Options**) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (| Config Key           | Description) Tj
1 0 0 1 50 588 Tm (                                                              |) Tj
1 0 0 1 50 574 Tm (| -------------------- | ) Tj
1 0 0 1 50 560 Tm (------------------------------------------------------------------------ |) Tj
1 0 0 1 50 546 Tm (| `cross_activation`   | Allow skills to activate/deactivate other skills during a ) Tj
1 0 0 1 50 532 Tm (conversation.  |) Tj
1 0 0 1 50 518 Tm (| `converse_mode`      | Global mode for allowing/disallowing skills from converse ) Tj
1 0 0 1 50 504 Tm (participation. |) Tj
1 0 0 1 50 490 Tm (| `converse_blacklist` | Skills that are not allowed to enter converse mode.) Tj
1 0 0 1 50 476 Tm (                      |) Tj
1 0 0 1 50 462 Tm (| `converse_whitelist` | Skills explicitly allowed to converse.) Tj
1 0 0 1 50 448 Tm (                                   |) Tj
1 0 0 1 50 434 Tm (| `max_activations`    | Default number of times a skill can consecutively handle turns.) Tj
1 0 0 1 50 420 Tm (          |) Tj
1 0 0 1 50 406 Tm (| `skill_activations`  | Per-skill override of `max_activations`.) Tj
1 0 0 1 50 392 Tm (                                 |) Tj
1 0 0 1 50 378 Tm (| `timeout`            | Time \(in seconds\) before an idle skill is removed from converse ) Tj
1 0 0 1 50 364 Tm (mode.    |) Tj
1 0 0 1 50 350 Tm (| `skill_timeouts`     | Per-skill override of `timeout`.) Tj
1 0 0 1 50 336 Tm (                                         |) Tj
1 0 0 1 50 322 Tm (| `max_skill_runtime`  | Maximum time \(in seconds\) to wait for a skills `converse\(\)` ) Tj
1 0 0 1 50 308 Tm (response.   |) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (---) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (## Converse Modes) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (| Mode         | Description) Tj
1 0 0 1 50 210 Tm (                                                                  |) Tj
1 0 0 1 50 196 Tm (| ------------ | ) Tj
1 0 0 1 50 182 Tm (---------------------------------------------------------------------------- |) Tj
1 0 0 1 50 168 Tm (| `accept_all` | All skills are allowed to use converse mode \(default\).) Tj
1 0 0 1 50 154 Tm (                       |) Tj
1 0 0 1 50 140 Tm (| `whitelist`  | Only skills explicitly listed in `converse_whitelist` can use converse ) Tj
1 0 0 1 50 126 Tm (mode. |) Tj
1 0 0 1 50 112 Tm (| `blacklist`  | All skills can use converse mode except those in `converse_blacklist`.) Tj
1 0 0 1 50 98 Tm (       |) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (---) Tj
ET
endstream

endobj
694 0 obj
<< /Length 3377 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (## Security & Performance) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (A malicious or badly designed skill using the converse method can potentially hijack the ) Tj
1 0 0 1 50 686 Tm (whole conversation loop and render the skills service unusable) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (Because skills can "hijack" the conversation loop indefinitely, misbehaving or malicious ) Tj
1 0 0 1 50 644 Tm (skills can degrade UX. Protections include:) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (* Timeouts for inactivity and maximum runtime.) Tj
1 0 0 1 50 602 Tm (* `max_activations` limits per skill.) Tj
1 0 0 1 50 588 Tm (* Blacklist/whitelist enforcement to restrict which skills can enter converse mode.) Tj
1 0 0 1 50 574 Tm (* `cross_activation` can be disabled to prevent skill-to-skill manipulation.) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (The concept of "converse priority" is under active development) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (```javascript) Tj
1 0 0 1 50 490 Tm ("skills": {) Tj
1 0 0 1 50 476 Tm (    // converse stage configuration) Tj
1 0 0 1 50 462 Tm (    "converse": {) Tj
1 0 0 1 50 448 Tm (        // the default number of seconds a skill remains active,) Tj
1 0 0 1 50 434 Tm (        // if the user does not interact with the skill in this timespan it) Tj
1 0 0 1 50 420 Tm (        // will be deactivated, default 5 minutes \(same as mycroft\)) Tj
1 0 0 1 50 406 Tm (        "timeout": 300,) Tj
1 0 0 1 50 392 Tm (        ) Tj
1 0 0 1 50 378 Tm (        // override of "skill_timeouts" per skill_id) Tj
1 0 0 1 50 364 Tm (        // you can configure specific skills to remain active longer) Tj
1 0 0 1 50 350 Tm (        "skill_timeouts": {},) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (        // conversational mode has 3 modes of operations:) Tj
1 0 0 1 50 308 Tm (        // - "accept_all"  # default mycroft-core behavior) Tj
1 0 0 1 50 294 Tm (        // - "whitelist"  # only call converse for skills in "converse_whitelist") Tj
1 0 0 1 50 280 Tm (        // - "blacklist"  # only call converse for skills NOT in "converse_blacklist") Tj
1 0 0 1 50 266 Tm (        "converse_mode": "accept_all",) Tj
1 0 0 1 50 252 Tm (        "converse_whitelist": [],) Tj
1 0 0 1 50 238 Tm (        "converse_blacklist": [],) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (        // converse activation has 4 modes of operations:) Tj
1 0 0 1 50 196 Tm (        // - "accept_all"  # default mycroft-core behavior, any skill can) Tj
1 0 0 1 50 182 Tm (        //                 # activate itself unconditionally) Tj
1 0 0 1 50 168 Tm (        // - "priority"  # skills can only activate themselves if no skill with) Tj
1 0 0 1 50 154 Tm (        //               # higher priority is active) Tj
1 0 0 1 50 140 Tm (        // - "whitelist"  # only skills in "converse_whitelist" can activate themselves) Tj
1 0 0 1 50 126 Tm (        // - "blacklist"  # only skills NOT in converse "converse_blacklist" can activate ) Tj
1 0 0 1 50 112 Tm (themselves) Tj
1 0 0 1 50 98 Tm (        // NOTE: this does not apply for regular skill activation, only to skill) Tj
1 0 0 1 50 84 Tm (        //       initiated activation requests, eg, self.make_active\(\)) Tj
1 0 0 1 50 70 Tm (        "converse_activation": "accept_all",) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
695 0 obj
<< /Length 2968 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (        // number of consecutive times a skill is allowed to activate itself) Tj
1 0 0 1 50 728 Tm (        // per minute, -1 for no limit \(default\), 0 to disable self-activation) Tj
1 0 0 1 50 714 Tm (        "max_activations": -1,) Tj
1 0 0 1 50 700 Tm (        ) Tj
1 0 0 1 50 686 Tm (        // override of "max_activations" per skill_id) Tj
1 0 0 1 50 672 Tm (        // you can configure specific skills to activate more/less often) Tj
1 0 0 1 50 658 Tm (        "skill_activations": {},) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (        // if false only skills can activate themselves) Tj
1 0 0 1 50 616 Tm (        // if true any skill can activate any other skill) Tj
1 0 0 1 50 602 Tm (        "cross_activation": true,) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (        // if false only skills can deactivate themselves) Tj
1 0 0 1 50 560 Tm (        // if true any skill can deactivate any other skill) Tj
1 0 0 1 50 546 Tm (        // NOTE: skill deactivation is not yet implemented) Tj
1 0 0 1 50 532 Tm (        "cross_deactivation": true,) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (        ) Tj
1 0 0 1 50 490 Tm (        // you can add skill_id: priority to override the developer defined) Tj
1 0 0 1 50 476 Tm (        // priority of those skills, ) Tj
1 0 0 1 50 462 Tm (        ) Tj
1 0 0 1 50 448 Tm (        // converse priority is work in progress and not yet exposed to skills) Tj
1 0 0 1 50 434 Tm (        // priority is assumed to be 50) Tj
1 0 0 1 50 420 Tm (        // the only current source for converse priorities is this setting) Tj
1 0 0 1 50 406 Tm (        "converse_priorities": {) Tj
1 0 0 1 50 392 Tm (           // "skill_id": 10) Tj
1 0 0 1 50 378 Tm (        }) Tj
1 0 0 1 50 364 Tm (    }) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (},) Tj
1 0 0 1 50 322 Tm (```) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (---) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (## Notes) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (* The plugin **does not enforce a fallback behavior** if no skill accepts the input.) Tj
1 0 0 1 50 224 Tm (* If no skill handles the utterance via converse, the pipeline falls back to normal intent) Tj
1 0 0 1 50 210 Tm ( matching or fallback skills.) Tj
1 0 0 1 50 196 Tm (* This mechanism is ideal for multi-turn conversations like dialogs, games, or assistant ) Tj
1 0 0 1 50 182 Tm (flows that require memory of previous input.) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (# docs/cq_pipeline.md) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (# Common Query Pipeline) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (The **Common Query Pipeline Plugin** in OVOS is a specialized pipeline component designed ) Tj
1 0 0 1 50 70 Tm (**exclusively for handling general knowledge questions**. It processes utterances that ) Tj
1 0 0 1 50 56 Tm (resemble questionstypically starting with interrogatives like *what*, *who*, *how*, ) Tj
ET
endstream

endobj
696 0 obj
<< /Length 3146 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (*when*, etc.and queries a set of registered general knowledge skills to find the most ) Tj
1 0 0 1 50 728 Tm (accurate factual answer.) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (Unlike conversational or chit-chat pipelines, this plugin focuses strictly on **fact-based) Tj
1 0 0 1 50 686 Tm ( question answering**. It does **not** generate answers or perform retrieval-augmented ) Tj
1 0 0 1 50 672 Tm (generation \(RAG\). Instead, it relies on a **reranker module** to evaluate candidate ) Tj
1 0 0 1 50 658 Tm (answers from all queried skills and selects the most relevant and factually accurate ) Tj
1 0 0 1 50 644 Tm (response.) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (---) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (## Purpose) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (* **Handle only question-like utterances** \(e.g., What is the tallest mountain?, Who ) Tj
1 0 0 1 50 546 Tm (wrote Hamlet?\).) Tj
1 0 0 1 50 532 Tm (* Query multiple **general knowledge skills** to obtain candidate answers.) Tj
1 0 0 1 50 518 Tm (* Use a **reranker mechanism** to evaluate and select the most confident and factually ) Tj
1 0 0 1 50 504 Tm (accurate response.) Tj
1 0 0 1 50 490 Tm (* Provide a robust fallback for answering factual queries outside of high-confidence ) Tj
1 0 0 1 50 476 Tm (intent matches.) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (---) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (## Pipeline Stages) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (This plugin registers a single pipeline:) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (| Pipeline ID | Description          | Recommended Use) Tj
1 0 0 1 50 350 Tm (                                     |) Tj
1 0 0 1 50 336 Tm (|-------------|----------------------|----------------------------------------------------) Tj
1 0 0 1 50 322 Tm (-|) Tj
1 0 0 1 50 308 Tm (| `common_qa` | Common Query matches | Only as good as the common query skills you install) Tj
1 0 0 1 50 294 Tm ( |) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (---) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (## How It Works) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (1. **Question Detection:** The pipeline filters incoming utterances to only process those ) Tj
1 0 0 1 50 182 Tm (that appear to be questions, based on interrogative keywords.) Tj
1 0 0 1 50 168 Tm (2. **Parallel Skill Querying:** The plugin sends the utterance to all registered common ) Tj
1 0 0 1 50 154 Tm (query skills capable of answering general knowledge questions.) Tj
1 0 0 1 50 140 Tm (3. **Candidate Collection:** Each skill returns zero or more candidate answers along with ) Tj
1 0 0 1 50 126 Tm (confidence scores.) Tj
1 0 0 1 50 112 Tm (4. **Reranking:** A reranker component evaluates all candidate answers across skills to ) Tj
1 0 0 1 50 98 Tm (identify the best response, focusing on factual accuracy and confidence.) Tj
1 0 0 1 50 84 Tm (5. **Answer Delivery:** If a suitable answer is found, it is returned to the user; ) Tj
1 0 0 1 50 70 Tm (otherwise, the query is passed on or marked as unanswered.) Tj
1 0 0 1 50 56 Tm (---) Tj
ET
endstream

endobj
697 0 obj
<< /Length 2540 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (## Installation) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (The Common Query Pipeline Plugin is included by default in `ovos-core`, but can also be ) Tj
1 0 0 1 50 686 Tm (installed independently:) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (```bash) Tj
1 0 0 1 50 644 Tm (pip install ovos-common-query-pipeline-plugin) Tj
1 0 0 1 50 630 Tm (```) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (---) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (## Configuration) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (```json) Tj
1 0 0 1 50 532 Tm ("intents": {) Tj
1 0 0 1 50 518 Tm (  "common_query": {) Tj
1 0 0 1 50 504 Tm (    "min_self_confidence": 0.5,) Tj
1 0 0 1 50 490 Tm (    "min_reranker_score": 0.5,) Tj
1 0 0 1 50 476 Tm (    "reranker": "ovos-flashrank-reranker-plugin",) Tj
1 0 0 1 50 462 Tm (    "ovos-flashrank-reranker-plugin": {) Tj
1 0 0 1 50 448 Tm (      "model": "ms-marco-TinyBERT-L-2-v2") Tj
1 0 0 1 50 434 Tm (    }) Tj
1 0 0 1 50 420 Tm (  }) Tj
1 0 0 1 50 406 Tm (}) Tj
1 0 0 1 50 392 Tm (```) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (* **min\\_self\\_confidence:** Minimum confidence required from the skill answer itself ) Tj
1 0 0 1 50 350 Tm (before reranking.) Tj
1 0 0 1 50 336 Tm (* **min\\_reranker\\_score:** Minimum reranker score threshold to accept an answer.) Tj
1 0 0 1 50 322 Tm (* **reranker:** The reranker plugin to use \(must be installed separately\).) Tj
1 0 0 1 50 308 Tm (* **Model:** Choose a suitable reranker model based on accuracy and device constraints.) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (---) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (## Performance Considerations) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (* The plugins response time depends on the slowest queried skill  the latency of ) Tj
1 0 0 1 50 210 Tm (installed common query skills affects overall speed.) Tj
1 0 0 1 50 196 Tm (* Enabling rerankers, especially on resource-limited hardware \(e.g., Raspberry Pi\), may ) Tj
1 0 0 1 50 182 Tm (add noticeable latency.) Tj
1 0 0 1 50 168 Tm (* Timeout \(default 2 seconds\) ensures responsiveness but might cause some slow skill ) Tj
1 0 0 1 50 154 Tm (answers to be discarded.) Tj
1 0 0 1 50 140 Tm (* Tune confidence thresholds and reranker settings according to your hardware capabilities) Tj
1 0 0 1 50 126 Tm ( and user experience goals.) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (---) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (## Example Usage Scenario) Tj
ET
endstream

endobj
698 0 obj
<< /Length 2984 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (User says: *"When was the Declaration of Independence signed?"*) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (* The utterance is detected as a question.) Tj
1 0 0 1 50 686 Tm (* The plugin queries `ovos-skill-wolfram-alpha` and `ovos-skill-wikipedia`.) Tj
1 0 0 1 50 672 Tm (* Each skill returns candidate answers with confidence scores.) Tj
1 0 0 1 50 658 Tm (* The reranker evaluates answers and selects the most reliable response.) Tj
1 0 0 1 50 644 Tm (* The selected answer is delivered back to the user.) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (---) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (## Important Notes) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (* **No generation or RAG:** The plugin only retrieves answers from skills; it does not ) Tj
1 0 0 1 50 546 Tm (generate or synthesize new content.) Tj
1 0 0 1 50 532 Tm (* **No chit-chat:** This pipeline is strictly for general knowledge queries, **not for ) Tj
1 0 0 1 50 518 Tm (casual conversation or small talk**.) Tj
1 0 0 1 50 504 Tm (* **Reranker-based selection:** The reranker improves the quality of responses by ranking ) Tj
1 0 0 1 50 490 Tm (answers from multiple sources.) Tj
1 0 0 1 50 476 Tm (* **Skills required:** Ensure that relevant common query skills \(e.g., knowledge bases, ) Tj
1 0 0 1 50 462 Tm (encyclopedias\) are installed and enabled.) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (# docs/dialog_transformers.md) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (# Dialog Transformers) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (**Dialog Transformers** in OpenVoiceOS \(OVOS\) are plugins that modify or enhance text ) Tj
1 0 0 1 50 350 Tm (responses just before they are sent to the Text-to-Speech \(TTS\) engine. This allows for ) Tj
1 0 0 1 50 336 Tm (dynamic adjustments to the assistant's speech, such as altering tone, simplifying ) Tj
1 0 0 1 50 322 Tm (language, or translating content, without requiring changes to individual skills.) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (---) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (## How They Work) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (1. **Intent Handling**: After a user's utterance is processed and an intent is matched, ) Tj
1 0 0 1 50 224 Tm (the corresponding skill generates a textual response.) Tj
1 0 0 1 50 210 Tm (2. **Transformation Phase**: Before this response is vocalized, it passes through any ) Tj
1 0 0 1 50 196 Tm (active dialog transformers.) Tj
1 0 0 1 50 182 Tm (3. **TTS Output**: The transformed text is then sent to the TTS engine for audio ) Tj
1 0 0 1 50 168 Tm (synthesis.) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (This pipeline ensures that all spoken responses can be uniformly modified according to the) Tj
1 0 0 1 50 126 Tm ( desired transformations.) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (---) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (## Configuration) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
699 0 obj
<< /Length 2237 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (To enable dialog transformers, add them to your `mycroft.conf` file under the ) Tj
1 0 0 1 50 728 Tm (`dialog_transformers` section:) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (```json) Tj
1 0 0 1 50 686 Tm ("dialog_transformers": {) Tj
1 0 0 1 50 672 Tm (  "plugin_name": {) Tj
1 0 0 1 50 658 Tm (    // plugin-specific configuration) Tj
1 0 0 1 50 644 Tm (  }) Tj
1 0 0 1 50 630 Tm (}) Tj
1 0 0 1 50 616 Tm (```) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (Replace `"plugin_name"` with the identifier of the desired plugin and provide any ) Tj
1 0 0 1 50 574 Tm (necessary configuration parameters.) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (---) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (## Available Dialog Transformer Plugins) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (### **OVOS Dialog Normalizer Plugin**) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (* **Purpose**: Prepares text for TTS by expanding contractions and converting digits to ) Tj
1 0 0 1 50 448 Tm (words, ensuring clearer pronunciation.) Tj
1 0 0 1 50 434 Tm (* **Example**:) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (    * Input: `"I'm 5 years old."`) Tj
1 0 0 1 50 392 Tm (    * Output: `"I am five years old."`) Tj
1 0 0 1 50 378 Tm (  ) Tj
1 0 0 1 50 364 Tm (* **Installation**:) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (```bash) Tj
1 0 0 1 50 322 Tm (pip install ovos-dialog-normalizer-plugin) Tj
1 0 0 1 50 308 Tm (```) Tj
1 0 0 1 50 294 Tm (* **Configuration**:) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (```json) Tj
1 0 0 1 50 252 Tm ("dialog_transformers": {) Tj
1 0 0 1 50 238 Tm (  "ovos-dialog-normalizer-plugin": {}) Tj
1 0 0 1 50 224 Tm (}) Tj
1 0 0 1 50 210 Tm (```) Tj
1 0 0 1 50 196 Tm (* **Source**: [GitHub Repository]\(https://github.com/OpenVoiceOS/ovos-dialog-normalizer-) Tj
1 0 0 1 50 182 Tm (plugin\)) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (---) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (### **OVOS OpenAI Dialog Transformer Plugin**) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (* **Purpose**: Utilizes OpenAI's API to rewrite responses based on a specified persona or ) Tj
1 0 0 1 50 84 Tm (tone.) Tj
1 0 0 1 50 70 Tm (* **Example**:) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
700 0 obj
<< /Length 2401 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (    * Rewrite Prompt: `"Explain like I'm five"`) Tj
1 0 0 1 50 728 Tm (    * Input: `"Quantum mechanics is a branch of physics that describes the behavior of ) Tj
1 0 0 1 50 714 Tm (particles at the smallest scales."`) Tj
1 0 0 1 50 700 Tm (    * Output: `"Quantum mechanics helps us understand really tiny things."`) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (* **Installation**:) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (```bash) Tj
1 0 0 1 50 630 Tm (pip install ovos-openai-plugin) Tj
1 0 0 1 50 616 Tm (```) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (* **Configuration**:) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (```json) Tj
1 0 0 1 50 546 Tm ("dialog_transformers": {) Tj
1 0 0 1 50 532 Tm (    "ovos-dialog-transformer-openai-plugin": {) Tj
1 0 0 1 50 518 Tm (      "rewrite_prompt": "Explain like I'm five") Tj
1 0 0 1 50 504 Tm (    }) Tj
1 0 0 1 50 490 Tm (}) Tj
1 0 0 1 50 476 Tm (```) Tj
1 0 0 1 50 462 Tm (* **Source**: [GitHub Repository]\(https://github.com/OpenVoiceOS/ovos-openai-plugin\)) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (---) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (### **OVOS Bidirectional Translation Plugin**) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (* **Purpose**: Translates responses to match the user's language, enabling multilingual ) Tj
1 0 0 1 50 364 Tm (interactions.) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (* **Features**:) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (    * Detects the language of the user's input.) Tj
1 0 0 1 50 294 Tm (    * Works together with a companion utterance transformer plugin) Tj
1 0 0 1 50 280 Tm (    * Translates the assistant's response back into the user's language.) Tj
1 0 0 1 50 266 Tm (  ) Tj
1 0 0 1 50 252 Tm (* **Installation**:) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (```bash) Tj
1 0 0 1 50 210 Tm (pip install ovos-bidirectional-translation-plugin) Tj
1 0 0 1 50 196 Tm (```) Tj
1 0 0 1 50 182 Tm (* **Configuration**:) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (```json) Tj
1 0 0 1 50 140 Tm ("dialog_transformers": {) Tj
1 0 0 1 50 126 Tm (    "ovos-bidirectional-dialog-transformer": {) Tj
1 0 0 1 50 112 Tm (      "bidirectional": true) Tj
1 0 0 1 50 98 Tm (    }) Tj
1 0 0 1 50 84 Tm (}) Tj
1 0 0 1 50 70 Tm (```) Tj
1 0 0 1 50 56 Tm (* **Source**: [GitHub Repository]\(https://github.com/OpenVoiceOS/ovos-bidirectional-) Tj
ET
endstream

endobj
701 0 obj
<< /Length 2295 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (translation-plugin\)) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (---) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (## Creating Custom Dialog Transformers) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (To develop your own dialog transformer:) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (**Create a Python Class**:) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (```python) Tj
1 0 0 1 50 588 Tm (from ovos_plugin_manager.templates.transformers import DialogTransformer) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (class MyCustomTransformer\(DialogTransformer\):) Tj
1 0 0 1 50 546 Tm (   def __init__\(self, config=None\):) Tj
1 0 0 1 50 532 Tm (       super\(\).__init__\("my-custom-transformer", priority=10, config=config\)) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (   def transform\(self, dialog: str, context: dict = None\) -> Tuple[str, dict]:) Tj
1 0 0 1 50 490 Tm (        """) Tj
1 0 0 1 50 476 Tm (        Optionally transform passed dialog and/or return additional context) Tj
1 0 0 1 50 462 Tm (        :param dialog: str utterance to mutate before TTS) Tj
1 0 0 1 50 448 Tm (        :returns: str mutated dialog) Tj
1 0 0 1 50 434 Tm (        """) Tj
1 0 0 1 50 420 Tm (       # Modify the dialog as needed) Tj
1 0 0 1 50 406 Tm (        return modified_dialog, context) Tj
1 0 0 1 50 392 Tm (```) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (**Register as a Plugin**:) Tj
1 0 0 1 50 350 Tm (In your `setup.py`, include:) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (```python) Tj
1 0 0 1 50 308 Tm (entry_points={) Tj
1 0 0 1 50 294 Tm (   'ovos.plugin.dialog_transformer': [) Tj
1 0 0 1 50 280 Tm (       'my-custom-transformer = my_module:MyCustomTransformer') Tj
1 0 0 1 50 266 Tm (   ]) Tj
1 0 0 1 50 252 Tm (}) Tj
1 0 0 1 50 238 Tm (```) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (**Install and Configure**:) Tj
1 0 0 1 50 196 Tm (After installation, add your transformer to the `mycroft.conf`:) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (```json) Tj
1 0 0 1 50 154 Tm ("dialog_transformers": {) Tj
1 0 0 1 50 140 Tm (  "my-custom-transformer": {}) Tj
1 0 0 1 50 126 Tm (}) Tj
1 0 0 1 50 112 Tm (```) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (# docs/fallback_pipeline.md) Tj
ET
endstream

endobj
702 0 obj
<< /Length 2914 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (# Fallback Pipeline) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (The **Fallback Pipeline** in **OpenVoiceOS \(OVOS\)** manages how fallback skills are ) Tj
1 0 0 1 50 686 Tm (queried when no primary skill handles a users utterance. It coordinates multiple fallback) Tj
1 0 0 1 50 672 Tm ( handlers, ensuring the system gracefully attempts to respond even when regular intent ) Tj
1 0 0 1 50 658 Tm (matching fails.) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (---) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (## Pipeline Stages) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (| Pipeline ID       | Priority Range | Description                     | Use Case) Tj
1 0 0 1 50 560 Tm (                                |) Tj
1 0 0 1 50 546 Tm (|-------------------| -------------- | ------------------------------- | ) Tj
1 0 0 1 50 532 Tm (--------------------------------------- |) Tj
1 0 0 1 50 518 Tm (| `fallback_high`   |  0  5          | High-priority fallback skills   | ? Critical ) Tj
1 0 0 1 50 504 Tm (fallback handlers            |) Tj
1 0 0 1 50 490 Tm (| `fallback_medium` |  5  90         | Medium-priority fallback skills | ?? General ) Tj
1 0 0 1 50 476 Tm (fallback skills              |) Tj
1 0 0 1 50 462 Tm (| `fallback_low`    |  90  101       | Low-priority fallback skills    | ? Catch-all or ) Tj
1 0 0 1 50 448 Tm (chatbot fallback skills |) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (Fallback skills register with a priority, allowing the pipeline to query them in order. ) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (---) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (## How It Works) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (* When no regular skill handles an utterance, the fallback pipeline queries registered ) Tj
1 0 0 1 50 322 Tm (fallback skills asynchronously.) Tj
1 0 0 1 50 308 Tm (* Each fallback skill can decide whether to handle the utterance.) Tj
1 0 0 1 50 294 Tm (* Fallback skills are tried by priority level \(can be overriden by users\)) Tj
1 0 0 1 50 280 Tm (* If no fallback skill accepts the utterance, no fallback response is generated by the ) Tj
1 0 0 1 50 266 Tm (pipeline itself.) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (---) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (## Skill Integration) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (Skills integrate as fallbacks by:) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (* Registering on the message bus with a fallback priority.) Tj
1 0 0 1 50 140 Tm (* Listening for fallback queries carrying all utterance variations.) Tj
1 0 0 1 50 126 Tm (* Responding with success/failure on whether they handled the fallback.) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (This enables modular and customizable fallback behavior depending on your skill ecosystem.) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (---) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
703 0 obj
<< /Length 3112 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (## Notes) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (* The pipeline itself **does not define or enforce a default fallback response**.) Tj
1 0 0 1 50 700 Tm (* The default "I dont understand" reply is implemented in the separate `ovos-skill-) Tj
1 0 0 1 50 686 Tm (fallback-unknown` skill.) Tj
1 0 0 1 50 672 Tm (* This modular design allows developers to create custom fallback strategies or add ) Tj
1 0 0 1 50 658 Tm (fallback chatbot skills without modifying the core pipeline.) Tj
1 0 0 1 50 644 Tm (* Fallback skills are expected to implement some dialog if they consume the utterance) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (---) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (## Security) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (Just like with converse a badly designed or malicious skill can hijack the fallback skill ) Tj
1 0 0 1 50 546 Tm (loop, while this is not as serious as with converse some protections are also provided) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (You can configure what skills are allowed to use the fallback mechanism, you can also ) Tj
1 0 0 1 50 504 Tm (modify the fallback priority to ensure skills behave well together.) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (Since priority is defined by developers sometimes the default value is not appropriate and) Tj
1 0 0 1 50 462 Tm ( does not fit well with the installed skills collection) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (```javascript) Tj
1 0 0 1 50 420 Tm ("skills": {) Tj
1 0 0 1 50 406 Tm (    // fallback skill configuration) Tj
1 0 0 1 50 392 Tm (    "fallbacks": {) Tj
1 0 0 1 50 378 Tm (        // you can add skill_id: priority to override the developer defined) Tj
1 0 0 1 50 364 Tm (        // priority of those skills, this allows customization) Tj
1 0 0 1 50 350 Tm (        // of unknown intent handling for default_skills + user preferences) Tj
1 0 0 1 50 336 Tm (        "fallback_priorities": {) Tj
1 0 0 1 50 322 Tm (           // "skill_id": 10) Tj
1 0 0 1 50 308 Tm (        },) Tj
1 0 0 1 50 294 Tm (        // fallback skill handling has 3 modes of operations:) Tj
1 0 0 1 50 280 Tm (        // - "accept_all"  # default mycroft-core behavior) Tj
1 0 0 1 50 266 Tm (        // - "whitelist"  # only call fallback for skills in "fallback_whitelist") Tj
1 0 0 1 50 252 Tm (        // - "blacklist"  # only call fallback for skills NOT in "fallback_blacklist") Tj
1 0 0 1 50 238 Tm (        "fallback_mode": "accept_all",) Tj
1 0 0 1 50 224 Tm (        "fallback_whitelist": [],) Tj
1 0 0 1 50 210 Tm (        "fallback_blacklist": []) Tj
1 0 0 1 50 196 Tm (    }) Tj
1 0 0 1 50 182 Tm (},) Tj
1 0 0 1 50 168 Tm (```) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (# docs/gitlocalize_tutorial.md) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (## Contribute to Translations with GitLocalize!) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (Thank you for your interest in helping translate our project! Your contributions will help) Tj
1 0 0 1 50 56 Tm ( make our project accessible to more people around the world. ) Tj
ET
endstream

endobj
704 0 obj
<< /Length 3282 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (<iframe width="560" height="315" src="https://www.youtube.com/embed/2udvdIW9W2s" ) Tj
1 0 0 1 50 714 Tm (title="OVOS translation guide" frameborder="0" allow="accelerometer; autoplay; clipboard-) Tj
1 0 0 1 50 700 Tm (write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-) Tj
1 0 0 1 50 686 Tm (origin-when-cross-origin" allowfullscreen></iframe>) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (Weve made it easy for you to get started, even if youre not familiar with GitHub or ) Tj
1 0 0 1 50 644 Tm (coding. Follow the steps below to join our translation effort using GitLocalize.) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (### Step-by-Step Guide to Translating with GitLocalize) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (#### Visit Our GitLocalize Project Page) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (![image]\(https://gist.github.com/assets/33701864/0a678e87-2cdf-4a9b-924c-e496e47befb4\)) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (1. **Click on the link** to our GitLocalize project: ) Tj
1 0 0 1 50 518 Tm (https://gitlocalize.com/users/OpenVoiceOS) Tj
1 0 0 1 50 504 Tm (2. You will see a list of OVOS repositories to translate, select one) Tj
1 0 0 1 50 490 Tm (3. You will see a list of languages and translation tasks available.) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (![image]\(https://gist.github.com/assets/33701864/c3770638-1452-44fb-ada1-39e39683aea8\)) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (#### Sign Up or Log In) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (1. If you dont have an account, **sign up** with your email or GitHub account \(you dont ) Tj
1 0 0 1 50 392 Tm (need to know GitHub to do this!\).) Tj
1 0 0 1 50 378 Tm (2. If you already have an account, simply **log in**.) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (#### Choose a Language) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (> Adding new languages to the list is a manual process, if your language is unlisted let ) Tj
1 0 0 1 50 308 Tm (us know!) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (1. Select the language you want to translate into from the list of available languages.) Tj
1 0 0 1 50 266 Tm (2. You will see a list of files that need translation. ) Tj
1 0 0 1 50 252 Tm (  - `dialogs.json` contains sentences that OVOS will speak) Tj
1 0 0 1 50 238 Tm (  - `intents.json` contains sentences that the user will speak to OVOS) Tj
1 0 0 1 50 224 Tm (  - `vocabs.json` similar to intents, but contain sentence fragments/keywords, not full ) Tj
1 0 0 1 50 210 Tm (utterances) Tj
1 0 0 1 50 196 Tm ( ) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (![image]\(https://gist.github.com/assets/33701864/444cbb6d-1e9e-47b0-84f1-aeb38eef6a17\)) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (#### Start Translating) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (1. Click on a file that you want to translate.) Tj
1 0 0 1 50 98 Tm (2. The translation editor will open. Here, youll see the original text on the left and a ) Tj
1 0 0 1 50 84 Tm (space to enter your translation on the right.) Tj
1 0 0 1 50 70 Tm (3. Begin translating the text. If youre unsure about any phrase, feel free to leave it ) Tj
1 0 0 1 50 56 Tm (and move on to the next one.) Tj
ET
endstream

endobj
705 0 obj
<< /Length 2985 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (When you open a JSON file for translation in GitLocalize, youll see two parts:) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (- **Key**: This corresponds to a file name in the OVOS repository you selected.) Tj
1 0 0 1 50 686 Tm (- **Value**: This is the sentence you need to translate.) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (#### Variables) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (Variables are placeholders within sentences that represent changing content, such as names) Tj
1 0 0 1 50 616 Tm ( or numbers. ) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (- Original: `My name is {var_name}`) Tj
1 0 0 1 50 574 Tm (- Translation: `Mi nombre es {var_name}`) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (![image]\(https://gist.github.com/assets/33701864/2779c8a3-46de-47b3-894f-eccab0bdd2b5\)) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (**Important Rules**:) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (- **Do not translate the variable names** \(the text inside curly braces `{}`\).) Tj
1 0 0 1 50 476 Tm (- You can **rearrange the position** of variables in your translation, but do not create ) Tj
1 0 0 1 50 462 Tm (new variables.) Tj
1 0 0 1 50 448 Tm (- Ensure that variables are not separated by only whitespace; there should be at least one) Tj
1 0 0 1 50 434 Tm ( word between them.) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (#### Slots) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (Sometimes, the same file will appear several times, each with a different variation of the) Tj
1 0 0 1 50 364 Tm ( same sentence. These variations are called "slots". ) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (![image]\(https://gist.github.com/assets/33701864/70f30bc5-56f0-4d87-a521-2c4c77790bfe\)) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (**Important Rules**:) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (- **Translate at least one slot** in each file.) Tj
1 0 0 1 50 266 Tm (- If a slot is not needed in your language, enter `[UNUSED]`. This tells us that you ) Tj
1 0 0 1 50 252 Tm (reviewed the slot and marked it as translated.) Tj
1 0 0 1 50 238 Tm (- If you run out of slots to fit all variations of a sentence, you can use newlines to add) Tj
1 0 0 1 50 224 Tm ( more translations.) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (![image]\(https://gist.github.com/assets/33701864/c70379ef-ef29-484d-a6fb-84d9fca47660\)) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (#### Alternative/Optional words) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (You can use the "alternative word" syntax to provide options or optional words within a ) Tj
1 0 0 1 50 112 Tm (sentence.) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (- Alternative words: `I love \(cats|dogs|birds\)` becomes `Amo \(gatos|perros|pjaros\)`) Tj
1 0 0 1 50 70 Tm (- Optional words: `I \(really|\) love \(cats|dogs|birds\)` becomes `Yo \(realmente|\) amo ) Tj
1 0 0 1 50 56 Tm (\(gatos|perros|pjaros\)`) Tj
ET
endstream

endobj
706 0 obj
<< /Length 2884 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (![image]\(https://gist.github.com/assets/33701864/75288b2d-559e-47c3-8e73-bb5391e4a888\)) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (### Tips for Effective Translation) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (- **Consistency**: Try to use consistent terminology throughout the project.) Tj
1 0 0 1 50 644 Tm (- **Context**: If a phrase seems unclear, consider the overall context of the project or ) Tj
1 0 0 1 50 630 Tm (reach out for clarification.) Tj
1 0 0 1 50 616 Tm (- **Accuracy**: Aim to convey the meaning as accurately as possible, rather than a literal) Tj
1 0 0 1 50 602 Tm ( word-for-word translation.) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (#### Key Take Aways) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (- For each sentence \(slot\), enter your translation.) Tj
1 0 0 1 50 532 Tm (- If a slot is not needed, enter `[UNUSED]`.) Tj
1 0 0 1 50 518 Tm (- Leave the variable names in curly braces `{}` unchanged.) Tj
1 0 0 1 50 504 Tm (- Rearrange variables as needed but do not create new ones.) Tj
1 0 0 1 50 490 Tm (- Provide multiple options using the syntax `\(option1|option2|option3\)`.) Tj
1 0 0 1 50 476 Tm (- Include optional words using the syntax `\(optional|\)`.) Tj
1 0 0 1 50 462 Tm (- If there are not enough slots, press `Enter` to add a new line and enter your ) Tj
1 0 0 1 50 448 Tm (alternative translation on the new line.) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (#### Review and Feedback) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (1. Once youve finished translating a file, you can **submit** it for review.) Tj
1 0 0 1 50 378 Tm (2. Your translations will be reviewed by other native speakers and project maintainers.) Tj
1 0 0 1 50 364 Tm (3. If any changes are needed, you might receive feedback. Simply log back in, review the ) Tj
1 0 0 1 50 350 Tm (comments, and make the necessary adjustments.) Tj
1 0 0 1 50 336 Tm (![image]\(https://gist.github.com/assets/33701864/f76df4fb-a825-48ec-8e76-c8e47e013392\)) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (### Need Help?) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (If you have any questions or need assistance at any point:) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (- **Join our Matrix chat**: https://matrix.to/#/#openvoiceos-languages:matrix.org) Tj
1 0 0 1 50 238 Tm (- **Email us**: support@openvoiceos.org) Tj
1 0 0 1 50 224 Tm (  ) Tj
1 0 0 1 50 210 Tm (### Thank You!) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (Your contributions are invaluable, and we appreciate your effort in helping us reach a ) Tj
1 0 0 1 50 168 Tm (global audience. Happy translating!) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (# docs/index.md) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
707 0 obj
<< /Length 2843 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (# The OpenVoiceOS Technical Manual) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (![]\(https://github.com/OpenVoiceOS/ovos_assets/blob/master/Logo/ovos-) Tj
1 0 0 1 50 700 Tm (logo-512.png?raw=true\)) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (Welcome to the **Open Voice OS \(OVOS\)** developer documentation. This guide is your ) Tj
1 0 0 1 50 658 Tm (starting point for exploring, building, and contributing to OVOS  an open and modular ) Tj
1 0 0 1 50 644 Tm (platform for voice-enabled applications.) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (---) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (## What is OVOS?) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (**Open Voice OS \(OVOS\)** is a flexible voice platform that goes beyond traditional voice ) Tj
1 0 0 1 50 546 Tm (assistants. It provides the foundational tools and frameworks for integrating voice ) Tj
1 0 0 1 50 532 Tm (interaction into a wide range of projects.) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (While OVOS can power a Hey Mycroft-style assistant, it is not limited to that use case.) Tj
1 0 0 1 50 490 Tm ( As a voice operating system, OVOS is highly customizable and has been used in:) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (- Robots and automation systems  ) Tj
1 0 0 1 50 448 Tm (- Smart furniture and mirrors  ) Tj
1 0 0 1 50 434 Tm (- Cloud-based voice services  ) Tj
1 0 0 1 50 420 Tm (- Embedded devices and smart TVs  ) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (OVOS is designed to work wherever voice interfaces are needed  whether thats on a local ) Tj
1 0 0 1 50 378 Tm (device or in the cloud.) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (---) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (## OVOS Distros) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (If youd rather not install and configure components manually, OVOS has several prebuilt ) Tj
1 0 0 1 50 280 Tm (distributions:) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (- [**raspOVOS**]\(https://github.com/OpenVoiceOS/raspOVOS\): A Raspberry Pi image with pre-) Tj
1 0 0 1 50 238 Tm (installed OVOS services.) Tj
1 0 0 1 50 224 Tm (- [**ovos-installer**]\(https://github.com/OpenVoiceOS/ovos-installer\): Installs OVOS on ) Tj
1 0 0 1 50 210 Tm (top of supported Linux systems.) Tj
1 0 0 1 50 196 Tm (- [**ovos-buildroot**]\(https://github.com/OpenVoiceOS/ovos-buildroot\): A highly ) Tj
1 0 0 1 50 182 Tm (customizable buildroot-based image \(in development\).) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (These distros offer a faster setup experience with curated default skills and settings.) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (---) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (## What Youll Find in This Manual) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (This documentation includes:) Tj
ET
endstream

endobj
708 0 obj
<< /Length 2878 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (- **Architecture Overview**  A breakdown of how OVOS components work together  ) Tj
1 0 0 1 50 714 Tm (- **Plugin System**  Details on STT, TTS, wake word engines, GUI backends, and more  ) Tj
1 0 0 1 50 700 Tm (- **Application Development**  How to create and deploy custom voice-enabled applications) Tj
1 0 0 1 50 686 Tm (  ) Tj
1 0 0 1 50 672 Tm (- **Testing and Debugging**  Tools and practices for developing with OVOS  ) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (---) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (## Related Projects and External Resources) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (- **Docker Setup**: [OVOS Docker Documentation]\(https://openvoiceos.github.io/ovos-) Tj
1 0 0 1 50 574 Tm (docker/\)) Tj
1 0 0 1 50 560 Tm (- **Message Bus Reference**: [OVOS Message ) Tj
1 0 0 1 50 546 Tm (Spec]\(https://openvoiceos.github.io/message_spec/\)) Tj
1 0 0 1 50 532 Tm (- **Remote Client Framework**: [HiveMind ) Tj
1 0 0 1 50 518 Tm (Documentation]\(https://jarbashivemind.github.io/HiveMind-community-docs/\)) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (---) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (## Contributing to This Documentation) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (This manual is maintained by the OVOS community  developers, users, and contributors who ) Tj
1 0 0 1 50 420 Tm (help shape the platform.) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (Whether youre spotting errors, clarifying instructions, or adding new information, ) Tj
1 0 0 1 50 378 Tm (contributions are always welcome.) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (To contribute, please [open an issue or pull request]\(https://github.com/OpenVoiceOS/ovos-) Tj
1 0 0 1 50 336 Tm (technical-manual\) on GitHub.) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (---) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (## Getting Started Tips) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (- OVOS is modular  you can run just one or two components to start.) Tj
1 0 0 1 50 238 Tm (- Try a pre-built distro for a plug-and-play experience.) Tj
1 0 0 1 50 224 Tm (- Check the message bus reference to see how OVOS components communicate.) Tj
1 0 0 1 50 210 Tm (- Explore real-world examples from the community to see OVOS in action.) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (# docs/intent_transformers.md) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (# Intent Transformers) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (**Intent Transformers** are a pluggable mechanism in OVOS that allow you to enrich or ) Tj
1 0 0 1 50 98 Tm (transform intent data **after** an intent is matched by an engine \(Padatious, Adapt, ) Tj
1 0 0 1 50 84 Tm (etc.\), but **before** it is passed to the skill handler.) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (This is useful for:) Tj
ET
endstream

endobj
709 0 obj
<< /Length 2612 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (* Named Entity Recognition \(NER\)) Tj
1 0 0 1 50 714 Tm (* Keyword extraction) Tj
1 0 0 1 50 700 Tm (* Slot filling) Tj
1 0 0 1 50 686 Tm (* Contextual enrichment) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (Transformers operate on `IntentHandlerMatch` or `PipelineMatch` objects and are executed ) Tj
1 0 0 1 50 644 Tm (**in order of priority**. They enable complex processing pipelines without requiring every) Tj
1 0 0 1 50 630 Tm ( skill to reimplement entity logic.) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (---) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (## Default Transformers) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (In a standard OVOS installation, the following plugins are **installed and enabled by ) Tj
1 0 0 1 50 532 Tm (default**:) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (| Plugin                          | Description) Tj
1 0 0 1 50 490 Tm (                                                                                        | ) Tj
1 0 0 1 50 476 Tm (Priority |) Tj
1 0 0 1 50 462 Tm (|---------------------------------| ------------------------------------------------------) Tj
1 0 0 1 50 448 Tm (-------------------------------------------- | -------- |) Tj
1 0 0 1 50 434 Tm (| `ovos-keyword-template-matcher` | Extracts values from `{placeholder}`-style intent ) Tj
1 0 0 1 50 420 Tm (templates                                        | 1        |) Tj
1 0 0 1 50 406 Tm (| `ovos-ahocorasick-ner-plugin`   | Performs NER using Aho-Corasick keyword matching based) Tj
1 0 0 1 50 392 Tm ( on registered entities from skill templates | 5        |) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (These are **not built into core**, but are bundled in standard OVOS setups and configured ) Tj
1 0 0 1 50 350 Tm (via `intent_transformers` in your configuration file.) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (---) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (## Configuration) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (To enable or disable specific transformers, modify your `mycroft.conf`:) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (```json) Tj
1 0 0 1 50 224 Tm ("intent_transformers": {) Tj
1 0 0 1 50 210 Tm (  "ovos-keyword-template-matcher": {) Tj
1 0 0 1 50 196 Tm (    "active": true) Tj
1 0 0 1 50 182 Tm (  },) Tj
1 0 0 1 50 168 Tm (  "ovos-ahocorasick-ner-plugin": {) Tj
1 0 0 1 50 154 Tm (    "active": false) Tj
1 0 0 1 50 140 Tm (  }) Tj
1 0 0 1 50 126 Tm (}) Tj
1 0 0 1 50 112 Tm (```) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (---) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
710 0 obj
<< /Length 2463 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (## How It Works) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (### Example Workflow) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (1. An utterance matches an intent via Padatious, Adapt, or another engine.) Tj
1 0 0 1 50 672 Tm (2. The matched intent is passed to the `IntentTransformersService`.) Tj
1 0 0 1 50 658 Tm (3. Each registered transformer plugin runs its `transform\(\)` method.) Tj
1 0 0 1 50 644 Tm (4. Extracted entities are injected into the intents `match_data`.) Tj
1 0 0 1 50 630 Tm (5. The updated `match_data` is passed to the skill via the `Message` object.) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (### Skill Access) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (Entities extracted by transformers are made available to your skill in the `message.data` ) Tj
1 0 0 1 50 560 Tm (dictionary:) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (```python) Tj
1 0 0 1 50 518 Tm (location = message.data.get\("location"\)) Tj
1 0 0 1 50 504 Tm (person = message.data.get\("person"\)) Tj
1 0 0 1 50 490 Tm (```) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (---) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (## Default Plugins) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (### `ovos-ahocorasick-ner-plugin`) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (This plugin builds a per-skill Aho-Corasick automaton using keywords explicitly provided ) Tj
1 0 0 1 50 364 Tm (by the developer via registered entities.) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (> ? It will **only match keywords that the skill developer has accounted for**) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (It does **not** use external data or extract entities generically.) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (---) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (### `ovos-keyword-template-matcher`) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (This plugin parses registered intent templates like:) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (```) Tj
1 0 0 1 50 182 Tm (what's the weather in {location}) Tj
1 0 0 1 50 168 Tm (```) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (It uses the template structure to extract `{location}` directly from the utterance.) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (If the user says "what's the weather in Tokyo", the plugin will populate:) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (```python) Tj
1 0 0 1 50 70 Tm (match_data = {) Tj
1 0 0 1 50 56 Tm (  "location": "Tokyo") Tj
ET
endstream

endobj
711 0 obj
<< /Length 2701 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (}) Tj
1 0 0 1 50 728 Tm (```) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (---) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (## Writing Your Own Intent Transformer) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (To create a custom transformer:) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (```python) Tj
1 0 0 1 50 602 Tm (from ovos_plugin_manager.templates.transformers import IntentTransformer) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (class MyCustomTransformer\(IntentTransformer\):) Tj
1 0 0 1 50 560 Tm (    def __init__\(self, config=None\):) Tj
1 0 0 1 50 546 Tm (        super\(\).__init__\("my-transformer", priority=10, config=config\)) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (    def transform\(self, intent\):) Tj
1 0 0 1 50 504 Tm (        # Modify intent.match_data here) Tj
1 0 0 1 50 490 Tm (        return intent) Tj
1 0 0 1 50 476 Tm (```) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (# docs/lang_support.md) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (# Language Support in OpenVoiceOS) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (OpenVoiceOS \(OVOS\) aims to support multiple languages across its components, including ) Tj
1 0 0 1 50 350 Tm (intent recognition, speech-to-text \(STT\), text-to-speech \(TTS\), and skill dialogs. ) Tj
1 0 0 1 50 336 Tm (However, full language support requires more than translation of interface text. This ) Tj
1 0 0 1 50 322 Tm (document outlines the current state of language support, known limitations, and how ) Tj
1 0 0 1 50 308 Tm (contributors can help improve multilingual performance in OVOS.) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (---) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (While the OVOS installer allows users to select a preferred language, **selecting a ) Tj
1 0 0 1 50 238 Tm (language does not guarantee full support across all subsystems**. True multilingual ) Tj
1 0 0 1 50 224 Tm (support requires dedicated:) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (- ? Translations \(intents, dialogs, settings, etc.\)) Tj
1 0 0 1 50 182 Tm (- ? STT \(Speech-to-Text\) plugins trained on the target language) Tj
1 0 0 1 50 168 Tm (- ? TTS \(Text-to-Speech\) plugins capable of generating speech in the selected language) Tj
1 0 0 1 50 154 Tm (- ? Language-specific intent adaptation and fallback logic) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (Without these, many core features \(e.g., voice commands, speech output, skill ) Tj
1 0 0 1 50 112 Tm (interactions\) may not function as expected.) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (---) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (## Adding a New Language) Tj
ET
endstream

endobj
712 0 obj
<< /Length 2775 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (Adding support for a new language in OVOS is a multi-step process requiring:) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (- Translations of assistant dialog and intent files) Tj
1 0 0 1 50 686 Tm (- A compatible STT plugin with reliable speech recognition) Tj
1 0 0 1 50 672 Tm (- A natural-sounding TTS voice) Tj
1 0 0 1 50 658 Tm (- Validation using real-world user data) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (We welcome and encourage community participation to improve language support. Every ) Tj
1 0 0 1 50 616 Tm (contribution helps make OVOS more accessible to speakers around the world.) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (---) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (## STT and TTS Requirements) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (For a language to function correctly in a voice assistant environment, it must have ) Tj
1 0 0 1 50 518 Tm (**dedicated STT and TTS plugins** that support the language reliably.) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (### STT \(Speech-to-Text\)) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (- STT plugins must be able to recognize speech in the target language with high accuracy.) Tj
1 0 0 1 50 448 Tm (- Some plugins are multilingual \(e.g., Whisper, MMS\), but accuracy varies across ) Tj
1 0 0 1 50 434 Tm (languages.) Tj
1 0 0 1 50 420 Tm (- For production use, **language-specific tuning or models are recommended**.) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (### TTS \(Text-to-Speech\)) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (- The TTS engine must generate clear, natural-sounding speech in the selected language.) Tj
1 0 0 1 50 350 Tm (- Not all TTS plugins support all languages.) Tj
1 0 0 1 50 336 Tm (- Quality varies significantly by model and backend.) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (A list of early TTS and STT plugins test with per-language accuracy benchmarks is ) Tj
1 0 0 1 50 294 Tm (available at:) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (- ? [STT Bench]\(https://stt-bench.tigregotico.pt\)) Tj
1 0 0 1 50 252 Tm (- ? [TTS Bench]\(https://tts-bench.tigregotico.pt\)) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (---) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (## Translation Coverage) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (OVOS uses [GitLocalize]\(https://gitlocalize.com/users/OpenVoiceOS\) for managing ) Tj
1 0 0 1 50 154 Tm (translation files across its repositories. This includes:) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (- Skill dialog files) Tj
1 0 0 1 50 112 Tm (- Intent files \(used by Padatious/Adapt\)) Tj
1 0 0 1 50 98 Tm (- Configuration metadata) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (### ? Translation Progress) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
713 0 obj
<< /Length 2942 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (Translation progress is tracked at:  ) Tj
1 0 0 1 50 728 Tm (? [https://openvoiceos.github.io/lang-support-tracker]\(https://openvoiceos.github.io/lang-) Tj
1 0 0 1 50 714 Tm (support-tracker\)) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (The tracker provides daily updates and displays all languages that have reached at least ) Tj
1 0 0 1 50 672 Tm (25% translation coverage.) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (> ? If your language is missing from GitLocalize, [open an ) Tj
1 0 0 1 50 630 Tm (issue]\(https://github.com/OpenVoiceOS/lang-support-tracker/issues\) to request it. ) Tj
1 0 0 1 50 616 Tm (Currently, languages must be added manually.) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (---) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (## Known Limitations) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (- Selecting a language during installation only automatically configures a compatible ) Tj
1 0 0 1 50 518 Tm (STT/TTS plugin for **some languages**. Manual action might be required for full support) Tj
1 0 0 1 50 504 Tm (- Many skills contain only partial translations or outdated strings.) Tj
1 0 0 1 50 490 Tm (- Skills may be partially translated, with only a subset of intents available for your ) Tj
1 0 0 1 50 476 Tm (language) Tj
1 0 0 1 50 462 Tm (- Skills may have translated intents but missing dialog translations. The assistant ) Tj
1 0 0 1 50 448 Tm (typically speaks the dialog filename if it is not translated) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (---) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (## How to Improve Language Support) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (### 1. **Contribute Translations**) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (Use GitLocalize to translate dialog and intent files:) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (- [GitLocalize for OVOS]\(https://gitlocalize.com/users/OpenVoiceOS\)) Tj
1 0 0 1 50 294 Tm (- [Translation Tutorial]\(https://www.openvoiceos.org/translation\)) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (Translation stats for each language are also available in:) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (- [Markdown summaries \(e.g., ) Tj
1 0 0 1 50 224 Tm (`translate_status_pt.md`\)]\(https://openvoiceos.github.io/lang-support-) Tj
1 0 0 1 50 210 Tm (tracker/tx_info/translate_status_pt-PT.md\)) Tj
1 0 0 1 50 196 Tm (- [JSON format \(e.g., `pt-PT.json`\)]\(https://openvoiceos.github.io/lang-support-) Tj
1 0 0 1 50 182 Tm (tracker/tx_info/pt-PT.json\)) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (---) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (### 2. **Test in Real-World Usage**) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (Translation coverage alone does not ensure accuracy. Native speakers are encouraged to ) Tj
1 0 0 1 50 84 Tm (test OVOS with real speech input and report issues with:) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (- Intent matching failures) Tj
ET
endstream

endobj
714 0 obj
<< /Length 2820 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (- Mispronunciations or robotic speech) Tj
1 0 0 1 50 728 Tm (- Incorrect or unnatural translations) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (You can help by **enabling open data collection** in your OVOS instance:) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (```json) Tj
1 0 0 1 50 658 Tm ("open_data": {) Tj
1 0 0 1 50 644 Tm (  "intent_urls": [) Tj
1 0 0 1 50 630 Tm (    "https://metrics.tigregotico.pt/intents") Tj
1 0 0 1 50 616 Tm (  ]) Tj
1 0 0 1 50 602 Tm (}) Tj
1 0 0 1 50 588 Tm (```) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (> ? Alternatively, you may self-host the reporting server: [ovos-opendata-server on ) Tj
1 0 0 1 50 546 Tm (GitHub]\(https://github.com/OpenVoiceOS/ovos-opendata-server\)) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (### Monitoring Tools) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (- ? Live Data Dashboard: ) Tj
1 0 0 1 50 476 Tm ([https://opendata.tigregotico.pt]\(https://opendata.tigregotico.pt\)) Tj
1 0 0 1 50 462 Tm (- ? Server Status: ) Tj
1 0 0 1 50 448 Tm ([https://metrics.tigregotico.pt/status]\(https://metrics.tigregotico.pt/status\)) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (---) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (## Benchmark Projects \(Open Data\)) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (Explore public benchmark tools for evaluating model performance:) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (| Project                                                         | Description |) Tj
1 0 0 1 50 308 Tm (|-----------------------------------------------------------------|-------------|) Tj
1 0 0 1 50 294 Tm (| [GitLocalize Bench]\(https://gitlocalize-bench.tigregotico.pt\)   | Evaluate intent ) Tj
1 0 0 1 50 280 Tm (translation coverage and performance |) Tj
1 0 0 1 50 266 Tm (| [STT Bench]\(https://stt-bench.tigregotico.pt\)                   | Test STT plugin ) Tj
1 0 0 1 50 252 Tm (accuracy across datasets and languages |) Tj
1 0 0 1 50 238 Tm (| [TTS Bench]\(https://tts-bench.tigregotico.pt\)                   | Compare TTS output ) Tj
1 0 0 1 50 224 Tm (quality across plugins |) Tj
1 0 0 1 50 210 Tm (| [Meteocat]\(https://meteocat.bench.tigregotico.pt\)               | Catalan weather query ) Tj
1 0 0 1 50 196 Tm (benchmark |) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (---) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (##  Tips for Contributors) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (- Translators: Use GitLocalizes side-by-side editor to keep intent logic intact.) Tj
1 0 0 1 50 84 Tm (- Developers: Review user-submitted errors on the dashboard to improve skill performance.) Tj
1 0 0 1 50 70 Tm (- Curious users: Explore benchmark results to see how well OVOS handles your language.) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
715 0 obj
<< /Length 2613 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (# docs/m2v_pipeline.md) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (# Model2Vec Intent Pipeline) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (The **Model2Vec Intent Pipeline** is an advanced plugin for OpenVoiceOS, designed to ) Tj
1 0 0 1 50 644 Tm (enhance intent classification using pretrained Model2Vec models. By leveraging vector-) Tj
1 0 0 1 50 630 Tm (based representations of natural language, this pipeline offers improved accuracy over ) Tj
1 0 0 1 50 616 Tm (traditional deterministic engines, especially in scenarios where intent recognition is ) Tj
1 0 0 1 50 602 Tm (challenging.) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (---) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (## Features) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (* **Model2Vec-Powered Classification:** Uses pretrained Model2Vec models for rich vector-) Tj
1 0 0 1 50 504 Tm (based intent understanding.) Tj
1 0 0 1 50 490 Tm (* **Seamless OVOS Integration:** Plug-and-play compatibility with existing OVOS intent ) Tj
1 0 0 1 50 476 Tm (pipelines.) Tj
1 0 0 1 50 462 Tm (* **Multilingual & Language-Specific Models:** Offers large multilingual models distilled ) Tj
1 0 0 1 50 448 Tm (from LaBSE and smaller, efficient language-specific models ideal for limited hardware ) Tj
1 0 0 1 50 434 Tm (\(e.g., Raspberry Pi\).) Tj
1 0 0 1 50 420 Tm (* **Dynamic Intent Syncing:** Automatically synchronizes with Adapt and Padatious intents ) Tj
1 0 0 1 50 406 Tm (at runtime.) Tj
1 0 0 1 50 392 Tm (* **Skill-Aware Matching:** Classifies *only* official OVOS skill intents, reducing false ) Tj
1 0 0 1 50 378 Tm (positives by ignoring unregistered or personal skill intents.) Tj
1 0 0 1 50 364 Tm (* **Supports Partial Translations:** Multilingual models allow usage of partially ) Tj
1 0 0 1 50 350 Tm (translated skills, provided their **dialogs** are translated.) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (---) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (## Installation) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (Install the plugin via pip:) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (```bash) Tj
1 0 0 1 50 210 Tm (pip install ovos-m2v-pipeline) Tj
1 0 0 1 50 196 Tm (```) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (---) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (## Configuration) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (Configure the plugin in your `mycroft.conf` file:) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (```json) Tj
1 0 0 1 50 70 Tm ({) Tj
1 0 0 1 50 56 Tm (  "intents": {) Tj
ET
endstream

endobj
716 0 obj
<< /Length 2779 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (    "ovos-m2v-pipeline": {) Tj
1 0 0 1 50 728 Tm (      "model": "Jarbas/ovos-model2vec-intents-LaBSE",) Tj
1 0 0 1 50 714 Tm (      "conf_high": 0.7,) Tj
1 0 0 1 50 700 Tm (      "conf_medium": 0.5,) Tj
1 0 0 1 50 686 Tm (      "conf_low": 0.15,) Tj
1 0 0 1 50 672 Tm (      "ignore_intents": []) Tj
1 0 0 1 50 658 Tm (    },) Tj
1 0 0 1 50 644 Tm (    "pipeline": [) Tj
1 0 0 1 50 630 Tm (      "converse",) Tj
1 0 0 1 50 616 Tm (      "ovos-m2v-pipeline-high",) Tj
1 0 0 1 50 602 Tm (      "padatious_high",) Tj
1 0 0 1 50 588 Tm (      "fallback_low") Tj
1 0 0 1 50 574 Tm (    ]) Tj
1 0 0 1 50 560 Tm (  }) Tj
1 0 0 1 50 546 Tm (}) Tj
1 0 0 1 50 532 Tm (```) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (**Parameters:**) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (* `model`: Path to the pretrained Model2Vec model or Hugging Face repository.) Tj
1 0 0 1 50 462 Tm (* `conf_high`: Confidence threshold for high-confidence matches \(default: 0.7\).) Tj
1 0 0 1 50 448 Tm (* `conf_medium`: Confidence threshold for medium-confidence matches \(default: 0.5\).) Tj
1 0 0 1 50 434 Tm (* `conf_low`: Confidence threshold for low-confidence matches \(default: 0.15\).) Tj
1 0 0 1 50 420 Tm (* `ignore_intents`: List of intent labels to ignore during matching.) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (> **Note:** Model2Vec models are pretrained and *do not* dynamically learn new skills at ) Tj
1 0 0 1 50 378 Tm (runtime.) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm (---) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (## How It Works) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (1. Receives a user utterance as text input.) Tj
1 0 0 1 50 280 Tm (2. Predicts intent labels using the pretrained Model2Vec embedding model.) Tj
1 0 0 1 50 266 Tm (3. Filters out any intents *not* associated with currently loaded official OVOS skills.) Tj
1 0 0 1 50 252 Tm (4. Returns the highest-confidence matching intent.) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (This process enhances intent recognition, particularly in cases where traditional parsers ) Tj
1 0 0 1 50 210 Tm (like Adapt or Padatious may struggle.) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (---) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (## Models Overview) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (* **Multilingual Model:** Over 500MB, distilled from LaBSE, supports many languages and ) Tj
1 0 0 1 50 112 Tm (partially translated skills.) Tj
1 0 0 1 50 98 Tm (* **Language-Specific Models:** Smaller \(\\~10x smaller than multilingual\), highly ) Tj
1 0 0 1 50 84 Tm (efficient, almost as accurate  ideal for devices with limited resources.) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (Models can be specified via local paths or Hugging Face repositories:) Tj
ET
endstream

endobj
717 0 obj
<< /Length 3277 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm ([OVOS Model2Vec Models on Hugging Face]\(https://huggingface.co/collections/Jarbas/ovos-) Tj
1 0 0 1 50 728 Tm (model2vec-intents-681c478aecb9979e659b17f8\)) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (---) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (## Training Data) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (The Model2Vec intent classifier is trained on a diverse, aggregated collection of intent ) Tj
1 0 0 1 50 630 Tm (examples from:) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (* OVOS LLM Augment Intent Examples  synthetic utterances generated by large language ) Tj
1 0 0 1 50 588 Tm (models for OVOS skills.) Tj
1 0 0 1 50 574 Tm (* Music Query Templates  focused on music-related intents.) Tj
1 0 0 1 50 560 Tm (* Language-Specific Skill Intents  extracted CSV files from OpenVoiceOS GitLocalize ) Tj
1 0 0 1 50 546 Tm (covering English, Portuguese, Basque, Spanish, Galician, Dutch, French, German, Catalan, ) Tj
1 0 0 1 50 532 Tm (Italian, and Danish.) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (Models are regularly updated with new data to improve performance and language coverage.) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (---) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (## Important Usage Notes) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (* **Official OVOS Skills Only:** The Model2Vec pipeline classifies intents *only* from ) Tj
1 0 0 1 50 406 Tm (official OVOS skills. For personal or custom skills, you should continue to use Adapt and ) Tj
1 0 0 1 50 392 Tm (Padatious parsers alongside Model2Vec.) Tj
1 0 0 1 50 378 Tm (* **Complementary Pipeline:** Model2Vec is designed to *augment* your intent pipeline, not) Tj
1 0 0 1 50 364 Tm ( replace Adapt or Padatious. Using all three together provides the best overall ) Tj
1 0 0 1 50 350 Tm (recognition.) Tj
1 0 0 1 50 336 Tm (* **Padatious Intent Data & Training:** Padatious intent data and example utterances are ) Tj
1 0 0 1 50 322 Tm (available in [GitLocalize]\(https://gitlocalize.com/repo/xyz\) for translations and new ) Tj
1 0 0 1 50 308 Tm (model training. The Model2Vec models are continuously updated with this data.) Tj
1 0 0 1 50 294 Tm (* **Language Support:** The multilingual model \(500MB+\) supports many languages and works ) Tj
1 0 0 1 50 280 Tm (well with partially translated skills, as long as **dialogs** are localized.) Tj
1 0 0 1 50 266 Tm (* **Optimization:** Language-specific models are on average 10x smaller and nearly as ) Tj
1 0 0 1 50 252 Tm (accurate as the multilingual model, making them ideal for constrained hardware or single-) Tj
1 0 0 1 50 238 Tm (language setups.) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (# docs/padatious_pipeline.md) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (# Padatious Pipeline) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (The **Padatious Pipeline Plugin** brings examples-based intent recognition to the ) Tj
1 0 0 1 50 126 Tm (**OpenVoiceOS \(OVOS\)** pipeline. It enables developers to define intents using example ) Tj
1 0 0 1 50 112 Tm (sentences, offering a simple and code-free way to create natural language interfaces for ) Tj
1 0 0 1 50 98 Tm (voice skills.) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (---) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
718 0 obj
<< /Length 2580 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (## Pipeline Stages) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (This plugin registers the following pipeline stages:) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (| Pipeline ID        | Description                              | Recommended Use) Tj
1 0 0 1 50 672 Tm (                       |) Tj
1 0 0 1 50 658 Tm (| ------------------ | ---------------------------------------- | ) Tj
1 0 0 1 50 644 Tm (------------------------------------- |) Tj
1 0 0 1 50 630 Tm (| `padatious_high`   | High-confidence Padatious intent matches | ? Primary stage for ) Tj
1 0 0 1 50 616 Tm (Padatious use     |) Tj
1 0 0 1 50 602 Tm (| `padatious_medium` | Medium-confidence Padatious matches      | ?? Backup if confidence ) Tj
1 0 0 1 50 588 Tm (tuning allows |) Tj
1 0 0 1 50 574 Tm (| `padatious_low`    | Low-confidence Padatious matches         | ? Not recommended \(often) Tj
1 0 0 1 50 560 Tm ( inaccurate\) |) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (Each stage is triggered based on the confidence level of the parsed intent, as configured ) Tj
1 0 0 1 50 518 Tm (in your system.) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (---) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (## Configuration) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (Configure Padatious thresholds in your `ovos.conf`:) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (```json) Tj
1 0 0 1 50 392 Tm ("intents": {) Tj
1 0 0 1 50 378 Tm (  "padatious": {) Tj
1 0 0 1 50 364 Tm (    "conf_high": 0.85,) Tj
1 0 0 1 50 350 Tm (    "conf_med": 0.65,) Tj
1 0 0 1 50 336 Tm (    "conf_low": 0.45) Tj
1 0 0 1 50 322 Tm (  }) Tj
1 0 0 1 50 308 Tm (}) Tj
1 0 0 1 50 294 Tm (```) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (These thresholds control which pipeline level receives a given intent result.) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (---) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (## Multilingual Support) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (Padatious is **excellent for multilingual environments** because intents are defined in ) Tj
1 0 0 1 50 168 Tm (plain text `.intent` files, not in code. This allows translators and non-developers to ) Tj
1 0 0 1 50 154 Tm (contribute new languages easily without touching Python.) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (To add another language, simply create a new `.intent` file in the relevant language ) Tj
1 0 0 1 50 112 Tm (folder, such as:) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (```) Tj
1 0 0 1 50 70 Tm (locale/pt-pt/weather.intent) Tj
1 0 0 1 50 56 Tm (locale/fr-fr/weather.intent) Tj
ET
endstream

endobj
719 0 obj
<< /Length 2393 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (```) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (---) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (## Defining Intents) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (Intent examples are written line-by-line in `.intent` files:) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (```) Tj
1 0 0 1 50 616 Tm (what is the weather) Tj
1 0 0 1 50 602 Tm (tell me the weather) Tj
1 0 0 1 50 588 Tm (what's the weather like) Tj
1 0 0 1 50 574 Tm (```) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (In your skill:) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (```python) Tj
1 0 0 1 50 504 Tm (from ovos_workshop.decorators import intent_handler) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (@intent_handler\("weather.intent"\)) Tj
1 0 0 1 50 462 Tm (def handle_weather\(self, message\):) Tj
1 0 0 1 50 448 Tm (    # Your code here) Tj
1 0 0 1 50 434 Tm (    pass) Tj
1 0 0 1 50 420 Tm (```) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (---) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (## Limitations) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (Padatious is reliable in terms of **not misclassifying**  it rarely picks the wrong ) Tj
1 0 0 1 50 322 Tm (intent. However, it has key limitations:) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (* **Weak paraphrase handling**: If the user speaks a sentence that doesnt closely match ) Tj
1 0 0 1 50 280 Tm (an example, Padatious will often fail to match anything at all.) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (* **Rigid phrasing required**: You may end up in a train the user to speak correctly ) Tj
1 0 0 1 50 238 Tm (scenario, instead of training the system to understand variations.) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (* **Maintenance burden for sentence diversity**: Adding more phrasing requires adding more) Tj
1 0 0 1 50 196 Tm ( sentence examples per intent, increasing effort and clutter.) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (---) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (## When to Use) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (Padatious is a good choice in OVOS when:) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (* You want **easy localization/multilingual support**.) Tj
1 0 0 1 50 70 Tm (* Youre creating **simple, personal, or demo skills**.) Tj
1 0 0 1 50 56 Tm (* You can **control or guide user phrasing**, such as in kiosk or assistant environments.) Tj
ET
endstream

endobj
720 0 obj
<< /Length 2677 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (Avoid Padatious for complex conversational use cases, skills with overlapping intents, or ) Tj
1 0 0 1 50 714 Tm (scenarios requiring broad paraphrasing support.) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (# docs/pipelines_overview.md) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (# OVOS Intent Pipeline) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (The OpenVoiceOS \(OVOS\) Intent Pipeline is a modular and extensible system designed to ) Tj
1 0 0 1 50 588 Tm (interpret user utterances and map) Tj
1 0 0 1 50 574 Tm (them to appropriate actions or responses.) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (It orchestrates various intent parsers and fallback mechanisms to ensure accurate and ) Tj
1 0 0 1 50 532 Tm (contextually relevant responses.) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (---) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (## What is an Intent Pipeline?) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (An intent pipeline in OVOS is a sequence of processing stages that analyze user input to ) Tj
1 0 0 1 50 434 Tm (determine the user's intent.) Tj
1 0 0 1 50 420 Tm (Each stage employs different strategies, ranging from high-confidence intent parsers to ) Tj
1 0 0 1 50 406 Tm (fallback mechanisms, to) Tj
1 0 0 1 50 392 Tm (interpret the input.) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (This layered approach ensures that OVOS can handle a wide range of user queries with ) Tj
1 0 0 1 50 350 Tm (varying degrees of specificity and) Tj
1 0 0 1 50 336 Tm (complexity.) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (---) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (## Pipeline Structure) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (OVOS pipelines are structured to prioritize intent matching based on confidence levels:) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (* **High Confidence**: Primary intent parsers that provide precise matches.) Tj
1 0 0 1 50 210 Tm (* **Medium Confidence**: Secondary parsers that handle less specific queries.) Tj
1 0 0 1 50 196 Tm (* **Low Confidence**: Fallback mechanisms for ambiguous or unrecognized inputs.) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (Each component in the pipeline is a plugin that can be enabled, disabled, or reordered ) Tj
1 0 0 1 50 154 Tm (according to user preferences.) Tj
1 0 0 1 50 140 Tm (This flexibility allows for customization based on specific use cases or device ) Tj
1 0 0 1 50 126 Tm (capabilities.) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (---) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (## Available Pipeline Components) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
721 0 obj
<< /Length 4178 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (Below is a list of available pipeline components, categorized by their confidence levels ) Tj
1 0 0 1 50 728 Tm (and functionalities:) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (### High Confidence Components) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (| Pipeline                            | Description) Tj
1 0 0 1 50 658 Tm (                                                     | Notes) Tj
1 0 0 1 50 644 Tm (                                                                      |   ) Tj
1 0 0 1 50 630 Tm (|-------------------------------------|---------------------------------------------------) Tj
1 0 0 1 50 616 Tm (--------------|---------------------------------------------------------------------------) Tj
1 0 0 1 50 602 Tm (-| ) Tj
1 0 0 1 50 588 Tm (| `stop_high`                         | Exact match for stop commands) Tj
1 0 0 1 50 574 Tm (                                   | Replaces [skill-ovos-) Tj
1 0 0 1 50 560 Tm (stop]\(https://github.com/OpenVoiceOS/skill-ovos-stop\) |                                   ) Tj
1 0 0 1 50 546 Tm (                                                             ) Tj
1 0 0 1 50 532 Tm (| `converse`                          | Continuous conversation interception for skills) Tj
1 0 0 1 50 518 Tm (                 |) Tj
1 0 0 1 50 504 Tm (                                                                            |             ) Tj
1 0 0 1 50 490 Tm (                                                                                   ) Tj
1 0 0 1 50 476 Tm (| `padatious_high`                    | High-confidence matches using Padatious) Tj
1 0 0 1 50 462 Tm (                         |) Tj
1 0 0 1 50 448 Tm (                                                                            |             ) Tj
1 0 0 1 50 434 Tm (                                                                                   ) Tj
1 0 0 1 50 420 Tm (| `adapt_high`                        | High-confidence matches using Adapt) Tj
1 0 0 1 50 406 Tm (                             |) Tj
1 0 0 1 50 392 Tm (                                                                            |             ) Tj
1 0 0 1 50 378 Tm (                                                                                   ) Tj
1 0 0 1 50 364 Tm (| `fallback_high`                     | High-priority fallback skill matches) Tj
1 0 0 1 50 350 Tm (                            |) Tj
1 0 0 1 50 336 Tm (                                                                            |             ) Tj
1 0 0 1 50 322 Tm (                                                                                   ) Tj
1 0 0 1 50 308 Tm (| `ocp_high`                          | High-confidence media-related queries) Tj
1 0 0 1 50 294 Tm (                           |) Tj
1 0 0 1 50 280 Tm (                                                                            |             ) Tj
1 0 0 1 50 266 Tm (                                                                                   ) Tj
1 0 0 1 50 252 Tm (| `ovos-persona-pipeline-plugin-high` | Active persona conversation \(e.g., LLM ) Tj
1 0 0 1 50 238 Tm (integration\)             |) Tj
1 0 0 1 50 224 Tm (                                                                            |) Tj
1 0 0 1 50 210 Tm (                                                                                       ) Tj
1 0 0 1 50 196 Tm (| `ovos-m2v-pipeline-high`            | Multilingual intent classifier capable of handling) Tj
1 0 0 1 50 182 Tm ( paraphrasing | Only supports **default skills**, not dynamic) Tj
1 0 0 1 50 168 Tm (                              |) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (### Medium Confidence Components) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (| Pipeline                   | Description) Tj
1 0 0 1 50 98 Tm (                                                     | Notes) Tj
1 0 0 1 50 84 Tm (                                                                      |) Tj
1 0 0 1 50 70 Tm (                                         ) Tj
1 0 0 1 50 56 Tm (|----------------------------|------------------------------------------------------------) Tj
ET
endstream

endobj
722 0 obj
<< /Length 4236 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (-----|----------------------------------------------------------------------------| ) Tj
1 0 0 1 50 728 Tm (| `stop_medium`              | Medium-confidence stop command matches) Tj
1 0 0 1 50 714 Tm (                          | Replaces [skill-ovos-) Tj
1 0 0 1 50 700 Tm (stop]\(https://github.com/OpenVoiceOS/skill-ovos-stop\) |) Tj
1 0 0 1 50 686 Tm (                                         ) Tj
1 0 0 1 50 672 Tm (| `padatious_medium`         | Medium-confidence matches using Padatious) Tj
1 0 0 1 50 658 Tm (                       |) Tj
1 0 0 1 50 644 Tm (                                                                            |) Tj
1 0 0 1 50 630 Tm (                                         ) Tj
1 0 0 1 50 616 Tm (| `adapt_medium`             | Medium-confidence matches using Adapt) Tj
1 0 0 1 50 602 Tm (                           |) Tj
1 0 0 1 50 588 Tm (                                                                            |) Tj
1 0 0 1 50 574 Tm (                                         ) Tj
1 0 0 1 50 560 Tm (| `ocp_medium`               | Medium-confidence media-related queries) Tj
1 0 0 1 50 546 Tm (                         |) Tj
1 0 0 1 50 532 Tm (                                                                            |) Tj
1 0 0 1 50 518 Tm (                                         ) Tj
1 0 0 1 50 504 Tm (| `fallback_medium`          | Medium-priority fallback skill matches) Tj
1 0 0 1 50 490 Tm (                          |) Tj
1 0 0 1 50 476 Tm (                                                                            |) Tj
1 0 0 1 50 462 Tm (                                                                                  ) Tj
1 0 0 1 50 448 Tm (| `ovos-m2v-pipeline-medium` | Multilingual intent classifier capable of handling ) Tj
1 0 0 1 50 434 Tm (paraphrasing | Only supports **default skills**, not dynamic                              ) Tj
1 0 0 1 50 420 Tm (|) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (### Low Confidence Components) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (| Pipeline                           | Description) Tj
1 0 0 1 50 350 Tm (                                                     | Notes) Tj
1 0 0 1 50 336 Tm (                                         |  ) Tj
1 0 0 1 50 322 Tm (|------------------------------------|----------------------------------------------------) Tj
1 0 0 1 50 308 Tm (-------------|-----------------------------------------------| ) Tj
1 0 0 1 50 294 Tm (| `stop_low`                         | Low-confidence stop command matches) Tj
1 0 0 1 50 280 Tm (                             | Disabled by default                           |  ) Tj
1 0 0 1 50 266 Tm (| `padatious_low`                    | Low-confidence matches using Padatious) Tj
1 0 0 1 50 252 Tm (                          | Often inaccurate; disabled by default         |   ) Tj
1 0 0 1 50 238 Tm (| `adapt_low`                        | Low-confidence matches using Adapt) Tj
1 0 0 1 50 224 Tm (                              |                                               |   ) Tj
1 0 0 1 50 210 Tm (| `ocp_low`                          | Low-confidence media-related queries) Tj
1 0 0 1 50 196 Tm (                            |                                               |   ) Tj
1 0 0 1 50 182 Tm (| `fallback_low`                     | Low-priority fallback skill matches) Tj
1 0 0 1 50 168 Tm (                             |                                               |   ) Tj
1 0 0 1 50 154 Tm (| `common_query`                     | Sends utterance to common_query skills) Tj
1 0 0 1 50 140 Tm (                          | Selects the best match among available skills |   ) Tj
1 0 0 1 50 126 Tm (| `ovos-persona-pipeline-plugin-low` | Persona catch-all fallback \(e.g., LLM integration\)) Tj
1 0 0 1 50 112 Tm (              |                                               |) Tj
1 0 0 1 50 98 Tm (                                                                                  ) Tj
1 0 0 1 50 84 Tm (| `ovos-m2v-pipeline-low`            | Multilingual intent classifier capable of handling ) Tj
1 0 0 1 50 70 Tm (paraphrasing | Only supports **default skills**, not dynamic | ) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
723 0 obj
<< /Length 2268 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (---) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (## Customizing the Pipeline) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (OVOS allows users to customize the intent pipeline through configuration files. Users can ) Tj
1 0 0 1 50 672 Tm (enable or disable specific) Tj
1 0 0 1 50 658 Tm (components, adjust their order, and set confidence thresholds to tailor the system's ) Tj
1 0 0 1 50 644 Tm (behavior to their needs. This) Tj
1 0 0 1 50 630 Tm (customization ensures that OVOS can be optimized for various applications, from simple ) Tj
1 0 0 1 50 616 Tm (command recognition to complex) Tj
1 0 0 1 50 602 Tm (conversational agents.) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (```json) Tj
1 0 0 1 50 560 Tm (  "intents": {) Tj
1 0 0 1 50 546 Tm (    "adapt": {) Tj
1 0 0 1 50 532 Tm (      "conf_high": 0.5,) Tj
1 0 0 1 50 518 Tm (      "conf_med": 0.3,) Tj
1 0 0 1 50 504 Tm (      "conf_low": 0.2) Tj
1 0 0 1 50 490 Tm (    },) Tj
1 0 0 1 50 476 Tm (    "persona": {) Tj
1 0 0 1 50 462 Tm (      "handle_fallback": true,) Tj
1 0 0 1 50 448 Tm (      "default_persona": "Remote Llama") Tj
1 0 0 1 50 434 Tm (    },) Tj
1 0 0 1 50 420 Tm (    "pipeline": [) Tj
1 0 0 1 50 406 Tm (      "ovos-m2v-pipeline-high",) Tj
1 0 0 1 50 392 Tm (      "ocp_high",) Tj
1 0 0 1 50 378 Tm (      "stop_high",) Tj
1 0 0 1 50 364 Tm (      "converse",) Tj
1 0 0 1 50 350 Tm (      "padatious_high",) Tj
1 0 0 1 50 336 Tm (      "adapt_high",) Tj
1 0 0 1 50 322 Tm (      "stop_medium",) Tj
1 0 0 1 50 308 Tm (      "adapt_medium",) Tj
1 0 0 1 50 294 Tm (      "common_qa",) Tj
1 0 0 1 50 280 Tm (      "fallback_medium",) Tj
1 0 0 1 50 266 Tm (      "fallback_low") Tj
1 0 0 1 50 252 Tm (    ]) Tj
1 0 0 1 50 238 Tm (  },) Tj
1 0 0 1 50 224 Tm (```) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (---) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (By understanding and configuring the OVOS Intent Pipeline, developers and users can ) Tj
1 0 0 1 50 154 Tm (enhance the accuracy and) Tj
1 0 0 1 50 140 Tm (responsiveness of their voice assistant applications.) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (# docs/stop_pipeline.md) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (# Stop Pipeline) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
724 0 obj
<< /Length 2760 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (The **stop pipeline** is a core component of the Open Voice OS \(OVOS\) pipeline ) Tj
1 0 0 1 50 728 Tm (architecture. It defines the logic responsible for stopping ongoing interactions with ) Tj
1 0 0 1 50 714 Tm (active skills. This includes aborting responses, halting speech, and terminating ) Tj
1 0 0 1 50 700 Tm (background tasks that skills may be performing. ) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (Because stopping is a **fundamental feature of a voice assistant**, it is implemented as a) Tj
1 0 0 1 50 658 Tm ( **dedicated pipeline plugin**, not just a fallback or intent handler.) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (---) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (## Purpose) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (A voice assistant must always be capable of responding to a "stop" command. Whether the ) Tj
1 0 0 1 50 560 Tm (user says *stop, cancel,* or another localized phrase, OVOS must quickly:) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (* Determine if a skill is actively responding) Tj
1 0 0 1 50 518 Tm (* Allow skills to confirm whether they can be stopped) Tj
1 0 0 1 50 504 Tm (* Abort conversations, questions, or spoken responses) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (The `stop` pipeline guarantees this behavior through a flexible plugin system and ) Tj
1 0 0 1 50 462 Tm (localized vocab matching.) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (---) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (## How it works) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (The stop pipeline activates based on **high-confidence** or **medium-confidence** ) Tj
1 0 0 1 50 364 Tm (utterance matches.) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (### High-confidence \(`stop_high`\)) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (This is triggered when a user says an exact match for a stop command, e.g.,:) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (* Stop) Tj
1 0 0 1 50 266 Tm (* Cancel) Tj
1 0 0 1 50 252 Tm (* Parar \(in Portuguese\)) Tj
1 0 0 1 50 238 Tm (* Stopp \(in German\)) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (The plugin:) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (1. Checks if any **active skills** can be stopped.) Tj
1 0 0 1 50 168 Tm (2. Pings active skills) Tj
1 0 0 1 50 154 Tm (3. Waits briefly \(0.5s\) for replies.) Tj
1 0 0 1 50 140 Tm (4. Calls stop on relevant skills.) Tj
1 0 0 1 50 126 Tm (5. If no skills are active, emits a **global stop**: `mycroft.stop`.) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (### Medium-confidence \(`stop_medium`\)) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (Triggered for more complex phrases that include a stop command but are not exact matches, ) Tj
1 0 0 1 50 56 Tm (such as:) Tj
ET
endstream

endobj
725 0 obj
<< /Length 2347 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (* Can you stop now?) Tj
1 0 0 1 50 714 Tm (* I dont want that anymore) Tj
1 0 0 1 50 700 Tm (* Stop playing music please) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (This match falls back to fuzzy intent matching.) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (---) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (## Localization) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (The plugin supports stop commands in multiple languages using `.voc` files stored in:) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (```) Tj
1 0 0 1 50 546 Tm (locale/) Tj
1 0 0 1 50 532 Tm (  en-us/) Tj
1 0 0 1 50 518 Tm (    stop.voc) Tj
1 0 0 1 50 504 Tm (    global_stop.voc) Tj
1 0 0 1 50 490 Tm (  pt-pt/) Tj
1 0 0 1 50 476 Tm (    stop.voc) Tj
1 0 0 1 50 462 Tm (    global_stop.voc) Tj
1 0 0 1 50 448 Tm (```) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (You can help with language support via [GitLocalize]\(\)) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (---) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (## Session Integration) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (The stop plugin interfaces with the OVOS session system:) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (* Skills that respond to `stop` will be removed from **active skill list**) Tj
1 0 0 1 50 294 Tm (* Session blacklists are respected, blacklisted skills will not be pinged) Tj
1 0 0 1 50 280 Tm (* Session state is updated after each successful stop) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (---) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (## Design Philosophy) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (* ?? **Low latency**: Matches and stops skills within 0.5 seconds) Tj
1 0 0 1 50 182 Tm (* ? **Extensible**: Other plugins can extend or override this pipeline) Tj
1 0 0 1 50 168 Tm (* ?? **Localized**: All behavior is language-aware and configurable) Tj
1 0 0 1 50 154 Tm (* ? **Resilient**: Falls back to global stop if skills are unresponsive) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (---) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (## Summary) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (The `stop` pipeline ensures that OVOS is always in control. Whether a user needs to ) Tj
1 0 0 1 50 56 Tm (quickly interrupt a skill, cancel a conversation, or shut down all interactions, the ) Tj
ET
endstream

endobj
726 0 obj
<< /Length 2634 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (`StopService` plugin provides the robust, language-aware foundation to make that possible.) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (It is **not considered optional**, all OVOS installations should include this pipeline by ) Tj
1 0 0 1 50 700 Tm (default.) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (# docs/tts_transformers.md) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (# TTS Transformers) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (**TTS Transformers** in OpenVoiceOS \(OVOS\) are plugins that process synthesized speech ) Tj
1 0 0 1 50 588 Tm (audio after the Text-to-Speech \(TTS\) engine generates it but before it's played back to ) Tj
1 0 0 1 50 574 Tm (the user. ) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (They enable post-processing of audio to apply effects, enhance clarity, voice clone or ) Tj
1 0 0 1 50 532 Tm (tailor the output to specific needs.) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (---) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (## How They Work) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (The typical flow for speech output in OVOS is:) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (1. **Dialog Generation**: The assistant formulates a textual response.) Tj
1 0 0 1 50 406 Tm (2. **Dialog Transformation**: Optional plugins modify the text to adjust tone or style.) Tj
1 0 0 1 50 392 Tm (3. **Text-to-Speech \(TTS\)**: The text is converted into speech audio.) Tj
1 0 0 1 50 378 Tm (4. **TTS Transformation**: Plugins apply audio effects or modifications to the speech.) Tj
1 0 0 1 50 364 Tm (5. **Playback**: The final audio is played back to the user.) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (TTS Transformers operate in step 4, allowing for dynamic audio enhancements without ) Tj
1 0 0 1 50 322 Tm (altering the original TTS output.) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (---) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (## Configuration) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (To enable TTS Transformers, add them to your `mycroft.conf` under the `tts_transformers` ) Tj
1 0 0 1 50 224 Tm (section:) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (```json) Tj
1 0 0 1 50 182 Tm ("tts_transformers": {) Tj
1 0 0 1 50 168 Tm (  "plugin_name": {) Tj
1 0 0 1 50 154 Tm (    // plugin-specific configuration) Tj
1 0 0 1 50 140 Tm (  }) Tj
1 0 0 1 50 126 Tm (}) Tj
1 0 0 1 50 112 Tm (```) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (Replace `"plugin_name"` with the identifier of the desired plugin and provide any ) Tj
1 0 0 1 50 70 Tm (necessary configuration parameters.) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
727 0 obj
<< /Length 2252 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (---) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (## Available TTS Transformer Plugins) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (### **OVOS SoX TTS Transformer**) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (* **Purpose**: Applies various audio effects using SoX \(Sound eXchange\) to the TTS output.) Tj
1 0 0 1 50 644 Tm (* **Features**:) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (    * Pitch shifting) Tj
1 0 0 1 50 602 Tm (    * Reverb) Tj
1 0 0 1 50 588 Tm (    * Tempo adjustment) Tj
1 0 0 1 50 574 Tm (    * Equalization) Tj
1 0 0 1 50 560 Tm (    * Noise reduction) Tj
1 0 0 1 50 546 Tm (    * And many more) Tj
1 0 0 1 50 532 Tm (  ) Tj
1 0 0 1 50 518 Tm (* **Installation**:) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (```bash) Tj
1 0 0 1 50 476 Tm (  pip install ovos-tts-transformer-sox-plugin) Tj
1 0 0 1 50 462 Tm (```) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (* **Configuration Example**:) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (```json) Tj
1 0 0 1 50 392 Tm (  "tts_transformers": {) Tj
1 0 0 1 50 378 Tm (    "ovos-tts-transformer-sox-plugin": {) Tj
1 0 0 1 50 364 Tm (      "effects": ["pitch 300", "reverb"]) Tj
1 0 0 1 50 350 Tm (    }) Tj
1 0 0 1 50 336 Tm (  }) Tj
1 0 0 1 50 322 Tm (```) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (* **Requirements**: Ensure SoX is installed and available in your system's PATH.) Tj
1 0 0 1 50 280 Tm (* **Source**: [GitHub Repository]\(https://github.com/OpenVoiceOS/ovos-tts-transformer-sox-) Tj
1 0 0 1 50 266 Tm (plugin\)) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (---) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (## Creating Custom TTS Transformers) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (To develop your own TTS Transformer:) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (**Create a Python Class**:) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (```python) Tj
1 0 0 1 50 112 Tm (from ovos_plugin_manager.templates.transformers import TTSTransformer) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (class MyCustomTTSTransformer\(TTSTransformer\):) Tj
1 0 0 1 50 70 Tm (   def __init__\(self, config=None\):) Tj
1 0 0 1 50 56 Tm (       super\(\).__init__\("my-custom-tts-transformer", priority=10, config=config\)) Tj
ET
endstream

endobj
728 0 obj
<< /Length 2406 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (   def transform\(self, wav_file: str, context: dict = None\) -> Tuple[str, dict]:) Tj
1 0 0 1 50 714 Tm (       """Transform passed wav_file and return path to transformed file""") Tj
1 0 0 1 50 700 Tm (       # Apply custom audio processing to wav_file) Tj
1 0 0 1 50 686 Tm (       return modified_wav_file, context) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (```) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (**Register as a Plugin**:) Tj
1 0 0 1 50 588 Tm (In your `setup.py`, include:) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (```python) Tj
1 0 0 1 50 546 Tm (entry_points={) Tj
1 0 0 1 50 532 Tm (   'ovos.plugin.tts_transformer': [) Tj
1 0 0 1 50 518 Tm (       'my-custom-tts-transformer = my_module:MyCustomTTSTransformer') Tj
1 0 0 1 50 504 Tm (   ]) Tj
1 0 0 1 50 490 Tm (}) Tj
1 0 0 1 50 476 Tm (```) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (**Install and Configure**:) Tj
1 0 0 1 50 420 Tm (After installation, add your transformer to the `mycroft.conf`:) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (```json) Tj
1 0 0 1 50 378 Tm ("tts_transformers": {) Tj
1 0 0 1 50 364 Tm ( "my-custom-tts-transformer": {}) Tj
1 0 0 1 50 350 Tm (}) Tj
1 0 0 1 50 336 Tm (```) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (---) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (By leveraging TTS Transformers, you can enhance the auditory experience of your OVOS ) Tj
1 0 0 1 50 266 Tm (assistant, tailoring speech output to better suit your preferences or application ) Tj
1 0 0 1 50 252 Tm (requirements.\([ovoshatchery.github.io][4]\)) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (# docs/utterance_transformers.md) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (# Utterance Transformers) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm (**Utterance Transformers** in OpenVoiceOS \(OVOS\) are plugins that process and modify user ) Tj
1 0 0 1 50 126 Tm (utterances immediately after speech-to-text \(STT\) conversion but before intent ) Tj
1 0 0 1 50 112 Tm (recognition. They serve to enhance the accuracy and flexibility of the assistant by ) Tj
1 0 0 1 50 98 Tm (correcting errors, normalizing input, and handling multilingual scenarios.) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (---) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
729 0 obj
<< /Length 2424 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (## How They Work) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (1. **Speech Recognition**: The user's spoken input is transcribed into text by the STT ) Tj
1 0 0 1 50 700 Tm (engine.) Tj
1 0 0 1 50 686 Tm (2. **Transformation Phase**: The transcribed text passes through any active utterance ) Tj
1 0 0 1 50 672 Tm (transformers.) Tj
1 0 0 1 50 658 Tm (3. **Intent Recognition**: The transformed text is then processed by the intent ) Tj
1 0 0 1 50 644 Tm (recognition system to determine the appropriate response.) Tj
1 0 0 1 50 630 Tm () Tj
1 0 0 1 50 616 Tm (This sequence ensures that any necessary preprocessing is applied to the user's input, ) Tj
1 0 0 1 50 602 Tm (improving the reliability of intent matching.) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (---) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (## Configuration) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (To enable utterance transformers, add them to your `mycroft.conf` file under the ) Tj
1 0 0 1 50 504 Tm (`utterance_transformers` section:) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (```json) Tj
1 0 0 1 50 462 Tm ("utterance_transformers": {) Tj
1 0 0 1 50 448 Tm (  "plugin_name": {) Tj
1 0 0 1 50 434 Tm (    // plugin-specific configuration) Tj
1 0 0 1 50 420 Tm (  }) Tj
1 0 0 1 50 406 Tm (}) Tj
1 0 0 1 50 392 Tm (```) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (Replace `"plugin_name"` with the identifier of the desired plugin and provide any ) Tj
1 0 0 1 50 350 Tm (necessary configuration parameters.) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm (---) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (## Available Utterance Transformer Plugins) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (### **OVOS Utterance Normalizer Plugin**) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (* **Purpose**: Standardizes user input by expanding contractions, converting numbers to ) Tj
1 0 0 1 50 224 Tm (words, and removing unnecessary punctuation.) Tj
1 0 0 1 50 210 Tm (* **Example**:) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (    * Input: `"I'm 5 years old."`) Tj
1 0 0 1 50 168 Tm (    * Output: `"I am five years old"`) Tj
1 0 0 1 50 154 Tm (  ) Tj
1 0 0 1 50 140 Tm (* **Installation**:) Tj
1 0 0 1 50 126 Tm () Tj
1 0 0 1 50 112 Tm (```bash) Tj
1 0 0 1 50 98 Tm (pip install ovos-utterance-normalizer) Tj
1 0 0 1 50 84 Tm (```) Tj
1 0 0 1 50 70 Tm (* **Configuration**:) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
730 0 obj
<< /Length 2425 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (```json) Tj
1 0 0 1 50 728 Tm ("utterance_transformers": {) Tj
1 0 0 1 50 714 Tm (  "ovos-utterance-normalizer": {}) Tj
1 0 0 1 50 700 Tm (}) Tj
1 0 0 1 50 686 Tm (```) Tj
1 0 0 1 50 672 Tm (* **Source**: [GitHub Repository]\(https://github.com/OpenVoiceOS/ovos-utterance-) Tj
1 0 0 1 50 658 Tm (normalizer\)) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (---) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (### **OVOS Utterance Corrections Plugin**) Tj
1 0 0 1 50 588 Tm () Tj
1 0 0 1 50 574 Tm (* **Purpose**: Applies predefined corrections to common misrecognitions or user-defined ) Tj
1 0 0 1 50 560 Tm (replacements to improve intent matching.) Tj
1 0 0 1 50 546 Tm (* **Features**:) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (    * Full utterance replacements via `corrections.json`) Tj
1 0 0 1 50 504 Tm (    * Word-level replacements via `word_corrections.json`) Tj
1 0 0 1 50 490 Tm (    * Regex-based pattern replacements via `regex_corrections.json`) Tj
1 0 0 1 50 476 Tm (  ) Tj
1 0 0 1 50 462 Tm (* **Example**:) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (    * Input: `"shalter is a switch"`) Tj
1 0 0 1 50 420 Tm (    * Output: `"schalter is a switch"`) Tj
1 0 0 1 50 406 Tm (  ) Tj
1 0 0 1 50 392 Tm (* **Installation**:) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (```bash) Tj
1 0 0 1 50 350 Tm (pip install ovos-utterance-corrections-plugin) Tj
1 0 0 1 50 336 Tm (```) Tj
1 0 0 1 50 322 Tm (* **Configuration**:) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (```json) Tj
1 0 0 1 50 280 Tm ("utterance_transformers": {) Tj
1 0 0 1 50 266 Tm (  "ovos-utterance-corrections-plugin": {}) Tj
1 0 0 1 50 252 Tm (}) Tj
1 0 0 1 50 238 Tm (```) Tj
1 0 0 1 50 224 Tm (* **Source**: [GitHub Repository]\(https://github.com/OpenVoiceOS/ovos-utterance-) Tj
1 0 0 1 50 210 Tm (corrections-plugin\)) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (---) Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (### **OVOS Utterance Cancel Plugin**) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (* **Purpose**: Detects phrases indicating the user wishes to cancel or ignore the current ) Tj
1 0 0 1 50 112 Tm (command and prevents further processing.) Tj
1 0 0 1 50 98 Tm (* **Example**:) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (    * Input: `"Hey Mycroft, can you tell me the... umm... oh, nevermind that"`) Tj
1 0 0 1 50 56 Tm (    * Output: *Utterance is discarded; no action taken*) Tj
ET
endstream

endobj
731 0 obj
<< /Length 2331 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (  ) Tj
1 0 0 1 50 728 Tm (* **Installation**:) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (```bash) Tj
1 0 0 1 50 686 Tm (pip install ovos-utterance-plugin-cancel) Tj
1 0 0 1 50 672 Tm (```) Tj
1 0 0 1 50 658 Tm (* **Configuration**:) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (```json) Tj
1 0 0 1 50 616 Tm ("utterance_transformers": {) Tj
1 0 0 1 50 602 Tm (  "ovos-utterance-plugin-cancel": {}) Tj
1 0 0 1 50 588 Tm (}) Tj
1 0 0 1 50 574 Tm (```) Tj
1 0 0 1 50 560 Tm (* **Source**: [GitHub Repository]\(https://github.com/OpenVoiceOS/ovos-utterance-plugin-) Tj
1 0 0 1 50 546 Tm (cancel\)) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (---) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (### **OVOS Bidirectional Translation Plugin**) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (* **Purpose**: Detects the language of the user's input and translates it to the ) Tj
1 0 0 1 50 448 Tm (assistant's primary language if necessary, enabling multilingual interactions.) Tj
1 0 0 1 50 434 Tm (* **Features**:) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (    * Language detection and translation to primary language) Tj
1 0 0 1 50 392 Tm (    * Optional translation of responses back to the user's language) Tj
1 0 0 1 50 378 Tm (  ) Tj
1 0 0 1 50 364 Tm (* **Example**:) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (    * Input: `"Cul es el clima hoy?"` \(Spanish\)) Tj
1 0 0 1 50 322 Tm (    * Output: `"What is the weather today?"` \(translated to English for processing\)) Tj
1 0 0 1 50 308 Tm (  ) Tj
1 0 0 1 50 294 Tm (* **Installation**:) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (```bash) Tj
1 0 0 1 50 252 Tm (pip install ovos-bidirectional-translation-plugin) Tj
1 0 0 1 50 238 Tm (```) Tj
1 0 0 1 50 224 Tm (* **Configuration**:) Tj
1 0 0 1 50 210 Tm () Tj
1 0 0 1 50 196 Tm (```json) Tj
1 0 0 1 50 182 Tm ("utterance_transformers": {) Tj
1 0 0 1 50 168 Tm (    "ovos-bidirectional-utterance-transformer": {) Tj
1 0 0 1 50 154 Tm (      "verify_lang": true,) Tj
1 0 0 1 50 140 Tm (      "ignore_invalid_langs": true) Tj
1 0 0 1 50 126 Tm (    }) Tj
1 0 0 1 50 112 Tm (}) Tj
1 0 0 1 50 98 Tm (```) Tj
1 0 0 1 50 84 Tm (* **Source**: [GitHub Repository]\(https://github.com/OpenVoiceOS/ovos-bidirectional-) Tj
1 0 0 1 50 70 Tm (translation-plugin\)) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
732 0 obj
<< /Length 2286 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (---) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (## Creating Custom Utterance Transformers) Tj
1 0 0 1 50 700 Tm () Tj
1 0 0 1 50 686 Tm (To develop your own utterance transformer:) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (**Create a Python Class**:) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (```python) Tj
1 0 0 1 50 616 Tm (from ovos_plugin_manager.templates.transformers import UtteranceTransformer) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (class MyCustomTransformer\(UtteranceTransformer\):) Tj
1 0 0 1 50 574 Tm (   def __init__\(self, config=None\):) Tj
1 0 0 1 50 560 Tm (       super\(\).__init__\("my-custom-transformer", priority=10, config=config\)) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (   def transform\(self, utterances, context\):) Tj
1 0 0 1 50 518 Tm (       # Modify the utterances as needed) Tj
1 0 0 1 50 504 Tm (       return modified_utterances, context) Tj
1 0 0 1 50 490 Tm (```) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (**Register as a Plugin**:) Tj
1 0 0 1 50 448 Tm (In your `setup.py`, include:) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (```python) Tj
1 0 0 1 50 406 Tm (entry_points={) Tj
1 0 0 1 50 392 Tm (   'ovos.plugin.utterance_transformer': [) Tj
1 0 0 1 50 378 Tm (       'my-custom-transformer = my_module:MyCustomTransformer') Tj
1 0 0 1 50 364 Tm (   ]) Tj
1 0 0 1 50 350 Tm (}) Tj
1 0 0 1 50 336 Tm (```) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (**Install and Configure**:) Tj
1 0 0 1 50 294 Tm (After installation, add your transformer to the `mycroft.conf`:) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (```json) Tj
1 0 0 1 50 252 Tm ("utterance_transformers": {) Tj
1 0 0 1 50 238 Tm ( "my-custom-transformer": {}) Tj
1 0 0 1 50 224 Tm (}) Tj
1 0 0 1 50 210 Tm (```) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm () Tj
1 0 0 1 50 154 Tm (# it/core.md) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (# ovos-core) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm ([OpenVoiceOS]\(https://openvoiceos.org\)  una assistente vocale open source che permette di) Tj
1 0 0 1 50 84 Tm ( dialogare con i tuoi dispositivi.) Tj
1 0 0 1 50 70 Tm () Tj
1 0 0 1 50 56 Tm (OpenVoiceOS ha un design completamente modulare, tutti i suoi componenti sono sviluppati ) Tj
ET
endstream

endobj
733 0 obj
<< /Length 2980 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (come plugin. Ci significa che non solo  un ottimo assistente vocale, ma  anche una ) Tj
1 0 0 1 50 728 Tm (bella libreria di funzioni vocali!) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (`ovos-core`  "il cervello" di OpenVoiceOS, tutti i suoi componenti e gli algoritmi di ) Tj
1 0 0 1 50 686 Tm (Natural Language Processing vengono gestiti qui.) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (## Gestione delle competenze) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (Il sistema di gestione delle competenze, <strong>skills service</strong> in inglese,  ) Tj
1 0 0 1 50 616 Tm (responsabile per la gestione delle skills e degli intenti.) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (Tutte le richieste all'assistente vocale sono gestite dal servizio di gestione delle ) Tj
1 0 0 1 50 574 Tm (skills, il cervello di OVOS) Tj
1 0 0 1 50 560 Tm () Tj
1 0 0 1 50 546 Tm (OVOS  davvero modulare. Ad esempio, tutti i plugins di Mycroft funzionano senza problemi ) Tj
1 0 0 1 50 532 Tm (fino alla versione **0.1.0** di `ovos-core`!) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (Al momento, tutte le skills sono semplici pacchetti Python. Una volta installate saranno ) Tj
1 0 0 1 50 490 Tm (caricati automaticamente da `ovos-core`) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (Importante! A partire da `ovos-core` **0.0.8**  possibile provare una skill senza dover ) Tj
1 0 0 1 50 448 Tm (installare tutto, ma semplicemente usando `ovos-workshop`, un sistema di contenitori che ) Tj
1 0 0 1 50 434 Tm (si basa su [ovos-docker]\(https://openvoiceos.github.io/ovos-docker\)) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm (Questa funzione si rivela essere utile soprattutto durante lo sviluppo delle skills, dove ) Tj
1 0 0 1 50 392 Tm (bisogna fare molte prove prima di creare un pacchetto.) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (```bash) Tj
1 0 0 1 50 350 Tm (ovos-skill-launcher {skill_id} [path/to/my/skill_id]) Tj
1 0 0 1 50 336 Tm (```) Tj
1 0 0 1 50 322 Tm () Tj
1 0 0 1 50 308 Tm (## Configurazione) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (```javascript) Tj
1 0 0 1 50 266 Tm ("skills": {) Tj
1 0 0 1 50 252 Tm () Tj
1 0 0 1 50 238 Tm (    // blacklisted skills to not load) Tj
1 0 0 1 50 224 Tm (    // NB: This is the skill_id, usually the basename\(\) of the directory where the skill ) Tj
1 0 0 1 50 210 Tm (lives, so if) Tj
1 0 0 1 50 196 Tm (     // the skill you want to blacklist is in /usr/share/mycroft/skills/mycroft-) Tj
1 0 0 1 50 182 Tm (alarm.mycroftai/) Tj
1 0 0 1 50 168 Tm (    // then you should write `["mycroft-alarm.mycroftai"]` below.) Tj
1 0 0 1 50 154 Tm (    "blacklisted_skills": [],) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (    // fallback skill configuration \(see below\)) Tj
1 0 0 1 50 112 Tm (    "fallbacks": {...},) Tj
1 0 0 1 50 98 Tm () Tj
1 0 0 1 50 84 Tm (    // converse stage configuration \(see below\)) Tj
1 0 0 1 50 70 Tm (    "converse": {...}) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
734 0 obj
<< /Length 2880 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (},) Tj
1 0 0 1 50 728 Tm (```) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (## Utterance transformers) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (**Introdotto** da `ovos-core` **v.0.0.8**) Tj
1 0 0 1 50 658 Tm () Tj
1 0 0 1 50 644 Tm (Originariamente sviluppato da <a>Neon.ai</a>, la <strong>utterance transformer</strong> ) Tj
1 0 0 1 50 630 Tm (permette a `ovos-core` di ricevere una richiesta in linguaggio naturale o una `utterance` ) Tj
1 0 0 1 50 616 Tm (da un utilizzatore, e di inviarla a un plugin di "pre trattamento".) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (Il framework dei `utterance` transformers  costituito da un numero qualsiasi di plugin ) Tj
1 0 0 1 50 574 Tm (ordinati per priorit \(definita dallo sviluppatore\). `utterance` e messaggio.`context` ) Tj
1 0 0 1 50 560 Tm (vengono quindi inviati a tutti i plugin che li analizzeranno in modo sequenziale.) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (![imagem]\(https://github.com/OpenVoiceOS/ovos-technical-) Tj
1 0 0 1 50 518 Tm (manual/assets/33701864/75b67a91-dd8d-48cd-a146-91988bbbf374\)) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (Per attivare un nuovo `utterance transformer`  sufficiente configurarlo in ) Tj
1 0 0 1 50 476 Tm (<code>mycroft.conf</code> dopo averlo installato) Tj
1 0 0 1 50 462 Tm () Tj
1 0 0 1 50 448 Tm (```javascript) Tj
1 0 0 1 50 434 Tm (// To enable a utterance transformer plugin just add it's name with any relevant config) Tj
1 0 0 1 50 420 Tm (// these plugins can mutate the utterance between STT and the Intent stage) Tj
1 0 0 1 50 406 Tm (// they may also modify message.context with metadata) Tj
1 0 0 1 50 392 Tm (// plugins only load if they are installed and enabled in this section) Tj
1 0 0 1 50 378 Tm ("utterance_transformers": {) Tj
1 0 0 1 50 364 Tm () Tj
1 0 0 1 50 350 Tm ( "ovos-utterance-normalizer": {},) Tj
1 0 0 1 50 336 Tm () Tj
1 0 0 1 50 322 Tm ( // cancel utterances mid command) Tj
1 0 0 1 50 308 Tm ( "ovos-utterance-plugin-cancel": {},) Tj
1 0 0 1 50 294 Tm (  ) Tj
1 0 0 1 50 280 Tm ( // define utterance fixes via fuzzy match ~/.local/share/mycroft/corrections.json) Tj
1 0 0 1 50 266 Tm ( // define unconditional replacements at word level ) Tj
1 0 0 1 50 252 Tm (~/.local/share/mycroft/word_corrections.json) Tj
1 0 0 1 50 238 Tm ( "ovos-utterance-corrections-plugin": {},) Tj
1 0 0 1 50 224 Tm ( ) Tj
1 0 0 1 50 210 Tm ( // translation plugin) Tj
1 0 0 1 50 196 Tm ( "ovos-utterance-translation-plugin": {) Tj
1 0 0 1 50 182 Tm (   "bidirectional": true,) Tj
1 0 0 1 50 168 Tm (   "verify_lang": false,) Tj
1 0 0 1 50 154 Tm (   "ignore_invalid": true,) Tj
1 0 0 1 50 140 Tm (   "translate_secondary_langs": false) Tj
1 0 0 1 50 126 Tm ( }) Tj
1 0 0 1 50 112 Tm (},) Tj
1 0 0 1 50 98 Tm (```) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (## Metadata Transformers) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
735 0 obj
<< /Length 2728 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (**Introdotto** da `ovos-core` **v.0.0.8**) Tj
1 0 0 1 50 728 Tm () Tj
1 0 0 1 50 714 Tm (Come gli <strong>utterance transformers</strong>, questi plugins trasformano solo il ) Tj
1 0 0 1 50 700 Tm (`message.context`.) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (```javascript) Tj
1 0 0 1 50 658 Tm (// To enable a metadata transformer plugin just add it's name with any relevant config) Tj
1 0 0 1 50 644 Tm (// these plugins can mutate the message.context between STT and the Intent stage) Tj
1 0 0 1 50 630 Tm ("metadata_transformers": {},) Tj
1 0 0 1 50 616 Tm (```) Tj
1 0 0 1 50 602 Tm () Tj
1 0 0 1 50 588 Tm (## Pipelines) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (**Introdotto** da `ovos-core` **v.0.0.8**) Tj
1 0 0 1 50 546 Tm () Tj
1 0 0 1 50 532 Tm (I concetto di pipeline configurabile  stato introdotto con <code>ovos-core</code> ) Tj
1 0 0 1 50 518 Tm (<strong>v.0.0.8</strong> ed  pianificato per diventare completamente operativo con la ) Tj
1 0 0 1 50 504 Tm (versione <strong>0.1.0</strong>.) Tj
1 0 0 1 50 490 Tm () Tj
1 0 0 1 50 476 Tm (Le pipeline includono parser di intenti, framework di conversazione, di query comuni e di ) Tj
1 0 0 1 50 462 Tm (skills di fallback.) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (```javascript) Tj
1 0 0 1 50 420 Tm (  // Intent Pipeline / plugins config) Tj
1 0 0 1 50 406 Tm (  "intents" : {) Tj
1 0 0 1 50 392 Tm (    // the pipeline is a ordered set of frameworks to send an utterance too) Tj
1 0 0 1 50 378 Tm (    // if one of the frameworks fails the next one is used, until an answer is found) Tj
1 0 0 1 50 364 Tm (    // NOTE: if padatious is not installed, it will be replaced with padacioso \(much ) Tj
1 0 0 1 50 350 Tm (slower\)) Tj
1 0 0 1 50 336 Tm (    // in the future these will become plugins, and new pipeline stages can be added by ) Tj
1 0 0 1 50 322 Tm (end users) Tj
1 0 0 1 50 308 Tm (    "pipeline": [) Tj
1 0 0 1 50 294 Tm (        "stop_high",) Tj
1 0 0 1 50 280 Tm (        "converse",) Tj
1 0 0 1 50 266 Tm (        "padatious_high",) Tj
1 0 0 1 50 252 Tm (        "adapt_high",) Tj
1 0 0 1 50 238 Tm (        "fallback_high",) Tj
1 0 0 1 50 224 Tm (        "stop_medium",) Tj
1 0 0 1 50 210 Tm (        "padatious_medium",) Tj
1 0 0 1 50 196 Tm (        "adapt_medium",) Tj
1 0 0 1 50 182 Tm (        "adapt_low",) Tj
1 0 0 1 50 168 Tm (        "common_qa",) Tj
1 0 0 1 50 154 Tm (        "fallback_medium",) Tj
1 0 0 1 50 140 Tm (        "fallback_low") Tj
1 0 0 1 50 126 Tm (    ]) Tj
1 0 0 1 50 112 Tm (  },) Tj
1 0 0 1 50 98 Tm (```) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (La maggior parte dei componenti della pipeline potr essere configurata. Per esempio:) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
736 0 obj
<< /Length 3474 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (pipeline | descrizione | note) Tj
1 0 0 1 50 728 Tm (--- | --- | ---) Tj
1 0 0 1 50 714 Tm (stop_high | il comando di "stop" corrisponde esattamente | rimpiazza [OpenVoiceOS/skill-) Tj
1 0 0 1 50 700 Tm (ovos-stop]\(https://github.com/OpenVoiceOS/skill-ovos-stop\)) Tj
1 0 0 1 50 686 Tm (converse | intercettazione continua delle conversazioni |) Tj
1 0 0 1 50 672 Tm (padacioso_high | fidarsi ciecamente di padacioso | estremamente lento!!! <br> disabilitato) Tj
1 0 0 1 50 658 Tm (padatious_high | fidarsi ciecamente di padatious |) Tj
1 0 0 1 50 644 Tm (adapt_high | fidarsi ciecamente di adapt |) Tj
1 0 0 1 50 630 Tm (fallback_high | alta priorit della skill di ripiego |) Tj
1 0 0 1 50 616 Tm (stop_medium | il comando di "stop" corrisponde all'incirca | rimpiazza [OpenVoiceOS/skill-) Tj
1 0 0 1 50 602 Tm (ovos-stop]\(https://github.com/OpenVoiceOS/skill-ovos-stop\)) Tj
1 0 0 1 50 588 Tm (padacioso_medium | fidarsi cos cos di padacioso | estremamente lento!!! <br> ) Tj
1 0 0 1 50 574 Tm (disabilitato) Tj
1 0 0 1 50 560 Tm (padatious_medium | fidarsi cos cos di padatious |) Tj
1 0 0 1 50 546 Tm (adapt_medium | fidarsi cos cos di adapt |) Tj
1 0 0 1 50 532 Tm (adapt_low | fidarsi appena di adapt |) Tj
1 0 0 1 50 518 Tm (common_query | invia l'utterance alle skills di common_query e seleziona la corrispondenza) Tj
1 0 0 1 50 504 Tm ( migliore |) Tj
1 0 0 1 50 490 Tm (fallback_medium | media priorit della skill di ripiego |) Tj
1 0 0 1 50 476 Tm (stop_low | fidarsi appena del comando "stop" captato | disabilitato) Tj
1 0 0 1 50 462 Tm (padacioso_low | fidarsi appena di padacioso | estremamente lento!!! <br> disabilitato) Tj
1 0 0 1 50 448 Tm (padatious_low | fidarsi appena di padatious | sbaglia quasi sempre<br> disabilitato) Tj
1 0 0 1 50 434 Tm (fallback_low | bassa priorit della skill di ripiego | ) Tj
1 0 0 1 50 420 Tm () Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (# it/index.md) Tj
1 0 0 1 50 378 Tm () Tj
1 0 0 1 50 364 Tm (# Manuale tecnico di OpenVoiceOS) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (![]\(https://github.com/OpenVoiceOS/ovos_assets/blob/master/Logo/ovos-) Tj
1 0 0 1 50 322 Tm (logo-512.png?raw=true\)) Tj
1 0 0 1 50 308 Tm () Tj
1 0 0 1 50 294 Tm (Benvenuti nella documentazione per sviluppatori OVOS.) Tj
1 0 0 1 50 280 Tm () Tj
1 0 0 1 50 266 Tm (Se non stai cercando di sviluppare qualcosa per OpenVoiceOS, i [documenti della ) Tj
1 0 0 1 50 252 Tm (community]\(https://openvoiceos.github.io/community-docs\) sono sicuramente una lettura pi ) Tj
1 0 0 1 50 238 Tm (digesta.) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (## Prospettiva) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (OVOS aspira ad essere un sistema operativo completamente vocale, e come tale ha bisogno di) Tj
1 0 0 1 50 168 Tm ( molte applicazioni e framework. OVOS fornisce tutti gli strumenti necessari per integrare) Tj
1 0 0 1 50 154 Tm ( la voce nei tuoi progetti.) Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (Il tipico caso d'uso di OVOS  come assistente vocale, `"Hey Mycroft, cos' ..."` , ma ) Tj
1 0 0 1 50 112 Tm (come sistema operativo completamente vocale OVOS pu essere personalizzato per molti altri) Tj
1 0 0 1 50 98 Tm ( usi. La nostra comunit si concentra su progetti che miraro a integrare OVOS in robot, ) Tj
1 0 0 1 50 84 Tm (mobili, specchi intelligenti, applicazioni cloud, TV, IoT e altro ancora \(si, anche un ) Tj
1 0 0 1 50 70 Tm (manichino!\)) Tj
1 0 0 1 50 56 Tm () Tj
ET
endstream

endobj
737 0 obj
<< /Length 3391 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm (I progetti qui elencati sono delle "distribuzioni OVOS", combinazioni di pacchetti OVOS ) Tj
1 0 0 1 50 728 Tm (create per fornire uno stack completo di assistenti vocali un po' per tutti i gusti.) Tj
1 0 0 1 50 714 Tm () Tj
1 0 0 1 50 700 Tm (- [raspOVOS]\(https://github.com/OpenVoiceOS/raspOVOS\) - ottimizzato per Raspberry Pi, ) Tj
1 0 0 1 50 686 Tm (costruito sul [sistema operativo Raspberry Pi]\(https://www.raspberrypi.com/software/\)) Tj
1 0 0 1 50 672 Tm () Tj
1 0 0 1 50 658 Tm (- [ovos-buildroot]\(https://github.com/OpenVoiceOS/ovos-buildroot\) - Linux minimale per ) Tj
1 0 0 1 50 644 Tm (dispositivi embedded, basato su [ovos-docker]\(https://github.com/OpenVoiceOS/ovos-docker/\)) Tj
1 0 0 1 50 630 Tm ( e [buildroot]\(https://buildroot.org/\)) Tj
1 0 0 1 50 616 Tm () Tj
1 0 0 1 50 602 Tm (- [ovos-installer]\(https://github.com/OpenVoiceOS/ovos-installer\) - configura OVOS su un ) Tj
1 0 0 1 50 588 Tm (sistema operativo esistente utilizzando un perfetto equilibrio di scripts e ansible.) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (In questi documenti troverai informazioni sull'architettura di OVOS, i diversi tipi di ) Tj
1 0 0 1 50 546 Tm (plugin disponibili e le linee guida per lo sviluppo di nuove applicazioni per OVOS.) Tj
1 0 0 1 50 532 Tm () Tj
1 0 0 1 50 518 Tm (## Altre risorse) Tj
1 0 0 1 50 504 Tm () Tj
1 0 0 1 50 490 Tm (La documentazione per utilizzatori finali  pubblicata automaticamente su ) Tj
1 0 0 1 50 476 Tm ([https://openvoiceos.github.io/community-docs]\(https://openvoiceos.github.io/community-) Tj
1 0 0 1 50 462 Tm (docs\)) Tj
1 0 0 1 50 448 Tm () Tj
1 0 0 1 50 434 Tm (La documentazione specifica di Docker  disponibile su ) Tj
1 0 0 1 50 420 Tm ([https://openvoiceos.github.io/ovos-docker]\(https://openvoiceos.github.io/ovos-docker/\)) Tj
1 0 0 1 50 406 Tm () Tj
1 0 0 1 50 392 Tm (Un indice di tutti i messaggi bus emessi o ascoltati da tutti i progetti nelle repository ) Tj
1 0 0 1 50 378 Tm (OVOS pu essere trovato su ) Tj
1 0 0 1 50 364 Tm ([https://openvoiceos.github.io/message_spec]\(https://openvoiceos.github.io/message_spec/\)) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (Esiste anche il progetto HiveMind per creare clusters di assistenti vocali. La sua ) Tj
1 0 0 1 50 322 Tm (documentazione dedicata pu essere trovata su [https://jarbashivemind.github.io/HiveMind-) Tj
1 0 0 1 50 308 Tm (community-docs/]\(https://jarbashivemind.github.io/HiveMind-community-docs/\)) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (## Contribuire alla documentazione) Tj
1 0 0 1 50 266 Tm () Tj
1 0 0 1 50 252 Tm (La documentazione per sviluppatori OVOS  scritta e gestita da utenti proprio come te!) Tj
1 0 0 1 50 238 Tm () Tj
1 0 0 1 50 224 Tm (Pensa a questi documenti come punto di partenza e non dimenticare di contribuire laddove ) Tj
1 0 0 1 50 210 Tm (trovi un errore o una mancanza.) Tj
1 0 0 1 50 196 Tm () Tj
1 0 0 1 50 182 Tm (Per favore, apri [Issues e Pull Requests]\(https://github.com/OpenVoiceOS/ovos-technical-) Tj
1 0 0 1 50 168 Tm (manual\) !) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm () Tj
1 0 0 1 50 126 Tm (# it/why.md) Tj
1 0 0 1 50 112 Tm () Tj
1 0 0 1 50 98 Tm (# Informazioni su OpenVoiceOS) Tj
1 0 0 1 50 84 Tm () Tj
1 0 0 1 50 70 Tm (Presentazione di OpenVoiceOS: l'assistente vocale intelligente rispettoso della privacy e ) Tj
1 0 0 1 50 56 Tm (open source.) Tj
ET
endstream

endobj
738 0 obj
<< /Length 3254 >>
stream
BT
/F1 11 Tf
1 0 0 1 50 742 Tm () Tj
1 0 0 1 50 728 Tm (OpenVoiceOS  un nuovo attore nel mercato degli assistenti vocali, che offre ) Tj
1 0 0 1 50 714 Tm (un'alternativa potente e flessibile a soluzioni proprietarie come Amazon Echo e Google ) Tj
1 0 0 1 50 700 Tm (Home.) Tj
1 0 0 1 50 686 Tm () Tj
1 0 0 1 50 672 Tm (Con OpenVoiceOS hai il controllo completo sui tuoi dati personali e puoi facilmente ) Tj
1 0 0 1 50 658 Tm (personalizzare e aggiungere nuove funzionalit al tuo assistente vocale.) Tj
1 0 0 1 50 644 Tm () Tj
1 0 0 1 50 630 Tm (Basato su software open source, OpenVoiceOS  progettato per fornire agli utenti ) Tj
1 0 0 1 50 616 Tm (un'interfaccia vocale semplice e intuitiva che permette di controllare i propri ) Tj
1 0 0 1 50 602 Tm (dispositivi domestici intelligenti, riprodurre musica, impostare promemoria, raccontare ) Tj
1 0 0 1 50 588 Tm (barzellette, chiacchierare con un'intelligenza artificiale e molto altro.) Tj
1 0 0 1 50 574 Tm () Tj
1 0 0 1 50 560 Tm (La piattaforma si basa su tecnologie all'avanguardia: machine learning, elaborazione del ) Tj
1 0 0 1 50 546 Tm (linguaggio naturale NPL e altre, configurate per offrire un'esperienza altamente reattiva ) Tj
1 0 0 1 50 532 Tm (e accurata su tutti i tipi di supporto.) Tj
1 0 0 1 50 518 Tm () Tj
1 0 0 1 50 504 Tm (Oltre alle sue funzionalit vocali, OpenVoiceOS presenta un'interfaccia touch-screen ) Tj
1 0 0 1 50 490 Tm (realizzata utilizzando QT5 e il framework KF5.) Tj
1 0 0 1 50 476 Tm () Tj
1 0 0 1 50 462 Tm (L'interfaccia  intuitiva e facile da usare e consente di accedere all'intera gamma di ) Tj
1 0 0 1 50 448 Tm (caratteristiche e funzionalit di OpenVoiceOS.) Tj
1 0 0 1 50 434 Tm () Tj
1 0 0 1 50 420 Tm (Che tu preferisca i comandi vocali o l'interfaccia touch pi tradizionale, OpenVoiceOS  ) Tj
1 0 0 1 50 406 Tm (sicuramente quello che fa per te.) Tj
1 0 0 1 50 392 Tm () Tj
1 0 0 1 50 378 Tm (Uno dei principali vantaggi di OpenVoiceOS  la sua comunit open source, se anche tu hai ) Tj
1 0 0 1 50 364 Tm (delle competenze tecniche prova a contribuire alla piattaforma.) Tj
1 0 0 1 50 350 Tm () Tj
1 0 0 1 50 336 Tm (Che tu sia uno sviluppatore di software, un data scientist o semplicemente qualcuno con ) Tj
1 0 0 1 50 322 Tm (una passione per la tecnologia e le lingue, puoi partecipare e contribuire a costruire la ) Tj
1 0 0 1 50 308 Tm (prossima generazione di assistenti vocali intelligenti.) Tj
1 0 0 1 50 294 Tm () Tj
1 0 0 1 50 280 Tm (Con OpenVoiceOS hai la possibilit di far funzionare il tuo assistente completamente ) Tj
1 0 0 1 50 266 Tm (offline, in modo da avere il ??controllo completo sui tuoi dati e assicurandoti che le tue) Tj
1 0 0 1 50 252 Tm ( informazioni non vengano mai condivise con terze parti.  questo che fa di OpenVoiceOS la) Tj
1 0 0 1 50 238 Tm ( scelta perfetta per chiunque apprezzi la privacy e la sicurezza.) Tj
1 0 0 1 50 224 Tm () Tj
1 0 0 1 50 210 Tm (Quindi, se stai cercando un assistente vocale intelligente che ti dia la libert e il ) Tj
1 0 0 1 50 196 Tm (controllo che meriti, prova OpenVoiceOS!) Tj
1 0 0 1 50 182 Tm () Tj
1 0 0 1 50 168 Tm (**Disclaimer** : questo post  stato scritto \(e tradotto\) in collaborazione con ChatGPT) Tj
1 0 0 1 50 154 Tm () Tj
1 0 0 1 50 140 Tm () Tj
ET
endstream

endobj
739 0 obj
<< /Type /Font /Subtype /Type1 /BaseFont /Helvetica >>
endobj
xref
0 740
0000000000 65535 f 
0000000015 00000 n 
0000000064 00000 n 
0000002959 00000 n 
0000003089 00000 n 
0000003219 00000 n 
0000003349 00000 n 
0000003479 00000 n 
0000003609 00000 n 
0000003739 00000 n 
0000003869 00000 n 
0000004000 00000 n 
0000004131 00000 n 
0000004262 00000 n 
0000004393 00000 n 
0000004524 00000 n 
0000004655 00000 n 
0000004786 00000 n 
0000004917 00000 n 
0000005048 00000 n 
0000005179 00000 n 
0000005310 00000 n 
0000005441 00000 n 
0000005572 00000 n 
0000005703 00000 n 
0000005834 00000 n 
0000005965 00000 n 
0000006096 00000 n 
0000006227 00000 n 
0000006358 00000 n 
0000006489 00000 n 
0000006620 00000 n 
0000006751 00000 n 
0000006882 00000 n 
0000007013 00000 n 
0000007144 00000 n 
0000007275 00000 n 
0000007406 00000 n 
0000007537 00000 n 
0000007668 00000 n 
0000007799 00000 n 
0000007930 00000 n 
0000008061 00000 n 
0000008192 00000 n 
0000008323 00000 n 
0000008454 00000 n 
0000008585 00000 n 
0000008716 00000 n 
0000008847 00000 n 
0000008978 00000 n 
0000009109 00000 n 
0000009240 00000 n 
0000009371 00000 n 
0000009502 00000 n 
0000009633 00000 n 
0000009764 00000 n 
0000009895 00000 n 
0000010026 00000 n 
0000010157 00000 n 
0000010288 00000 n 
0000010419 00000 n 
0000010550 00000 n 
0000010681 00000 n 
0000010812 00000 n 
0000010943 00000 n 
0000011074 00000 n 
0000011205 00000 n 
0000011336 00000 n 
0000011467 00000 n 
0000011598 00000 n 
0000011729 00000 n 
0000011860 00000 n 
0000011991 00000 n 
0000012122 00000 n 
0000012253 00000 n 
0000012384 00000 n 
0000012515 00000 n 
0000012646 00000 n 
0000012777 00000 n 
0000012908 00000 n 
0000013039 00000 n 
0000013170 00000 n 
0000013301 00000 n 
0000013432 00000 n 
0000013563 00000 n 
0000013694 00000 n 
0000013825 00000 n 
0000013956 00000 n 
0000014087 00000 n 
0000014218 00000 n 
0000014349 00000 n 
0000014480 00000 n 
0000014611 00000 n 
0000014742 00000 n 
0000014873 00000 n 
0000015004 00000 n 
0000015135 00000 n 
0000015266 00000 n 
0000015397 00000 n 
0000015528 00000 n 
0000015659 00000 n 
0000015791 00000 n 
0000015923 00000 n 
0000016055 00000 n 
0000016187 00000 n 
0000016319 00000 n 
0000016451 00000 n 
0000016583 00000 n 
0000016715 00000 n 
0000016847 00000 n 
0000016979 00000 n 
0000017111 00000 n 
0000017243 00000 n 
0000017375 00000 n 
0000017507 00000 n 
0000017639 00000 n 
0000017771 00000 n 
0000017903 00000 n 
0000018035 00000 n 
0000018167 00000 n 
0000018299 00000 n 
0000018431 00000 n 
0000018563 00000 n 
0000018695 00000 n 
0000018827 00000 n 
0000018959 00000 n 
0000019091 00000 n 
0000019223 00000 n 
0000019355 00000 n 
0000019487 00000 n 
0000019619 00000 n 
0000019751 00000 n 
0000019883 00000 n 
0000020015 00000 n 
0000020147 00000 n 
0000020279 00000 n 
0000020411 00000 n 
0000020543 00000 n 
0000020675 00000 n 
0000020807 00000 n 
0000020939 00000 n 
0000021071 00000 n 
0000021203 00000 n 
0000021335 00000 n 
0000021467 00000 n 
0000021599 00000 n 
0000021731 00000 n 
0000021863 00000 n 
0000021995 00000 n 
0000022127 00000 n 
0000022259 00000 n 
0000022391 00000 n 
0000022523 00000 n 
0000022655 00000 n 
0000022787 00000 n 
0000022919 00000 n 
0000023051 00000 n 
0000023183 00000 n 
0000023315 00000 n 
0000023447 00000 n 
0000023579 00000 n 
0000023711 00000 n 
0000023843 00000 n 
0000023975 00000 n 
0000024107 00000 n 
0000024239 00000 n 
0000024371 00000 n 
0000024503 00000 n 
0000024635 00000 n 
0000024767 00000 n 
0000024899 00000 n 
0000025031 00000 n 
0000025163 00000 n 
0000025295 00000 n 
0000025427 00000 n 
0000025559 00000 n 
0000025691 00000 n 
0000025823 00000 n 
0000025955 00000 n 
0000026087 00000 n 
0000026219 00000 n 
0000026351 00000 n 
0000026483 00000 n 
0000026615 00000 n 
0000026747 00000 n 
0000026879 00000 n 
0000027011 00000 n 
0000027143 00000 n 
0000027275 00000 n 
0000027407 00000 n 
0000027539 00000 n 
0000027671 00000 n 
0000027803 00000 n 
0000027935 00000 n 
0000028067 00000 n 
0000028199 00000 n 
0000028331 00000 n 
0000028463 00000 n 
0000028595 00000 n 
0000028727 00000 n 
0000028859 00000 n 
0000028991 00000 n 
0000029123 00000 n 
0000029255 00000 n 
0000029387 00000 n 
0000029519 00000 n 
0000029651 00000 n 
0000029783 00000 n 
0000029915 00000 n 
0000030047 00000 n 
0000030179 00000 n 
0000030311 00000 n 
0000030443 00000 n 
0000030575 00000 n 
0000030707 00000 n 
0000030839 00000 n 
0000030971 00000 n 
0000031103 00000 n 
0000031235 00000 n 
0000031367 00000 n 
0000031499 00000 n 
0000031631 00000 n 
0000031763 00000 n 
0000031895 00000 n 
0000032027 00000 n 
0000032159 00000 n 
0000032291 00000 n 
0000032423 00000 n 
0000032555 00000 n 
0000032687 00000 n 
0000032819 00000 n 
0000032951 00000 n 
0000033083 00000 n 
0000033215 00000 n 
0000033347 00000 n 
0000033479 00000 n 
0000033611 00000 n 
0000033743 00000 n 
0000033875 00000 n 
0000034007 00000 n 
0000034139 00000 n 
0000034271 00000 n 
0000034403 00000 n 
0000034535 00000 n 
0000034667 00000 n 
0000034799 00000 n 
0000034931 00000 n 
0000035063 00000 n 
0000035195 00000 n 
0000035327 00000 n 
0000035459 00000 n 
0000035591 00000 n 
0000035723 00000 n 
0000035855 00000 n 
0000035987 00000 n 
0000036119 00000 n 
0000036251 00000 n 
0000036383 00000 n 
0000036515 00000 n 
0000036647 00000 n 
0000036779 00000 n 
0000036911 00000 n 
0000037043 00000 n 
0000037175 00000 n 
0000037307 00000 n 
0000037439 00000 n 
0000037571 00000 n 
0000037703 00000 n 
0000037835 00000 n 
0000037967 00000 n 
0000038099 00000 n 
0000038231 00000 n 
0000038363 00000 n 
0000038495 00000 n 
0000038627 00000 n 
0000038759 00000 n 
0000038891 00000 n 
0000039023 00000 n 
0000039155 00000 n 
0000039287 00000 n 
0000039419 00000 n 
0000039551 00000 n 
0000039683 00000 n 
0000039815 00000 n 
0000039947 00000 n 
0000040079 00000 n 
0000040211 00000 n 
0000040343 00000 n 
0000040475 00000 n 
0000040607 00000 n 
0000040739 00000 n 
0000040871 00000 n 
0000041003 00000 n 
0000041135 00000 n 
0000041267 00000 n 
0000041399 00000 n 
0000041531 00000 n 
0000041663 00000 n 
0000041795 00000 n 
0000041927 00000 n 
0000042059 00000 n 
0000042191 00000 n 
0000042323 00000 n 
0000042455 00000 n 
0000042587 00000 n 
0000042719 00000 n 
0000042851 00000 n 
0000042983 00000 n 
0000043115 00000 n 
0000043247 00000 n 
0000043379 00000 n 
0000043511 00000 n 
0000043643 00000 n 
0000043775 00000 n 
0000043907 00000 n 
0000044039 00000 n 
0000044171 00000 n 
0000044303 00000 n 
0000044435 00000 n 
0000044567 00000 n 
0000044699 00000 n 
0000044831 00000 n 
0000044963 00000 n 
0000045095 00000 n 
0000045227 00000 n 
0000045359 00000 n 
0000045491 00000 n 
0000045623 00000 n 
0000045755 00000 n 
0000045887 00000 n 
0000046019 00000 n 
0000046151 00000 n 
0000046283 00000 n 
0000046415 00000 n 
0000046547 00000 n 
0000046679 00000 n 
0000046811 00000 n 
0000046943 00000 n 
0000047075 00000 n 
0000047207 00000 n 
0000047339 00000 n 
0000047471 00000 n 
0000047603 00000 n 
0000047735 00000 n 
0000047867 00000 n 
0000047999 00000 n 
0000048131 00000 n 
0000048263 00000 n 
0000048395 00000 n 
0000048527 00000 n 
0000048659 00000 n 
0000048791 00000 n 
0000048923 00000 n 
0000049055 00000 n 
0000049187 00000 n 
0000049319 00000 n 
0000049451 00000 n 
0000049583 00000 n 
0000049715 00000 n 
0000049847 00000 n 
0000049979 00000 n 
0000050111 00000 n 
0000050243 00000 n 
0000050375 00000 n 
0000050507 00000 n 
0000050639 00000 n 
0000050771 00000 n 
0000050903 00000 n 
0000051035 00000 n 
0000051167 00000 n 
0000051299 00000 n 
0000051431 00000 n 
0000054516 00000 n 
0000057484 00000 n 
0000060507 00000 n 
0000063619 00000 n 
0000067448 00000 n 
0000071341 00000 n 
0000075704 00000 n 
0000079847 00000 n 
0000083782 00000 n 
0000087894 00000 n 
0000092019 00000 n 
0000096351 00000 n 
0000101016 00000 n 
0000105300 00000 n 
0000109495 00000 n 
0000112272 00000 n 
0000114996 00000 n 
0000117862 00000 n 
0000120811 00000 n 
0000123507 00000 n 
0000126323 00000 n 
0000128808 00000 n 
0000131789 00000 n 
0000134344 00000 n 
0000137073 00000 n 
0000139697 00000 n 
0000142498 00000 n 
0000145379 00000 n 
0000148110 00000 n 
0000150519 00000 n 
0000153345 00000 n 
0000156608 00000 n 
0000159408 00000 n 
0000161943 00000 n 
0000165137 00000 n 
0000169460 00000 n 
0000171661 00000 n 
0000174186 00000 n 
0000176821 00000 n 
0000179626 00000 n 
0000182733 00000 n 
0000185845 00000 n 
0000188891 00000 n 
0000191677 00000 n 
0000194607 00000 n 
0000197377 00000 n 
0000200310 00000 n 
0000203050 00000 n 
0000205568 00000 n 
0000209056 00000 n 
0000211911 00000 n 
0000214440 00000 n 
0000216623 00000 n 
0000218936 00000 n 
0000221368 00000 n 
0000223567 00000 n 
0000226237 00000 n 
0000228991 00000 n 
0000231897 00000 n 
0000234929 00000 n 
0000237949 00000 n 
0000240918 00000 n 
0000242964 00000 n 
0000246164 00000 n 
0000248317 00000 n 
0000250857 00000 n 
0000253240 00000 n 
0000256122 00000 n 
0000258510 00000 n 
0000261230 00000 n 
0000263950 00000 n 
0000266482 00000 n 
0000268901 00000 n 
0000271056 00000 n 
0000273576 00000 n 
0000276375 00000 n 
0000279283 00000 n 
0000282234 00000 n 
0000285576 00000 n 
0000288623 00000 n 
0000291854 00000 n 
0000294649 00000 n 
0000297677 00000 n 
0000300553 00000 n 
0000303246 00000 n 
0000307449 00000 n 
0000310369 00000 n 
0000312995 00000 n 
0000316077 00000 n 
0000320728 00000 n 
0000324613 00000 n 
0000327499 00000 n 
0000330687 00000 n 
0000333831 00000 n 
0000336752 00000 n 
0000340337 00000 n 
0000344296 00000 n 
0000347652 00000 n 
0000350474 00000 n 
0000353664 00000 n 
0000357247 00000 n 
0000362361 00000 n 
0000365914 00000 n 
0000369528 00000 n 
0000372668 00000 n 
0000376003 00000 n 
0000378646 00000 n 
0000382121 00000 n 
0000384946 00000 n 
0000387734 00000 n 
0000391081 00000 n 
0000394744 00000 n 
0000397834 00000 n 
0000400734 00000 n 
0000403555 00000 n 
0000406437 00000 n 
0000409171 00000 n 
0000412161 00000 n 
0000415132 00000 n 
0000418717 00000 n 
0000422947 00000 n 
0000426108 00000 n 
0000429478 00000 n 
0000433174 00000 n 
0000437275 00000 n 
0000440804 00000 n 
0000443621 00000 n 
0000446502 00000 n 
0000449415 00000 n 
0000452219 00000 n 
0000455264 00000 n 
0000458154 00000 n 
0000461702 00000 n 
0000464803 00000 n 
0000467518 00000 n 
0000471233 00000 n 
0000474448 00000 n 
0000478030 00000 n 
0000480739 00000 n 
0000483237 00000 n 
0000486022 00000 n 
0000489170 00000 n 
0000492589 00000 n 
0000495539 00000 n 
0000497863 00000 n 
0000500425 00000 n 
0000503213 00000 n 
0000505927 00000 n 
0000508937 00000 n 
0000512330 00000 n 
0000515753 00000 n 
0000518411 00000 n 
0000521217 00000 n 
0000523817 00000 n 
0000526850 00000 n 
0000529659 00000 n 
0000532276 00000 n 
0000534532 00000 n 
0000537133 00000 n 
0000540052 00000 n 
0000542550 00000 n 
0000544644 00000 n 
0000547073 00000 n 
0000549916 00000 n 
0000552765 00000 n 
0000555653 00000 n 
0000558911 00000 n 
0000561832 00000 n 
0000564804 00000 n 
0000567875 00000 n 
0000570768 00000 n 
0000574076 00000 n 
0000576899 00000 n 
0000580308 00000 n 
0000583997 00000 n 
0000586783 00000 n 
0000590315 00000 n 
0000593325 00000 n 
0000596445 00000 n 
0000599465 00000 n 
0000602481 00000 n 
0000604534 00000 n 
0000607173 00000 n 
0000609600 00000 n 
0000613611 00000 n 
0000616225 00000 n 
0000619017 00000 n 
0000621887 00000 n 
0000625377 00000 n 
0000628077 00000 n 
0000631288 00000 n 
0000634003 00000 n 
0000636765 00000 n 
0000640302 00000 n 
0000643269 00000 n 
0000646544 00000 n 
0000649455 00000 n 
0000652140 00000 n 
0000654772 00000 n 
0000657855 00000 n 
0000661305 00000 n 
0000664568 00000 n 
0000667593 00000 n 
0000670530 00000 n 
0000673221 00000 n 
0000676161 00000 n 
0000679387 00000 n 
0000682566 00000 n 
0000685685 00000 n 
0000688369 00000 n 
0000690569 00000 n 
0000692632 00000 n 
0000694882 00000 n 
0000696807 00000 n 
0000698913 00000 n 
0000700941 00000 n 
0000702979 00000 n 
0000705039 00000 n 
0000707306 00000 n 
0000709877 00000 n 
0000714401 00000 n 
0000717302 00000 n 
0000720203 00000 n 
0000722827 00000 n 
0000725461 00000 n 
0000728823 00000 n 
0000731694 00000 n 
0000735081 00000 n 
0000737684 00000 n 
0000740785 00000 n 
0000744014 00000 n 
0000746825 00000 n 
0000749680 00000 n 
0000752336 00000 n 
0000755321 00000 n 
0000757820 00000 n 
0000761081 00000 n 
0000764180 00000 n 
0000767046 00000 n 
0000770298 00000 n 
0000773395 00000 n 
0000776349 00000 n 
0000779417 00000 n 
0000782356 00000 n 
0000785194 00000 n 
0000788424 00000 n 
0000791415 00000 n 
0000794190 00000 n 
0000797220 00000 n 
0000800040 00000 n 
0000803277 00000 n 
0000805952 00000 n 
0000808666 00000 n 
0000812078 00000 n 
0000814758 00000 n 
0000817790 00000 n 
0000821142 00000 n 
0000823861 00000 n 
0000826462 00000 n 
0000828979 00000 n 
0000831428 00000 n 
0000834485 00000 n 
0000837070 00000 n 
0000840255 00000 n 
0000843873 00000 n 
0000846752 00000 n 
0000849782 00000 n 
0000853117 00000 n 
0000855999 00000 n 
0000859394 00000 n 
0000861977 00000 n 
0000864420 00000 n 
0000867081 00000 n 
0000870498 00000 n 
0000872927 00000 n 
0000875855 00000 n 
0000878032 00000 n 
0000880358 00000 n 
0000882784 00000 n 
0000885504 00000 n 
0000888358 00000 n 
0000891001 00000 n 
0000893803 00000 n 
0000896319 00000 n 
0000899530 00000 n 
0000901780 00000 n 
0000904236 00000 n 
0000907081 00000 n 
0000911146 00000 n 
0000915037 00000 n 
0000917646 00000 n 
0000920836 00000 n 
0000924008 00000 n 
0000926510 00000 n 
0000928925 00000 n 
0000931269 00000 n 
0000933496 00000 n 
0000936661 00000 n 
0000940041 00000 n 
0000943257 00000 n 
0000946340 00000 n 
0000949048 00000 n 
0000952724 00000 n 
0000955843 00000 n 
0000958548 00000 n 
0000961516 00000 n 
0000965015 00000 n 
0000967722 00000 n 
0000970348 00000 n 
0000973012 00000 n 
0000975706 00000 n 
0000978043 00000 n 
0000980516 00000 n 
0000983154 00000 n 
0000986334 00000 n 
0000988870 00000 n 
0000991430 00000 n 
0000993960 00000 n 
0000996841 00000 n 
0000999259 00000 n 
0001002221 00000 n 
0001004860 00000 n 
0001007825 00000 n 
0001011256 00000 n 
0001014278 00000 n 
0001017478 00000 n 
0001020072 00000 n 
0001023110 00000 n 
0001025401 00000 n 
0001027856 00000 n 
0001030205 00000 n 
0001033173 00000 n 
0001036339 00000 n 
0001039675 00000 n 
0001042714 00000 n 
0001045652 00000 n 
0001048549 00000 n 
0001051481 00000 n 
0001054147 00000 n 
0001056664 00000 n 
0001059419 00000 n 
0001062248 00000 n 
0001065244 00000 n 
0001068118 00000 n 
0001070785 00000 n 
0001073618 00000 n 
0001076949 00000 n 
0001079583 00000 n 
0001082030 00000 n 
0001084761 00000 n 
0001088993 00000 n 
0001093283 00000 n 
0001095605 00000 n 
0001098419 00000 n 
0001100820 00000 n 
0001103508 00000 n 
0001105814 00000 n 
0001108274 00000 n 
0001110752 00000 n 
0001113231 00000 n 
0001115616 00000 n 
0001117956 00000 n 
0001120990 00000 n 
0001123924 00000 n 
0001126706 00000 n 
0001130234 00000 n 
0001133679 00000 n 
0001136987 00000 n 
trailer
<< /Size 740 /Root 1 0 R >>
startxref
1137059
%%EOF
